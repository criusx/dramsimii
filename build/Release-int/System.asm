; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\CriuS\Documents\Visual Studio 2008\Projects\DRAMsimIIhg\src\System.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4System@DRAMsimII@@6B@			; DRAMsimII::System::`RTTI Complete Object Locator'
PUBLIC	?nextTick@System@DRAMsimII@@UBE_JXZ		; DRAMsimII::System::nextTick
PUBLIC	?printStatistics@System@DRAMsimII@@MAEXXZ	; DRAMsimII::System::printStatistics
PUBLIC	?doPowerCalculation@System@DRAMsimII@@MAEXXZ	; DRAMsimII::System::doPowerCalculation
PUBLIC	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
PUBLIC	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?setChannelID@Channel@DRAMsimII@@QAEXI@Z	; DRAMsimII::Channel::setChannelID
PUBLIC	?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@XZ ; std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > > >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *>
PUBLIC	??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > const *,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@1@0PAV21@@Z ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Ucopy<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > > >
PUBLIC	??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
PUBLIC	?begin@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::begin
PUBLIC	?end@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::end
PUBLIC	?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBEPBV?$vector@IV?$allocator@I@std@@@2@XZ ; std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@AAPAV?$vector@IV?$allocator@I@std@@@0@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::vector<unsigned int,std::allocator<unsigned int> > *>
PUBLIC	??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@stdext@@YAPAV?$vector@IV?$allocator@I@std@@@std@@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEPAV?$vector@IV?$allocator@I@std@@@1@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@1@0PAV21@@Z ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Ucopy<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > >
PUBLIC	??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
PUBLIC	?get_allocator@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@2@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::get_allocator
PUBLIC	?get_allocator@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::get_allocator
PUBLIC	?begin@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::begin
PUBLIC	??Y?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+=
PUBLIC	??Y?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+=
PUBLIC	??H?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+
PUBLIC	?resize@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::resize
PUBLIC	?_Checked_iterator_base@?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@XZ ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@@Z ; std::_Checked_base<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> > >
PUBLIC	??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z ; std::_Fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position *,std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Iterator<1> >
PUBLIC	??$fill@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@2@@std@@YAXV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z ; std::fill<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >,std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Iterator<1> >
PUBLIC	?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Copy
PUBLIC	??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
PUBLIC	??0?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@ABV012@@Z ; std::tr1::unordered_map<unsigned int,unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::unordered_map<unsigned int,unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
PUBLIC	?get_allocator@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::get_allocator
PUBLIC	?key_comp@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::key_comp
PUBLIC	?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy
PUBLIC	?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEXABV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy
PUBLIC	??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >
PUBLIC	??0?$map@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@@std@@QAE@ABV01@@Z ; std::map<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> > >::map<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> > >
PUBLIC	?get_allocator@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KI@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::get_allocator
PUBLIC	?key_comp@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::key_comp
PUBLIC	?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy
PUBLIC	?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEXABV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy
PUBLIC	??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >
PUBLIC	??0?$map@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@@std@@QAE@ABV01@@Z ; std::map<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> > >::map<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> > >
PUBLIC	?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@XZ ; std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > > >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *>
PUBLIC	??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > const *,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@1@0PAV21@@Z ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Ucopy<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > > >
PUBLIC	??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
PUBLIC	??0Statistics@DRAMsimII@@QAE@ABV01@@Z		; DRAMsimII::Statistics::Statistics
PUBLIC	??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@XZ	; std::allocator<DRAMsimII::Channel>::allocator<DRAMsimII::Channel>
PUBLIC	??$?0VChannel@DRAMsimII@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@VChannel@DRAMsimII@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><DRAMsimII::Channel>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<DRAMsimII::Channel> >::_Container_base_aux_alloc_real<std::allocator<DRAMsimII::Channel> >
PUBLIC	??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@ABV01@@Z ; std::allocator<DRAMsimII::Channel>::allocator<DRAMsimII::Channel>
PUBLIC	??0?$_Vector_val@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z ; std::_Vector_val<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_val<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
PUBLIC	??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
PUBLIC	??$unchecked_uninitialized_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
PUBLIC	?_Ufill@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV34@IABV34@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ufill
PUBLIC	?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Construct_n
PUBLIC	??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
PUBLIC	?capacity@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::capacity
PUBLIC	?_Make_iter@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Make_iter
PUBLIC	?erase@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@0@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::erase
PUBLIC	?clear@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::clear
PUBLIC	??$_Allocate@VChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@IPAV12@@Z ; std::_Allocate<DRAMsimII::Channel>
PUBLIC	?allocate@?$allocator@VChannel@DRAMsimII@@@std@@QAEPAVChannel@DRAMsimII@@I@Z ; std::allocator<DRAMsimII::Channel>::allocate
PUBLIC	?max_size@?$allocator@VChannel@DRAMsimII@@@std@@QBEIXZ ; std::allocator<DRAMsimII::Channel>::max_size
PUBLIC	?max_size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::max_size
PUBLIC	?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Xlen
PUBLIC	?_Buy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE_NI@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Buy
PUBLIC	??$_Iter_random@PAVChannel@DRAMsimII@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVChannel@DRAMsimII@@0@Z ; std::_Iter_random<DRAMsimII::Channel *,DRAMsimII::Channel *>
PUBLIC	??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@Uforward_iterator_tag@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *,std::forward_iterator_tag>
PUBLIC	??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *>
PUBLIC	??$unchecked_copy@PAVChannel@DRAMsimII@@PAV12@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00@Z ; stdext::unchecked_copy<DRAMsimII::Channel *,DRAMsimII::Channel *>
PUBLIC	??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<DRAMsimII::Channel *>
PUBLIC	??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@@Z ; std::_Checked_base<DRAMsimII::Channel *>
PUBLIC	??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z ; std::_Construct<DRAMsimII::Channel,DRAMsimII::Channel>
PUBLIC	?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z ; std::allocator<DRAMsimII::Channel>::construct
PUBLIC	??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >
PUBLIC	??$unchecked_uninitialized_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z ; stdext::unchecked_uninitialized_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >
PUBLIC	??$_Ucopy@PAVChannel@DRAMsimII@@@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV23@00@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ucopy<DRAMsimII::Channel *>
PUBLIC	??4?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator=
PUBLIC	??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAVChannel@DRAMsimII@@I@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator[]
PUBLIC	??0?$pair@II@std@@QAE@ABI0@Z			; std::pair<unsigned int,unsigned int>::pair<unsigned int,unsigned int>
PUBLIC	?getReadWriteBytes@Statistics@DRAMsimII@@QBE?AU?$pair@II@std@@XZ ; DRAMsimII::Statistics::getReadWriteBytes
PUBLIC	??_9Channel@DRAMsimII@@$BBI@AE			; DRAMsimII::Channel::`vcall'{24}'
PUBLIC	??0?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QAE@P8Channel@DRAMsimII@@AEX_J@Z@Z ; boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>
PUBLIC	??$mem_fun_ref@XVChannel@DRAMsimII@@_J@boost@@YA?AV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@P8Channel@DRAMsimII@@AEX_J@Z@Z ; boost::mem_fun_ref<void,DRAMsimII::Channel,__int64>
PUBLIC	??0?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QAE@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@1@AB_J@Z ; boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >
PUBLIC	??$bind2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@0@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@AB_J@Z ; boost::bind2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >
PUBLIC	??R?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QBEXAAVChannel@DRAMsimII@@AB_J@Z ; boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>::operator()
PUBLIC	??R?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QBEXAAVChannel@DRAMsimII@@@Z ; boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >::operator()
PUBLIC	?_Checked_iterator_base@?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z ; std::_Checked_base<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
PUBLIC	??$for_each@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@@std@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0V12@@Z ; std::for_each<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> > >
PUBLIC	?getTime@Channel@DRAMsimII@@QBE_JXZ		; DRAMsimII::Channel::getTime
PUBLIC	?pendingTransactionCount@Channel@DRAMsimII@@QBEIXZ ; DRAMsimII::Channel::pendingTransactionCount
PUBLIC	?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::begin
PUBLIC	??0?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
PUBLIC	?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::end
PUBLIC	??D?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEAAVChannel@DRAMsimII@@XZ ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator*
PUBLIC	??C?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator->
PUBLIC	??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
PUBLIC	??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
PUBLIC	?getRequestCount@SimulationParameters@DRAMsimII@@QAE_JXZ ; DRAMsimII::SimulationParameters::getRequestCount
PUBLIC	?empty@?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@QBE_NXZ ; std::queue<std::pair<unsigned int,__int64>,std::deque<std::pair<unsigned int,__int64>,std::allocator<std::pair<unsigned int,__int64> > > >::empty
PUBLIC	?isFull@Channel@DRAMsimII@@QBE_NXZ		; DRAMsimII::Channel::isFull
PUBLIC	?isFull@System@DRAMsimII@@QBE_NI@Z		; DRAMsimII::System::isFull
PUBLIC	?begin@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::begin
PUBLIC	?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase
PUBLIC	?clear@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::clear
PUBLIC	?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@0@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase
PUBLIC	??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@0@Z ; std::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >
PUBLIC	?equal_range@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::equal_range
PUBLIC	??$_Iter_cat@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >
PUBLIC	??$_Distance2@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>
PUBLIC	??$_Distance@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAI@Z ; std::_Distance<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>
PUBLIC	?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEIABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase
PUBLIC	?find@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::find
PUBLIC	??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	??0?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@@Z ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>
PUBLIC	??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	??0?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	??0?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??0?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode
PUBLIC	??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??$?0U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??0?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV01@@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
PUBLIC	??0?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ; std::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	?_Buy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE_NI@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Buy
PUBLIC	??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >
PUBLIC	??0?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	?insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::insert
PUBLIC	?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase
PUBLIC	??$?8U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@0@0@Z ; std::operator==<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	??$_Iter_cat@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >
PUBLIC	??$_Construct@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U12@@std@@YAXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@0@ABU10@@Z ; std::_Construct<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
PUBLIC	?construct@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAEXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@ABU32@@Z ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::construct
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::allocate
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *,std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::construct
PUBLIC	?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode
PUBLIC	?max_size@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::max_size
PUBLIC	?max_size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::max_size
PUBLIC	?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Incsize
PUBLIC	?_Insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Insert
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Make_iter
PUBLIC	?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase
PUBLIC	??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Insert<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >
PUBLIC	??$insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::insert<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >
PUBLIC	?_Splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Splice
PUBLIC	?splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@0@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::splice
PUBLIC	?size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::size
PUBLIC	?size@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::size
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::bucket_count
PUBLIC	?load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::load_factor
PUBLIC	?max_load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::max_load_factor
PUBLIC	?begin@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::begin
PUBLIC	?end@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::end
PUBLIC	??$_Allocate@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IPAU123@@Z ; std::_Allocate<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
PUBLIC	?allocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocate
PUBLIC	?capacity@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::capacity
PUBLIC	??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??$unchecked_uninitialized_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@IABU120@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	?_Ufill@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU345@IABU345@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Ufill
PUBLIC	?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Xlen
PUBLIC	??$_Construct@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU123@@Z ; std::_Construct<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
PUBLIC	?construct@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU345@@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::construct
PUBLIC	??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??$unchecked_uninitialized_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z ; stdext::unchecked_uninitialized_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??$_Uninit_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>,std::_Undefined_move_tag>
PUBLIC	??$_Unchecked_uninitialized_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??$_Umove@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU234@00@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Umove<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z ; std::_Fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
PUBLIC	??$fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z ; std::fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
PUBLIC	??$_Move_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YA?AU_Undefined_move_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::_Move_cat<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::forward_iterator_tag>
PUBLIC	??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$_Move_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::random_access_iterator_tag,std::_Undefined_move_tag>
PUBLIC	??$_Unchecked_move_backward@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z ; stdext::_Unchecked_move_backward<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Insert_n
PUBLIC	?insert@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::insert
PUBLIC	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU345@ABU345@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::random_access_iterator_tag,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Ranit@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU123@ABU123@@std@@QAE@XZ ; std::_Ranit<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &>::_Ranit<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &>
PUBLIC	??0?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??0?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	?_Make_iter@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Make_iter
PUBLIC	??8?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator==
PUBLIC	??9?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator!=
PUBLIC	??$_Iter_random@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z ; std::_Iter_random<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@@Z ; std::_Checked_base<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::forward_iterator_tag>
PUBLIC	??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$unchecked_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z ; stdext::unchecked_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	?erase@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@0@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::erase
PUBLIC	?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Assign_n
PUBLIC	?assign@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::assign
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Init
PUBLIC	?begin@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::begin
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Reinsert
PUBLIC	?max_size@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QBEIXZ ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::max_size
PUBLIC	?max_size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::max_size
PUBLIC	??F?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator--
PUBLIC	??F?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator--
PUBLIC	??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@AB_N@Z ; std::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,bool>::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,bool>
PUBLIC	??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<0>::_Const_iterator<0>
PUBLIC	??0?$_Iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<0>::_Iterator<0>
PUBLIC	??0_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::_List_position
PUBLIC	?_Insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Insert
PUBLIC	?insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::insert
PUBLIC	?_Kfn@?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@SAABIABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@3@@Z ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::_Kfn
PUBLIC	?_Get_iter@_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABV56@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::_Get_iter
PUBLIC	?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABU_List_position@12@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Get_iter_from_vec
PUBLIC	??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Const_iterator<1>
PUBLIC	??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::_Iterator<1>
PUBLIC	?end@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::end
PUBLIC	?end@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::end
PUBLIC	?_Hashval@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hashval
PUBLIC	?size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::size
PUBLIC	??A?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator[]
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Bidit@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@HPBU12@ABU12@@std@@QAE@XZ ; std::_Bidit<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &>::_Bidit<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &>
PUBLIC	??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Const_iterator<1>
PUBLIC	??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::_Iterator<1>
PUBLIC	?_Mynode@?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Mynode
PUBLIC	?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<0>::_Mynode
PUBLIC	??8_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::operator==
PUBLIC	??9_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::operator!=
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::lower_bound
PUBLIC	??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@XZ ; std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>
PUBLIC	??0?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@QAE@ABIABU?$pair@PAVTransaction@DRAMsimII@@PAV12@@1@@Z ; std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >
PUBLIC	??A?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAEAAU?$pair@PAVTransaction@DRAMsimII@@PAV12@@2@ABI@Z ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::operator[]
PUBLIC	??1?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@XZ ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::~_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??1?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??1?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ; std::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??1?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::destroy
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::deallocate
PUBLIC	??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::destroy
PUBLIC	?_Prevnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Prevnode
PUBLIC	?clear@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::clear
PUBLIC	?_Tidy@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Tidy
PUBLIC	??1?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??1?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ ; std::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	?deallocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::deallocate
PUBLIC	??$_Ptr_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z ; std::_Ptr_cat<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
PUBLIC	??$_Destroy@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::_Destroy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
PUBLIC	?destroy@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::destroy
PUBLIC	??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@@Z ; std::_Destroy_range<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	?_Destroy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Destroy
PUBLIC	?_Tidy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXXZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Tidy
PUBLIC	??1?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
PUBLIC	??1?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::~_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >
PUBLIC	??1?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
PUBLIC	??C?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPBU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator->
PUBLIC	??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator++
PUBLIC	??8?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator==
PUBLIC	??9?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator!=
PUBLIC	?_Myval@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Myval
PUBLIC	??D?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator*
PUBLIC	??D?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator*
PUBLIC	??C?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator->
PUBLIC	?_Nextnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Nextnode
PUBLIC	??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator++
PUBLIC	??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator++
PUBLIC	??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator++
PUBLIC	??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@ABQAVTransaction@DRAMsimII@@0@Z ; std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>
PUBLIC	??C?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator->
PUBLIC	?getConfigType@SystemConfiguration@DRAMsimII@@QBE?AW4SystemConfigurationType@2@XZ ; DRAMsimII::SystemConfiguration::getConfigType
PUBLIC	?getShortBurstRatio@SystemConfiguration@DRAMsimII@@QBENXZ ; DRAMsimII::SystemConfiguration::getShortBurstRatio
PUBLIC	?getReadPercentage@SystemConfiguration@DRAMsimII@@QBENXZ ; DRAMsimII::SystemConfiguration::getReadPercentage
PUBLIC	??_C@_07KMICBNBC@?$FN?5sets?$FL?$AA@		; `string'
PUBLIC	??_C@_08NADJLLE@?$FN?5assoc?$FL?$AA@		; `string'
PUBLIC	??_C@_06DGPPDNGF@blkSz?$FL?$AA@			; `string'
PUBLIC	??_C@_04BHMCEHEJ@kB?$FN?5?$AA@			; `string'
PUBLIC	??_C@_06CMDGPFCD@cache?$FL?$AA@			; `string'
PUBLIC	??_C@_02PBFOLPKM@?$FN?5?$AA@			; `string'
PUBLIC	??_C@_0L@EIAHPKIN@?$FN?5t_?$HLFAW?$HN?$FL?$AA@	; `string'
PUBLIC	??_C@_07FANEOFIO@M?$FN?5PBQ?$FL?$AA@		; `string'
PUBLIC	??_C@_05BNONNLFK@?$FN?5DR?$FL?$AA@		; `string'
PUBLIC	??_C@_07KELLHHAH@?$FN?5RBMP?$FL?$AA@		; `string'
PUBLIC	??_C@_06NDAOKEFK@?$FN?5COA?$FL?$AA@		; `string'
PUBLIC	??_C@_06BOCDPGPG@?$FN?5AMP?$FL?$AA@		; `string'
PUBLIC	??_C@_09IABIPHAA@?$FN?5t_?$HLRC?$HN?$FL?$AA@	; `string'
PUBLIC	??_C@_0L@OICMBBBB@?$FN?5t_?$HLRCD?$HN?$FL?$AA@	; `string'
PUBLIC	??_C@_0L@JHKIPMGJ@?$FN?5t_?$HLCAS?$HN?$FL?$AA@	; `string'
PUBLIC	??_C@_0L@FPCCCNFH@?$FN?5t_?$HLRAS?$HN?$FL?$AA@	; `string'
PUBLIC	??_C@_04NOGDJOAJ@?$FN?5?$FLx?$AA@		; `string'
PUBLIC	??_C@_05LDAOPFKH@?$FN?5bk?$FL?$AA@		; `string'
PUBLIC	??_C@_05ODBHKCDI@?$FN?5rk?$FL?$AA@		; `string'
PUBLIC	??_C@_04MOAEGBAM@?5ch?$FL?$AA@			; `string'
PUBLIC	??_C@_0BD@NKGPPGBC@?9?9?9?9Command?5Line?3?5?$AA@ ; `string'
PUBLIC	??_C@_0L@IOLOEHIE@?9?9?9?9Epoch?5?$AA@		; `string'
PUBLIC	??_C@_0O@GPPBLPGF@?9?9?9?9Datarate?5?$AA@	; `string'
PUBLIC	??_C@_05CLDNIALB@?$FN?$CL?$CL?$CL?9?$AA@	; `string'
PUBLIC	??_C@_04CFKFMLNB@?$FNrk?$FL?$AA@		; `string'
PUBLIC	??_C@_07NIHGJHHN@?9?$CL?$CL?$CLch?$FL?$AA@	; `string'
PUBLIC	??_C@_03JLJHCGLP@?5?$EA?5?$AA@			; `string'
PUBLIC	??_C@_0BO@OCAALIAC@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?$AA@ ; `string'
PUBLIC	??_C@_04MHNOOJKH@SYS?$FL?$AA@			; `string'
PUBLIC	??_C@_06FHJKBJEN@BASE?$FN?5?$AA@		; `string'
PUBLIC	??_C@_06IDCEFCJK@UNKN?$FN?5?$AA@		; `string'
PUBLIC	??_C@_03JECMFAMM@RC?$FL?$AA@			; `string'
PUBLIC	??_C@_03MEDFAHFD@BC?$FL?$AA@			; `string'
PUBLIC	??_C@_04KBBGIBEE@ALG?$FL?$AA@			; `string'
PUBLIC	??_C@_06PELADDJO@STR?5?$FN?5?$AA@		; `string'
PUBLIC	??_C@_06IEJONLDH@RRR?5?$FN?5?$AA@		; `string'
PUBLIC	??_C@_06ODEAEHPJ@BRR?5?$FN?5?$AA@		; `string'
PUBLIC	??_C@_06PGGNDCKK@CPRH?$FN?5?$AA@		; `string'
PUBLIC	??_C@_06EIOPOFGK@GRDY?$FN?5?$AA@		; `string'
PUBLIC	??_C@_03IKEMENOF@RP?$FL?$AA@			; `string'
PUBLIC	??_C@_04PMFLJKAP@BLR?$FL?$AA@			; `string'
PUBLIC	??_C@_08LCLEONAE@baseline?$AA@			; `string'
PUBLIC	??_C@_03IKDEDJNB@fbd?$AA@			; `string'
PUBLIC	??_C@_0P@KFFKBIKA@bankConcurrent?$AA@		; `string'
PUBLIC	??_C@_0BE@GGMPALAP@bankStaggeredHidden?$AA@	; `string'
PUBLIC	??_C@_0BN@EACCCNHH@refreshOneChanAllRankAllBank?$AA@ ; `string'
PUBLIC	??_7System@DRAMsimII@@6B@			; DRAMsimII::System::`vftable'
;	COMDAT ??_7System@DRAMsimII@@6B@
CONST	SEGMENT
??_7System@DRAMsimII@@6B@ DD FLAT:??_R4System@DRAMsimII@@6B@ ; DRAMsimII::System::`vftable'
	DD	FLAT:?doPowerCalculation@System@DRAMsimII@@MAEXXZ
	DD	FLAT:?printStatistics@System@DRAMsimII@@MAEXXZ
	DD	FLAT:?nextTick@System@DRAMsimII@@UBE_JXZ
CONST	ENDS
;	COMDAT ??_R4System@DRAMsimII@@6B@
rdata$r	SEGMENT
??_R4System@DRAMsimII@@6B@ DD 00H			; DRAMsimII::System::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSystem@DRAMsimII@@@8
	DD	FLAT:??_R3System@DRAMsimII@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BN@EACCCNHH@refreshOneChanAllRankAllBank?$AA@
CONST	SEGMENT
??_C@_0BN@EACCCNHH@refreshOneChanAllRankAllBank?$AA@ DB 'refreshOneChanAl'
	DB	'lRankAllBank', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GGMPALAP@bankStaggeredHidden?$AA@
CONST	SEGMENT
??_C@_0BE@GGMPALAP@bankStaggeredHidden?$AA@ DB 'bankStaggeredHidden', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KFFKBIKA@bankConcurrent?$AA@
CONST	SEGMENT
??_C@_0P@KFFKBIKA@bankConcurrent?$AA@ DB 'bankConcurrent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKDEDJNB@fbd?$AA@
CONST	SEGMENT
??_C@_03IKDEDJNB@fbd?$AA@ DB 'fbd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCLEONAE@baseline?$AA@
CONST	SEGMENT
??_C@_08LCLEONAE@baseline?$AA@ DB 'baseline', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PMFLJKAP@BLR?$FL?$AA@
CONST	SEGMENT
??_C@_04PMFLJKAP@BLR?$FL?$AA@ DB 'BLR[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKEMENOF@RP?$FL?$AA@
CONST	SEGMENT
??_C@_03IKEMENOF@RP?$FL?$AA@ DB 'RP[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EIOPOFGK@GRDY?$FN?5?$AA@
CONST	SEGMENT
??_C@_06EIOPOFGK@GRDY?$FN?5?$AA@ DB 'GRDY] ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PGGNDCKK@CPRH?$FN?5?$AA@
CONST	SEGMENT
??_C@_06PGGNDCKK@CPRH?$FN?5?$AA@ DB 'CPRH] ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06ODEAEHPJ@BRR?5?$FN?5?$AA@
CONST	SEGMENT
??_C@_06ODEAEHPJ@BRR?5?$FN?5?$AA@ DB 'BRR ] ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEJONLDH@RRR?5?$FN?5?$AA@
CONST	SEGMENT
??_C@_06IEJONLDH@RRR?5?$FN?5?$AA@ DB 'RRR ] ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PELADDJO@STR?5?$FN?5?$AA@
CONST	SEGMENT
??_C@_06PELADDJO@STR?5?$FN?5?$AA@ DB 'STR ] ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KBBGIBEE@ALG?$FL?$AA@
CONST	SEGMENT
??_C@_04KBBGIBEE@ALG?$FL?$AA@ DB 'ALG[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MEDFAHFD@BC?$FL?$AA@
CONST	SEGMENT
??_C@_03MEDFAHFD@BC?$FL?$AA@ DB 'BC[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JECMFAMM@RC?$FL?$AA@
CONST	SEGMENT
??_C@_03JECMFAMM@RC?$FL?$AA@ DB 'RC[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IDCEFCJK@UNKN?$FN?5?$AA@
CONST	SEGMENT
??_C@_06IDCEFCJK@UNKN?$FN?5?$AA@ DB 'UNKN] ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHJKBJEN@BASE?$FN?5?$AA@
CONST	SEGMENT
??_C@_06FHJKBJEN@BASE?$FN?5?$AA@ DB 'BASE] ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MHNOOJKH@SYS?$FL?$AA@
CONST	SEGMENT
??_C@_04MHNOOJKH@SYS?$FL?$AA@ DB 'SYS[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OCAALIAC@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?$AA@
CONST	SEGMENT
??_C@_0BO@OCAALIAC@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?$AA@ DB '-'
	DB	'----------------------------', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JLJHCGLP@?5?$EA?5?$AA@
CONST	SEGMENT
??_C@_03JLJHCGLP@?5?$EA?5?$AA@ DB ' @ ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIHGJHHN@?9?$CL?$CL?$CLch?$FL?$AA@
CONST	SEGMENT
??_C@_07NIHGJHHN@?9?$CL?$CL?$CLch?$FL?$AA@ DB '-+++ch[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFKFMLNB@?$FNrk?$FL?$AA@
CONST	SEGMENT
??_C@_04CFKFMLNB@?$FNrk?$FL?$AA@ DB ']rk[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLDNIALB@?$FN?$CL?$CL?$CL?9?$AA@
CONST	SEGMENT
??_C@_05CLDNIALB@?$FN?$CL?$CL?$CL?9?$AA@ DB ']+++-', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GPPBLPGF@?9?9?9?9Datarate?5?$AA@
CONST	SEGMENT
??_C@_0O@GPPBLPGF@?9?9?9?9Datarate?5?$AA@ DB '----Datarate ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IOLOEHIE@?9?9?9?9Epoch?5?$AA@
CONST	SEGMENT
??_C@_0L@IOLOEHIE@?9?9?9?9Epoch?5?$AA@ DB '----Epoch ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKGPPGBC@?9?9?9?9Command?5Line?3?5?$AA@
CONST	SEGMENT
??_C@_0BD@NKGPPGBC@?9?9?9?9Command?5Line?3?5?$AA@ DB '----Command Line: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MOAEGBAM@?5ch?$FL?$AA@
CONST	SEGMENT
??_C@_04MOAEGBAM@?5ch?$FL?$AA@ DB ' ch[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05ODBHKCDI@?$FN?5rk?$FL?$AA@
CONST	SEGMENT
??_C@_05ODBHKCDI@?$FN?5rk?$FL?$AA@ DB '] rk[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LDAOPFKH@?$FN?5bk?$FL?$AA@
CONST	SEGMENT
??_C@_05LDAOPFKH@?$FN?5bk?$FL?$AA@ DB '] bk[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04NOGDJOAJ@?$FN?5?$FLx?$AA@
CONST	SEGMENT
??_C@_04NOGDJOAJ@?$FN?5?$FLx?$AA@ DB '] [x', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FPCCCNFH@?$FN?5t_?$HLRAS?$HN?$FL?$AA@
CONST	SEGMENT
??_C@_0L@FPCCCNFH@?$FN?5t_?$HLRAS?$HN?$FL?$AA@ DB '] t_{RAS}[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JHKIPMGJ@?$FN?5t_?$HLCAS?$HN?$FL?$AA@
CONST	SEGMENT
??_C@_0L@JHKIPMGJ@?$FN?5t_?$HLCAS?$HN?$FL?$AA@ DB '] t_{CAS}[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OICMBBBB@?$FN?5t_?$HLRCD?$HN?$FL?$AA@
CONST	SEGMENT
??_C@_0L@OICMBBBB@?$FN?5t_?$HLRCD?$HN?$FL?$AA@ DB '] t_{RCD}[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IABIPHAA@?$FN?5t_?$HLRC?$HN?$FL?$AA@
CONST	SEGMENT
??_C@_09IABIPHAA@?$FN?5t_?$HLRC?$HN?$FL?$AA@ DB '] t_{RC}[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BOCDPGPG@?$FN?5AMP?$FL?$AA@
CONST	SEGMENT
??_C@_06BOCDPGPG@?$FN?5AMP?$FL?$AA@ DB '] AMP[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NDAOKEFK@?$FN?5COA?$FL?$AA@
CONST	SEGMENT
??_C@_06NDAOKEFK@?$FN?5COA?$FL?$AA@ DB '] COA[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KELLHHAH@?$FN?5RBMP?$FL?$AA@
CONST	SEGMENT
??_C@_07KELLHHAH@?$FN?5RBMP?$FL?$AA@ DB '] RBMP[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BNONNLFK@?$FN?5DR?$FL?$AA@
CONST	SEGMENT
??_C@_05BNONNLFK@?$FN?5DR?$FL?$AA@ DB '] DR[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FANEOFIO@M?$FN?5PBQ?$FL?$AA@
CONST	SEGMENT
??_C@_07FANEOFIO@M?$FN?5PBQ?$FL?$AA@ DB 'M] PBQ[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIAHPKIN@?$FN?5t_?$HLFAW?$HN?$FL?$AA@
CONST	SEGMENT
??_C@_0L@EIAHPKIN@?$FN?5t_?$HLFAW?$HN?$FL?$AA@ DB '] t_{FAW}[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02PBFOLPKM@?$FN?5?$AA@
CONST	SEGMENT
??_C@_02PBFOLPKM@?$FN?5?$AA@ DB '] ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CMDGPFCD@cache?$FL?$AA@
CONST	SEGMENT
??_C@_06CMDGPFCD@cache?$FL?$AA@ DB 'cache[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04BHMCEHEJ@kB?$FN?5?$AA@
CONST	SEGMENT
??_C@_04BHMCEHEJ@kB?$FN?5?$AA@ DB 'kB] ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DGPPDNGF@blkSz?$FL?$AA@
CONST	SEGMENT
??_C@_06DGPPDNGF@blkSz?$FL?$AA@ DB 'blkSz[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NADJLLE@?$FN?5assoc?$FL?$AA@
CONST	SEGMENT
??_C@_08NADJLLE@?$FN?5assoc?$FL?$AA@ DB '] assoc[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMICBNBC@?$FN?5sets?$FL?$AA@
CONST	SEGMENT
??_C@_07KMICBNBC@?$FN?5sets?$FL?$AA@ DB '] sets[', 00H	; `string'
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
; Function compile flags: /Odtpy
;	COMDAT ??_9Channel@DRAMsimII@@$BBI@AE
_TEXT	SEGMENT
??_9Channel@DRAMsimII@@$BBI@AE PROC			; DRAMsimII::Channel::`vcall'{24}', COMDAT
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+24]
??_9Channel@DRAMsimII@@$BBI@AE ENDP			; DRAMsimII::Channel::`vcall'{24}'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@XZ PROC ; std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Checked_iterator_base, COMDAT
; _this$ = eax

; 47   : 		return _Myptr;

	mov	eax, DWORD PTR [eax+4]

; 48   : 	}

	ret	0
?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@XZ ENDP ; std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Checked_iterator_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBEPBV?$vector@IV?$allocator@I@std@@@2@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBEPBV?$vector@IV?$allocator@I@std@@@2@XZ PROC ; std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Checked_iterator_base, COMDAT
; _this$ = eax

; 47   : 		return _Myptr;

	mov	eax, DWORD PTR [eax+4]

; 48   : 	}

	ret	0
?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBEPBV?$vector@IV?$allocator@I@std@@@2@XZ ENDP ; std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Checked_iterator_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@XZ PROC ; std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Checked_iterator_base, COMDAT
; _this$ = eax

; 47   : 		return _Myptr;

	mov	eax, DWORD PTR [eax+4]

; 48   : 	}

	ret	0
?_Checked_iterator_base@?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QBEPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@XZ ENDP ; std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Checked_iterator_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::forward_iterator_tag>, COMDAT
; __Last$ = ecx
; __Dest$ = eax

; 2673 : 	{	// copy [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	mov	edx, DWORD PTR __First$[esp-4]

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw
	push	esi
	npad	7
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw
	pop	esi
$LN1@Copy_backw:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::forward_iterator_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::_Different_checked_iterator_base_type_tag>, COMDAT
; __It$ = eax

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::_Different_checked_iterator_base_type_tag>, COMDAT
; __It$ = eax

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::_Different_checked_iterator_base_type_tag>, COMDAT
; __It$ = eax

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@XZ PROC ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::_Checked_iterator_base, COMDAT
; _this$ = eax

; 305  : 		return (this->_Myptr);

	mov	eax, DWORD PTR [eax+4]

; 306  : 		}

	ret	0
?_Checked_iterator_base@?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@XZ ENDP ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::_Checked_iterator_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ PROC ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Checked_iterator_base, COMDAT
; _this$ = eax

; 305  : 		return (this->_Myptr);

	mov	eax, DWORD PTR [eax+4]

; 306  : 		}

	ret	0
?_Checked_iterator_base@?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ ENDP ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Checked_iterator_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
??$_Destroy@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z PROC ; std::_Destroy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::_Destroy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::forward_iterator_tag>, COMDAT
; __Last$ = edx
; __Dest$ = eax

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	mov	ecx, DWORD PTR __First$[esp-4]

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt
	push	esi
	npad	7
$LL3@Copy_opt:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt
	pop	esi
$LN1@Copy_opt:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Uforward_iterator_tag@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::forward_iterator_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@U_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@U_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; __It$ = eax

; 1147 : 		return _It;

	mov	eax, DWORD PTR [eax]

; 1148 : 	}

	ret	0
??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@U_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >,std::_Different_checked_iterator_base_type_tag>, COMDAT
; __It$ = eax

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@U_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@U_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<DRAMsimII::Channel *>, COMDAT
; __It$ = eax

; 1147 : 		return _It;

	mov	eax, DWORD PTR [eax]

; 1148 : 	}

	ret	0
??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@U_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<DRAMsimII::Channel *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > > >, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@AAPAV?$vector@IV?$allocator@I@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@AAPAV?$vector@IV?$allocator@I@std@@@0@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::vector<unsigned int,std::allocator<unsigned int> > *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@AAPAV?$vector@IV?$allocator@I@std@@@0@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::vector<unsigned int,std::allocator<unsigned int> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > >, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@std@@YAPBV?$vector@IV?$allocator@I@std@@@0@AAV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@AAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > > >, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@std@@YAPBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@AAV?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Different_checked_iterator_base_type_tag>, COMDAT
; __It$ = eax

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
?destroy@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z PROC ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::destroy, COMDAT

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	0
?destroy@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::destroy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YA?AU_Undefined_move_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Move_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YA?AU_Undefined_move_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z PROC ; std::_Move_cat<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YA?AU_Undefined_move_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::_Move_cat<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z PROC ; std::_Fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>, COMDAT
; __Last$ = edx
; __Val$ = ecx

; 3156 : 	{	// copy _Val through [_First, _Last)

	mov	eax, DWORD PTR __First$[esp-4]

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	cmp	eax, edx
	je	SHORT $LN1@Fill@2
	push	esi
	npad	7
$LL3@Fill@2:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL3@Fill@2
	pop	esi
$LN1@Fill@2:

; 3160 : 	}

	ret	0
??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z ENDP ; std::_Fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z
_TEXT	SEGMENT
??$_Iter_random@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z PROC ; std::_Iter_random<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; ___$ReturnUdt$ = eax

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);
; 998  : 	}

	ret	0
??$_Iter_random@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z ENDP ; std::_Iter_random<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@@Z
_TEXT	SEGMENT
??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@@Z PROC ; std::_Checked_base<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax]

; 1166 : 	}

	ret	0
??$_Checked_base@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@AAPAU123@@Z ENDP ; std::_Checked_base<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Iter_cat@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z PROC ; std::_Iter_cat<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ENDP ; std::_Iter_cat<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Ptr_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z PROC ; std::_Ptr_cat<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z ENDP ; std::_Ptr_cat<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@@Z
_TEXT	SEGMENT
??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@@Z PROC ; std::_Checked_base<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> > >, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@AAV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@@Z ENDP ; std::_Checked_base<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Iter_cat@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z PROC ; std::_Iter_cat<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ENDP ; std::_Iter_cat<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PAVChannel@DRAMsimII@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVChannel@DRAMsimII@@0@Z
_TEXT	SEGMENT
??$_Iter_random@PAVChannel@DRAMsimII@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVChannel@DRAMsimII@@0@Z PROC ; std::_Iter_random<DRAMsimII::Channel *,DRAMsimII::Channel *>, COMDAT
; ___$ReturnUdt$ = eax

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);
; 998  : 	}

	ret	0
??$_Iter_random@PAVChannel@DRAMsimII@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVChannel@DRAMsimII@@0@Z ENDP ; std::_Iter_random<DRAMsimII::Channel *,DRAMsimII::Channel *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@@Z
_TEXT	SEGMENT
??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@@Z PROC ; std::_Checked_base<DRAMsimII::Channel *>, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax]

; 1166 : 	}

	ret	0
??$_Checked_base@PAVChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@AAPAV12@@Z ENDP ; std::_Checked_base<DRAMsimII::Channel *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z
_TEXT	SEGMENT
??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z PROC ; std::_Checked_base<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPAVChannel@DRAMsimII@@AAV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z ENDP ; std::_Checked_base<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\functional.hpp
_TEXT	ENDS
;	COMDAT ??R?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QBEXAAVChannel@DRAMsimII@@AB_J@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
??R?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QBEXAAVChannel@DRAMsimII@@AB_J@Z PROC ; boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>::operator(), COMDAT
; _x$ = eax

; 430  :             return (p.*ptr)(x);

	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[esp-4]
	push	ecx
	mov	ecx, DWORD PTR _p$[esp]
	push	edx
	mov	edx, DWORD PTR [eax]
	call	edx

; 431  :         }

	ret	8
??R?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QBEXAAVChannel@DRAMsimII@@AB_J@Z ENDP ; boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QBEXAAVChannel@DRAMsimII@@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??R?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QBEXAAVChannel@DRAMsimII@@@Z PROC ; boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >::operator(), COMDAT
; _this$ = eax

; 280  :             return op(x, value);

	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _x$[esp]
	push	edx
	call	eax

; 281  :         }               

	ret	4
??R?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QBEXAAVChannel@DRAMsimII@@@Z ENDP ; boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QAE@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@1@AB_J@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??0?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QAE@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@1@AB_J@Z PROC ; boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >, COMDAT
; _this$ = eax
; _y$ = ecx

; 275  :         {}

	mov	edx, DWORD PTR _x$[esp-4]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], ecx
	ret	4
??0?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@QAE@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@1@AB_J@Z ENDP ; boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QAE@P8Channel@DRAMsimII@@AEX_J@Z@Z
_TEXT	SEGMENT
??0?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QAE@P8Channel@DRAMsimII@@AEX_J@Z@Z PROC ; boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>, COMDAT
; _this$ = eax

; 427  :         {}

	mov	DWORD PTR [eax], OFFSET ??_9Channel@DRAMsimII@@$BBI@AE ; DRAMsimII::Channel::`vcall'{24}'
	ret	0
??0?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@QAE@P8Channel@DRAMsimII@@AEX_J@Z@Z ENDP ; boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z PROC ; std::fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>, COMDAT
; __Last$ = edx
; __Val$ = ecx

; 3186 : 	{	// copy _Val through [_First, _Last)

	mov	eax, DWORD PTR __First$[esp-4]

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	cmp	eax, edx
	je	SHORT $LN11@fill
	push	esi
	npad	7
$LL13@fill:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL13@fill
	pop	esi
$LN11@fill:

; 3188 : 	}

	ret	0
??$fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z ENDP ; std::fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z
_TEXT	SEGMENT
??$?0U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?8U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
??$?8U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@0@0@Z PROC ; std::operator==<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT

; 175  : 	return (true);

	mov	al, 1

; 176  : 	}

	ret	0
??$?8U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@@Z PROC ; std::_Destroy_range<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0VChannel@DRAMsimII@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@VChannel@DRAMsimII@@@1@@Z
_TEXT	SEGMENT
??$?0VChannel@DRAMsimII@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@VChannel@DRAMsimII@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><DRAMsimII::Channel>, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0VChannel@DRAMsimII@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@VChannel@DRAMsimII@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><DRAMsimII::Channel>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position><std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$for_each@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@@std@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0V12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Func$ = 28						; size = 16
??$for_each@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@@std@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0V12@@Z PROC ; std::for_each<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> > >, COMDAT

; 23   : 	{	// perform function for each element

	push	ecx
	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+4]
	push	esi

; 24   : 	_DEBUG_RANGE(_First, _Last);
; 25   : 	_DEBUG_POINTER(_Func);
; 26   : 	_CHECKED_BASE_TYPE(_InIt) _ChkFirst(_CHECKED_BASE(_First));

	mov	esi, DWORD PTR __First$[esp+12]
	push	edi

; 27   : 	_CHECKED_BASE_TYPE(_InIt) _ChkLast(_CHECKED_BASE(_Last));

	mov	edi, DWORD PTR __Last$[esp+16]

; 28   : 	for (; _ChkFirst != _ChkLast; ++_ChkFirst)

	cmp	esi, edi
	je	SHORT $LN1@for_each
$LL3@for_each:

; 29   : 		_Func(*_ChkFirst);

	mov	eax, DWORD PTR __Func$[esp+24]
	mov	ecx, DWORD PTR __Func$[esp+20]
	push	eax
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __Func$[esp+20]
	add	esi, 456				; 000001c8H
	cmp	esi, edi
	jne	SHORT $LL3@for_each
$LN1@for_each:

; 30   : 	return (_Func);

	movq	xmm0, QWORD PTR __Func$[esp+12]
	movq	QWORD PTR [ebx], xmm0
	movq	xmm0, QWORD PTR __Func$[esp+20]

; 31   : 	}

	pop	edi
	pop	esi
	movq	QWORD PTR [ebx+8], xmm0
	mov	eax, ebx
	pop	ebx
	pop	ecx
	ret	0
??$for_each@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@@std@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0V12@@Z ENDP ; std::for_each<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\functional.hpp
_TEXT	ENDS
;	COMDAT ??$bind2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@0@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@AB_J@Z
_TEXT	SEGMENT
_op$ = 8						; size = 4
??$bind2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@0@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@AB_J@Z PROC ; boost::bind2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >, COMDAT
; ___$ReturnUdt$ = eax
; _x$ = ecx

; 294  :         // The cast is to placate Borland C++Builder in certain circumstances.
; 295  :         // I don't think it should be necessary.
; 296  :         return binder2nd<Operation>((typename binary_traits<Operation>::param_type)op, x);

	mov	edx, DWORD PTR _op$[esp-4]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx

; 297  :     }

	ret	0
??$bind2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@0@ABV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@AB_J@Z ENDP ; boost::bind2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$mem_fun_ref@XVChannel@DRAMsimII@@_J@boost@@YA?AV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@P8Channel@DRAMsimII@@AEX_J@Z@Z
_TEXT	SEGMENT
??$mem_fun_ref@XVChannel@DRAMsimII@@_J@boost@@YA?AV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@P8Channel@DRAMsimII@@AEX_J@Z@Z PROC ; boost::mem_fun_ref<void,DRAMsimII::Channel,__int64>, COMDAT
; ___$ReturnUdt$ = eax

; 479  :         return mem_fun1_ref_t<S,T,A>(f);

	mov	DWORD PTR [eax], OFFSET ??_9Channel@DRAMsimII@@$BBI@AE ; DRAMsimII::Channel::`vcall'{24}'

; 480  :     }

	ret	0
??$mem_fun_ref@XVChannel@DRAMsimII@@_J@boost@@YA?AV?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@0@P8Channel@DRAMsimII@@AEX_J@Z@Z ENDP ; boost::mem_fun_ref<void,DRAMsimII::Channel,__int64>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::capacity, COMDAT
; _this$ = eax

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN3@capacity
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [eax+20]
	sub	eax, ecx
	sar	eax, 3

; 636  : 		}

	ret	0
?capacity@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 357913941				; 15555555H

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?max_size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::max_size, COMDAT

; 625  : 		return (this->_Alval.max_size());

	mov	eax, 357913941				; 15555555H

; 626  : 		}

	ret	0
?max_size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::size, COMDAT
; _this$ = eax

; 620  : 		return (_Mysize);

	mov	eax, DWORD PTR [eax+24]

; 621  : 		}

	ret	0
?size@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ
_TEXT	SEGMENT
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<0>::_Mynode, COMDAT
; _this$ = eax

; 308  : 			return (_Ptr);

	mov	eax, DWORD PTR [eax+4]

; 309  : 			}

	ret	0
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<0>::_Mynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ
_TEXT	SEGMENT
?_Mynode@?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Mynode, COMDAT
; _this$ = eax

; 308  : 			return (_Ptr);

	mov	eax, DWORD PTR [eax+4]

; 309  : 			}

	ret	0
?_Mynode@?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@3@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Mynode
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QBEIXZ PROC ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QBEIXZ ENDP ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z
_TEXT	SEGMENT
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::destroy, COMDAT

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	0
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::destroy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?size@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::size, COMDAT
; _this$ = eax

; 417  : 		return (_List.size());

	mov	eax, DWORD PTR [eax+32]

; 418  : 		}

	ret	0
?size@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
??8_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::operator==, COMDAT
; _this$ = eax
; __Right$ = edx

; 297  : 			return (_Mypos._Mynode() == _Right._Mynode());

	mov	ecx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx+4]
	sete	al

; 298  : 			}

	ret	0
??8_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::operator==
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@AB_N@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@AB_N@Z PROC ; std::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,bool>::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,bool>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 50   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax+8], cl

; 51   : 		}

	ret	4
??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@AB_N@Z ENDP ; std::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,bool>::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,bool>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z
_TEXT	SEGMENT
?deallocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z PROC ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::deallocate, COMDAT
; __Ptr$ = eax

; 140  : 		::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	0
?deallocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ENDP ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV01@@Z PROC ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z
_TEXT	SEGMENT
?_Destroy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Destroy, COMDAT

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	0
?_Destroy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::max_size, COMDAT

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+16]
	sub	eax, DWORD PTR [ecx+12]
	sar	eax, 3

; 727  : 		}

	ret	0
?size@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBEIXZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::size
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z
_TEXT	SEGMENT
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::destroy, COMDAT

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	0
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::deallocate, COMDAT
; __Ptr$ = eax

; 140  : 		::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	0
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
?_Prevnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Prevnode, COMDAT
; __Pnode$ = eax

; 120  : 		return ((_Nodepref)(*_Pnode)._Prev);

	add	eax, 4

; 121  : 		}

	ret	0
?_Prevnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Prevnode
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?max_load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
?max_load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::max_load_factor, COMDAT
; _this$ = eax

; 513  : 		return (_Max_bucket_size);

	movss	xmm0, DWORD PTR [eax+68]

; 514  : 		}

	ret	0
?max_load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::max_load_factor
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?bucket_count@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::bucket_count, COMDAT
; _this$ = eax

; 451  : 		return (_Maxidx);

	mov	eax, DWORD PTR [eax+64]

; 452  : 		}

	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::bucket_count
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@VChannel@DRAMsimII@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@VChannel@DRAMsimII@@@std@@QBEIXZ PROC ; std::allocator<DRAMsimII::Channel>::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 9418787				; 008fb823H

; 167  : 		}

	ret	0
?max_size@?$allocator@VChannel@DRAMsimII@@@std@@QBEIXZ ENDP ; std::allocator<DRAMsimII::Channel>::max_size
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ??9_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
??9_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::operator!=, COMDAT
; _this$ = eax
; __Right$ = edx

; 302  : 			return (!(*this == _Right));

	mov	ecx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx+4]
	setne	al

; 303  : 			}

	ret	0
??9_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE_NABV?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::operator!=
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@0@Z PROC ; std::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >, COMDAT
; __Val1$ = edx
; __Val2$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, DWORD PTR _this$[esp-4]
	push	esi
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], ecx
	pop	esi

; 51   : 		}

	ret	4
??0?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@QAE@ABV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@1@0@Z ENDP ; std::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >::pair<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXXZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Tidy, COMDAT
; _this$ = esi

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0

; 1135 : 		}

	ret	0
?_Tidy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXXZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??A?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z
_TEXT	SEGMENT
??A?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator[], COMDAT
; _this$ = esi
; __Pos$ = edi

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());

	mov	eax, DWORD PTR [esi+16]
	sub	eax, DWORD PTR [esi+12]
	sar	eax, 3
	cmp	edi, eax
	jb	SHORT $LN1@operator@2
	call	__invalid_parameter_noinfo
$LN1@operator@2:

; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	ecx, DWORD PTR [esi+12]
	lea	eax, DWORD PTR [ecx+edi*8]

; 786  : 		}

	ret	0
??A?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z
_TEXT	SEGMENT
?_Myval@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Myval, COMDAT
; __Pnode$ = eax

; 125  : 		return ((_Vref)(*_Pnode)._Myval);

	add	eax, 8

; 126  : 		}

	ret	0
?_Myval@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Myval
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
?_Nextnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Nextnode, COMDAT
; __Pnode$ = eax

; 115  : 		return ((_Nodepref)(*_Pnode)._Next);
; 116  : 		}

	ret	0
?_Nextnode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Nextnode
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\unordered_map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@SAABIABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@3@@Z
_TEXT	SEGMENT
?_Kfn@?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@SAABIABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@3@@Z PROC ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::_Kfn, COMDAT
; __Val$ = eax

; 71   : 		return (_Val.first);
; 72   : 		}

	ret	0
?_Kfn@?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@SAABIABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@3@@Z ENDP ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@ABV01@@Z PROC ; std::allocator<DRAMsimII::Channel>::allocator<DRAMsimII::Channel>, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<DRAMsimII::Channel>::allocator<DRAMsimII::Channel>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::max_size, COMDAT

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 9418787				; 008fb823H

; 732  : 		}

	ret	0
?max_size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@QAE@ABIABU?$pair@PAVTransaction@DRAMsimII@@PAV12@@1@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
??0?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@QAE@ABIABU?$pair@PAVTransaction@DRAMsimII@@PAV12@@1@@Z PROC ; std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >, COMDAT
; _this$ = eax
; __Val2$ = ecx

; 50   : 		{	// construct from specified values

	mov	edx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], ecx

; 51   : 		}

	ret	4
??0?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@QAE@ABIABU?$pair@PAVTransaction@DRAMsimII@@PAV12@@1@@Z ENDP ; std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@XZ PROC ; std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>, COMDAT
; _this$ = eax

; 45   : 		{	// construct from defaults

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 46   : 		}

	ret	0
??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@XZ ENDP ; std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@XZ PROC	; std::allocator<DRAMsimII::Channel>::allocator<DRAMsimII::Channel>, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@VChannel@DRAMsimII@@@std@@QAE@XZ ENDP	; std::allocator<DRAMsimII::Channel>::allocator<DRAMsimII::Channel>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	jne	SHORT $LN3@capacity@2

; 636  : 		}

	ret	0
$LN3@capacity@2:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+20]
	sub	ecx, eax
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?key_comp@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ
_TEXT	SEGMENT
?key_comp@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::key_comp, COMDAT
; ___$ReturnUdt$ = eax

; 621  : 		return (this->comp);
; 622  : 		}

	ret	0
?key_comp@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::key_comp
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?key_comp@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ
_TEXT	SEGMENT
?key_comp@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::key_comp, COMDAT
; ___$ReturnUdt$ = eax

; 621  : 		return (this->comp);
; 622  : 		}

	ret	0
?key_comp@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AU?$less@_K@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::key_comp
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@ABQAVTransaction@DRAMsimII@@0@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@ABQAVTransaction@DRAMsimII@@0@Z PROC ; std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 50   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	4
??0?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@QAE@ABQAVTransaction@DRAMsimII@@0@Z ENDP ; std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@II@std@@QAE@ABI0@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@II@std@@QAE@ABI0@Z PROC			; std::pair<unsigned int,unsigned int>::pair<unsigned int,unsigned int>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 50   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	4
??0?$pair@II@std@@QAE@ABI0@Z ENDP			; std::pair<unsigned int,unsigned int>::pair<unsigned int,unsigned int>
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\channel.h
_TEXT	ENDS
;	COMDAT ?setChannelID@Channel@DRAMsimII@@QAEXI@Z
_TEXT	SEGMENT
?setChannelID@Channel@DRAMsimII@@QAEXI@Z PROC		; DRAMsimII::Channel::setChannelID, COMDAT
; _this$ = eax
; _value$ = ecx

; 127  : 		void setChannelID(const unsigned value) { channelID = value; }	///< set the channel ordinal

	mov	DWORD PTR [eax+392], ecx
	ret	0
?setChannelID@Channel@DRAMsimII@@QAEXI@Z ENDP		; DRAMsimII::Channel::setChannelID
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?getTime@Channel@DRAMsimII@@QBE_JXZ
_TEXT	SEGMENT
?getTime@Channel@DRAMsimII@@QBE_JXZ PROC		; DRAMsimII::Channel::getTime, COMDAT
; _this$ = ecx

; 116  : 		tick getTime() const { return time; }														///< get the time that this channel is at

	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
	ret	0
?getTime@Channel@DRAMsimII@@QBE_JXZ ENDP		; DRAMsimII::Channel::getTime
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\statistics.h
_TEXT	ENDS
;	COMDAT ?getReadWriteBytes@Statistics@DRAMsimII@@QBE?AU?$pair@II@std@@XZ
_TEXT	SEGMENT
?getReadWriteBytes@Statistics@DRAMsimII@@QBE?AU?$pair@II@std@@XZ PROC ; DRAMsimII::Statistics::getReadWriteBytes, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 150  : 		std::pair<unsigned,unsigned> getReadWriteBytes() const { return std::pair<unsigned,unsigned>(readBytesTransferred,writeBytesTransferred); }

	mov	edx, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	ret	0
?getReadWriteBytes@Statistics@DRAMsimII@@QBE?AU?$pair@II@std@@XZ ENDP ; DRAMsimII::Statistics::getReadWriteBytes
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\simulationparameters.h
_TEXT	ENDS
;	COMDAT ?getRequestCount@SimulationParameters@DRAMsimII@@QAE_JXZ
_TEXT	SEGMENT
?getRequestCount@SimulationParameters@DRAMsimII@@QAE_JXZ PROC ; DRAMsimII::SimulationParameters::getRequestCount, COMDAT
; _this$ = ecx

; 42   : 		tick getRequestCount() {return requestCount;}

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	ret	0
?getRequestCount@SimulationParameters@DRAMsimII@@QAE_JXZ ENDP ; DRAMsimII::SimulationParameters::getRequestCount
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\systemconfiguration.h
_TEXT	ENDS
;	COMDAT ?getReadPercentage@SystemConfiguration@DRAMsimII@@QBENXZ
_TEXT	SEGMENT
?getReadPercentage@SystemConfiguration@DRAMsimII@@QBENXZ PROC ; DRAMsimII::SystemConfiguration::getReadPercentage, COMDAT
; _this$ = eax

; 110  : 		double getReadPercentage() const { return readPercentage; }

	movsd	xmm0, QWORD PTR [eax+392]
	ret	0
?getReadPercentage@SystemConfiguration@DRAMsimII@@QBENXZ ENDP ; DRAMsimII::SystemConfiguration::getReadPercentage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?getShortBurstRatio@SystemConfiguration@DRAMsimII@@QBENXZ
_TEXT	SEGMENT
?getShortBurstRatio@SystemConfiguration@DRAMsimII@@QBENXZ PROC ; DRAMsimII::SystemConfiguration::getShortBurstRatio, COMDAT
; _this$ = eax

; 109  : 		double getShortBurstRatio() const { return shortBurstRatio; }

	movsd	xmm0, QWORD PTR [eax+384]
	ret	0
?getShortBurstRatio@SystemConfiguration@DRAMsimII@@QBENXZ ENDP ; DRAMsimII::SystemConfiguration::getShortBurstRatio
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?getConfigType@SystemConfiguration@DRAMsimII@@QBE?AW4SystemConfigurationType@2@XZ
_TEXT	SEGMENT
?getConfigType@SystemConfiguration@DRAMsimII@@QBE?AW4SystemConfigurationType@2@XZ PROC ; DRAMsimII::SystemConfiguration::getConfigType, COMDAT
; _this$ = eax

; 92   : 		SystemConfigurationType getConfigType() const { return configType; }

	mov	eax, DWORD PTR [eax+296]
	ret	0
?getConfigType@SystemConfiguration@DRAMsimII@@QBE?AW4SystemConfigurationType@2@XZ ENDP ; DRAMsimII::SystemConfiguration::getConfigType
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Construct@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU123@@Z
_TEXT	SEGMENT
??$_Construct@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU123@@Z PROC ; std::_Construct<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Construct:

; 53   : 	}

	ret	0
??$_Construct@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU123@@Z ENDP ; std::_Construct<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; __First$ = esi
; __Last$ = ecx
; __Dest$ = edx

; 2686 : 	// if _OutIt is range checked, this will make sure there is enough space for the copy
; 2687 : 	_OutIt _Result = _Dest - (_Last - _First);

	mov	eax, ecx
	sub	eax, esi
	sar	eax, 3
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	edi
	mov	edi, eax
	mov	eax, edx
	sub	eax, edi

; 2688 : 	_Copy_backward_opt(_First, _Last, _CHECKED_BASE(_Dest),
; 2689 : 		forward_iterator_tag(), _Nonscalar_ptr_iterator_tag(), _Range_checked_iterator_tag());

	cmp	esi, ecx
	je	SHORT $LN7@Copy_backw@4
	sub	edx, ecx
	npad	6
$LL8@Copy_backw@4:
	mov	edi, DWORD PTR [ecx-8]
	sub	ecx, 8
	mov	DWORD PTR [edx+ecx], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+ecx+4], edi
	cmp	ecx, esi
	jne	SHORT $LL8@Copy_backw@4
$LN7@Copy_backw@4:
	pop	edi

; 2690 : 	return _Result;
; 2691 : 	}

	ret	0
??$_Copy_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU345@@Z
_TEXT	SEGMENT
?construct@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU345@@Z PROC ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN5@construct:

; 156  : 		}

	ret	0
?construct@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@ABU345@@Z ENDP ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::construct
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; __Count$ = ecx
; __Val$ = edx

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	mov	eax, DWORD PTR __First$[esp-4]

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@5
	push	esi
	npad	7
$LL6@Uninit_fil@5:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@5
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_fil@5:
	dec	ecx
	add	eax, 8
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@5
	pop	esi
$LN4@Uninit_fil@5:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First_dest_cat$ = 8					; size = 1
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Move_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT
; __First$ = esi
; __Last$ = ecx
; __Dest$ = edx

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	eax, ecx
	sub	eax, esi
	sar	eax, 3
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	edi
	mov	edi, eax
	mov	eax, edx
	sub	eax, edi
	cmp	esi, ecx
	je	SHORT $LN11@Move_backw@2
	sub	edx, ecx
	npad	6
$LL12@Move_backw@2:
	mov	edi, DWORD PTR [ecx-8]
	sub	ecx, 8
	mov	DWORD PTR [edx+ecx], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+ecx+4], edi
	cmp	ecx, esi
	jne	SHORT $LL12@Move_backw@2
$LN11@Move_backw@2:
	pop	edi

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; __First$ = ecx
; __Last$ = esi
; __Dest$ = edx

; 2482 : 	// if _OutIt is range checked, this will make sure there is enough space for the copy
; 2483 : 	_OutIt _Result = _Dest + (_Last - _First);

	mov	eax, esi
	sub	eax, ecx
	sar	eax, 3
	lea	eax, DWORD PTR [edx+eax*8]

; 2484 : 	_Copy_opt(_First, _Last, _CHECKED_BASE(_Dest), 
; 2485 : 		forward_iterator_tag(), _Nonscalar_ptr_iterator_tag(), _Range_checked_iterator_tag());

	cmp	ecx, esi
	je	SHORT $LN7@Copy_opt@4
	sub	edx, ecx
	push	edi
$LL9@Copy_opt@4:
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [edx+ecx], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+ecx+4], edi
	add	ecx, 8
	cmp	ecx, esi
	jne	SHORT $LL9@Copy_opt@4
	pop	edi
$LN7@Copy_opt@4:

; 2486 : 	return _Result;
; 2487 : 	}

	ret	0
??$_Copy_opt@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@IABU120@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z
_TEXT	SEGMENT
$T331825 = -4						; size = 1
__Cat$331830 = -4					; size = 1
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
??$unchecked_uninitialized_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@IABU120@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; __First$ = edx

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	BYTE PTR $T331825[esp+4], 0
	mov	eax, DWORD PTR $T331825[esp+4]
	mov	ecx, DWORD PTR __Cat$331830[esp+4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __Val$[esp+12]
	call	??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 943  : 	}

	add	esp, 16					; 00000010H
	ret	0
??$unchecked_uninitialized_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@IABU120@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Unchecked_move_backward@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z
_TEXT	SEGMENT
??$_Unchecked_move_backward@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z PROC ; stdext::_Unchecked_move_backward<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; __First$ = esi
; __Last$ = ecx
; __Dest$ = edx

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, ecx
	sub	eax, esi
	sar	eax, 3
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	edi
	mov	edi, eax
	mov	eax, edx
	sub	eax, edi
	cmp	esi, ecx
	je	SHORT $LN25@Unchecked_@2
	sub	edx, ecx
	npad	6
$LL26@Unchecked_@2:
	mov	edi, DWORD PTR [ecx-8]
	sub	ecx, 8
	mov	DWORD PTR [edx+ecx], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+ecx+4], edi
	cmp	ecx, esi
	jne	SHORT $LL26@Unchecked_@2
$LN25@Unchecked_@2:
	pop	edi

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z ENDP ; stdext::_Unchecked_move_backward<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Construct@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U12@@std@@YAXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@0@ABU10@@Z
_TEXT	SEGMENT
??$_Construct@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U12@@std@@YAXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@0@ABU10@@Z PROC ; std::_Construct<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@2
	movq	xmm0, QWORD PTR [ecx]
	movq	QWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN3@Construct@2:

; 53   : 	}

	ret	0
??$_Construct@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@U12@@std@@YAXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@0@ABU10@@Z ENDP ; std::_Construct<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$unchecked_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z
_TEXT	SEGMENT
??$unchecked_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z PROC ; stdext::unchecked_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; __First$ = ecx
; __Last$ = esi
; __Dest$ = edx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, esi
	sub	eax, ecx
	sar	eax, 3
	lea	eax, DWORD PTR [edx+eax*8]
	cmp	ecx, esi
	je	SHORT $LN21@unchecked_@19
	sub	edx, ecx
	push	edi
$LL23@unchecked_@19:
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [edx+ecx], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+ecx+4], edi
	add	ecx, 8
	cmp	ecx, esi
	jne	SHORT $LL23@unchecked_@19
	pop	edi
$LN21@unchecked_@19:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z ENDP ; stdext::unchecked_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IPAU123@@Z
_TEXT	SEGMENT
$T332040 = -16						; size = 4
$T332032 = -12						; size = 12
??$_Allocate@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IPAU123@@Z PROC ; std::_Allocate<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 8
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T332040[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T332032[esp+20]
	mov	DWORD PTR $T332040[esp+20], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T332032[esp+20]
	push	ecx
	mov	DWORD PTR $T332032[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate:
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate:
??$_Allocate@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IPAU123@@Z ENDP ; std::_Allocate<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@ABQAU120@@Z
_TEXT	SEGMENT
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *,std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@3
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@3:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *,std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T332063 = -16						; size = 4
$T332055 = -12						; size = 12
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 20					; 00000014H
	jae	SHORT $LN1@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T332063[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T332055[esp+20]
	mov	DWORD PTR $T332063[esp+20], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T332055[esp+20]
	push	ecx
	mov	DWORD PTR $T332055[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@2:
$LN1@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*4]
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@2:
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@VChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@IPAV12@@Z
_TEXT	SEGMENT
$T332077 = -16						; size = 4
$T332069 = -12						; size = 12
??$_Allocate@VChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@IPAV12@@Z PROC ; std::_Allocate<DRAMsimII::Channel>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 456				; 000001c8H
	jae	SHORT $LN1@Allocate@3

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T332077[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T332069[esp+20]
	mov	DWORD PTR $T332077[esp+20], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T332069[esp+20]
	push	ecx
	mov	DWORD PTR $T332069[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@3:
$LN1@Allocate@3:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	imul	ecx, 456				; 000001c8H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@3:
??$_Allocate@VChannel@DRAMsimII@@@std@@YAPAVChannel@DRAMsimII@@IPAV12@@Z ENDP ; std::_Allocate<DRAMsimII::Channel>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU345@ABU345@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU345@ABU345@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::random_access_iterator_tag,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &,std::_Iterator_base_aux>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU345@ABU345@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::random_access_iterator_tag,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Ranit@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU123@ABU123@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Ranit@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU123@ABU123@@std@@QAE@XZ PROC ; std::_Ranit<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &>::_Ranit<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Ranit@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@HPBU123@ABU123@@std@@QAE@XZ ENDP ; std::_Ranit<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &>::_Ranit<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??8?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator==, COMDAT
; _this$ = edi
; __Right$ = esi

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN1@operator@42
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN2@operator@42
$LN1@operator@42:
	call	__invalid_parameter_noinfo
$LN2@operator@42:

; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	0
??8?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; _this$ = edi
; __Pvector$ = esi

; 76   : 	_Vector_const_iterator(_Tptr _Ptr, const _Container_base *_Pvector)

	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp]
	mov	DWORD PTR [edi], 0

; 77   : 		{	// construct with pointer _Ptr
; 78   : 		_SCL_SECURE_VALIDATE(_Pvector != NULL && ((_Myvec *)_Pvector)->_Myfirst <= _Ptr && _Ptr <= ((_Myvec *)_Pvector)->_Mylast);

	test	esi, esi
	je	SHORT $LN1@Vector_con
	cmp	DWORD PTR [esi+12], ebx
	ja	SHORT $LN1@Vector_con
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN2@Vector_con
$LN1@Vector_con:
	call	__invalid_parameter_noinfo
$LN2@Vector_con:

; 79   : 		this->_Set_container(_Pvector);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax

; 80   : 		_Myptr = _Ptr;

	mov	DWORD PTR [edi+4], ebx

; 81   : 		}

	mov	eax, edi
	pop	ebx
	ret	4
??0?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU345@IABU345@@Z
_TEXT	SEGMENT
$T332138 = -4						; size = 1
__Cat$332142 = -4					; size = 1
?_Ufill@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU345@IABU345@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Ufill, COMDAT
; __Ptr$ = edi
; __Count$ = esi
; __Val$ = edx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	BYTE PTR $T332138[esp+4], 0
	mov	eax, DWORD PTR $T332138[esp+4]
	mov	ecx, DWORD PTR __Cat$332142[esp+4]
	push	eax
	push	ecx
	push	edi
	mov	ecx, esi
	call	??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*8]

; 1256 : 		}

	add	esp, 16					; 00000010H
	ret	0
?_Ufill@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU345@IABU345@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Ufill
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??9?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator!=, COMDAT
; _this$ = edi
; __Right$ = esi

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@operator@43
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN4@operator@43
$LN3@operator@43:
	call	__invalid_parameter_noinfo
$LN4@operator@43:
	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	0
??9?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; _this$ = edi
; __Pvector$ = esi

; 327  : 		{	// construct with pointer _Ptr

	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp]
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN3@Vector_ite
	cmp	DWORD PTR [esi+12], ebx
	ja	SHORT $LN3@Vector_ite
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN4@Vector_ite
$LN3@Vector_ite:
	call	__invalid_parameter_noinfo
$LN4@Vector_ite:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx

; 328  : 		}

	mov	eax, edi
	pop	ebx
	ret	4
??0?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 8
?_Make_iter@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Make_iter, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 661  : 		return (iterator(_Where._Myptr, this));

	mov	DWORD PTR [esi], 0
	test	edi, edi
	je	SHORT $LN5@Make_iter
	mov	eax, DWORD PTR __Where$[esp]
	cmp	DWORD PTR [edi+12], eax
	ja	SHORT $LN5@Make_iter
	cmp	eax, DWORD PTR [edi+16]
	jbe	SHORT $LN6@Make_iter
$LN5@Make_iter:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp]
$LN6@Make_iter:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], ecx
	mov	eax, esi

; 662  : 		}

	ret	8
?_Make_iter@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAEXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@ABU32@@Z
_TEXT	SEGMENT
?construct@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAEXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@ABU32@@Z PROC ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@2
	movq	xmm0, QWORD PTR [ecx]
	movq	QWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN5@construct@2:

; 156  : 		}

	ret	0
?construct@?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@QAEXPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@ABU32@@Z ENDP ; std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >::construct
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?erase@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 8
__Last_arg$ = 20					; size = 8
?erase@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@0@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::erase, COMDAT
; _this$ = edi

; 1028 : 		{	// erase [_First, _Last)

	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp]
	push	ebp
	push	esi

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	DWORD PTR [ebx], 0
	test	edi, edi
	je	SHORT $LN8@erase
	mov	eax, DWORD PTR __First_arg$[esp+12]
	cmp	DWORD PTR [edi+12], eax
	ja	SHORT $LN8@erase
	cmp	eax, DWORD PTR [edi+16]
	jbe	SHORT $LN9@erase
$LN8@erase:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First_arg$[esp+12]
$LN9@erase:

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	esi, DWORD PTR __Last_arg$[esp+12]
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [ebx], ecx
	mov	DWORD PTR [ebx+4], eax
	cmp	DWORD PTR [edi+12], esi
	ja	SHORT $LN24@erase
	cmp	esi, DWORD PTR [edi+16]
	jbe	SHORT $LN25@erase
$LN24@erase:
	call	__invalid_parameter_noinfo
	mov	esi, DWORD PTR __Last_arg$[esp+12]
$LN25@erase:

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN38@erase
	cmp	eax, ecx
	je	SHORT $LN39@erase
$LN38@erase:
	call	__invalid_parameter_noinfo
$LN39@erase:
	mov	edx, DWORD PTR [ebx+4]
	cmp	edx, esi
	je	SHORT $LN73@erase

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	ecx, DWORD PTR [edi+16]
	mov	eax, ecx
	sub	eax, esi
	sar	eax, 3
	lea	ebp, DWORD PTR [edx+eax*8]
	mov	eax, esi
	cmp	esi, ecx
	je	SHORT $LN66@erase
	sub	edx, esi
$LL68@erase:
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], esi
	mov	esi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+eax+4], esi
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL68@erase
$LN66@erase:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [edi+16], ebp
$LN73@erase:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
	ret	20					; 00000014H
?erase@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@0@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ
_TEXT	SEGMENT
?end@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::end, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 650  : 		{	// return iterator for end of mutable sequence

	push	ebx

; 651  : 		return (iterator(_Mylast, this));

	mov	ebx, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], 0
	cmp	DWORD PTR [edi+12], ebx
	jbe	SHORT $LN6@end
	call	__invalid_parameter_noinfo
$LN6@end:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 652  : 		}

	ret	0
?end@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ
_TEXT	SEGMENT
?begin@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::begin, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 640  : 		{	// return iterator for beginning of mutable sequence

	push	ebx

; 641  : 		return (iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [edi+12]
	mov	DWORD PTR [esi], 0
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN6@begin
	call	__invalid_parameter_noinfo
$LN6@begin:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 642  : 		}

	ret	0
?begin@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@XZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z
_TEXT	SEGMENT
$T332644 = -16						; size = 4
$T332650 = -12						; size = 12
?allocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z PROC ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocate, COMDAT
; __Count$ = ecx

; 144  : 		{	// allocate array of _Count elements

	sub	esp, 16					; 00000010H

; 145  : 		return (_Allocate(_Count, (pointer)0));

	test	ecx, ecx
	ja	SHORT $LN5@allocate
	xor	ecx, ecx
$LN3@allocate:
	lea	edx, DWORD PTR [ecx*8]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	add	esp, 16					; 00000010H
	ret	0

; 145  : 		return (_Allocate(_Count, (pointer)0));

$LN5@allocate:
	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 8
	jae	SHORT $LN3@allocate
	lea	eax, DWORD PTR $T332644[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T332650[esp+20]
	mov	DWORD PTR $T332644[esp+20], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T332650[esp+20]
	push	ecx
	mov	DWORD PTR $T332650[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN12@allocate:
$LN11@allocate:
	int	3
?allocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ENDP ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@ABQAU342@@Z
_TEXT	SEGMENT
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@3
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@3:

; 156  : 		}

	ret	0
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node *>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	ret	0
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Node>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &,std::_Iterator_base_aux>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Bidit@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@HPBU12@ABU12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Bidit@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@HPBU12@ABU12@@std@@QAE@XZ PROC ; std::_Bidit<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &>::_Bidit<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Bidit@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@HPBU12@ABU12@@std@@QAE@XZ ENDP ; std::_Bidit<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &>::_Bidit<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,int,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const *,std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = esi
; __Pnode$ = eax
; __Plist$ = edi

; 176  : 			{	// construct with node pointer _Pnode

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax

; 177  : 			_SCL_SECURE_TRAITS_VALIDATE(_Plist != NULL);

	test	edi, edi
	jne	SHORT $LN1@Const_iter@2
	call	__invalid_parameter_noinfo
$LN1@Const_iter@2:

; 178  : 			this->_Set_container(_Plist);

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx

; 179  : 			}

	mov	eax, esi
	ret	0
??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = eax

; 163  : 			{	// construct with null node pointer

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 164  : 			}

	ret	0
??0?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode, COMDAT

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1173 : 		int _Linkcnt = 0;
; 1174 : 
; 1175 : 		_TRY_BEGIN
; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	test	eax, eax
	je	SHORT $LN26@Buynode
	mov	DWORD PTR [eax], eax
$LN26@Buynode:

; 1177 : 		++_Linkcnt;
; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN36@Buynode
	mov	DWORD PTR [ecx], eax
$LN36@Buynode:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);
; 1183 : 		_RERAISE;
; 1184 : 		_CATCH_END
; 1185 : 		return (_Pnode);
; 1186 : 		}

	ret	0
?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::clear, COMDAT
; _this$ = esi

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	ecx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [ecx]

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	DWORD PTR [ecx], ecx

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx+4], ecx

; 835  : 		_Mysize = 0;

	mov	DWORD PTR [esi+24], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	cmp	eax, DWORD PTR [esi+20]
	je	SHORT $LN1@clear@5
	push	edi
	npad	6
$LL3@clear@5:

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	edi, DWORD PTR [eax]

; 840  : 			this->_Alnod.destroy(_Pnode);
; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
	cmp	edi, DWORD PTR [esi+20]
	jne	SHORT $LL3@clear@5
	pop	edi
$LN1@clear@5:

; 842  : 			}
; 843  : 		}

	ret	0
?clear@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::clear
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
tv139 = -4						; size = 4
tv132 = -4						; size = 4
tv129 = -4						; size = 4
?load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::load_factor, COMDAT
; _this$ = eax

; 507  : 		{	// return elements per bucket

	push	ecx

; 508  : 		return ((float)size() / (float)bucket_count());

	mov	ecx, DWORD PTR [eax+32]
	fild	DWORD PTR [eax+32]
	test	ecx, ecx
	jge	SHORT $LN9@load_facto
	fadd	DWORD PTR __real@4f800000
$LN9@load_facto:
	mov	edx, DWORD PTR [eax+64]
	fild	DWORD PTR [eax+64]
	test	edx, edx
	jge	SHORT $LN10@load_facto
	fadd	DWORD PTR __real@4f800000
$LN10@load_facto:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR tv129[esp+4]
	fld	DWORD PTR tv129[esp+4]

; 509  : 		}

	pop	ecx
	ret	0
?load_factor@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::load_factor
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = esi
; __Pnode$ = eax
; __Plist$ = edi

; 361  : 			{	// construct with node pointer _Pnode

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN3@Iterator
	call	__invalid_parameter_noinfo
$LN3@Iterator:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx

; 362  : 			}

	mov	eax, esi
	ret	0
??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::_Iterator<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = eax

; 348  : 		_Iterator()

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 349  : 			{	// construct with null node
; 350  : 			}

	ret	0
??0?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::_Iterator<1>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; _this$ = eax

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = eax

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Tidy, COMDAT
; _this$ = esi

; 1213 : 		clear();

	mov	ecx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], ecx
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx+4], ecx
	mov	DWORD PTR [esi+24], 0
	cmp	eax, DWORD PTR [esi+20]
	je	SHORT $LN3@Tidy@13
	push	edi
	npad	6
$LL5@Tidy@13:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
	cmp	edi, DWORD PTR [esi+20]
	jne	SHORT $LL5@Tidy@13
	pop	edi
$LN3@Tidy@13:

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));
; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	eax, DWORD PTR [esi+20]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	DWORD PTR [esi+20], 0

; 1218 : 		}

	ret	0
?_Tidy@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 8
?_Make_iter@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Make_iter, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 554  : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR __Where$[esp]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN5@Make_iter@2
	call	__invalid_parameter_noinfo
$LN5@Make_iter@2:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx
	mov	eax, esi

; 555  : 		}

	ret	8
?_Make_iter@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\unordered_map
_TEXT	ENDS
;	COMDAT ??0?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@@Z
_TEXT	SEGMENT
??0?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@@Z PROC ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>, COMDAT
; _this$ = eax
; __Traits$ = ecx

; 45   : 		{	// construct with specified comparator

	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax+4], dx

; 46   : 		}

	ret	0
??0?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@@Z ENDP ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?_Hashval@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABI@Z
_TEXT	SEGMENT
?_Hashval@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hashval, COMDAT
; _this$ = esi
; __Keyval$ = eax

; 821  : 		{	// return hash value, masked and wrapped to current table size

	push	ecx

; 822  : 		size_type _Num = this->comp(_Keyval) & _Mask;

	mov	ecx, DWORD PTR [eax]
	push	127773					; 0001f31dH
	push	ecx
	call	_ldiv
	imul	edx, 16807				; 000041a7H
	imul	eax, 2836				; 00000b14H
	add	esp, 8
	sub	edx, eax
	jns	SHORT $LN6@Hashval@2
	add	edx, 2147483647				; 7fffffffH
$LN6@Hashval@2:
	mov	ecx, DWORD PTR [esi+60]
	mov	eax, ecx
	and	eax, edx

; 823  : 		if (_Maxidx <= _Num)

	cmp	DWORD PTR [esi+64], eax
	ja	SHORT $LN1@Hashval@2

; 824  : 			_Num -= (_Mask >> 1) + 1;

	shr	ecx, 1
	or	edx, -1
	sub	edx, ecx
	add	eax, edx
$LN1@Hashval@2:
	pop	ecx

; 825  : 		return (_Num);
; 826  : 		}

	ret	0
?_Hashval@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hashval
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@VChannel@DRAMsimII@@@std@@QAEPAVChannel@DRAMsimII@@I@Z
_TEXT	SEGMENT
$T333111 = -16						; size = 4
$T333113 = -12						; size = 12
?allocate@?$allocator@VChannel@DRAMsimII@@@std@@QAEPAVChannel@DRAMsimII@@I@Z PROC ; std::allocator<DRAMsimII::Channel>::allocate, COMDAT
; __Count$ = ecx

; 144  : 		{	// allocate array of _Count elements

	sub	esp, 16					; 00000010H

; 145  : 		return (_Allocate(_Count, (pointer)0));

	test	ecx, ecx
	ja	SHORT $LN5@allocate@2
	xor	ecx, ecx
$LN3@allocate@2:
	imul	ecx, 456				; 000001c8H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	add	esp, 16					; 00000010H
	ret	0

; 145  : 		return (_Allocate(_Count, (pointer)0));

$LN5@allocate@2:
	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 456				; 000001c8H
	jae	SHORT $LN3@allocate@2
	lea	eax, DWORD PTR $T333111[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T333113[esp+20]
	mov	DWORD PTR $T333111[esp+20], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T333113[esp+20]
	push	ecx
	mov	DWORD PTR $T333113[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN12@allocate@2:
$LN11@allocate@2:
	int	3
?allocate@?$allocator@VChannel@DRAMsimII@@@std@@QAEPAVChannel@DRAMsimII@@I@Z ENDP ; std::allocator<DRAMsimII::Channel>::allocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?get_allocator@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@2@XZ
_TEXT	SEGMENT
?get_allocator@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax

; 635  : 		return (this->_Alval);
; 636  : 		}

	ret	0
?get_allocator@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::get_allocator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; _this$ = esi

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN6@vector@7
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@7:

; 560  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?end@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
?end@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 544  : 		return (iterator(_Myhead, this));

	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 545  : 		}

	ret	0
?end@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
?begin@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 534  : 		return (iterator(_Nextnode(_Myhead), this));

	mov	edx, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 535  : 		}

	ret	0
?begin@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = eax

; 520  : 		{	// destroy the object

	push	esi
	mov	esi, eax

; 521  : 		_Tidy();

	call	?_Tidy@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Tidy

; 522  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	ret	0
??1?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?get_allocator@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KI@std@@@2@XZ
_TEXT	SEGMENT
?get_allocator@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KI@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax

; 616  : 		return (this->_Alval);
; 617  : 		}

	ret	0
?get_allocator@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KI@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::get_allocator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get_allocator@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@2@XZ
_TEXT	SEGMENT
?get_allocator@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax

; 616  : 		return (this->_Alval);
; 617  : 		}

	ret	0
?get_allocator@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QBE?AV?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::get_allocator
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?get_allocator@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@std@@XZ
_TEXT	SEGMENT
?get_allocator@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax

; 432  : 		return (_List.get_allocator());
; 433  : 		}

	ret	0
?get_allocator@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QBE?AV?$allocator@U?$pair@$$CBII@std@@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::get_allocator
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx

; 2058 : 		return (_Mybase::_Alval);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 2059 : 		}

	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
tv170 = 12						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind, COMDAT
; _this$ = ecx

; 1813 : 
; 1814 :  #if _HAS_ITERATOR_DEBUGGING
; 1815 : 		if (_Count != 0)
; 1816 : 			_DEBUG_POINTER(_Ptr);
; 1817 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1818 : 
; 1819 : 		if (_Count == 0)

	mov	edx, DWORD PTR __Count$[esp-4]
	push	edi
	mov	edi, ecx

; 1820 : 			return (_Off < _Mysize ? _Off : _Mysize);	// null always matches

	mov	eax, DWORD PTR [edi+20]
	test	edx, edx
	jne	SHORT $LN8@rfind
	mov	ecx, DWORD PTR __Off$[esp]
	cmp	ecx, eax
	jae	$LN9@rfind
	mov	eax, ecx
	pop	edi

; 1834 : 		}

	ret	12					; 0000000cH
$LN8@rfind:
	push	ebx
	push	ebp
	push	esi

; 1821 : 		if (_Count <= _Mysize)

	cmp	edx, eax
	ja	SHORT $LN27@rfind

; 1822 : 			{	// room for match, look for it
; 1823 : 			const _Elem *_Uptr = _Myptr() +
; 1824 : 				(_Off < _Mysize - _Count ? _Off : _Mysize - _Count);

	mov	ecx, DWORD PTR __Off$[esp+12]
	sub	eax, edx
	cmp	ecx, eax
	jae	SHORT $LN13@rfind
	mov	eax, ecx
$LN13@rfind:
	mov	ecx, DWORD PTR [edi+24]
	mov	DWORD PTR tv170[esp+12], ecx
	lea	ebx, DWORD PTR [edi+4]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN17@rfind
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN18@rfind
$LN17@rfind:
	mov	ecx, ebx
$LN18@rfind:
	mov	ebp, DWORD PTR __Ptr$[esp+12]
	lea	esi, DWORD PTR [ecx+eax]
	npad	1
$LL6@rfind:

; 1825 : 			for (; ; --_Uptr)
; 1826 : 				if (_Traits::eq(*_Uptr, *_Ptr)
; 1827 : 					&& _Traits::compare(_Uptr, _Ptr, _Count) == 0)

	mov	al, BYTE PTR [ebp]
	cmp	BYTE PTR [esi], al
	jne	SHORT $LN3@rfind
	push	edx
	push	ebp
	push	esi
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN26@rfind
$LN3@rfind:

; 1829 : 				else if (_Uptr == _Myptr())

	mov	ecx, edi
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	esi, eax
	je	SHORT $LN27@rfind
	mov	edx, DWORD PTR __Count$[esp+12]
	dec	esi
	jmp	SHORT $LL6@rfind
$LN26@rfind:

; 1828 : 					return (_Uptr - _Myptr());	// found a match

	cmp	DWORD PTR tv170[esp+12], 16		; 00000010H
	jb	SHORT $LN23@rfind
	mov	ecx, DWORD PTR [ebx]
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	sub	eax, ecx
	pop	edi

; 1834 : 		}

	ret	12					; 0000000cH

; 1828 : 					return (_Uptr - _Myptr());	// found a match

$LN23@rfind:
	mov	eax, esi
	pop	esi
	pop	ebp
	mov	ecx, ebx
	pop	ebx
	sub	eax, ecx
	pop	edi

; 1834 : 		}

	ret	12					; 0000000cH
$LN27@rfind:
	pop	esi
	pop	ebp

; 1830 : 					break;	// at beginning, no more chance for match
; 1831 : 			}
; 1832 : 
; 1833 : 		return (npos);	// no match

	or	eax, -1
	pop	ebx
$LN9@rfind:
	pop	edi

; 1834 : 		}

	ret	12					; 0000000cH
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@XZ PROC ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::~_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>, COMDAT
	ret	0
??1?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@QAE@XZ ENDP ; std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>::~_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??8?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
??8?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator==, COMDAT
; _this$ = edi
; __Right$ = esi

; 291  : 
; 292  :  #if _HAS_ITERATOR_DEBUGGING
; 293  : 			_Compat(_Right);
; 294  :  #else
; 295  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN1@operator@44
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN2@operator@44
$LN1@operator@44:
	call	__invalid_parameter_noinfo
$LN2@operator@44:

; 296  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 297  : 
; 298  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	sete	cl
	mov	al, cl

; 299  : 			}

	ret	0
??8?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator==
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
?end@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 387  : 		return (_List.end());

	mov	edx, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 388  : 		}

	ret	0
?end@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
?begin@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 377  : 		return (_List.begin());

	mov	edx, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 378  : 		}

	ret	0
?begin@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
_TEXT	SEGMENT
??1?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::~_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >, COMDAT
; _this$ = eax

; 365  : 		{	// destroy hash table

	push	esi
	mov	esi, eax

; 366  : 		}

	mov	eax, DWORD PTR [esi+48]
	test	eax, eax
	je	SHORT $LN8@Hash
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@Hash:
	mov	eax, DWORD PTR [esi+36]
	push	eax
	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
	mov	DWORD PTR [esi+56], 0
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esi, 8
	call	?_Tidy@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Tidy
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	ret	0
??1?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::~_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAVChannel@DRAMsimII@@I@Z
_TEXT	SEGMENT
??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAVChannel@DRAMsimII@@I@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator[], COMDAT
; _this$ = esi
; __Pos$ = edi

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	edi, eax
	jb	SHORT $LN1@operator@45
	call	__invalid_parameter_noinfo
$LN1@operator@45:

; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, edi
	imul	eax, 456				; 000001c8H
	add	eax, DWORD PTR [esi+12]

; 786  : 		}

	ret	0
??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAVChannel@DRAMsimII@@I@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\queue
_TEXT	ENDS
;	COMDAT ?empty@?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@QBE_NXZ PROC ; std::queue<std::pair<unsigned int,__int64>,std::deque<std::pair<unsigned int,__int64>,std::allocator<std::pair<unsigned int,__int64> > > >::empty, COMDAT
; _this$ = ecx

; 41   : 		return (c.empty());

	xor	eax, eax
	cmp	DWORD PTR [ecx+28], eax
	sete	al

; 42   : 		}

	ret	0
?empty@?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@QBE_NXZ ENDP ; std::queue<std::pair<unsigned int,__int64>,std::deque<std::pair<unsigned int,__int64>,std::allocator<std::pair<unsigned int,__int64> > > >::empty
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
__Off$ = 12						; size = 4
?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of, COMDAT
; _this$ = ecx

; 1919 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));

	mov	eax, DWORD PTR __Off$[esp-4]
	push	1
	push	eax
	lea	edx, DWORD PTR __Ch$[esp+4]
	push	edx
	call	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind

; 1920 : 		}

	ret	8
?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR [esi+48]
	test	eax, eax
	je	SHORT $LN10@unordered_
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@unordered_:
	mov	eax, DWORD PTR [esi+36]
	push	eax
	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
	mov	DWORD PTR [esi+56], 0
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esi, 8
	call	?_Tidy@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Tidy
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	ret	0
??1?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
_TEXT	ENDS
PUBLIC	?checkStats@System@DRAMsimII@@IAEXXZ		; DRAMsimII::System::checkStats
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
?checkStats@System@DRAMsimII@@IAEXXZ PROC		; DRAMsimII::System::checkStats
; _this$ = esi

; 203  : 	if (time >= nextStats)

	mov	eax, DWORD PTR [esi+11548]
	cmp	eax, DWORD PTR [esi+11556]
	jl	SHORT $LN8@checkStats
	jg	SHORT $LN10@checkStats
	mov	ecx, DWORD PTR [esi+11544]
	cmp	ecx, DWORD PTR [esi+11552]
	jb	SHORT $LN8@checkStats
$LN10@checkStats:

; 204  : 	{		
; 205  : 		DEBUG_TIMING_LOG("aggregate stats");
; 206  : 		doPowerCalculation();

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	mov	ecx, esi
	call	eax

; 207  : 
; 208  : 		printStatistics();

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
$LN8@checkStats:

; 209  : 	}
; 210  : 
; 211  : 	while (time >= nextStats)

	mov	ecx, DWORD PTR [esi+11548]
	cmp	ecx, DWORD PTR [esi+11556]
	jl	SHORT $LN12@checkStats
	jg	SHORT $LN11@checkStats
	mov	edx, DWORD PTR [esi+11544]
	cmp	edx, DWORD PTR [esi+11552]
	jb	SHORT $LN12@checkStats
$LN11@checkStats:
	mov	eax, DWORD PTR [esi+388]
	xor	ecx, ecx
	npad	11
$LL2@checkStats:

; 212  : 		nextStats += systemConfig.getEpoch();

	add	DWORD PTR [esi+11552], eax
	adc	DWORD PTR [esi+11556], ecx
	mov	edx, DWORD PTR [esi+11548]
	cmp	edx, DWORD PTR [esi+11556]
	jg	SHORT $LL2@checkStats

; 209  : 	}
; 210  : 
; 211  : 	while (time >= nextStats)

	jl	SHORT $LN12@checkStats
	mov	edx, DWORD PTR [esi+11544]
	cmp	edx, DWORD PTR [esi+11552]
	jae	SHORT $LL2@checkStats
$LN12@checkStats:

; 213  : }

	ret	0
?checkStats@System@DRAMsimII@@IAEXXZ ENDP		; DRAMsimII::System::checkStats
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\channel.h
_TEXT	ENDS
;	COMDAT ?pendingTransactionCount@Channel@DRAMsimII@@QBEIXZ
_TEXT	SEGMENT
?pendingTransactionCount@Channel@DRAMsimII@@QBEIXZ PROC	; DRAMsimII::Channel::pendingTransactionCount, COMDAT
; _this$ = eax

; 105  : 		unsigned pendingTransactionCount() const { return finishedTransactions.size(); }

	mov	eax, DWORD PTR [eax+452]
	ret	0
?pendingTransactionCount@Channel@DRAMsimII@@QBEIXZ ENDP	; DRAMsimII::Channel::pendingTransactionCount
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?isFull@Channel@DRAMsimII@@QBE_NXZ
_TEXT	SEGMENT
?isFull@Channel@DRAMsimII@@QBE_NXZ PROC			; DRAMsimII::Channel::isFull, COMDAT
; _this$ = eax

; 100  : 		bool isFull() const { return transactionQueue.isFull(); }	///< determines whether there is room for more transactions

	mov	ecx, DWORD PTR [eax+140]
	sub	ecx, DWORD PTR [eax+136]
	xor	edx, edx
	sar	ecx, 2
	cmp	ecx, DWORD PTR [eax+112]
	sete	dl
	mov	al, dl
	ret	0
?isFull@Channel@DRAMsimII@@QBE_NXZ ENDP			; DRAMsimII::Channel::isFull
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; __Last$ = edx
; __Dest$ = eax

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	mov	ecx, DWORD PTR __First$[esp-4]

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@2
	push	esi
	npad	7
$LL6@Uninit_cop@2:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@2
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_cop@2:
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@2
	pop	esi
$LN4@Uninit_cop@2:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z
_TEXT	SEGMENT
$T374687 = -4						; size = 1
__Cat$374691 = 8					; size = 1
__Last$ = 8						; size = 4
__Dest$ = 12						; size = 4
??$unchecked_uninitialized_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; __First$ = edx

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$374691[esp]
	mov	BYTE PTR $T374687[esp+4], 0
	mov	eax, DWORD PTR $T374687[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	call	??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 823  : 	}

	add	esp, 16					; 00000010H
	ret	0
??$unchecked_uninitialized_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Uninit_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T374745 = -4						; size = 1
__Last$ = 8						; size = 4
__Cat$374748 = 12					; size = 1
__Dest$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Uninit_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>,std::_Undefined_move_tag>, COMDAT
; __First$ = edx

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$374748[esp]
	mov	BYTE PTR $T374745[esp+4], 0
	mov	eax, DWORD PTR $T374745[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	call	??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 208  : 	}

	add	esp, 16					; 00000010H
	ret	0
??$_Uninit_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@U_Undefined_move_tag@5@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Unchecked_uninitialized_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z
_TEXT	SEGMENT
$T374842 = -4						; size = 1
__Last$ = 8						; size = 4
__Cat$374846 = 12					; size = 1
__Dest$ = 12						; size = 4
??$_Unchecked_uninitialized_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; __First$ = edx

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$374846[esp]
	mov	BYTE PTR $T374842[esp+4], 0
	mov	eax, DWORD PTR $T374842[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	call	??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 865  : 	}

	add	esp, 16					; 00000010H
	ret	0
??$_Unchecked_uninitialized_move@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU234@00@Z
_TEXT	SEGMENT
$T374978 = -4						; size = 1
__Last$ = 8						; size = 4
__Cat$374982 = 12					; size = 1
__Ptr$ = 12						; size = 4
??$_Umove@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU234@00@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Umove<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>, COMDAT
; __First$ = edx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	ecx, DWORD PTR __Cat$374982[esp]
	mov	BYTE PTR $T374978[esp+4], 0
	mov	eax, DWORD PTR $T374978[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	ecx
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	call	??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 1149 : 		}

	add	esp, 16					; 00000010H
	ret	8
??$_Umove@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU234@00@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Umove<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@2
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_@2:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<0>::_Const_iterator<0>, COMDAT
; _this$ = eax
; __Pnode$ = ecx

; 177  : 			_SCL_SECURE_TRAITS_VALIDATE(_Plist != NULL);
; 178  : 			this->_Set_container(_Plist);

	mov	edx, DWORD PTR __Plist$[esp-4]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 179  : 			}

	ret	4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<0>::_Const_iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+=, COMDAT
; _this$ = esi

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN20@operator@155
	call	__invalid_parameter_noinfo

; 161  : 		_SCL_SECURE_VALIDATE_RANGE(

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN10@operator@155
$LN20@operator@155:
	mov	edx, DWORD PTR [eax]
	jmp	SHORT $LN11@operator@155
$LN10@operator@155:
	xor	edx, edx
$LN11@operator@155:
	mov	ecx, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR __Off$[esp]
	add	edi, edi
	add	edi, edi
	add	edi, edi
	add	ecx, edi
	cmp	ecx, DWORD PTR [edx+16]
	ja	SHORT $LN1@operator@155
	test	eax, eax
	je	SHORT $LN16@operator@155
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN17@operator@155
$LN16@operator@155:
	xor	eax, eax
$LN17@operator@155:
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN21@operator@155
$LN1@operator@155:

; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);

	call	__invalid_parameter_noinfo
$LN21@operator@155:

; 164  : 		_Myptr += _Off;

	add	DWORD PTR [esi+4], edi

; 165  : 		return (*this);

	mov	eax, esi
	pop	edi

; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = esi

; 47   : 		{	// construct allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@List_nod
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 48   : 		}

	mov	eax, esi
	ret	4

; 47   : 		{	// construct allocator from _Al

$LN8@List_nod:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 48   : 		}

	mov	eax, esi
	ret	4
??0?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_nod<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode, COMDAT
; __Val$ = esi

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1192 : 		int _Linkcnt = 0;
; 1193 : 
; 1194 : 		_TRY_BEGIN
; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	test	eax, eax
	je	SHORT $LN27@Buynode@13
	mov	ecx, DWORD PTR __Next$[esp-4]
	mov	DWORD PTR [eax], ecx
$LN27@Buynode@13:

; 1196 : 		++_Linkcnt;
; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN37@Buynode@13
	mov	edx, DWORD PTR __Prev$[esp-4]
	mov	DWORD PTR [ecx], edx
$LN37@Buynode@13:

; 1198 : 		++_Linkcnt;
; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	lea	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN47@Buynode@13
	movq	xmm0, QWORD PTR [esi]
	movq	QWORD PTR [ecx], xmm0
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx+8], edx
$LN47@Buynode@13:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);
; 1206 : 		_RERAISE;
; 1207 : 		_CATCH_END
; 1208 : 		return (_Pnode);
; 1209 : 		}

	ret	8
?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
__Plist$ = 8						; size = 4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<0>::_Iterator<0>, COMDAT
; _this$ = eax
; __Pnode$ = ecx

; 361  : 			{	// construct with node pointer _Pnode

	mov	edx, DWORD PTR __Plist$[esp-4]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 362  : 			}

	ret	4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<0>::_Iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+=, COMDAT
; _this$ = esi

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN22@operator@156
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN12@operator@156
$LN22@operator@156:
	mov	edx, DWORD PTR [eax]
	jmp	SHORT $LN13@operator@156
$LN12@operator@156:
	xor	edx, edx
$LN13@operator@156:
	mov	ecx, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR __Off$[esp]
	add	edi, edi
	add	edi, edi
	add	edi, edi
	add	ecx, edi
	cmp	ecx, DWORD PTR [edx+16]
	ja	SHORT $LN3@operator@156
	test	eax, eax
	je	SHORT $LN18@operator@156
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN19@operator@156
$LN18@operator@156:
	xor	eax, eax
$LN19@operator@156:
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN23@operator@156
$LN3@operator@156:
	call	__invalid_parameter_noinfo
$LN23@operator@156:
	add	DWORD PTR [esi+4], edi

; 376  : 		return (*this);

	mov	eax, esi
	pop	edi

; 377  : 		}

	ret	4
??Y?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??F?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator--, COMDAT
; _this$ = esi

; 263  : 
; 264  :  #if _HAS_ITERATOR_DEBUGGING
; 265  : 			if (this->_Mycont == 0
; 266  : 				|| _Ptr == 0
; 267  : 				|| (_Ptr = _Prevnode(_Ptr))
; 268  : 					== ((_Myt *)this->_Mycont)->_Myhead)
; 269  : 				{
; 270  : 				_DEBUG_ERROR("list iterator not decrementable");
; 271  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 272  : 				}
; 273  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 274  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN3@operator@157
	call	__invalid_parameter_noinfo
$LN3@operator@157:

; 275  : 			_Ptr = _Prevnode(_Ptr);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 276  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], ecx
	test	eax, eax
	je	SHORT $LN13@operator@157
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@157
$LN13@operator@157:
	xor	eax, eax
$LN14@operator@157:
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN17@operator@157
	call	__invalid_parameter_noinfo
$LN17@operator@157:

; 277  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 278  : 
; 279  : 			return (*this);

	mov	eax, esi

; 280  : 			}

	ret	0
??F?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator--
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@3
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_@3:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Container_base_aux_alloc_real<std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = esi

; 67   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@List_ptr
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 68   : 		}

	mov	eax, esi
	ret	4

; 67   : 		{	// construct base, and allocator from _Al

$LN13@List_ptr:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 68   : 		}

	mov	eax, esi
	ret	4
??0?$_List_ptr@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_ptr<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?_Get_iter@_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABV56@@Z
_TEXT	SEGMENT
?_Get_iter@_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABV56@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::_Get_iter, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi
; __List$ = edi

; 281  : 			// reparent the iterator
; 282  : 			return (_Myiterator(_Mypos._Mynode(), &_List));

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], ecx
	test	edi, edi
	jne	SHORT $LN7@Get_iter
	call	__invalid_parameter_noinfo
$LN7@Get_iter:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
	mov	eax, esi

; 283  : 			}

	ret	0
?_Get_iter@_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABV56@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::_Get_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
__Iter$ = 8						; size = 8
??0_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::_List_position, COMDAT
; _this$ = eax

; 269  : 			{

	mov	ecx, DWORD PTR __Iter$[esp-4]
	test	ecx, ecx
	je	SHORT $LN5@List_posit
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Iter$[esp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 270  : 			}

	ret	8

; 269  : 			{

$LN5@List_posit:
	mov	edx, DWORD PTR __Iter$[esp]
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 270  : 			}

	ret	8
??0_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position::_List_position
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??H?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+, COMDAT
; _this$ = eax

; 380  : 		{	// return this + integer

	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp]
	push	esi

; 381  : 		_Myt _Tmp = *this;

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 382  : 		return (_Tmp += _Off);

	test	esi, esi
	jne	SHORT $LN24@operator@158
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN15@operator@158:
	mov	ecx, DWORD PTR __Off$[esp+8]
	lea	edi, DWORD PTR [edi+ecx*8]
	cmp	edi, DWORD PTR [eax+16]
	ja	SHORT $LN5@operator@158
	test	esi, esi
	je	SHORT $LN20@operator@158
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN21@operator@158
$LN24@operator@158:
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN15@operator@158
$LN20@operator@158:
	xor	eax, eax
$LN21@operator@158:
	cmp	edi, DWORD PTR [eax+12]
	jae	SHORT $LN6@operator@158
$LN5@operator@158:
	call	__invalid_parameter_noinfo
$LN6@operator@158:
	mov	DWORD PTR [ebx+4], edi
	pop	edi
	mov	DWORD PTR [ebx], esi
	pop	esi
	mov	eax, ebx
	pop	ebx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??F?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator--, COMDAT
; _this$ = esi

; 417  : 			--(*(_Mybase_iter *)this);

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN5@operator@159
	call	__invalid_parameter_noinfo
$LN5@operator@159:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], ecx
	test	eax, eax
	je	SHORT $LN15@operator@159
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@operator@159
$LN15@operator@159:
	xor	eax, eax
$LN16@operator@159:
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN19@operator@159
	call	__invalid_parameter_noinfo
$LN19@operator@159:

; 418  : 			return (*this);

	mov	eax, esi

; 419  : 			}

	ret	0
??F?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator--
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z PROC ; std::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT
; _this$ = esi

; 425  : 		{	// construct allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Vector_val@2
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	ret	4

; 425  : 		{	// construct allocator from _Al

$LN8@Vector_val@2:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	ret	4
??0?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ENDP ; std::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Vector_val<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = esi

; 85   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@List_val
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 86   : 		}

	mov	eax, esi
	ret	4

; 85   : 		{	// construct base, and allocator from _Al

$LN18@List_val:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 86   : 		}

	mov	eax, esi
	ret	4
??0?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_List_val<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z$0
__ehfuncinfo$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT

; 441  : 		{	// construct empty list, allocator

	push	-1
	push	__ehhandler$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+16]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN23@list
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN24@list
$LN23@list:
	xor	eax, eax
$LN24@list:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 0

; 442  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_List_val@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABU_List_position@12@@Z
_TEXT	SEGMENT
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABU_List_position@12@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Get_iter_from_vec, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Pos$ = eax

; 312  : 	{

	push	edi

; 313  : 	return (_Pos._Get_iter(_List));

	mov	edi, ecx
	add	edi, 8
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], ecx
	jne	SHORT $LN9@Get_iter_f
	call	__invalid_parameter_noinfo
$LN9@Get_iter_f:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
	mov	eax, esi
	pop	edi

; 314  : 	}

	ret	0
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABU_List_position@12@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Get_iter_from_vec
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<DRAMsimII::Channel> >::_Container_base_aux_alloc_real<std::allocator<DRAMsimII::Channel> >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_@4:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<DRAMsimII::Channel> >::_Container_base_aux_alloc_real<std::allocator<DRAMsimII::Channel> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z$0
__tryblocktable$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z$2
__ehfuncinfo$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Newroot$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Rootnode$ = 8						; size = 4
__Wherenode$ = 12					; size = 4
?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy, COMDAT
; _this$ = ecx

; 1075 : 		{	// copy entire subtree, recursively

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, ecx
	mov	DWORD PTR _this$[ebp], ebx

; 1076 : 		_Nodeptr _Newroot = _Myhead;	// point at nil node
; 1077 : 
; 1078 : 		if (!_Isnil(_Rootnode))

	mov	edi, DWORD PTR __Rootnode$[ebp]
	cmp	BYTE PTR [edi+33], 0
	mov	eax, DWORD PTR [ebx+24]
	mov	DWORD PTR __Newroot$[ebp], eax
	jne	SHORT $LN8@Copy

; 1079 : 			{	// copy a node, then any subtrees
; 1080 : 			_Nodeptr _Pnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1081 : 				_Myval(_Rootnode), _Color(_Rootnode));

	movzx	ecx, BYTE PTR [edi+32]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	push	eax
	push	edx
	lea	esi, DWORD PTR [edi+16]
	push	eax
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CB_KI@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Buynode
	mov	esi, eax

; 1082 : 			if (_Isnil(_Newroot))

	mov	eax, DWORD PTR __Newroot$[ebp]
	cmp	BYTE PTR [eax+33], 0
	je	SHORT $LN2@Copy

; 1083 : 				_Newroot = _Pnode;	// memorize new root

	mov	DWORD PTR __Newroot$[ebp], esi
$LN2@Copy:

; 1084 : 
; 1085 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1086 : 			_Left(_Pnode) = _Copy(_Left(_Rootnode), _Pnode);

	mov	ecx, DWORD PTR [edi]
	push	esi
	push	ecx
	mov	ecx, ebx
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy
	mov	DWORD PTR [esi], eax

; 1087 : 			_Right(_Pnode) = _Copy(_Right(_Rootnode), _Pnode);

	mov	edx, DWORD PTR [edi+8]
	push	esi
	push	edx
	mov	ecx, ebx
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy
	mov	DWORD PTR [esi+8], eax
$LN8@Copy:

; 1091 : 			_CATCH_END
; 1092 : 			}
; 1093 : 
; 1094 : 		return (_Newroot);	// return newly constructed tree

	mov	eax, DWORD PTR __Newroot$[ebp]

; 1095 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z$0:

; 1088 : 			_CATCH_ALL
; 1089 : 			_Erase(_Newroot);	// subtree copy failed, bail out

	mov	eax, DWORD PTR __Newroot$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	eax
	call	?_Erase@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Erase

; 1090 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN29@Copy:
$LN28@Copy:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z$0
__tryblocktable$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z$2
__ehfuncinfo$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Newroot$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Rootnode$ = 8						; size = 4
__Wherenode$ = 12					; size = 4
?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy, COMDAT
; _this$ = ecx

; 1075 : 		{	// copy entire subtree, recursively

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, ecx
	mov	DWORD PTR _this$[ebp], ebx

; 1076 : 		_Nodeptr _Newroot = _Myhead;	// point at nil node
; 1077 : 
; 1078 : 		if (!_Isnil(_Rootnode))

	mov	edi, DWORD PTR __Rootnode$[ebp]
	cmp	BYTE PTR [edi+41], 0
	mov	eax, DWORD PTR [ebx+24]
	mov	DWORD PTR __Newroot$[ebp], eax
	jne	SHORT $LN8@Copy@2

; 1079 : 			{	// copy a node, then any subtrees
; 1080 : 			_Nodeptr _Pnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1081 : 				_Myval(_Rootnode), _Color(_Rootnode));

	movzx	ecx, BYTE PTR [edi+40]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	push	eax
	push	edx
	lea	esi, DWORD PTR [edi+16]
	push	eax
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@00ABU?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Buynode
	mov	esi, eax

; 1082 : 			if (_Isnil(_Newroot))

	mov	eax, DWORD PTR __Newroot$[ebp]
	cmp	BYTE PTR [eax+41], 0
	je	SHORT $LN2@Copy@2

; 1083 : 				_Newroot = _Pnode;	// memorize new root

	mov	DWORD PTR __Newroot$[ebp], esi
$LN2@Copy@2:

; 1084 : 
; 1085 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1086 : 			_Left(_Pnode) = _Copy(_Left(_Rootnode), _Pnode);

	mov	ecx, DWORD PTR [edi]
	push	esi
	push	ecx
	mov	ecx, ebx
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy
	mov	DWORD PTR [esi], eax

; 1087 : 			_Right(_Pnode) = _Copy(_Right(_Rootnode), _Pnode);

	mov	edx, DWORD PTR [edi+8]
	push	esi
	push	edx
	mov	ecx, ebx
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy
	mov	DWORD PTR [esi+8], eax
$LN8@Copy@2:

; 1091 : 			_CATCH_END
; 1092 : 			}
; 1093 : 
; 1094 : 		return (_Newroot);	// return newly constructed tree

	mov	eax, DWORD PTR __Newroot$[ebp]

; 1095 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z$0:

; 1088 : 			_CATCH_ALL
; 1089 : 			_Erase(_Newroot);	// subtree copy failed, bail out

	mov	eax, DWORD PTR __Newroot$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	eax
	call	?_Erase@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Erase

; 1090 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN29@Copy@2:
$LN28@Copy@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator++, COMDAT
; _this$ = esi

; 236  : 
; 237  :  #if _HAS_ITERATOR_DEBUGGING
; 238  : 			if (this->_Mycont == 0
; 239  : 				|| _Ptr == 0
; 240  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 241  : 				{
; 242  : 				_DEBUG_ERROR("list iterator not incrementable");
; 243  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 244  : 				}
; 245  :  #else
; 246  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN17@operator@160
	call	__invalid_parameter_noinfo

; 247  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@160
$LN17@operator@160:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@160
$LN11@operator@160:
	xor	eax, eax
$LN12@operator@160:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN1@operator@160
	call	__invalid_parameter_noinfo
$LN1@operator@160:

; 248  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 249  : 
; 250  : 			_Ptr = _Nextnode(_Ptr);

	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+4], eax

; 251  : 			return (*this);

	mov	eax, esi

; 252  : 			}

	ret	0
??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ
_TEXT	SEGMENT
??D?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator*, COMDAT
; _this$ = esi

; 212  : 
; 213  :  #if _HAS_ITERATOR_DEBUGGING
; 214  : 			if (this->_Mycont == 0
; 215  : 				|| _Ptr == 0
; 216  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 217  : 				{
; 218  : 				_DEBUG_ERROR("list iterator not dereferencable");
; 219  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 220  : 				}
; 221  :  #else
; 222  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN17@operator@161
	call	__invalid_parameter_noinfo

; 223  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@161
$LN17@operator@161:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@161
$LN11@operator@161:
	xor	eax, eax
$LN12@operator@161:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN1@operator@161
	call	__invalid_parameter_noinfo
$LN1@operator@161:

; 224  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 225  : 
; 226  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [esi+4]
	add	eax, 8

; 227  : 			}

	ret	0
??D?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator++, COMDAT
; _this$ = esi

; 404  : 			++(*(_Mybase_iter *)this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN19@operator@162
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@162
$LN19@operator@162:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@162
$LN13@operator@162:
	xor	eax, eax
$LN14@operator@162:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN3@operator@162
	call	__invalid_parameter_noinfo
$LN3@operator@162:
	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+4], eax

; 405  : 			return (*this);

	mov	eax, esi

; 406  : 			}

	ret	0
??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ
_TEXT	SEGMENT
??D?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator*, COMDAT
; _this$ = esi

; 394  : 			return ((reference)**(_Mybase_iter *)this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN19@operator@163
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@163
$LN19@operator@163:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@163
$LN13@operator@163:
	xor	eax, eax
$LN14@operator@163:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN3@operator@163
	call	__invalid_parameter_noinfo
$LN3@operator@163:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 8

; 395  : 			}

	ret	0
??D?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEAAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@ABI@Z
_TEXT	SEGMENT
tv700 = -12						; size = 4
__First$ = -8						; size = 8
tv875 = 8						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__Keyval$ = 16						; size = 4
?equal_range@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@ABI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::equal_range, COMDAT

; 682  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	eax, DWORD PTR __Keyval$[esp-4]
	mov	ecx, DWORD PTR [eax]
	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+20]
	push	esi
	push	edi
	push	127773					; 0001f31dH
	push	ecx
	call	_ldiv
	imul	edx, 16807				; 000041a7H
	imul	eax, 2836				; 00000b14H
	add	esp, 8
	sub	edx, eax
	jns	SHORT $LN17@equal_rang@6
	add	edx, 2147483647				; 7fffffffH
$LN17@equal_rang@6:
	mov	eax, DWORD PTR [ebp+60]
	mov	edi, eax
	and	edi, edx
	cmp	DWORD PTR [ebp+64], edi
	ja	SHORT $LN12@equal_rang@6
	shr	eax, 1
	or	edx, -1
	sub	edx, eax
	add	edi, edx
$LN12@equal_rang@6:

; 683  : 		iterator _First, _Where;
; 684  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR [ebp+52]
	sub	eax, DWORD PTR [ebp+48]
	sar	eax, 3
	cmp	edi, eax
	jb	SHORT $LN40@equal_rang@6
	call	__invalid_parameter_noinfo
$LN40@equal_rang@6:
	mov	ecx, DWORD PTR [ebp+48]
	mov	esi, DWORD PTR [ecx+edi*8+4]
	lea	ebx, DWORD PTR [ebp+8]
	mov	DWORD PTR tv700[esp+32], ebx
	test	ebx, ebx
	jne	SHORT $LN53@equal_rang@6
	call	__invalid_parameter_noinfo
$LN53@equal_rang@6:
	mov	ebx, DWORD PTR [ebx]
	inc	edi

; 691  : 					break;
; 692  : 				return (_Pairii(_First, _Where));

	mov	DWORD PTR tv875[esp+28], edi
	npad	6
$LL71@equal_rang@6:
	mov	edx, DWORD PTR [ebp+52]
	sub	edx, DWORD PTR [ebp+48]
	sar	edx, 3
	cmp	edi, edx
	jb	SHORT $LN83@equal_rang@6

; 683  : 		iterator _First, _Where;
; 684  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	call	__invalid_parameter_noinfo
$LN83@equal_rang@6:
	mov	eax, DWORD PTR [ebp+48]
	cmp	DWORD PTR [eax+edi*8+4], esi
	je	$LN7@equal_rang@6

; 685  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	test	ebx, ebx
	jne	SHORT $LN231@equal_rang@6
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN109@equal_rang@6:
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN98@equal_rang@6
	call	__invalid_parameter_noinfo
$LN98@equal_rang@6:
	mov	ecx, DWORD PTR [esi+8]
	mov	edx, DWORD PTR __Keyval$[esp+28]
	cmp	ecx, DWORD PTR [edx]
	je	SHORT $LN226@equal_rang@6

; 683  : 		iterator _First, _Where;
; 684  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	test	ebx, ebx
	jne	SHORT $LN230@equal_rang@6
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN78@equal_rang@6:
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN67@equal_rang@6
	call	__invalid_parameter_noinfo
$LN67@equal_rang@6:
	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LL71@equal_rang@6
$LN231@equal_rang@6:

; 685  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN109@equal_rang@6
$LN230@equal_rang@6:

; 683  : 		iterator _First, _Where;
; 684  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN78@equal_rang@6
$LN226@equal_rang@6:

; 686  : 				{	// found _First, look for end of range
; 687  : 				for (_First = _Where; _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	DWORD PTR __First$[esp+36], esi
$LL126@equal_rang@6:
	mov	eax, DWORD PTR [ebp+52]
	sub	eax, DWORD PTR [ebp+48]
	sar	eax, 3
	cmp	edi, eax
	jb	SHORT $LN138@equal_rang@6
	call	__invalid_parameter_noinfo
$LN138@equal_rang@6:
	mov	ecx, DWORD PTR [ebp+48]
	mov	edx, DWORD PTR tv875[esp+28]
	cmp	DWORD PTR [ecx+edx*8+4], esi
	je	SHORT $LN227@equal_rang@6

; 688  : 					if (this->comp(_Keyval, this->_Kfn(*_Where)))

	test	ebx, ebx
	jne	SHORT $LN229@equal_rang@6
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN164@equal_rang@6:
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN153@equal_rang@6
	call	__invalid_parameter_noinfo
$LN153@equal_rang@6:
	mov	eax, DWORD PTR __Keyval$[esp+28]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [esi+8]
	jne	SHORT $LN227@equal_rang@6

; 686  : 				{	// found _First, look for end of range
; 687  : 				for (_First = _Where; _Vec[_Bucket + 1] != _Where; ++_Where)

	test	ebx, ebx
	jne	SHORT $LN228@equal_rang@6
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN133@equal_rang@6:
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN122@equal_rang@6
	call	__invalid_parameter_noinfo
$LN122@equal_rang@6:
	mov	esi, DWORD PTR [esi]
	mov	edi, DWORD PTR tv875[esp+28]
	jmp	SHORT $LL126@equal_rang@6
$LN229@equal_rang@6:

; 688  : 					if (this->comp(_Keyval, this->_Kfn(*_Where)))

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN164@equal_rang@6
$LN228@equal_rang@6:

; 686  : 				{	// found _First, look for end of range
; 687  : 				for (_First = _Where; _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN133@equal_rang@6
$LN227@equal_rang@6:

; 689  : 						break;
; 690  : 				if (_First == _Where)

	test	ebx, ebx
	je	SHORT $LN175@equal_rang@6
	cmp	ebx, ebx
	je	SHORT $LN176@equal_rang@6
$LN175@equal_rang@6:
	call	__invalid_parameter_noinfo
$LN176@equal_rang@6:
	mov	ecx, DWORD PTR __First$[esp+36]
	cmp	ecx, esi
	je	SHORT $LN7@equal_rang@6

; 691  : 					break;
; 692  : 				return (_Pairii(_First, _Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+28]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], esi

; 695  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
$LN7@equal_rang@6:

; 693  : 				}
; 694  : 		return (_Pairii(end(), end()));

	mov	esi, DWORD PTR tv700[esp+32]
	mov	eax, DWORD PTR [esi+20]
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+28]
	mov	ecx, DWORD PTR [esi]
	mov	edx, eax
	mov	esi, ecx
	mov	DWORD PTR [edi+12], eax
	mov	DWORD PTR [edi], esi
	mov	DWORD PTR [edi+4], edx
	mov	DWORD PTR [edi+8], ecx
	mov	eax, edi

; 695  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
?equal_range@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@ABI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z
_TEXT	SEGMENT
$T377625 = -16						; size = 4
$T377392 = -16						; size = 8
__Where$ = -8						; size = 8
tv540 = 8						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__Keyval$ = 16						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::lower_bound, COMDAT

; 638  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	eax, DWORD PTR __Keyval$[esp-4]
	mov	ecx, DWORD PTR [eax]
	sub	esp, 16					; 00000010H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+16]
	push	ebp
	push	esi
	push	edi
	push	127773					; 0001f31dH
	push	ecx
	call	_ldiv
	imul	edx, 16807				; 000041a7H
	imul	eax, 2836				; 00000b14H
	add	esp, 8
	sub	edx, eax
	jns	SHORT $LN14@lower_boun@2
	add	edx, 2147483647				; 7fffffffH
$LN14@lower_boun@2:
	mov	eax, DWORD PTR [ebx+60]
	mov	esi, eax
	and	esi, edx
	cmp	DWORD PTR [ebx+64], esi
	ja	SHORT $LN9@lower_boun@2
	shr	eax, 1
	or	edx, -1
	sub	edx, eax
	add	esi, edx
$LN9@lower_boun@2:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR [ebx+52]
	sub	eax, DWORD PTR [ebx+48]
	sar	eax, 3
	cmp	esi, eax
	jb	SHORT $LN27@lower_boun@2
	call	__invalid_parameter_noinfo
$LN27@lower_boun@2:
	mov	ecx, DWORD PTR [ebx+48]
	mov	edi, DWORD PTR [ecx+esi*8+4]
	lea	ebp, DWORD PTR [ebx+8]
	mov	DWORD PTR tv540[esp+28], ebp
	test	ebp, ebp
	jne	SHORT $LN40@lower_boun@2
	call	__invalid_parameter_noinfo
$LN40@lower_boun@2:
	mov	ebp, DWORD PTR [ebp]
	inc	esi
	mov	DWORD PTR __Where$[esp+32], ebp
	mov	DWORD PTR __Where$[esp+36], edi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	mov	DWORD PTR $T377625[esp+32], esi
$LL58@lower_boun@2:
	mov	edx, DWORD PTR [ebx+52]
	sub	edx, DWORD PTR [ebx+48]
	sar	edx, 3
	cmp	esi, edx
	jb	SHORT $LN70@lower_boun@2

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	call	__invalid_parameter_noinfo
$LN70@lower_boun@2:
	mov	eax, DWORD PTR [ebx+48]
	cmp	DWORD PTR [eax+esi*8+4], edi
	je	$LN2@lower_boun@2

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	test	ebp, ebp
	jne	SHORT $LN171@lower_boun@2
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN96@lower_boun@2:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN85@lower_boun@2
	call	__invalid_parameter_noinfo
$LN85@lower_boun@2:
	mov	ecx, DWORD PTR [edi+8]
	mov	esi, DWORD PTR __Keyval$[esp+28]
	cmp	ecx, DWORD PTR [esi]
	je	SHORT $LN168@lower_boun@2

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	test	ebp, ebp
	jne	SHORT $LN170@lower_boun@2
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN65@lower_boun@2:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN54@lower_boun@2
	call	__invalid_parameter_noinfo
$LN54@lower_boun@2:
	mov	edi, DWORD PTR [edi]
	mov	esi, DWORD PTR $T377625[esp+32]
	jmp	SHORT $LL58@lower_boun@2
$LN171@lower_boun@2:

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN96@lower_boun@2
$LN170@lower_boun@2:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN65@lower_boun@2
$LN168@lower_boun@2:
	mov	DWORD PTR __Where$[esp+36], edi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	test	ebp, ebp
	jne	SHORT $LN169@lower_boun@2
	call	__invalid_parameter_noinfo
$LN120@lower_boun@2:
	cmp	edi, DWORD PTR [ebp+20]
	jne	SHORT $LN109@lower_boun@2
	call	__invalid_parameter_noinfo
$LN109@lower_boun@2:
	mov	edx, DWORD PTR [esi]
	cmp	edx, DWORD PTR [edi+8]
	je	SHORT $LN7@lower_boun@2
	mov	eax, DWORD PTR tv540[esp+28]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+28]
	mov	DWORD PTR $T377392[esp+36], ecx
	lea	ecx, DWORD PTR $T377392[esp+32]
	mov	DWORD PTR $T377392[esp+32], edx
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 645  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
$LN169@lower_boun@2:

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	mov	ebp, DWORD PTR [ebp]
	jmp	SHORT $LN120@lower_boun@2
$LN7@lower_boun@2:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+28]
	lea	ecx, DWORD PTR __Where$[esp+32]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 645  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
$LN2@lower_boun@2:

; 644  : 		return (end());

	mov	ecx, DWORD PTR tv540[esp+28]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+28]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[esp+36], edi

; 645  : 		}

	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx
	pop	ebx
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
?lower_bound@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::lower_bound
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >, COMDAT
; _this$ = edi
; __Pvector$ = esi

; 327  : 		{	// construct with pointer _Ptr

	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp]
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN3@Vector_ite@10
	cmp	DWORD PTR [esi+12], ebx
	ja	SHORT $LN3@Vector_ite@10
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN4@Vector_ite@10
$LN3@Vector_ite@10:
	call	__invalid_parameter_noinfo
$LN4@Vector_ite@10:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx

; 328  : 		}

	mov	eax, edi
	pop	ebx
	ret	4
??0?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z PROC ; std::_Vector_val<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_val<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >, COMDAT
; _this$ = esi

; 425  : 		{	// construct allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Vector_val@3
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	ret	4

; 425  : 		{	// construct allocator from _Al

$LN8@Vector_val@3:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	ret	4
??0?$_Vector_val@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE@V?$allocator@VChannel@DRAMsimII@@@1@@Z ENDP ; std::_Vector_val<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_val<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEXABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEXABV12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy, COMDAT
; _this$ = eax

; 1062 : 		{	// copy entire tree from _Right

	push	ebx
	mov	ebx, DWORD PTR __Right$[esp]
	push	esi
	mov	esi, eax

; 1063 : 		_Root() = _Copy(_Right._Root(), _Myhead);

	mov	eax, DWORD PTR [ebx+24]
	push	edi
	mov	edi, DWORD PTR [esi+24]
	add	eax, 4
	mov	eax, DWORD PTR [eax]
	push	edi
	push	eax
	mov	ecx, esi
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy
	mov	DWORD PTR [edi+4], eax

; 1064 : 		_Mysize = _Right.size();

	mov	ecx, DWORD PTR [ebx+28]

; 1065 : 		if (!_Isnil(_Root()))

	mov	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], ecx
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+33], 0
	jne	SHORT $LN2@Copy@3

; 1066 : 			{	// nonempty tree, look for new smallest and largest
; 1067 : 			_Lmost() = _Min(_Root());

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+33], 0
	jne	SHORT $LN25@Copy@3
	npad	6
$LL26@Copy@3:
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+33], 0
	je	SHORT $LL26@Copy@3
$LN25@Copy@3:
	mov	DWORD PTR [edx], eax

; 1068 : 			_Rmost() = _Max(_Root());

	mov	esi, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+33], 0
	jne	SHORT $LN43@Copy@3
	npad	5
$LL44@Copy@3:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+33], 0
	je	SHORT $LL44@Copy@3
$LN43@Copy@3:
	pop	edi
	mov	DWORD PTR [esi+8], ecx
	pop	esi
	pop	ebx

; 1072 : 		}

	ret	4
$LN2@Copy@3:

; 1069 : 			}
; 1070 : 		else
; 1071 : 			_Lmost() = _Myhead, _Rmost() = _Myhead;	// empty tree

	mov	DWORD PTR [edx], edx
	mov	esi, DWORD PTR [esi+24]
	pop	edi
	mov	DWORD PTR [esi+8], esi
	pop	esi
	pop	ebx

; 1072 : 		}

	ret	4
?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEXABV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEXABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEXABV12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy, COMDAT
; _this$ = eax

; 1062 : 		{	// copy entire tree from _Right

	push	ebx
	mov	ebx, DWORD PTR __Right$[esp]
	push	esi
	mov	esi, eax

; 1063 : 		_Root() = _Copy(_Right._Root(), _Myhead);

	mov	eax, DWORD PTR [ebx+24]
	push	edi
	mov	edi, DWORD PTR [esi+24]
	add	eax, 4
	mov	eax, DWORD PTR [eax]
	push	edi
	push	eax
	mov	ecx, esi
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy
	mov	DWORD PTR [edi+4], eax

; 1064 : 		_Mysize = _Right.size();

	mov	ecx, DWORD PTR [ebx+28]

; 1065 : 		if (!_Isnil(_Root()))

	mov	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], ecx
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+41], 0
	jne	SHORT $LN2@Copy@4

; 1066 : 			{	// nonempty tree, look for new smallest and largest
; 1067 : 			_Lmost() = _Min(_Root());

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+41], 0
	jne	SHORT $LN25@Copy@4
	npad	6
$LL26@Copy@4:
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+41], 0
	je	SHORT $LL26@Copy@4
$LN25@Copy@4:
	mov	DWORD PTR [edx], eax

; 1068 : 			_Rmost() = _Max(_Root());

	mov	esi, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+41], 0
	jne	SHORT $LN43@Copy@4
	npad	5
$LL44@Copy@4:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+41], 0
	je	SHORT $LL44@Copy@4
$LN43@Copy@4:
	pop	edi
	mov	DWORD PTR [esi+8], ecx
	pop	esi
	pop	ebx

; 1072 : 		}

	ret	4
$LN2@Copy@4:

; 1069 : 			}
; 1070 : 		else
; 1071 : 			_Lmost() = _Myhead, _Rmost() = _Myhead;	// empty tree

	mov	DWORD PTR [edx], edx
	mov	esi, DWORD PTR [esi+24]
	pop	edi
	mov	DWORD PTR [esi+8], esi
	pop	esi
	pop	ebx

; 1072 : 		}

	ret	4
?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEXABV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ
_TEXT	SEGMENT
?end@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ PROC ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::end, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 655  : 		{	// return iterator for end of nonmutable sequence

	push	ebx

; 656  : 		return (const_iterator(_Mylast, this));

	mov	ebx, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], 0
	cmp	DWORD PTR [edi+12], ebx
	jbe	SHORT $LN4@end@28
	call	__invalid_parameter_noinfo
$LN4@end@28:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 657  : 		}

	ret	0
?end@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ ENDP ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ
_TEXT	SEGMENT
?begin@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ PROC ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::begin, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 645  : 		{	// return iterator for beginning of nonmutable sequence

	push	ebx

; 646  : 		return (const_iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [edi+12]
	mov	DWORD PTR [esi], 0
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN4@begin@31
	call	__invalid_parameter_noinfo
$LN4@begin@31:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 647  : 		}

	ret	0
?begin@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@XZ ENDP ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??9?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
??9?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = edi
; __Right$ = esi

; 303  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@operator@164
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN4@operator@164
$LN3@operator@164:
	call	__invalid_parameter_noinfo
$LN4@operator@164:
	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	setne	cl
	mov	al, cl

; 304  : 			}

	ret	0
??9?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator++, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = edi

; 256  : 			_Myt_iter _Tmp = *this;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ecx

; 257  : 			++*this;

	test	eax, eax
	jne	SHORT $LN19@operator@165
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@165
$LN19@operator@165:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@165
$LN13@operator@165:
	xor	eax, eax
$LN14@operator@165:
	mov	edx, DWORD PTR [esi+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN3@operator@165
	call	__invalid_parameter_noinfo
$LN3@operator@165:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], ecx

; 258  : 			return (_Tmp);

	mov	eax, edi

; 259  : 			}

	ret	0
??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPBU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ
_TEXT	SEGMENT
??C?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPBU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator->, COMDAT
; _this$ = esi

; 231  : 			return (&**this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN19@operator@166
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@166
$LN19@operator@166:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@166
$LN13@operator@166:
	xor	eax, eax
$LN14@operator@166:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN3@operator@166
	call	__invalid_parameter_noinfo
$LN3@operator@166:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 8

; 232  : 			}

	ret	0
??C?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPBU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator++, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = edi

; 410  : 			_Myt_iter _Tmp = *this;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ecx

; 411  : 			++*this;

	test	eax, eax
	jne	SHORT $LN21@operator@167
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN15@operator@167
$LN21@operator@167:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@operator@167
$LN15@operator@167:
	xor	eax, eax
$LN16@operator@167:
	mov	edx, DWORD PTR [esi+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN5@operator@167
	call	__invalid_parameter_noinfo
$LN5@operator@167:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], ecx

; 412  : 			return (_Tmp);

	mov	eax, edi

; 413  : 			}

	ret	0
??E?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ
_TEXT	SEGMENT
??C?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator->, COMDAT
; _this$ = esi

; 399  : 			return (&**this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN21@operator@168
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN15@operator@168
$LN21@operator@168:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@operator@168
$LN15@operator@168:
	xor	eax, eax
$LN16@operator@168:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN5@operator@168
	call	__invalid_parameter_noinfo
$LN5@operator@168:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 8

; 400  : 			}

	ret	0
??C?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBEPAU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@XZ ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>::operator->
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?find@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z
_TEXT	SEGMENT
?find@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::find, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Keyval$ = eax

; 619  : 		{	// find an element in mutable hash table that matches _Keyval

	push	ecx

; 620  : 		return (lower_bound(_Keyval));

	push	eax
	push	esi
	push	ecx
	call	?lower_bound@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::lower_bound
	mov	eax, esi
	pop	ecx

; 621  : 		}

	ret	0
?find@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::find
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ
_TEXT	SEGMENT
?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::end, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 650  : 		{	// return iterator for end of mutable sequence

	push	ebx

; 651  : 		return (iterator(_Mylast, this));

	mov	ebx, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], 0
	cmp	DWORD PTR [edi+12], ebx
	jbe	SHORT $LN6@end@29
	call	__invalid_parameter_noinfo
$LN6@end@29:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 652  : 		}

	ret	0
?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ
_TEXT	SEGMENT
?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::begin, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 640  : 		{	// return iterator for beginning of mutable sequence

	push	ebx

; 641  : 		return (iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [edi+12]
	mov	DWORD PTR [esi], 0
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN6@begin@32
	call	__invalid_parameter_noinfo
$LN6@begin@32:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 642  : 		}

	ret	0
?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::begin
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.h
_TEXT	ENDS
;	COMDAT ?isFull@System@DRAMsimII@@QBE_NI@Z
_TEXT	SEGMENT
?isFull@System@DRAMsimII@@QBE_NI@Z PROC			; DRAMsimII::System::isFull, COMDAT
; _this$ = edi
; _channelNumber$ = eax

; 82   : 		bool isFull(const unsigned channelNumber) const { return channel[channelNumber].isFull(); } ///< returns true if this channel has no more room

	mov	ecx, DWORD PTR [edi+1188]
	sub	ecx, DWORD PTR [edi+1184]
	push	esi
	mov	esi, eax
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	jb	SHORT $LN3@isFull
	call	__invalid_parameter_noinfo
$LN3@isFull:
	mov	ecx, DWORD PTR [edi+1184]
	imul	esi, 456				; 000001c8H
	mov	edx, DWORD PTR [esi+ecx+140]
	sub	edx, DWORD PTR [esi+ecx+136]
	lea	eax, DWORD PTR [esi+ecx+112]
	sar	edx, 2
	xor	ecx, ecx
	cmp	edx, DWORD PTR [eax]
	pop	esi
	sete	cl
	mov	al, cl
	ret	0
?isFull@System@DRAMsimII@@QBE_NI@Z ENDP			; DRAMsimII::System::isFull
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z
_TEXT	SEGMENT
??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z PROC ; std::_Fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position *,std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Iterator<1> >, COMDAT
; __First$ = eax
; __Last$ = esi
; __Val$ = edi

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	cmp	eax, esi
	je	SHORT $LN1@Fill@8
$LL3@Fill@8:

; 3159 : 		*_First = _Val;

	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [edi+4]
	test	ecx, ecx
	je	SHORT $LN10@Fill@8
	mov	ecx, DWORD PTR [ecx]
	jmp	SHORT $LN11@Fill@8
$LN10@Fill@8:
	xor	ecx, ecx
$LN11@Fill@8:
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	add	eax, 8
	cmp	eax, esi
	jne	SHORT $LL3@Fill@8
$LN1@Fill@8:

; 3160 : 	}

	ret	0
??$_Fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z ENDP ; std::_Fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position *,std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Iterator<1> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance2@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
___formal$ = 24						; size = 1
??$_Distance2@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>, COMDAT
; __Off$ = esi

; 1857 : 	{	// add to _Off distance between bidirectional iterators (redundant)

	mov	ecx, DWORD PTR __First$[esp-4]

; 1858 : 	for (; _First != _Last; ++_First)

$LL12@Distance2@2:
	test	ecx, ecx
	je	SHORT $LN26@Distance2@2
	cmp	ecx, DWORD PTR __Last$[esp-4]
	je	SHORT $LN27@Distance2@2
$LN26@Distance2@2:
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR __First$[esp-4]
$LN27@Distance2@2:
	mov	eax, DWORD PTR __First$[esp]
	cmp	eax, DWORD PTR __Last$[esp]
	je	SHORT $LN1@Distance2@2

; 1859 : 		++_Off;

	inc	DWORD PTR [esi]
	test	ecx, ecx
	jne	SHORT $LN36@Distance2@2
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR __First$[esp-4]
	test	ecx, ecx
	je	SHORT $LN18@Distance2@2
$LN36@Distance2@2:

; 1858 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN19@Distance2@2
$LN18@Distance2@2:
	xor	eax, eax
$LN19@Distance2@2:
	mov	edx, DWORD PTR __First$[esp]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN8@Distance2@2
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR __First$[esp-4]
$LN8@Distance2@2:
	mov	eax, DWORD PTR __First$[esp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __First$[esp], edx
	jmp	SHORT $LL12@Distance2@2
$LN1@Distance2@2:

; 1860 : 	}

	ret	0
??$_Distance2@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$fill@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@2@@std@@YAXV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
??$fill@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@2@@std@@YAXV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z PROC ; std::fill<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >,std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Iterator<1> >, COMDAT
; __Val$ = edi

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	ecx, DWORD PTR __Last$[esp]
	mov	eax, DWORD PTR __First$[esp]
	push	esi
	mov	esi, ecx
	cmp	eax, ecx
	je	SHORT $LN15@fill@8
	npad	1
$LL17@fill@8:
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [edi+4]
	test	ecx, ecx
	je	SHORT $LN24@fill@8
	mov	ecx, DWORD PTR [ecx]
	jmp	SHORT $LN25@fill@8
$LN24@fill@8:
	xor	ecx, ecx
$LN25@fill@8:
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	add	eax, 8
	cmp	eax, esi
	jne	SHORT $LL17@fill@8
$LN15@fill@8:
	pop	esi

; 3188 : 	}

	ret	0
??$fill@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@2@@std@@YAXV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z ENDP ; std::fill<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >,std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Iterator<1> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAI@Z
_TEXT	SEGMENT
$T427011 = -4						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
??$_Distance@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAI@Z PROC ; std::_Distance<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>, COMDAT
; __Off$ = esi

; 1892 : 	{	// add to _Off distance between iterators

	push	ecx

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	eax, DWORD PTR $T427011[esp+4]
	mov	ecx, DWORD PTR __Last$[esp+4]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+8]
	push	edx
	push	eax
	push	ecx
	call	??$_Distance2@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>

; 1894 : 	}

	add	esp, 24					; 00000018H
	ret	0
??$_Distance@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAI@Z ENDP ; std::_Distance<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z
_TEXT	SEGMENT
$T427019 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase, COMDAT
; _this$ = edi

; 786  : 		{	// erase element at _Where

	sub	esp, 8

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	eax, DWORD PTR __Where$[esp+4]
	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+8]
	push	esi
	mov	esi, DWORD PTR __Where$[esp+16]
	mov	DWORD PTR $T427019[esp+16], eax
	test	eax, eax
	jne	SHORT $LN54@erase@9
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+12]
	test	eax, eax
	je	SHORT $LN16@erase@9
$LN54@erase@9:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN17@erase@9
$LN16@erase@9:
	xor	eax, eax
$LN17@erase@9:
	mov	ecx, DWORD PTR __Where$[esp+16]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN6@erase@9
	call	__invalid_parameter_noinfo
$LN6@erase@9:
	mov	edx, DWORD PTR __Where$[esp+16]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Where$[esp+16], eax

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	cmp	esi, DWORD PTR [edi+20]
	je	SHORT $LN1@erase@9

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [ecx], edx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]

; 802  : 			this->_Alnod.destroy(_Pnode);
; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	mov	DWORD PTR [eax+4], ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 804  : 			--_Mysize;

	dec	DWORD PTR [edi+24]
$LN1@erase@9:

; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR __Where$[esp+16]
	mov	DWORD PTR [ebx], eax

; 807  : 		}

	pop	esi
	mov	DWORD PTR [ebx+4], edx
	mov	eax, ebx
	pop	ebx
	add	esp, 8
	ret	12					; 0000000cH
?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 8
?_Make_iter@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Make_iter, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 661  : 		return (iterator(_Where._Myptr, this));

	mov	DWORD PTR [esi], 0
	test	edi, edi
	je	SHORT $LN5@Make_iter@17
	mov	eax, DWORD PTR __Where$[esp]
	cmp	DWORD PTR [edi+12], eax
	ja	SHORT $LN5@Make_iter@17
	cmp	eax, DWORD PTR [edi+16]
	jbe	SHORT $LN6@Make_iter@17
$LN5@Make_iter@17:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp]
$LN6@Make_iter@17:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], ecx
	mov	eax, esi

; 662  : 		}

	ret	8
?_Make_iter@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase, COMDAT
; _this$ = eax

; 562  : 		{	// erase element at _Where

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, eax

; 563  : 		size_type _Bucket = _Hashval(this->_Kfn(*_Where));

	mov	eax, DWORD PTR __Where$[esp+12]
	test	eax, eax
	jne	SHORT $LN119@erase@10
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+12]
	test	eax, eax
	je	SHORT $LN17@erase@10
$LN119@erase@10:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN18@erase@10
$LN17@erase@10:
	xor	eax, eax
$LN18@erase@10:
	mov	ecx, DWORD PTR __Where$[esp+16]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN7@erase@10
	call	__invalid_parameter_noinfo
$LN7@erase@10:
	mov	edx, DWORD PTR __Where$[esp+16]
	mov	eax, DWORD PTR [edx+8]
	push	127773					; 0001f31dH
	push	eax
	call	_ldiv
	imul	edx, 16807				; 000041a7H
	imul	eax, 2836				; 00000b14H
	add	esp, 8
	sub	edx, eax
	jns	SHORT $LN30@erase@10
	add	edx, 2147483647				; 7fffffffH
$LN30@erase@10:
	mov	eax, DWORD PTR [edi+60]
	mov	esi, eax
	and	esi, edx
	cmp	DWORD PTR [edi+64], esi
	ja	SHORT $LL25@erase@10
	shr	eax, 1
	or	ecx, -1
	sub	ecx, eax
	add	esi, ecx
	npad	1
$LL25@erase@10:

; 564  : 		for (; _Vec[_Bucket] == _Where; --_Bucket)

	mov	edx, DWORD PTR [edi+52]
	sub	edx, DWORD PTR [edi+48]
	sar	edx, 3
	cmp	esi, edx
	jb	SHORT $LN33@erase@10
	call	__invalid_parameter_noinfo
$LN33@erase@10:
	mov	eax, DWORD PTR [edi+48]
	mov	ecx, DWORD PTR [eax+esi*8+4]
	cmp	ecx, DWORD PTR __Where$[esp+16]
	jne	SHORT $LN117@erase@10

; 565  : 			{	// update end iterators if erasing first
; 566  : #if _SECURE_SCL && !_HAS_ITERATOR_DEBUGGING
; 567  : 			iterator _Vec_iter = _Get_iter_from_vec(_Vec[_Bucket]);

	mov	edx, DWORD PTR [edi+52]
	sub	edx, eax
	sar	edx, 3
	cmp	esi, edx
	jb	SHORT $LN44@erase@10
	call	__invalid_parameter_noinfo
$LN44@erase@10:
	mov	eax, DWORD PTR [edi+48]
	mov	ebp, DWORD PTR [eax+esi*8+4]
	lea	ebx, DWORD PTR [edi+8]
	test	ebx, ebx
	jne	SHORT $LN57@erase@10
	call	__invalid_parameter_noinfo
$LN57@erase@10:
	mov	ebx, DWORD PTR [ebx]

; 568  : 			++_Vec_iter;

	test	ebx, ebx
	jne	SHORT $LN118@erase@10
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN82@erase@10:
	cmp	ebp, DWORD PTR [eax+20]
	jne	SHORT $LN71@erase@10
	call	__invalid_parameter_noinfo
$LN71@erase@10:
	mov	ebp, DWORD PTR [ebp]

; 569  : 			_Vec[_Bucket] = _Vec_iter;

	test	ebx, ebx
	je	SHORT $LN91@erase@10
	mov	ebx, DWORD PTR [ebx]
	jmp	SHORT $LN92@erase@10
$LN118@erase@10:

; 568  : 			++_Vec_iter;

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN82@erase@10

; 569  : 			_Vec[_Bucket] = _Vec_iter;

$LN91@erase@10:
	xor	ebx, ebx
$LN92@erase@10:
	mov	ecx, DWORD PTR [edi+52]
	sub	ecx, DWORD PTR [edi+48]
	mov	ebx, DWORD PTR [ebx]
	sar	ecx, 3
	cmp	esi, ecx
	jb	SHORT $LN111@erase@10
	call	__invalid_parameter_noinfo
$LN111@erase@10:
	mov	eax, DWORD PTR [edi+48]
	mov	DWORD PTR [eax+esi*8], ebx
	mov	DWORD PTR [eax+esi*8+4], ebp

; 570  : #else
; 571  : 			++_Vec[_Bucket];
; 572  : #endif
; 573  : 			if (_Bucket == 0)

	test	esi, esi
	je	SHORT $LN117@erase@10

; 564  : 		for (; _Vec[_Bucket] == _Where; --_Bucket)

	dec	esi
	jmp	$LL25@erase@10
$LN117@erase@10:

; 574  : 				break;
; 575  : 			}
; 576  : 		return (_List.erase(_Where));

	mov	edx, DWORD PTR __Where$[esp+16]
	mov	eax, DWORD PTR __Where$[esp+12]
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+12]
	push	edx
	push	eax
	push	esi
	add	edi, 8
	call	?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase

; 577  : 		}

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	ret	12					; 0000000cH
?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++, COMDAT
; _this$ = esi

; 349  : 		++(*(_Mybase *)this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN15@operator@299
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@299
$LN15@operator@299:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@299
$LN11@operator@299:
	xor	eax, eax
$LN12@operator@299:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN16@operator@299
	call	__invalid_parameter_noinfo
$LN16@operator@299:
	add	DWORD PTR [esi+4], 456			; 000001c8H

; 350  : 		return (*this);

	mov	eax, esi

; 351  : 		}

	ret	0
??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEAAVChannel@DRAMsimII@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEAAVChannel@DRAMsimII@@XZ PROC ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator*, COMDAT
; _this$ = esi

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN15@operator@300
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@300
$LN15@operator@300:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@300
$LN11@operator@300:
	xor	eax, eax
$LN12@operator@300:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN16@operator@300
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi+4]

; 340  : 		}

	ret	0
$LN16@operator@300:

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, ecx

; 340  : 		}

	ret	0
??D?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEAAVChannel@DRAMsimII@@XZ ENDP ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
__Al$ = 20						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 625  : #if _HAS_ITERATOR_DEBUGGING
; 626  : 		if (_Right._Myfirstiter == _IGNORE_MYITERLIST)
; 627  : 			{
; 628  : 			this->_Myfirstiter = _IGNORE_MYITERLIST;
; 629  : 			}
; 630  : #endif
; 631  : 		_Tidy();
; 632  : 		assign(_Right, _Roff, _Count);

	mov	edx, DWORD PTR __Right$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Roff$[esp]
	xor	eax, eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR __Count$[esp]
	push	eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 633  : 		}

	mov	eax, esi
	pop	esi
	ret	16					; 00000010H
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = edi

; 355  : 		_Myt _Tmp = *this;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ecx

; 356  : 		++*this;

	test	eax, eax
	jne	SHORT $LN17@operator@301
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@301
$LN17@operator@301:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@301
$LN13@operator@301:
	xor	eax, eax
$LN14@operator@301:
	mov	edx, DWORD PTR [esi+4]
	cmp	edx, DWORD PTR [eax+16]
	jb	SHORT $LN18@operator@301
	call	__invalid_parameter_noinfo
$LN18@operator@301:
	add	DWORD PTR [esi+4], 456			; 000001c8H

; 357  : 		return (_Tmp);

	mov	eax, edi

; 358  : 		}

	ret	0
??E?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ
_TEXT	SEGMENT
??C?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ PROC ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator->, COMDAT
; _this$ = esi

; 344  : 		return (&**this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN17@operator@302
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@302
$LN17@operator@302:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@302
$LN13@operator@302:
	xor	eax, eax
$LN14@operator@302:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN18@operator@302
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi+4]

; 345  : 		}

	ret	0
$LN18@operator@302:

; 344  : 		return (&**this);

	mov	eax, ecx

; 345  : 		}

	ret	0
??C?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPAVChannel@DRAMsimII@@XZ ENDP ; std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ
_TEXT	SEGMENT
??C?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator->, COMDAT
; _this$ = esi

; 111  : 		return (&**this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN15@operator@303
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@303
$LN15@operator@303:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@303
$LN11@operator@303:
	xor	eax, eax
$LN12@operator@303:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN16@operator@303
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi+4]

; 112  : 		}

	ret	0
$LN16@operator@303:

; 111  : 		return (&**this);

	mov	eax, ecx

; 112  : 		}

	ret	0
??C?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator->
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
_TEXT	SEGMENT
$T427884 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT
; _this$ = ecx

; 1998 : 		{	// return [_Off, _Off + _Count) as new string

	push	ecx

; 1999 : 		return (_Myt(*this, _Off, _Count, get_allocator()));

	mov	edx, DWORD PTR __Off$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	xor	eax, eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR $T427884[esp+8], eax
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR __Count$[esp+4]
	push	eax
	push	edx
	push	ecx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi

; 2000 : 		}

	pop	ecx
	ret	12					; 0000000cH
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
_TEXT	ENDS
PUBLIC	?pendingTransactionCount@System@DRAMsimII@@QBEIXZ ; DRAMsimII::System::pendingTransactionCount
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
_count$ = 8						; size = 4
_this$ = 8						; size = 4
?pendingTransactionCount@System@DRAMsimII@@QBEIXZ PROC	; DRAMsimII::System::pendingTransactionCount

; 355  : {

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]
	push	esi
	push	edi

; 356  : 	unsigned count = 0;
; 357  : 	for (vector<Channel>::const_iterator i = channel.begin(); i != channel.end(); i++)

	mov	edi, DWORD PTR [ebp+1184]
	mov	DWORD PTR _count$[esp+12], 0
	cmp	edi, DWORD PTR [ebp+1188]
	jbe	SHORT $LN9@pendingTra
	call	__invalid_parameter_noinfo
$LN9@pendingTra:
	mov	esi, DWORD PTR [ebp+1172]
	npad	7
$LL24@pendingTra:
	mov	ebx, DWORD PTR [ebp+1188]
	cmp	DWORD PTR [ebp+1184], ebx
	jbe	SHORT $LN37@pendingTra
	call	__invalid_parameter_noinfo
$LN37@pendingTra:
	mov	eax, DWORD PTR [ebp+1172]
	test	esi, esi
	je	SHORT $LN50@pendingTra
	cmp	esi, eax
	je	SHORT $LN51@pendingTra
$LN50@pendingTra:
	call	__invalid_parameter_noinfo
$LN51@pendingTra:
	cmp	edi, ebx
	je	SHORT $LN81@pendingTra

; 358  : 		count += i->pendingTransactionCount();

	test	esi, esi
	jne	SHORT $LN80@pendingTra
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN69@pendingTra:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN60@pendingTra
	call	__invalid_parameter_noinfo
$LN60@pendingTra:
	mov	eax, DWORD PTR [edi+452]
	add	DWORD PTR _count$[esp+12], eax
	test	esi, esi
	jne	SHORT $LN79@pendingTra
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN31@pendingTra:

; 356  : 	unsigned count = 0;
; 357  : 	for (vector<Channel>::const_iterator i = channel.begin(); i != channel.end(); i++)

	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN22@pendingTra
	call	__invalid_parameter_noinfo
$LN22@pendingTra:
	add	edi, 456				; 000001c8H
	jmp	SHORT $LL24@pendingTra
$LN80@pendingTra:

; 358  : 		count += i->pendingTransactionCount();

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN69@pendingTra
$LN79@pendingTra:

; 356  : 	unsigned count = 0;
; 357  : 	for (vector<Channel>::const_iterator i = channel.begin(); i != channel.end(); i++)

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN31@pendingTra
$LN81@pendingTra:

; 359  : 	return count;

	mov	eax, DWORD PTR _count$[esp+12]

; 360  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
?pendingTransactionCount@System@DRAMsimII@@QBEIXZ ENDP	; DRAMsimII::System::pendingTransactionCount
_TEXT	ENDS
PUBLIC	?findOldestChannel@System@DRAMsimII@@IBEIXZ	; DRAMsimII::System::findOldestChannel
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_oldestChanID$ = -12					; size = 4
_oldestTime$ = -8					; size = 8
_this$ = 8						; size = 4
?findOldestChannel@System@DRAMsimII@@IBEIXZ PROC	; DRAMsimII::System::findOldestChannel

; 305  : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 306  : 	vector<Channel>::const_iterator currentChan = channel.begin();

	mov	esi, DWORD PTR _this$[esp+20]
	push	edi
	mov	edi, DWORD PTR [esi+1184]
	cmp	edi, DWORD PTR [esi+1188]
	jbe	SHORT $LN10@findOldest
	call	__invalid_parameter_noinfo
$LN10@findOldest:
	mov	esi, DWORD PTR [esi+1172]
	mov	ebx, edi

; 307  : 	tick oldestTime = currentChan->getTime();

	test	esi, esi
	jne	$LN145@findOldest
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN32@findOldest:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN23@findOldest
	call	__invalid_parameter_noinfo
$LN23@findOldest:
	mov	eax, DWORD PTR [edi+12]
	mov	ebp, DWORD PTR [edi+8]
	mov	DWORD PTR _oldestTime$[esp+32], eax

; 308  : 	unsigned oldestChanID = currentChan->getChannelID();

	test	esi, esi
	jne	$LN144@findOldest
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN48@findOldest:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN39@findOldest
	call	__invalid_parameter_noinfo
$LN39@findOldest:
	mov	ecx, DWORD PTR [edi+392]
	mov	DWORD PTR _oldestChanID$[esp+28], ecx
	npad	4

; 309  : 	for (; currentChan != channel.end(); currentChan++)

$LL57@findOldest:
	mov	eax, DWORD PTR _this$[esp+24]
	mov	edi, DWORD PTR [eax+1188]
	cmp	DWORD PTR [eax+1184], edi
	jbe	SHORT $LN70@findOldest
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR _this$[esp+24]
$LN70@findOldest:
	mov	eax, DWORD PTR [eax+1172]
	test	esi, esi
	je	SHORT $LN83@findOldest
	cmp	esi, eax
	je	SHORT $LN84@findOldest
$LN83@findOldest:
	call	__invalid_parameter_noinfo
$LN84@findOldest:
	cmp	ebx, edi
	je	$LN147@findOldest

; 310  : 	{
; 311  : 		if (currentChan->getTime() < oldestTime)

	test	esi, esi
	jne	$LN143@findOldest
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN102@findOldest:
	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN93@findOldest
	call	__invalid_parameter_noinfo
$LN93@findOldest:
	mov	edx, DWORD PTR [ebx+12]
	cmp	edx, DWORD PTR _oldestTime$[esp+32]
	jg	SHORT $LN3@findOldest
	jl	SHORT $LN146@findOldest
	mov	eax, DWORD PTR [ebx+8]
	cmp	eax, ebp
	jae	SHORT $LN3@findOldest
$LN146@findOldest:

; 312  : 		{
; 313  : 			oldestChanID = currentChan->getChannelID();

	test	esi, esi
	jne	SHORT $LN142@findOldest
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN118@findOldest:
	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN109@findOldest
	call	__invalid_parameter_noinfo
$LN109@findOldest:
	mov	ecx, DWORD PTR [ebx+392]
	mov	DWORD PTR _oldestChanID$[esp+28], ecx

; 314  : 			oldestTime = currentChan->getTime();

	test	esi, esi
	jne	SHORT $LN141@findOldest
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN134@findOldest:
	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN125@findOldest
	call	__invalid_parameter_noinfo
$LN125@findOldest:
	mov	edx, DWORD PTR [ebx+12]
	mov	ebp, DWORD PTR [ebx+8]
	mov	DWORD PTR _oldestTime$[esp+32], edx
$LN3@findOldest:

; 309  : 	for (; currentChan != channel.end(); currentChan++)

	test	esi, esi
	jne	SHORT $LN140@findOldest
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN64@findOldest:
	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN55@findOldest
	call	__invalid_parameter_noinfo
$LN55@findOldest:
	add	ebx, 456				; 000001c8H
	jmp	$LL57@findOldest
$LN145@findOldest:

; 307  : 	tick oldestTime = currentChan->getTime();

	mov	eax, DWORD PTR [esi]
	jmp	$LN32@findOldest
$LN144@findOldest:

; 308  : 	unsigned oldestChanID = currentChan->getChannelID();

	mov	eax, DWORD PTR [esi]
	jmp	$LN48@findOldest
$LN143@findOldest:

; 310  : 	{
; 311  : 		if (currentChan->getTime() < oldestTime)

	mov	eax, DWORD PTR [esi]
	jmp	$LN102@findOldest
$LN142@findOldest:

; 312  : 		{
; 313  : 			oldestChanID = currentChan->getChannelID();

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN118@findOldest
$LN141@findOldest:

; 314  : 			oldestTime = currentChan->getTime();

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN134@findOldest
$LN140@findOldest:

; 309  : 	for (; currentChan != channel.end(); currentChan++)

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN64@findOldest
$LN147@findOldest:

; 315  : 		}
; 316  : 	}
; 317  : 
; 318  : 	return oldestChanID;

	mov	eax, DWORD PTR _oldestChanID$[esp+28]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 319  : }

	add	esp, 12					; 0000000cH
	ret	4
?findOldestChannel@System@DRAMsimII@@IBEIXZ ENDP	; DRAMsimII::System::findOldestChannel
_TEXT	ENDS
PUBLIC	?updateSystemTime@System@DRAMsimII@@IAEXXZ	; DRAMsimII::System::updateSystemTime
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_currentChan$ = -8					; size = 8
_this$ = 8						; size = 4
?updateSystemTime@System@DRAMsimII@@IAEXXZ PROC		; DRAMsimII::System::updateSystemTime

; 221  : {

	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+8]
	push	ebp
	push	esi
	push	edi

; 222  : 	vector<Channel>::const_iterator currentChan = channel.begin();

	mov	edi, DWORD PTR [ebx+1184]
	cmp	edi, DWORD PTR [ebx+1188]
	jbe	SHORT $LN12@updateSyst
	call	__invalid_parameter_noinfo
$LN12@updateSyst:
	mov	esi, DWORD PTR [ebx+1172]
	mov	ebp, esi
	mov	DWORD PTR _currentChan$[esp+28], edi

; 223  : 	time = currentChan->getTime();

	test	esi, esi
	jne	$LN130@updateSyst
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN34@updateSyst:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN25@updateSyst
	call	__invalid_parameter_noinfo
$LN25@updateSyst:
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [ebx+11544], eax
	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR [ebx+11548], ecx

; 224  : 	currentChan++;

	test	esi, esi
	jne	$LN129@updateSyst
	call	__invalid_parameter_noinfo
$LN50@updateSyst:
	cmp	edi, DWORD PTR [esi+16]
	jb	SHORT $LN41@updateSyst
	call	__invalid_parameter_noinfo
$LN41@updateSyst:
	lea	esi, DWORD PTR [edi+456]

; 225  : 
; 226  : 	for (;currentChan != channel.end(); currentChan++)

$LL57@updateSyst:
	mov	edi, DWORD PTR [ebx+1188]
	cmp	DWORD PTR [ebx+1184], edi
	jbe	SHORT $LN72@updateSyst
	call	__invalid_parameter_noinfo
$LN72@updateSyst:
	mov	eax, DWORD PTR [ebx+1172]
	test	ebp, ebp
	je	SHORT $LN85@updateSyst
	cmp	ebp, eax
	je	SHORT $LN86@updateSyst
$LN85@updateSyst:
	call	__invalid_parameter_noinfo
$LN86@updateSyst:
	cmp	esi, edi
	je	$LN2@updateSyst

; 227  : 	{
; 228  : 		if (currentChan->getTime() < time)

	test	ebp, ebp
	jne	SHORT $LN128@updateSyst
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN104@updateSyst:
	cmp	esi, DWORD PTR [eax+16]
	jb	SHORT $LN95@updateSyst
	call	__invalid_parameter_noinfo
$LN95@updateSyst:
	mov	edx, DWORD PTR [esi+12]
	cmp	edx, DWORD PTR [ebx+11548]
	jg	SHORT $LN3@updateSyst
	jl	SHORT $LN131@updateSyst
	mov	eax, DWORD PTR [esi+8]
	cmp	eax, DWORD PTR [ebx+11544]
	jae	SHORT $LN3@updateSyst
$LN131@updateSyst:

; 229  : 			time = currentChan->getTime();

	test	ebp, ebp
	jne	SHORT $LN127@updateSyst
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN120@updateSyst:
	cmp	esi, DWORD PTR [eax+16]
	jb	SHORT $LN111@updateSyst
	call	__invalid_parameter_noinfo
$LN111@updateSyst:
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [ebx+11544], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [ebx+11548], edx
$LN3@updateSyst:

; 225  : 
; 226  : 	for (;currentChan != channel.end(); currentChan++)

	test	ebp, ebp
	jne	SHORT $LN126@updateSyst
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN64@updateSyst:
	cmp	esi, DWORD PTR [eax+16]
	jb	SHORT $LN55@updateSyst
	call	__invalid_parameter_noinfo
$LN55@updateSyst:
	add	esi, 456				; 000001c8H
	jmp	$LL57@updateSyst
$LN130@updateSyst:

; 223  : 	time = currentChan->getTime();

	mov	eax, DWORD PTR [esi]
	jmp	$LN34@updateSyst
$LN129@updateSyst:

; 224  : 	currentChan++;

	mov	esi, DWORD PTR [esi]
	jmp	$LN50@updateSyst
$LN128@updateSyst:

; 227  : 	{
; 228  : 		if (currentChan->getTime() < time)

	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN104@updateSyst
$LN127@updateSyst:

; 229  : 			time = currentChan->getTime();

	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN120@updateSyst
$LN126@updateSyst:

; 225  : 
; 226  : 	for (;currentChan != channel.end(); currentChan++)

	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN64@updateSyst
$LN2@updateSyst:

; 230  : 	}
; 231  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	4
?updateSystemTime@System@DRAMsimII@@IAEXXZ ENDP		; DRAMsimII::System::updateSystemTime
; Function compile flags: /Ogtpy
_nextEvent$ = -8					; size = 8
?nextTick@System@DRAMsimII@@UBE_JXZ PROC		; DRAMsimII::System::nextTick
; _this$ = ecx

; 178  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	push	ebx
	mov	ebx, ecx

; 179  : 	tick nextEvent = nextStats;

	mov	eax, DWORD PTR [ebx+11552]
	mov	ecx, DWORD PTR [ebx+11556]
	push	ebp
	push	esi

; 180  : 
; 181  : 	// find the next time to wake from among all the channels
; 182  : 	for (vector<Channel>::const_iterator currentChan = channel.begin(); currentChan != channel.end(); currentChan++)

	mov	esi, DWORD PTR [ebx+1184]
	push	edi
	mov	DWORD PTR _nextEvent$[esp+24], eax
	mov	DWORD PTR _nextEvent$[esp+28], ecx
	cmp	esi, DWORD PTR [ebx+1188]
	jbe	SHORT $LN10@nextTick
	call	__invalid_parameter_noinfo
$LN10@nextTick:
	mov	edi, DWORD PTR [ebx+1172]
	npad	4
$LL25@nextTick:
	mov	ebp, DWORD PTR [ebx+1188]
	cmp	DWORD PTR [ebx+1184], ebp
	jbe	SHORT $LN38@nextTick
	call	__invalid_parameter_noinfo
$LN38@nextTick:
	mov	eax, DWORD PTR [ebx+1172]
	test	edi, edi
	je	SHORT $LN51@nextTick
	cmp	edi, eax
	je	SHORT $LN52@nextTick
$LN51@nextTick:
	call	__invalid_parameter_noinfo
$LN52@nextTick:
	cmp	esi, ebp
	je	SHORT $LN77@nextTick

; 183  : 	{
; 184  : 		tick channelNextWake = currentChan->nextTick();

	test	edi, edi
	jne	SHORT $LN75@nextTick
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN70@nextTick:
	cmp	esi, DWORD PTR [eax+16]
	jb	SHORT $LN61@nextTick
	call	__invalid_parameter_noinfo
$LN61@nextTick:
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, esi
	call	eax

; 185  : 		assert(channelNextWake > currentChan->getTime());
; 186  : 
; 187  : 		if (channelNextWake < nextEvent)

	cmp	edx, DWORD PTR _nextEvent$[esp+28]
	jg	SHORT $LN3@nextTick
	jl	SHORT $LN76@nextTick
	cmp	eax, DWORD PTR _nextEvent$[esp+24]
	jae	SHORT $LN3@nextTick
$LN76@nextTick:

; 188  : 		{
; 189  : 			nextEvent = channelNextWake;

	mov	DWORD PTR _nextEvent$[esp+24], eax
	mov	DWORD PTR _nextEvent$[esp+28], edx
$LN3@nextTick:

; 180  : 
; 181  : 	// find the next time to wake from among all the channels
; 182  : 	for (vector<Channel>::const_iterator currentChan = channel.begin(); currentChan != channel.end(); currentChan++)

	test	edi, edi
	jne	SHORT $LN74@nextTick
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN32@nextTick:
	cmp	esi, DWORD PTR [eax+16]
	jb	SHORT $LN23@nextTick
	call	__invalid_parameter_noinfo
$LN23@nextTick:
	add	esi, 456				; 000001c8H
	jmp	SHORT $LL25@nextTick
$LN75@nextTick:

; 183  : 	{
; 184  : 		tick channelNextWake = currentChan->nextTick();

	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN70@nextTick
$LN74@nextTick:

; 180  : 
; 181  : 	// find the next time to wake from among all the channels
; 182  : 	for (vector<Channel>::const_iterator currentChan = channel.begin(); currentChan != channel.end(); currentChan++)

	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN32@nextTick
$LN77@nextTick:

; 190  : 		}
; 191  : 	}
; 192  : 	assert(nextEvent < TICK_MAX);
; 193  : 	assert(nextEvent > time);
; 194  : 	return nextEvent;

	mov	eax, DWORD PTR _nextEvent$[esp+24]
	mov	edx, DWORD PTR _nextEvent$[esp+28]

; 195  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?nextTick@System@DRAMsimII@@UBE_JXZ ENDP		; DRAMsimII::System::nextTick
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z
_TEXT	SEGMENT
$T466912 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase, COMDAT
; _this$ = eax

; 811  : 		if (_First == begin() && _Last == end())

	mov	ecx, DWORD PTR __First$[esp-4]
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+8]
	push	ebp
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR [esi+20]
	push	edi
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN25@erase@14
	cmp	ecx, eax
	je	SHORT $LN26@erase@14
$LN25@erase@14:
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR __First$[esp+20]
$LN26@erase@14:
	mov	eax, DWORD PTR __First$[esp+24]
	cmp	eax, edi
	jne	SHORT $LL2@erase@14
	mov	ebp, DWORD PTR __Last$[esp+20]
	mov	edi, DWORD PTR [esi+20]
	mov	edx, DWORD PTR [esi]
	test	ebp, ebp
	je	SHORT $LN50@erase@14
	cmp	ebp, edx
	je	SHORT $LN51@erase@14
$LN50@erase@14:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+24]
	mov	ecx, DWORD PTR __First$[esp+20]
$LN51@erase@14:
	cmp	DWORD PTR __Last$[esp+24], edi
	jne	SHORT $LL2@erase@14

; 812  : 			{	// erase all and return fresh iterator
; 813  : 			clear();

	call	?clear@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::clear

; 814  : 			return (end());

	mov	ecx, DWORD PTR [esi+20]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [ebx+4], ecx
	mov	DWORD PTR [ebx], edx

; 820  : 			return (_Make_iter(_Last));

	mov	eax, ebx

; 821  : 			}
; 822  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	20					; 00000014H
$LL2@erase@14:

; 815  : 			}
; 816  : 		else
; 817  : 			{	// erase subrange
; 818  : 			while (_First != _Last)

	test	ecx, ecx
	je	SHORT $LN77@erase@14
	cmp	ecx, DWORD PTR __Last$[esp+20]
	je	SHORT $LN78@erase@14
$LN77@erase@14:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+24]
	mov	ecx, DWORD PTR __First$[esp+20]
$LN78@erase@14:
	mov	edx, DWORD PTR __Last$[esp+24]
	cmp	eax, edx
	je	SHORT $LN1@erase@14

; 819  : 				_First = erase(_First);

	push	eax
	push	ecx
	lea	eax, DWORD PTR $T466912[esp+32]
	push	eax
	mov	edi, esi
	call	?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __First$[esp+20], ecx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR __First$[esp+24], eax
	jmp	SHORT $LL2@erase@14
$LN1@erase@14:

; 820  : 			return (_Make_iter(_Last));

	mov	ecx, DWORD PTR [esi]

; 821  : 			}
; 822  : 		}

	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [ebx+4], edx
	mov	DWORD PTR [ebx], ecx
	mov	eax, ebx
	pop	ebx
	add	esp, 8
	ret	20					; 00000014H
?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?begin@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@XZ
_TEXT	SEGMENT
?begin@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 377  : 		return (_List.begin());

	mov	edx, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 378  : 		}

	ret	0
?begin@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::begin
_TEXT	ENDS
PUBLIC	?isEmpty@System@DRAMsimII@@QBE_NXZ		; DRAMsimII::System::isEmpty
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isEmpty@System@DRAMsimII@@QBE_NXZ PROC			; DRAMsimII::System::isEmpty

; 483  : {

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]
	push	esi
	push	edi

; 484  : 	for (vector<Channel>::const_iterator i = channel.begin(); i != channel.end(); i++)

	mov	edi, DWORD PTR [ebp+1184]
	cmp	edi, DWORD PTR [ebp+1188]
	jbe	SHORT $LN10@isEmpty@3
	call	__invalid_parameter_noinfo
$LN10@isEmpty@3:
	mov	esi, DWORD PTR [ebp+1172]
$LL25@isEmpty@3:
	mov	ebx, DWORD PTR [ebp+1188]
	cmp	DWORD PTR [ebp+1184], ebx
	jbe	SHORT $LN38@isEmpty@3
	call	__invalid_parameter_noinfo
$LN38@isEmpty@3:
	mov	eax, DWORD PTR [ebp+1172]
	test	esi, esi
	je	SHORT $LN51@isEmpty@3
	cmp	esi, eax
	je	SHORT $LN52@isEmpty@3
$LN51@isEmpty@3:
	call	__invalid_parameter_noinfo
$LN52@isEmpty@3:
	cmp	edi, ebx
	je	SHORT $LN2@isEmpty@3

; 485  : 	{
; 486  : 		if (!i->isEmpty())

	test	esi, esi
	jne	SHORT $LN76@isEmpty@3
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN70@isEmpty@3:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN61@isEmpty@3
	call	__invalid_parameter_noinfo
$LN61@isEmpty@3:
	push	edi
	call	?isEmpty@Channel@DRAMsimII@@QBE_NXZ	; DRAMsimII::Channel::isEmpty
	test	al, al
	je	SHORT $LN74@isEmpty@3

; 484  : 	for (vector<Channel>::const_iterator i = channel.begin(); i != channel.end(); i++)

	test	esi, esi
	jne	SHORT $LN75@isEmpty@3
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN32@isEmpty@3:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN23@isEmpty@3
	call	__invalid_parameter_noinfo
$LN23@isEmpty@3:
	add	edi, 456				; 000001c8H
	jmp	SHORT $LL25@isEmpty@3
$LN76@isEmpty@3:

; 485  : 	{
; 486  : 		if (!i->isEmpty())

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN70@isEmpty@3
$LN75@isEmpty@3:

; 484  : 	for (vector<Channel>::const_iterator i = channel.begin(); i != channel.end(); i++)

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN32@isEmpty@3
$LN74@isEmpty@3:
	pop	edi
	pop	esi
	pop	ebp

; 487  : 			return false;

	xor	al, al
	pop	ebx

; 490  : }

	ret	4
$LN2@isEmpty@3:
	pop	edi
	pop	esi
	pop	ebp

; 488  : 	}
; 489  : 	return true;

	mov	al, 1
	pop	ebx

; 490  : }

	ret	4
?isEmpty@System@DRAMsimII@@QBE_NXZ ENDP			; DRAMsimII::System::isEmpty
_TEXT	ENDS
PUBLIC	?moveToTime@System@DRAMsimII@@QAE_N_J@Z		; DRAMsimII::System::moveToTime
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
$T467541 = -20						; size = 16
$T467538 = -20						; size = 16
_endTime$ = 8						; size = 8
?moveToTime@System@DRAMsimII@@QAE_N_J@Z PROC		; DRAMsimII::System::moveToTime
; _this$ = eax

; 275  : {

	sub	esp, 20					; 00000014H

; 276  : 	std::for_each(channel.begin(), channel.end(), boost::bind2nd(boost::mem_fun_ref(&Channel::moveToTime),endTime));

	mov	ecx, DWORD PTR _endTime$[esp+20]
	push	ebx
	push	ebp
	push	esi
	mov	esi, eax
	mov	ebp, DWORD PTR [esi+1188]
	mov	eax, DWORD PTR _endTime$[esp+28]
	push	edi
	mov	DWORD PTR $T467538[esp+36], OFFSET ??_9Channel@DRAMsimII@@$BBI@AE ; DRAMsimII::Channel::`vcall'{24}'
	mov	DWORD PTR $T467538[esp+44], eax
	mov	DWORD PTR $T467538[esp+48], ecx
	cmp	DWORD PTR [esi+1184], ebp
	jbe	SHORT $LN17@moveToTime
	call	__invalid_parameter_noinfo
$LN17@moveToTime:
	mov	edi, DWORD PTR [esi+1184]
	mov	ebx, DWORD PTR [esi+1172]
	cmp	edi, DWORD PTR [esi+1188]
	jbe	SHORT $LN33@moveToTime
	call	__invalid_parameter_noinfo
$LN33@moveToTime:
	mov	ecx, DWORD PTR [esi+1172]
	movq	xmm0, QWORD PTR $T467538[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	push	ebp
	push	ebx
	push	edi
	movq	QWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR $T467538[esp+72]
	push	ecx
	lea	edx, DWORD PTR $T467541[esp+68]
	push	edx
	movq	QWORD PTR [eax+8], xmm0
	call	??$for_each@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@@std@@YA?AV?$binder2nd@V?$mem_fun1_ref_t@XVChannel@DRAMsimII@@_J@boost@@@boost@@V?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0V12@@Z ; std::for_each<std::_Vector_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,boost::binder2nd<boost::mem_fun1_ref_t<void,DRAMsimII::Channel,__int64> > >
	add	esp, 36					; 00000024H

; 277  : 	//#pragma omp parallel for private(i)
; 278  : 	// 	for (i = channel.size() - 1; i >= 0; i--)
; 279  : 	// 	{
; 280  : 	// 		channel[i].moveToTime(endTime);
; 281  : 	// 	}
; 282  : 
; 283  : 	updateSystemTime();

	push	esi
	call	?updateSystemTime@System@DRAMsimII@@IAEXXZ ; DRAMsimII::System::updateSystemTime

; 284  : 
; 285  : 	bool result = true;
; 286  : 
; 287  : 	if (time >= nextStats)

	mov	eax, DWORD PTR [esi+11548]
	cmp	eax, DWORD PTR [esi+11556]
	mov	bl, 1
	jl	SHORT $LN1@moveToTime
	jg	SHORT $LN48@moveToTime
	mov	ecx, DWORD PTR [esi+11544]
	cmp	ecx, DWORD PTR [esi+11552]
	jb	SHORT $LN1@moveToTime
$LN48@moveToTime:

; 288  : 	{
; 289  : 		std::pair<unsigned,unsigned> rwBytes = statistics.getReadWriteBytes();

	mov	eax, DWORD PTR [esi+612]
	mov	ecx, DWORD PTR [esi+616]

; 290  : 		result =  rwBytes.first + rwBytes.second > 0;

	add	ecx, eax
	test	ecx, ecx
	seta	bl
$LN1@moveToTime:

; 291  : 	}
; 292  : 
; 293  : 	checkStats();

	call	?checkStats@System@DRAMsimII@@IAEXXZ	; DRAMsimII::System::checkStats

; 294  : 
; 295  : 	return result;
; 296  : }

	pop	edi
	pop	esi
	pop	ebp
	mov	al, bl
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
?moveToTime@System@DRAMsimII@@QAE_N_J@Z ENDP		; DRAMsimII::System::moveToTime
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z$0
__ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
$T503645 = -80						; size = 28
$T503644 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	push	-1
	push	__ehhandler$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, eax

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	eax, DWORD PTR [ecx+24]
	mov	edx, 357913941				; 15555555H
	sub	edx, eax
	cmp	edx, 1
	jae	SHORT $LN1@Incsize

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	16					; 00000010H
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T503645[esp+92]
	mov	DWORD PTR $T503645[esp+116], 15		; 0000000fH
	mov	DWORD PTR $T503645[esp+112], 0
	mov	BYTE PTR $T503645[esp+96], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T503645[esp+84]
	push	eax
	lea	ecx, DWORD PTR $T503644[esp+88]
	mov	DWORD PTR __$EHRec$[esp+96], 0
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T503644[esp+88]
	push	ecx
	mov	DWORD PTR $T503644[esp+92], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN52@Incsize:
$LN1@Incsize:

; 1242 : 		_Mysize += _Count;

	inc	eax
	mov	DWORD PTR [ecx+24], eax

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 80					; 00000050H
	ret	0
$LN51@Incsize:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T503645[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-68]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Incsize
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ$0
__ehfuncinfo$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T503822 = -80						; size = 28
$T503821 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	18					; 00000012H
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T503822[esp+92]
	mov	DWORD PTR $T503822[esp+116], 15		; 0000000fH
	mov	DWORD PTR $T503822[esp+112], 0
	mov	BYTE PTR $T503822[esp+96], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T503822[esp+84]
	push	eax
	lea	ecx, DWORD PTR $T503821[esp+88]
	mov	DWORD PTR __$EHRec$[esp+96], 0
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T503821[esp+88]
	push	ecx
	mov	DWORD PTR $T503821[esp+92], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN45@Xlen:
$LN44@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T503822[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-68]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Xlen
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Where$ = 12						; size = 8
?_Insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Insert, COMDAT
; __Val$ = edx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();
; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	eax, DWORD PTR __Where$[esp]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	push	edi
	lea	edi, DWORD PTR [eax+4]
	push	ecx
	push	eax
	mov	esi, edx
	call	?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode

; 719  : 		_Incsize(1);

	mov	ecx, DWORD PTR _this$[esp+4]
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi], esi

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	edx, DWORD PTR [esi+4]

; 722  : 		}

	pop	edi
	mov	DWORD PTR [edx], esi
	pop	esi
	ret	12					; 0000000cH
?_Insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Insert
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
?_Buy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE_NI@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Buy, COMDAT
; _this$ = esi
; __Capacity$ = edi

; 1102 : 		{	// allocate array with _Capacity elements

	push	ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 1104 : 		if (_Capacity == 0)
; 1105 : 			return (false);
; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 536870911				; 1fffffffH
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Xlen
$LN18@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	mov	ecx, edi
	call	?allocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocate
	mov	DWORD PTR [esi+12], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+16], eax

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*8]
	mov	DWORD PTR [esi+20], eax

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	ecx

; 1115 : 		}

	ret	0
$LN17@Buy:
?_Buy@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__Where$ = 16						; size = 8
?insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::insert, COMDAT
; __Val$ = edx

; 703  : 		{	// insert _Val at _Where

	push	ecx

; 704  : 		_Insert(_Where, _Val);

	mov	eax, DWORD PTR __Where$[esp+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+8]
	push	esi
	push	edi
	lea	edi, DWORD PTR [eax+4]
	push	ecx
	push	eax
	mov	esi, edx
	call	?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode
	mov	ecx, ebx
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Incsize
	mov	DWORD PTR [edi], esi
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [edx], esi

; 705  : 		return (_Make_iter(--_Where));

	mov	eax, DWORD PTR __Where$[esp+16]
	test	eax, eax
	jne	SHORT $LN17@insert@2
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+16]
$LN17@insert@2:
	mov	ecx, DWORD PTR __Where$[esp+20]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Where$[esp+20], ecx
	test	eax, eax
	je	SHORT $LN27@insert@2
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN28@insert@2
$LN27@insert@2:
	xor	eax, eax
$LN28@insert@2:
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN15@insert@2
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR __Where$[esp+20]
$LN15@insert@2:
	mov	DWORD PTR [ebp], 0
	mov	DWORD PTR [ebp+4], ecx
	test	ebx, ebx
	jne	SHORT $LN35@insert@2
	call	__invalid_parameter_noinfo
$LN35@insert@2:
	mov	edx, DWORD PTR [ebx]

; 706  : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], edx
	mov	eax, ebp
	pop	ebp
	pop	ebx
	pop	ecx
	ret	16					; 00000010H
?insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::insert
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z$0
__ehfuncinfo$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >, COMDAT

; 476  : 		{	// construct empty vector with allocator

	push	-1
	push	__ehhandler$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	push	4
	call	??2@YAPAXI@Z				; operator new
	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN13@vector@36
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN14@vector@36
$LN13@vector@36:
	xor	eax, eax
$LN14@vector@36:
	mov	DWORD PTR [esi], eax

; 477  : 		_Buy(0);

	mov	DWORD PTR [esi+12], ecx
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+20], ecx

; 478  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_Vector_val@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ$0
__ehfuncinfo$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T504359 = -80						; size = 28
$T504358 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	18					; 00000012H
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T504359[esp+92]
	mov	DWORD PTR $T504359[esp+116], 15		; 0000000fH
	mov	DWORD PTR $T504359[esp+112], 0
	mov	BYTE PTR $T504359[esp+96], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T504359[esp+84]
	push	eax
	lea	ecx, DWORD PTR $T504358[esp+88]
	mov	DWORD PTR __$EHRec$[esp+96], 0
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T504358[esp+88]
	push	ecx
	mov	DWORD PTR $T504358[esp+92], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN45@Xlen@2:
$LN44@Xlen@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T504359[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-68]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Xlen
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
?_Buy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE_NI@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Buy, COMDAT
; _this$ = edi
; __Capacity$ = eax

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi
	mov	esi, eax

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	mov	DWORD PTR [edi+12], eax
	mov	DWORD PTR [edi+16], eax
	mov	DWORD PTR [edi+20], eax

; 1104 : 		if (_Capacity == 0)

	cmp	esi, eax
	jne	SHORT $LN4@Buy@2

; 1105 : 			return (false);

	xor	al, al

; 1115 : 		}

	pop	esi
	ret	0
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	esi, 9418787				; 008fb823H
	jbe	SHORT $LN2@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Xlen
$LN14@Buy@2:
$LN2@Buy@2:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	mov	ecx, esi
	call	?allocate@?$allocator@VChannel@DRAMsimII@@@std@@QAEPAVChannel@DRAMsimII@@I@Z ; std::allocator<DRAMsimII::Channel>::allocate

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	imul	esi, 456				; 000001c8H
	add	esi, eax
	mov	DWORD PTR [edi+12], eax
	mov	DWORD PTR [edi+16], eax
	mov	DWORD PTR [edi+20], esi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1

; 1115 : 		}

	pop	esi
	ret	0
$LN13@Buy@2:
?_Buy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Buy
_TEXT	ENDS
PUBLIC	?resetToTime@System@DRAMsimII@@QAEX_J@Z		; DRAMsimII::System::resetToTime
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
_time$ = 8						; size = 8
?resetToTime@System@DRAMsimII@@QAEX_J@Z PROC		; DRAMsimII::System::resetToTime
; _this$ = edi

; 259  : 	nextStats = time + systemConfig.getEpoch();

	mov	eax, DWORD PTR [edi+388]
	xor	ecx, ecx
	add	eax, DWORD PTR _time$[esp-4]
	push	ebx
	adc	ecx, DWORD PTR _time$[esp+4]
	mov	DWORD PTR [edi+11552], eax
	mov	DWORD PTR [edi+11556], ecx

; 260  : 
; 261  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	mov	ebx, DWORD PTR [edi+1184]
	push	ebp
	push	esi
	cmp	ebx, DWORD PTR [edi+1188]
	jbe	SHORT $LN13@resetToTim@4
	call	__invalid_parameter_noinfo
$LN13@resetToTim@4:
	mov	esi, DWORD PTR [edi+1172]
	npad	8
$LL30@resetToTim@4:
	mov	ebp, DWORD PTR [edi+1188]
	cmp	DWORD PTR [edi+1184], ebp
	jbe	SHORT $LN45@resetToTim@4
	call	__invalid_parameter_noinfo
$LN45@resetToTim@4:
	mov	eax, DWORD PTR [edi+1172]
	test	esi, esi
	je	SHORT $LN58@resetToTim@4
	cmp	esi, eax
	je	SHORT $LN59@resetToTim@4
$LN58@resetToTim@4:
	call	__invalid_parameter_noinfo
$LN59@resetToTim@4:
	cmp	ebx, ebp
	je	SHORT $LN1@resetToTim@4

; 262  : 	{
; 263  : 		i->resetToTime(time);

	test	esi, esi
	jne	SHORT $LN84@resetToTim@4
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN79@resetToTim@4:
	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN70@resetToTim@4
	call	__invalid_parameter_noinfo
$LN70@resetToTim@4:
	mov	edx, DWORD PTR _time$[esp+12]
	mov	eax, DWORD PTR _time$[esp+8]
	push	edx
	push	eax
	push	ebx
	call	?resetToTime@Channel@DRAMsimII@@QAEX_J@Z ; DRAMsimII::Channel::resetToTime
	test	esi, esi
	jne	SHORT $LN83@resetToTim@4
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN37@resetToTim@4:

; 260  : 
; 261  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN28@resetToTim@4
	call	__invalid_parameter_noinfo
$LN28@resetToTim@4:
	add	ebx, 456				; 000001c8H
	jmp	SHORT $LL30@resetToTim@4
$LN84@resetToTim@4:

; 262  : 	{
; 263  : 		i->resetToTime(time);

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN79@resetToTim@4
$LN83@resetToTim@4:

; 260  : 
; 261  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN37@resetToTim@4
$LN1@resetToTim@4:

; 264  : 	}
; 265  : }

	pop	esi
	pop	ebp
	pop	ebx
	ret	8
?resetToTime@System@DRAMsimII@@QAEX_J@Z ENDP		; DRAMsimII::System::resetToTime
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$0
__tryblocktable$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
$T580704 = -40						; size = 8
__Before$160208 = -32					; size = 8
__Next$ = -24						; size = 8
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
___formal$ = 12						; size = 1
__Where$ = 16						; size = 8
__First$ = 24						; size = 8
__Last$ = 32						; size = 8
??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Insert<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >, COMDAT

; 762  : 		void _Insert(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _this$[ebp]

; 763  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 764  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		_DEBUG_RANGE(_First, _Last);
; 768  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 769  : 
; 770  : 		_Iter _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR __Next$[ebp], eax
	mov	DWORD PTR __Next$[ebp+4], ecx

; 771  : 
; 772  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 773  : 		for (; _First != _Last; ++_First)

$LL18@Insert@6:
	test	eax, eax
	je	SHORT $LN32@Insert@6
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN33@Insert@6
$LN32@Insert@6:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
$LN33@Insert@6:
	mov	edx, DWORD PTR __First$[ebp+4]
	cmp	edx, DWORD PTR __Last$[ebp+4]
	je	$LN4@Insert@6

; 774  : 			_Insert(_Where, *_First);

	test	eax, eax
	jne	SHORT $LN74@Insert@6
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
	test	eax, eax
	je	SHORT $LN51@Insert@6
$LN74@Insert@6:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN52@Insert@6
$LN51@Insert@6:
	xor	eax, eax
$LN52@Insert@6:
	mov	ecx, DWORD PTR __First$[ebp+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN41@Insert@6
	call	__invalid_parameter_noinfo
$LN41@Insert@6:
	mov	eax, DWORD PTR __Where$[ebp+4]
	mov	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR __First$[ebp+4]
	lea	edi, DWORD PTR [eax+4]
	push	edx
	add	esi, 8
	push	eax
	call	?_Buynode@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Buynode
	mov	ecx, ebx
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Incsize
	mov	DWORD PTR [edi], esi
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], esi
	mov	eax, DWORD PTR __First$[ebp]
	test	eax, eax
	jne	SHORT $LN73@Insert@6
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
	test	eax, eax
	je	SHORT $LN24@Insert@6
$LN73@Insert@6:

; 773  : 		for (; _First != _Last; ++_First)

	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN25@Insert@6
$LN24@Insert@6:
	xor	ecx, ecx
$LN25@Insert@6:
	mov	edx, DWORD PTR __First$[ebp+4]
	cmp	edx, DWORD PTR [ecx+20]
	jne	SHORT $LN14@Insert@6
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
$LN14@Insert@6:
	mov	ecx, DWORD PTR __First$[ebp+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __First$[ebp+4], edx
	jmp	$LL18@Insert@6
__catch$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$0:

; 775  : 		_CATCH_ALL
; 776  : 		for (; _Next != _First; ++_Next)

	lea	esi, DWORD PTR __First$[ebp]
	lea	edi, DWORD PTR __Next$[ebp]
	call	??9?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator!=
	test	al, al
	je	SHORT $LN1@Insert@6
	mov	ebx, DWORD PTR _this$[ebp]
	npad	1
$LL3@Insert@6:

; 777  : 			{	// undo inserts
; 778  : 			const_iterator _Before = _Where;

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+4]

; 779  : 			erase(--_Before);

	lea	esi, DWORD PTR __Before$160208[ebp]
	mov	DWORD PTR __Before$160208[ebp], eax
	mov	DWORD PTR __Before$160208[ebp+4], ecx
	call	??F?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator--
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T580704[ebp]
	push	ecx
	mov	edi, ebx
	call	?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase
	lea	esi, DWORD PTR __Next$[ebp]
	call	??E?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator++
	lea	esi, DWORD PTR __First$[ebp]
	lea	edi, DWORD PTR __Next$[ebp]
	call	??9?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1>::operator!=
	test	al, al
	jne	SHORT $LL3@Insert@6
$LN1@Insert@6:

; 780  : 			}
; 781  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN77@Insert@6:
$LN4@Insert@6:

; 782  : 		_CATCH_END
; 783  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN76@Insert@6:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Insert<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >
; Function compile flags: /Ogtpy
;	COMDAT ??$insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z
_TEXT	SEGMENT
$T580862 = 8						; size = 1
_this$ = 8						; size = 4
__Where$ = 12						; size = 8
__First$ = 20						; size = 8
__Last$ = 28						; size = 8
??$insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::insert<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >, COMDAT

; 731  : 		{	// insert [_First, _Last) at _Where
; 732  : 		_Insert(_Where, _First, _Last, _Iter_cat(_First));

	mov	eax, DWORD PTR __Last$[esp]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp]
	push	ecx
	mov	ecx, DWORD PTR __Where$[esp+8]
	push	edx
	mov	edx, DWORD PTR __Where$[esp+8]
	push	eax
	mov	eax, DWORD PTR $T580862[esp+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[esp+16]
	push	edx
	push	eax
	push	ecx
	call	??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Insert<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >

; 733  : 		}

	ret	28					; 0000001cH
??$insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::insert<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Const_iterator<1> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$0
__catchsym$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$2
__tryblocktable$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$5
__ehfuncinfo$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
__Tmp$155499 = -40					; size = 8
$T581336 = -36						; size = 1
$T580949 = -36						; size = 1
__Tmp$155489 = -32					; size = 8
__Newvec$155474 = -28					; size = 4
__Capacity$ = -24					; size = 4
__$EHRec$ = -16						; size = 16
tv515 = 8						; size = 4
__Cat$581339 = 8					; size = 1
$T581290 = 8						; size = 1
__Cat$581293 = 8					; size = 1
$T581114 = 8						; size = 1
__Cat$581118 = 8					; size = 1
__Cat$580953 = 8					; size = 1
__Val$ = 8						; size = 4
__Where$ = 12						; size = 8
?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Insert_n, COMDAT
; _this$ = edx
; __Count$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	esi, edx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+12]
	test	edx, edx
	jne	SHORT $LN29@Insert_n@4
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@4
$LN29@Insert_n@4:
	mov	eax, DWORD PTR [esi+20]
	sub	eax, edx
	sar	eax, 3
	mov	ecx, eax
$LN30@Insert_n@4:

; 1162 : 
; 1163 : 		if (_Count == 0)

	test	edi, edi
	je	$LN1@Insert_n@4

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+16]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 3
	mov	edx, 536870911				; 1fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n@4

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@KAXXZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Xlen
$LN130@Insert_n@4:
$LN12@Insert_n@4:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n@4

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 536870911				; 1fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@4
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@4
$LN17@Insert_n@4:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@4:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@4

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@4:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	call	?allocate@?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@QAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@I@Z ; std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>::allocate

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[ebp+4]
	sub	ebx, DWORD PTR [esi+12]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	edx, DWORD PTR __Cat$580953[ebp]
	mov	BYTE PTR $T580949[ebp], 0
	mov	ecx, DWORD PTR $T580949[ebp]
	push	ecx
	mov	DWORD PTR __Newvec$155474[ebp], eax
	sar	ebx, 3
	push	edx
	mov	edx, DWORD PTR __Val$[ebp]
	lea	eax, DWORD PTR [eax+ebx*8]
	push	eax
	mov	ecx, edi
	call	??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	eax, DWORD PTR [esi+12]
	add	esp, 12					; 0000000cH
	mov	BYTE PTR $T581114[ebp], 0
	mov	ecx, DWORD PTR $T581114[ebp]
	mov	edx, DWORD PTR __Cat$581118[ebp]
	push	ecx
	push	edx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	eax, DWORD PTR __Newvec$155474[ebp]
	call	??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	mov	BYTE PTR $T581290[ebp], 0
	mov	ecx, DWORD PTR $T581290[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Cat$581293[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Where$[ebp+4]
	lea	eax, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR __Newvec$155474[ebp]
	lea	eax, DWORD PTR [ebx+eax*8]
	push	ecx
	call	??$_Uninit_copy@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@00AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [esi+16]
	sub	edx, eax
	sar	edx, 3
	add	esp, 12					; 0000000cH
	add	edi, edx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN117@Insert_n@4

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN117@Insert_n@4:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Capacity$[ebp]
	lea	ecx, DWORD PTR [ebx+eax*8]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	edx, DWORD PTR [ebx+edi*8]
	mov	DWORD PTR [esi+20], ecx
	mov	DWORD PTR [esi+16], edx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+12], ebx

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	eax, DWORD PTR __Newvec$155474[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN131@Insert_n@4:
$LN10@Insert_n@4:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	edx, DWORD PTR __Where$[ebp+4]

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, ebx
	sub	ecx, edx
	sar	ecx, 3
	cmp	ecx, edi
	mov	ecx, DWORD PTR [eax]
	jae	SHORT $LN3@Insert_n@4
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$155489[ebp+4], eax

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	eax, DWORD PTR [edi*8]
	mov	DWORD PTR tv515[ebp], eax
	add	eax, edx
	push	eax
	push	ebx
	mov	DWORD PTR __Tmp$155489[ebp], ecx
	call	??$_Umove@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU234@00@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Umove<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp+4]
	mov	BYTE PTR $T581336[ebp], 0
	mov	edx, DWORD PTR $T581336[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$581339[ebp]
	sar	ecx, 3
	push	edx
	sub	edi, ecx
	mov	ecx, edi
	push	eax
	lea	edx, DWORD PTR __Tmp$155489[ebp]
	call	??$_Uninit_fill_n@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IU123@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IABU123@AAV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,unsigned int,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+16], eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	sub	edx, eax
	mov	eax, DWORD PTR __Where$[ebp+4]
	lea	ecx, DWORD PTR __Tmp$155489[ebp]

; 1232 : 			}
; 1233 : 		else

	jmp	SHORT $LN129@Insert_n@4
$LN3@Insert_n@4:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR [eax+4]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [edi*8]
	mov	edi, ebx
	sub	edi, eax
	push	ebx
	mov	DWORD PTR __Tmp$155499[ebp+4], edx
	push	ebx
	mov	edx, edi
	mov	DWORD PTR __Tmp$155499[ebp], ecx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU234@00@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Umove<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>
	mov	DWORD PTR [esi+16], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	esi, DWORD PTR __Where$[ebp+4]
	mov	edx, ebx
	mov	ecx, edi
	call	??$_Unchecked_move_backward@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@PAU123@@stdext@@YAPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@0@PAU120@00@Z ; stdext::_Unchecked_move_backward<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	ecx, DWORD PTR tv515[ebp]
	mov	eax, DWORD PTR __Where$[ebp+4]
	lea	edx, DWORD PTR [ecx+eax]
	lea	ecx, DWORD PTR __Tmp$155499[ebp]
$LN129@Insert_n@4:
	push	eax
	call	??$fill@PAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@U123@@std@@YAXPAU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@0ABU123@@Z ; std::fill<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position *,stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position>
	add	esp, 4
$LN1@Insert_n@4:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN128@Insert_n@4:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Insert_n
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Count$ = 12						; size = 4
__Where$ = 16						; size = 8
?insert@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::insert, COMDAT
; __Val$ = edx

; 882  : 		{	// insert _Count * _Val at _Where

	push	ecx

; 883  : 		_Insert_n(_Where, _Count, _Val);

	mov	eax, DWORD PTR __Where$[esp+4]
	mov	ecx, DWORD PTR __Where$[esp]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR _this$[esp+12]
	call	?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Insert_n
	pop	ecx

; 884  : 		}

	ret	16					; 00000010H
?insert@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
__Tmp$ = -16						; size = 8
$T581369 = -8						; size = 8
__Count$ = 8						; size = 4
?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Assign_n, COMDAT
; _this$ = ecx
; __Val$ = eax

; 1095 : 		{	// assign _Count * _Val

	sub	esp, 16					; 00000010H

; 1096 : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 1097 : 		erase(begin(), end());

	mov	esi, DWORD PTR [edi+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[esp+32], ecx
	mov	DWORD PTR __Tmp$[esp+36], edx
	cmp	DWORD PTR [edi+12], esi
	jbe	SHORT $LN8@Assign_n
	call	__invalid_parameter_noinfo
$LN8@Assign_n:
	mov	ebx, DWORD PTR [edi+12]
	mov	ebp, DWORD PTR [edi]
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN24@Assign_n
	call	__invalid_parameter_noinfo
$LN24@Assign_n:
	mov	eax, DWORD PTR [edi]
	push	esi
	push	ebp
	push	ebx
	push	eax
	lea	eax, DWORD PTR $T581369[esp+48]
	push	eax
	call	?erase@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@0@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::erase

; 1098 : 		insert(begin(), _Count, _Tmp);

	mov	esi, DWORD PTR [edi+12]
	cmp	esi, DWORD PTR [edi+16]
	jbe	SHORT $LN40@Assign_n
	call	__invalid_parameter_noinfo
$LN40@Assign_n:
	mov	eax, DWORD PTR [edi]
	push	esi
	push	eax
	lea	ecx, DWORD PTR __Tmp$[esp+40]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+40]
	mov	edx, edi
	call	?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Insert_n

; 1099 : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	4
?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Assign_n
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 8
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
?_Splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Splice, COMDAT
; _this$ = ecx
; __Right$ = esi

; 1126 : 		{	// splice _Right [_First, _Last) before _Where

	push	ecx

; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 		if (_Where._Mycont != this)
; 1129 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1130 : 		if (this->_Alval == _Right._Alval)
; 1131 : 			{	// same allocator, just relink
; 1132 : 			if (!_Keep && this != &_Right)
; 1133 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1134 : 					_Orphan_ptr(_Right, (_Next++)._Ptr);
; 1135 : 
; 1136 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1137 :         _Keep;                  // unused in this branch
; 1138 : 		if (this->_Alval == _Right._Alval)
; 1139 : 			{	// same allocator, just relink
; 1140 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1141 : 
; 1142 : 			if (this != &_Right)

	cmp	ecx, esi
	je	SHORT $LN2@Splice

; 1143 : 				{	// splicing from another list, adjust counts
; 1144 : 				_Incsize(_Count);

	call	?_Incsize@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Incsize

; 1145 : 				_Right._Mysize -= _Count;

	dec	DWORD PTR [esi+24]
$LN2@Splice:

; 1146 : 				}
; 1147 : 			_Nextnode(_Prevnode(_First._Mynode())) = _Last._Mynode();

	mov	eax, DWORD PTR __First$[esp+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Last$[esp+4]
	mov	DWORD PTR [ecx], edx

; 1148 : 			_Nextnode(_Prevnode(_Last._Mynode())) = _Where._Mynode();

	mov	eax, DWORD PTR __Last$[esp+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Where$[esp+4]
	mov	DWORD PTR [ecx], edx

; 1149 : 			_Nextnode(_Prevnode(_Where._Mynode())) = _First._Mynode();

	mov	eax, DWORD PTR __Where$[esp+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __First$[esp+4]
	mov	DWORD PTR [ecx], edx

; 1150 : 			_Nodeptr _Pnode = _Prevnode(_Where._Mynode());

	mov	eax, DWORD PTR __Where$[esp+4]

; 1151 : 			_Prevnode(_Where._Mynode()) = _Prevnode(_Last._Mynode());

	mov	edx, DWORD PTR __Last$[esp+4]
	mov	edx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+4], edx

; 1152 : 			_Prevnode(_Last._Mynode()) = _Prevnode(_First._Mynode());

	mov	eax, DWORD PTR __First$[esp+4]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[esp+4]
	mov	DWORD PTR [eax+4], edx

; 1153 : 			_Prevnode(_First._Mynode()) = _Pnode;

	mov	edx, DWORD PTR __First$[esp+4]
	mov	DWORD PTR [edx+4], ecx
	pop	ecx

; 1154 : 			}
; 1155 : 		else
; 1156 : 			{	// different allocator, copy nodes then erase source
; 1157 : 			insert(_Where, _First, _Last);
; 1158 : 			_Right.erase(_First, _Last);
; 1159 : 			}
; 1160 :         }

	ret	24					; 00000018H
?_Splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Splice
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?assign@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?assign@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::assign, COMDAT
; _this$ = ecx
; __Count$ = eax

; 871  : 		_Assign_n(_Count, _Val);

	push	eax
	mov	eax, DWORD PTR __Val$[esp]
	call	?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Assign_n

; 872  : 		}

	ret	4
?assign@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::assign
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Where$ = 12						; size = 8
__First$ = 20						; size = 8
?splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@0@Z PROC ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::splice, COMDAT
; __Right$ = eax

; 883  : 		{	// splice _Right [_First, _First + 1) at _Where

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]
	push	esi
	mov	esi, eax

; 884  : 
; 885  :  #if _HAS_ITERATOR_DEBUGGING
; 886  : 		if (_First == _Right.end())
; 887  : 			_DEBUG_ERROR("list splice iterator outside range");
; 888  : 		else
; 889  : 
; 890  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 891  : 		if (_First != _Right.end())

	mov	eax, DWORD PTR __First$[esp+8]
	mov	ecx, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN24@splice
	cmp	eax, ecx
	je	SHORT $LN25@splice
$LN24@splice:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+12]
$LN25@splice:
	mov	ecx, DWORD PTR __First$[esp+16]
	cmp	ecx, edi
	je	SHORT $LN2@splice

; 892  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 893  : 
; 894  : 			{	// element exists, try splice
; 895  : 			const_iterator _Last = _First;

	mov	ebx, eax
	mov	edi, ecx

; 896  : 			++_Last;

	test	eax, eax
	jne	SHORT $LN71@splice
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+12]
	xor	ecx, ecx
$LN44@splice:
	cmp	edi, DWORD PTR [ecx+20]
	jne	SHORT $LN33@splice
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+12]
$LN33@splice:
	mov	edi, DWORD PTR [edi]

; 897  : 			if (this != &_Right
; 898  : 				|| (_Where != _First && _Where != _Last))

	mov	ecx, DWORD PTR __Where$[esp+12]
	cmp	ebp, esi
	jne	SHORT $LN1@splice
	test	ecx, ecx
	je	SHORT $LN51@splice
	cmp	ecx, eax
	je	SHORT $LN52@splice
$LN51@splice:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+12]
	mov	ecx, DWORD PTR __Where$[esp+12]
$LN52@splice:
	mov	edx, DWORD PTR __First$[esp+16]
	cmp	DWORD PTR __Where$[esp+16], edx
	je	SHORT $LN2@splice
	test	ecx, ecx
	je	SHORT $LN62@splice
	cmp	ecx, ebx
	je	SHORT $LN63@splice
$LN62@splice:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+12]
	mov	ecx, DWORD PTR __Where$[esp+12]
$LN63@splice:
	cmp	DWORD PTR __Where$[esp+16], edi
	je	SHORT $LN2@splice
$LN1@splice:

; 899  : 				_Splice(_Where, _Right, _First, _Last, 1);

	mov	edx, DWORD PTR __First$[esp+16]
	push	edi
	push	ebx
	push	edx
	push	eax
	mov	eax, DWORD PTR __Where$[esp+32]
	push	eax
	push	ecx
	mov	ecx, ebp
	call	?_Splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Splice
$LN2@splice:

; 900  : 			}
; 901  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	20					; 00000014H
$LN71@splice:

; 896  : 			++_Last;

	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN44@splice
?splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@0@Z ENDP ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::splice
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z
_TEXT	SEGMENT
$T581877 = -12						; size = 8
?_Init@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Init, COMDAT
; _this$ = esi
; __Buckets$ = edi

; 830  : 		_Vec.assign(_Buckets + 1, end());

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+28]
	sub	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN25@Init@4
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN26@Init@4
$LN25@Init@4:
	xor	eax, eax
$LN26@Init@4:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T581877[esp+16], ecx
	lea	ecx, DWORD PTR [edi+1]
	mov	DWORD PTR $T581877[esp+12], eax
	push	ecx
	lea	ecx, DWORD PTR [esi+36]
	lea	eax, DWORD PTR $T581877[esp+16]
	call	?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Assign_n

; 831  : 		_Mask = _Buckets - 1;

	lea	edx, DWORD PTR [edi-1]
	mov	DWORD PTR [esi+60], edx

; 832  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [esi+64], edi

; 833  : 		}

	add	esp, 12					; 0000000cH
	ret	0
?_Init@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Init
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEXXZ
_TEXT	SEGMENT
$T582277 = -12						; size = 8
?clear@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::clear, COMDAT
; _this$ = esi

; 614  : 		_List.clear();

	mov	ecx, DWORD PTR [esi+28]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], ecx
	mov	ecx, DWORD PTR [esi+28]
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [ecx+4], ecx
	push	edi
	mov	DWORD PTR [esi+32], 0
	cmp	eax, DWORD PTR [esi+28]
	je	SHORT $LN3@clear@19
	npad	3
$LL5@clear@19:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
	cmp	edi, DWORD PTR [esi+28]
	jne	SHORT $LL5@clear@19
$LN3@clear@19:

; 615  : 		_Init();

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN42@clear@19
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN43@clear@19
$LN42@clear@19:
	xor	eax, eax
$LN43@clear@19:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T582277[esp+24], ecx
	mov	DWORD PTR $T582277[esp+20], eax
	push	9
	lea	ecx, DWORD PTR [esi+36]
	lea	eax, DWORD PTR $T582277[esp+24]
	call	?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Assign_n
	mov	DWORD PTR [esi+60], 7
	mov	DWORD PTR [esi+64], 8

; 616  : 		}

	pop	edi
	add	esp, 16					; 00000010H
	ret	0
?clear@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@0@Z
_TEXT	SEGMENT
$T582331 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@0@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase, COMDAT
; _this$ = eax

; 580  : 		{	// erase [_First, _Last)

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	mov	esi, eax

; 581  : 		_DEBUG_RANGE(_First, _Last);
; 582  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR [esi+8]
	lea	ebp, DWORD PTR [esi+8]
	push	edi
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR __First$[esp+20]
	test	eax, eax
	je	SHORT $LN27@erase@31
	cmp	eax, ecx
	je	SHORT $LN28@erase@31
$LN27@erase@31:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+20]
$LN28@erase@31:
	cmp	DWORD PTR __First$[esp+24], edi
	jne	SHORT $LL2@erase@31
	mov	edx, DWORD PTR __Last$[esp+20]
	mov	edi, DWORD PTR [ebp+20]
	mov	ecx, DWORD PTR [ebp]
	test	edx, edx
	je	SHORT $LN54@erase@31
	cmp	edx, ecx
	je	SHORT $LN55@erase@31
$LN54@erase@31:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+20]
$LN55@erase@31:
	cmp	DWORD PTR __Last$[esp+24], edi
	jne	SHORT $LL2@erase@31

; 583  : 			{	// erase all
; 584  : 			clear();

	call	?clear@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::clear

; 585  : 			return (begin());

	mov	ecx, DWORD PTR [ebp+20]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+20]
	mov	ecx, DWORD PTR [ebp]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 592  : 			}
; 593  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	20					; 00000014H
$LL2@erase@31:

; 586  : 			}
; 587  : 		else
; 588  : 			{	// partial erase, one at a time
; 589  : 			while (_First != _Last)

	test	eax, eax
	je	SHORT $LN85@erase@31
	cmp	eax, DWORD PTR __Last$[esp+20]
	je	SHORT $LN86@erase@31
$LN85@erase@31:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+20]
$LN86@erase@31:
	mov	ebx, DWORD PTR __First$[esp+24]
	cmp	ebx, DWORD PTR __Last$[esp+24]
	je	SHORT $LN1@erase@31

; 590  : 				erase(_First++);

	mov	edi, eax
	test	eax, eax
	jne	SHORT $LN129@erase@31
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[esp+20]
	test	eax, eax
	je	SHORT $LN106@erase@31
$LN129@erase@31:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN107@erase@31
$LN106@erase@31:
	xor	eax, eax
$LN107@erase@31:
	mov	edx, DWORD PTR __First$[esp+24]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN96@erase@31
	call	__invalid_parameter_noinfo
$LN96@erase@31:
	mov	eax, DWORD PTR __First$[esp+24]
	mov	ecx, DWORD PTR [eax]
	push	ebx
	push	edi
	lea	edx, DWORD PTR $T582331[esp+32]
	push	edx
	mov	eax, esi
	mov	DWORD PTR __First$[esp+36], ecx
	call	?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase
	mov	eax, DWORD PTR __First$[esp+20]
	jmp	SHORT $LL2@erase@31
$LN1@erase@31:

; 591  : 			return (_List._Make_iter(_First));

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+20]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], ebx
	test	ebp, ebp
	jne	SHORT $LN116@erase@31
	call	__invalid_parameter_noinfo
$LN116@erase@31:
	mov	eax, DWORD PTR [ebp]

; 592  : 			}
; 593  : 		}

	pop	edi
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	20					; 00000014H
?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@0@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase
_TEXT	ENDS
PUBLIC	__real@40800000
;	COMDAT __real@40800000
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z
_TEXT	SEGMENT
$T582981 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Parg$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >, COMDAT

; 343  : 		{	// construct empty hash table

	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+32]
	mov	eax, DWORD PTR __Parg$[esp+32]
	mov	cx, WORD PTR [eax]
	lea	edi, DWORD PTR [esi+8]
	push	edi
	mov	WORD PTR [esi+4], cx
	call	??0?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@1@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
	lea	ebx, DWORD PTR [esi+36]
	push	ebx
	mov	DWORD PTR __$EHRec$[esp+48], 0
	call	??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@1@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
	mov	BYTE PTR __$EHRec$[esp+44], 1
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [esi+68], xmm0

; 344  : 		_Init();

	mov	eax, DWORD PTR [edi+20]
	mov	edi, DWORD PTR [edi]
	test	edi, edi
	je	SHORT $LN33@Hash@3
	mov	edi, DWORD PTR [edi]
	jmp	SHORT $LN34@Hash@3
$LN33@Hash@3:
	xor	edi, edi
$LN34@Hash@3:
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR $T582981[esp+40], eax
	push	9
	lea	eax, DWORD PTR $T582981[esp+40]
	mov	ecx, ebx
	mov	DWORD PTR $T582981[esp+40], edx
	call	?_Assign_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXIABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Assign_n
	mov	DWORD PTR [esi+60], 7
	mov	DWORD PTR [esi+64], 8

; 345  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 8
	jmp	??1?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::~list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z$1:
	mov	esi, DWORD PTR _this$[ebp-4]
	add	esi, 36					; 00000024H
	jmp	??1?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::~vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >
__ehhandler$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEIABI@Z
_TEXT	SEGMENT
$T583050 = -24						; size = 1
__Num$ = -24						; size = 4
$T583041 = -20						; size = 8
__Where$ = -20						; size = 16
?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEIABI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase, COMDAT
; _this$ = edi
; __Keyval$ = eax

; 596  : 		{	// erase and count all that match _Keyval

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi

; 597  : 		_Pairii _Where = equal_range(_Keyval);

	push	eax
	lea	ecx, DWORD PTR __Where$[esp+40]
	push	ecx
	push	edi
	call	?equal_range@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::equal_range

; 598  : 		size_type _Num = 0;
; 599  : 		_Distance(_Where.first, _Where.second, _Num);

	mov	ebx, DWORD PTR __Where$[esp+48]
	mov	ebp, DWORD PTR __Where$[esp+44]
	mov	eax, DWORD PTR __Where$[esp+40]
	mov	ecx, DWORD PTR __Where$[esp+36]
	mov	DWORD PTR __Num$[esp+36], 0
	mov	edx, DWORD PTR $T583050[esp+36]
	push	edx
	push	ebx
	push	ebp
	push	eax
	push	ecx
	lea	esi, DWORD PTR __Num$[esp+56]
	call	??$_Distance2@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>

; 600  : 		erase(_Where.first, _Where.second);

	mov	edx, DWORD PTR __Where$[esp+60]
	mov	eax, DWORD PTR __Where$[esp+56]
	add	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T583041[esp+52]
	push	ecx
	mov	eax, edi
	call	?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@0@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase

; 601  : 		return (_Num);

	mov	eax, DWORD PTR __Num$[esp+36]

; 602  : 		}

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAEIABI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\unordered_map
_TEXT	ENDS
;	COMDAT ??0?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
$T583060 = -2						; size = 2
??0?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >, COMDAT
; _this$ = esi

; 118  : 		{	// construct empty map from defaults

	push	ecx
	lea	eax, DWORD PTR $T583060[esp+4]
	push	eax
	push	esi
	call	??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >

; 119  : 		}

	mov	eax, esi
	pop	ecx
	ret	0
??0?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z$8
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Right$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >, COMDAT

; 528  : 		{	// construct tree by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN37@Tree@8
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN38@Tree@8
$LN37@Tree@8:
	xor	eax, eax
$LN38@Tree@8:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 529  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Buynode
	mov	DWORD PTR [esi+24], eax
	mov	cl, 1
	mov	BYTE PTR [eax+33], cl
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 530  : 		_TRY_BEGIN
; 531  : 		_Copy(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	eax, esi
	mov	DWORD PTR [esi+28], 0
	mov	BYTE PTR __$EHRec$[ebp+12], cl
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEXABV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Copy

; 535  : 		_CATCH_END
; 536  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z$0:

; 532  : 		_CATCH_ALL
; 533  : 		_Tidy();

	mov	esi, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Tidy

; 534  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN87@Tree@8:
$LN86@Tree@8:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z$2:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z$8
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Right$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >, COMDAT

; 528  : 		{	// construct tree by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN37@Tree@9
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN38@Tree@9
$LN37@Tree@9:
	xor	eax, eax
$LN38@Tree@9:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 529  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Buynode
	mov	DWORD PTR [esi+24], eax
	mov	cl, 1
	mov	BYTE PTR [eax+41], cl
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 530  : 		_TRY_BEGIN
; 531  : 		_Copy(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	eax, esi
	mov	DWORD PTR [esi+28], 0
	mov	BYTE PTR __$EHRec$[ebp+12], cl
	call	?_Copy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEXABV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Copy

; 535  : 		_CATCH_END
; 536  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z$0:

; 532  : 		_CATCH_ALL
; 533  : 		_Tidy();

	mov	esi, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Tidy

; 534  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN87@Tree@9:
$LN86@Tree@9:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z$2:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >
PUBLIC	??8System@DRAMsimII@@QBE_NABV01@@Z		; DRAMsimII::System::operator==
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
_this$ = 8						; size = 4
_rhs$ = 12						; size = 4
??8System@DRAMsimII@@QBE_NABV01@@Z PROC			; DRAMsimII::System::operator==

; 497  : {

	push	ebx
	mov	ebx, DWORD PTR _rhs$[esp]
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]
	push	edi

; 498  : 	return systemConfig == rhs.systemConfig && channel == rhs.channel && simParameters == rhs.simParameters &&
; 499  : 		statistics == rhs.statistics && inputStream == rhs.inputStream && time == rhs.time &&
; 500  : 		nextStats == rhs.nextStats;

	lea	eax, DWORD PTR [ebx+8]
	lea	ecx, DWORD PTR [ebp+8]
	call	??8SystemConfiguration@DRAMsimII@@QBE_NABV01@@Z ; DRAMsimII::SystemConfiguration::operator==
	test	al, al
	je	$LN3@operator@378
	push	esi
	lea	eax, DWORD PTR [ebx+1172]
	push	eax
	lea	esi, DWORD PTR [ebp+1172]
	call	??$?8VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YA_NABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z ; std::operator==<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	add	esp, 4
	pop	esi
	test	al, al
	je	$LN3@operator@378
	mov	ecx, DWORD PTR [ebp+552]
	cmp	ecx, DWORD PTR [ebx+552]
	jne	$LN3@operator@378
	mov	edx, DWORD PTR [ebp+556]
	cmp	edx, DWORD PTR [ebx+556]
	jne	SHORT $LN3@operator@378
	mov	eax, DWORD PTR [ebp+560]
	cmp	eax, DWORD PTR [ebx+560]
	jne	SHORT $LN3@operator@378
	lea	ecx, DWORD PTR [ebp+568]
	lea	edi, DWORD PTR [ebx+568]
	push	ecx
	call	??8Statistics@DRAMsimII@@QBE_NABV01@@Z	; DRAMsimII::Statistics::operator==
	test	al, al
	je	SHORT $LN3@operator@378
	lea	edx, DWORD PTR [ebp+1200]
	lea	edi, DWORD PTR [ebx+1200]
	push	edx
	call	??8InputStream@DRAMsimII@@QBE_NABV01@@Z	; DRAMsimII::InputStream::operator==
	test	al, al
	je	SHORT $LN3@operator@378
	mov	eax, DWORD PTR [ebp+11544]
	cmp	eax, DWORD PTR [ebx+11544]
	jne	SHORT $LN3@operator@378
	mov	ecx, DWORD PTR [ebp+11548]
	cmp	ecx, DWORD PTR [ebx+11548]
	jne	SHORT $LN3@operator@378
	mov	edx, DWORD PTR [ebp+11552]
	cmp	edx, DWORD PTR [ebx+11552]
	jne	SHORT $LN3@operator@378
	mov	eax, DWORD PTR [ebp+11556]
	cmp	eax, DWORD PTR [ebx+11556]
	jne	SHORT $LN3@operator@378
	pop	edi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 501  : }

	ret	8
$LN3@operator@378:
	pop	edi
	pop	ebp

; 498  : 	return systemConfig == rhs.systemConfig && channel == rhs.channel && simParameters == rhs.simParameters &&
; 499  : 		statistics == rhs.statistics && inputStream == rhs.inputStream && time == rhs.time &&
; 500  : 		nextStats == rhs.nextStats;

	xor	eax, eax
	pop	ebx

; 501  : }

	ret	8
??8System@DRAMsimII@@QBE_NABV01@@Z ENDP			; DRAMsimII::System::operator==
_TEXT	ENDS
PUBLIC	?getPendingTransactions@System@DRAMsimII@@QAEXAAV?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@@Z ; DRAMsimII::System::getPendingTransactions
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_this$ = 8						; size = 4
_outputQueue$ = 12					; size = 4
?getPendingTransactions@System@DRAMsimII@@QAEXAAV?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@@Z PROC ; DRAMsimII::System::getPendingTransactions

; 366  : {

	push	ecx
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+8]
	push	esi
	push	edi

; 367  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	mov	edi, DWORD PTR [ebp+1184]
	cmp	edi, DWORD PTR [ebp+1188]
	jbe	SHORT $LN11@getPending@2
	call	__invalid_parameter_noinfo
$LN11@getPending@2:
	mov	esi, DWORD PTR [ebp+1172]
$LL28@getPending@2:
	mov	ebx, DWORD PTR [ebp+1188]
	cmp	DWORD PTR [ebp+1184], ebx
	jbe	SHORT $LN43@getPending@2
	call	__invalid_parameter_noinfo
$LN43@getPending@2:
	mov	eax, DWORD PTR [ebp+1172]
	test	esi, esi
	je	SHORT $LN56@getPending@2
	cmp	esi, eax
	je	SHORT $LN57@getPending@2
$LN56@getPending@2:
	call	__invalid_parameter_noinfo
$LN57@getPending@2:
	cmp	edi, ebx
	je	SHORT $LN1@getPending@2

; 368  : 		i->getPendingTransactions(outputQueue);

	test	esi, esi
	jne	SHORT $LN82@getPending@2
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN77@getPending@2:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN68@getPending@2
	call	__invalid_parameter_noinfo
$LN68@getPending@2:
	mov	eax, DWORD PTR _outputQueue$[esp+16]
	push	eax
	push	edi
	call	?getPendingTransactions@Channel@DRAMsimII@@QAEXAAV?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@@Z ; DRAMsimII::Channel::getPendingTransactions
	test	esi, esi
	jne	SHORT $LN81@getPending@2
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN35@getPending@2:

; 367  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN26@getPending@2
	call	__invalid_parameter_noinfo
$LN26@getPending@2:
	add	edi, 456				; 000001c8H
	jmp	SHORT $LL28@getPending@2
$LN82@getPending@2:

; 368  : 		i->getPendingTransactions(outputQueue);

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN77@getPending@2
$LN81@getPending@2:

; 367  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN35@getPending@2
$LN1@getPending@2:

; 369  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	8
?getPendingTransactions@System@DRAMsimII@@QAEXAAV?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@@Z ENDP ; DRAMsimII::System::getPendingTransactions
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$map@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$map@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::map<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> > >::map<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> > >, COMDAT
; _this$ = esi
; ___that$ = eax
	push	eax
	push	esi
	call	??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >
	mov	eax, esi
	ret	0
??0?$map@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::map<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> > >::map<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$map@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$map@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@@std@@QAE@ABV01@@Z PROC ; std::map<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> > >::map<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> > >, COMDAT
; _this$ = esi
; ___that$ = eax
	push	eax
	push	esi
	call	??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >
	mov	eax, esi
	ret	0
??0?$map@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@@std@@QAE@ABV01@@Z ENDP ; std::map<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> > >::map<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T605602 = -28						; size = 4
__Vptr$605608 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Last$ = 8						; size = 4
__Dest$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > const *,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >, COMDAT
; __First$ = ecx

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR __Dest$[ebp]
	mov	edi, ecx

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
$LL6@Uninit_cop@11:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@11

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$605608[ebp], esi
	mov	DWORD PTR $T605602[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@11
	push	edi
	push	esi
	call	??0?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >
$LN18@Uninit_cop@11:
	add	esi, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 24					; 00000018H
	jmp	SHORT $LL6@Uninit_cop@11
__catch$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@11
	npad	6
$LL3@Uninit_cop@11:

; 134  : 		_Al.destroy(_Next);

	call	?destroy@?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@std@@QAEXPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@@Z ; std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > >::destroy
	add	esi, 24					; 00000018H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@11
$LN1@Uninit_cop@11:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN29@Uninit_cop@11:
$LN4@Uninit_cop@11:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN28@Uninit_cop@11:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$605608[ebp]
	push	eax
	mov	ecx, DWORD PTR $T605602[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > const *,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T605652 = -28						; size = 4
__Vptr$605658 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Last$ = 8						; size = 4
__Dest$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > const *,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >, COMDAT
; __First$ = ecx

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR __Dest$[ebp]
	mov	edi, ecx

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
$LL6@Uninit_cop@12:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@12

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$605658[ebp], esi
	mov	DWORD PTR $T605652[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@12
	push	edi
	push	esi
	call	??0?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >
$LN18@Uninit_cop@12:
	add	esi, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 24					; 00000018H
	jmp	SHORT $LL6@Uninit_cop@12
__catch$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@12
	npad	6
$LL3@Uninit_cop@12:

; 134  : 		_Al.destroy(_Next);

	call	?destroy@?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@std@@QAEXPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@@Z ; std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > >::destroy
	add	esi, 24					; 00000018H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@12
$LN1@Uninit_cop@12:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN29@Uninit_cop@12:
$LN4@Uninit_cop@12:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN28@Uninit_cop@12:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$605658[ebp]
	push	eax
	mov	ecx, DWORD PTR $T605652[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > const *,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
$T605675 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$605679 = 16					; size = 1
__Last$ = 16						; size = 8
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >, COMDAT
; __Dest$ = edx

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$605679[esp]
	mov	BYTE PTR $T605675[esp+4], 0
	mov	eax, DWORD PTR $T605675[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+12]
	push	edx
	push	eax
	call	??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > const *,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >

; 823  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
$T605718 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$605722 = 16					; size = 1
__Last$ = 16						; size = 8
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >, COMDAT
; __Dest$ = edx

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$605722[esp]
	mov	BYTE PTR $T605718[esp+4], 0
	mov	eax, DWORD PTR $T605718[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+12]
	push	edx
	push	eax
	call	??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > const *,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >

; 823  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@PAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@stdext@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@1@0PAV21@@Z
_TEXT	SEGMENT
$T605803 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$605806 = 16					; size = 1
__Last$ = 16						; size = 8
??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@1@0PAV21@@Z PROC ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Ucopy<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > > >, COMDAT
; __Ptr$ = edx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	ecx, DWORD PTR __Cat$605806[esp]
	mov	BYTE PTR $T605803[esp+4], 0
	mov	eax, DWORD PTR $T605803[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+12]
	push	edx
	push	eax
	call	??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > const *,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >

; 1142 : 		}

	add	esp, 20					; 00000014H
	ret	16					; 00000010H
??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@1@0PAV21@@Z ENDP ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Ucopy<std::_Vector_const_iterator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@1@0PAV21@@Z
_TEXT	SEGMENT
$T605872 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$605875 = 16					; size = 1
__Last$ = 16						; size = 8
??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@1@0PAV21@@Z PROC ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Ucopy<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > > >, COMDAT
; __Ptr$ = edx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	ecx, DWORD PTR __Cat$605875[esp]
	mov	BYTE PTR $T605872[esp+4], 0
	mov	eax, DWORD PTR $T605872[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+12]
	push	edx
	push	eax
	call	??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > const *,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >

; 1142 : 		}

	add	esp, 20					; 00000014H
	ret	16					; 00000010H
??$_Ucopy@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@@?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@1@V?$_Vector_const_iterator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@1@0PAV21@@Z ENDP ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Ucopy<std::_Vector_const_iterator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@4@@Z
_TEXT	SEGMENT
__Bucket$ = -24						; size = 4
__Num$605930 = -20					; size = 4
__Tmp$607434 = -16					; size = 8
__Plist$ = -16						; size = 8
$T607440 = -8						; size = 8
$T607437 = -8						; size = 8
$T605906 = -8						; size = 8
$T605902 = -8						; size = 8
$T605900 = -8						; size = 8
$T605897 = -8						; size = 8
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
tv1572 = 16						; size = 4
tv1569 = 16						; size = 4
tv1566 = 16						; size = 4
__Val$ = 16						; size = 4
__Where$ = 20						; size = 8
?_Insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Insert, COMDAT

; 837  : 		size_type _Bucket = _Hashval(this->_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi
	push	edi
	push	127773					; 0001f31dH
	push	ecx
	call	_ldiv
	imul	eax, 2836				; 00000b14H
	imul	edx, 16807				; 000041a7H
	add	esp, 8
	sub	edx, eax
	jns	SHORT $LN28@Insert@8
	add	edx, 2147483647				; 7fffffffH
$LN28@Insert@8:
	mov	ebp, DWORD PTR _this$[esp+36]
	mov	eax, DWORD PTR [ebp+60]
	mov	edi, eax
	and	edi, edx
	mov	DWORD PTR __Num$605930[esp+40], edi
	cmp	DWORD PTR [ebp+64], edi
	ja	SHORT $LN23@Insert@8
	shr	eax, 1
	or	edx, -1
	sub	edx, eax
	add	edi, edx
	mov	DWORD PTR __Num$605930[esp+40], edi
$LN23@Insert@8:

; 838  : 		iterator _Plist = _Get_iter_from_vec(_Vec[_Bucket + 1]);

	mov	eax, DWORD PTR [ebp+52]
	sub	eax, DWORD PTR [ebp+48]
	lea	esi, DWORD PTR [ebp+36]
	mov	DWORD PTR __Bucket$[esp+40], edi
	inc	edi
	sar	eax, 3
	cmp	edi, eax
	jb	SHORT $LN31@Insert@8
	call	__invalid_parameter_noinfo
$LN31@Insert@8:
	add	ebp, 8
	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [ecx+edi*8+4]
	mov	DWORD PTR __Plist$[esp+44], edx
	jne	SHORT $LN44@Insert@8
	call	__invalid_parameter_noinfo
$LN44@Insert@8:
	mov	ebx, DWORD PTR [ebp]
	mov	DWORD PTR __Plist$[esp+40], ebx
$LN18@Insert@8:

; 839  : 
; 840  : 		for (; _Plist != _Get_iter_from_vec(_Vec[_Bucket]); )

	mov	eax, DWORD PTR [esi+16]
	sub	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __Num$605930[esp+40]
	sar	eax, 3
	cmp	edi, eax
	jb	SHORT $LN56@Insert@8
	call	__invalid_parameter_noinfo
$LN56@Insert@8:
	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [ecx+edi*8+4]
	mov	DWORD PTR $T605897[esp+44], edx
	test	ebp, ebp
	jne	SHORT $LN69@Insert@8
	call	__invalid_parameter_noinfo
$LN69@Insert@8:
	mov	eax, DWORD PTR [ebp]
	test	ebx, ebx
	je	SHORT $LN83@Insert@8
	cmp	ebx, eax
	je	SHORT $LN84@Insert@8
$LN83@Insert@8:
	call	__invalid_parameter_noinfo
$LN84@Insert@8:
	mov	edi, DWORD PTR __Plist$[esp+44]
	cmp	edi, DWORD PTR $T605897[esp+44]
	je	$LN17@Insert@8

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	test	ebx, ebx
	jne	SHORT $LN96@Insert@8
	call	__invalid_parameter_noinfo
$LN96@Insert@8:
	mov	edi, DWORD PTR [edi+4]
	mov	DWORD PTR __Plist$[esp+44], edi
	test	ebx, ebx
	je	SHORT $LN106@Insert@8
	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN107@Insert@8
$LN106@Insert@8:
	xor	eax, eax
$LN107@Insert@8:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN94@Insert@8
	call	__invalid_parameter_noinfo
$LN94@Insert@8:
	test	ebx, ebx
	jne	$LN430@Insert@8
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN123@Insert@8:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN112@Insert@8
	call	__invalid_parameter_noinfo
$LN112@Insert@8:
	mov	eax, DWORD PTR __Val$[esp+36]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edi+8]
	jne	$LN18@Insert@8

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi
; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	test	ebx, ebx
	jne	SHORT $LN429@Insert@8
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN151@Insert@8:
	mov	edi, DWORD PTR __Plist$[esp+44]
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN140@Insert@8
	call	__invalid_parameter_noinfo
$LN140@Insert@8:
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR __Val$[esp+36]
	cmp	edx, DWORD PTR [eax]
	je	SHORT $LN14@Insert@8

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	test	ebx, ebx
	jne	SHORT $LN428@Insert@8
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN175@Insert@8:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN164@Insert@8
	call	__invalid_parameter_noinfo
$LN164@Insert@8:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR __Plist$[esp+44], ecx

; 847  : 				break;

	mov	edi, ecx
$LN17@Insert@8:

; 854  : 				}
; 855  : 
; 856  : 		if (_Where != end())

	mov	eax, DWORD PTR [ebp+20]
	mov	ecx, DWORD PTR [ebp]
	mov	DWORD PTR $T605902[esp+44], eax
	mov	eax, DWORD PTR __Where$[esp+36]
	test	eax, eax
	je	SHORT $LN231@Insert@8
	cmp	eax, ecx
	je	SHORT $LN232@Insert@8
$LN231@Insert@8:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+36]
$LN232@Insert@8:
	mov	ecx, DWORD PTR __Where$[esp+40]
	cmp	ecx, DWORD PTR $T605902[esp+44]
	je	SHORT $LN10@Insert@8

; 857  : 			_List.splice(_Plist, _List, _Where);	// move element into place

	push	ecx
	push	eax
	push	edi
	push	ebx
	push	ebp
	mov	eax, ebp
	call	?splice@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@0@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::splice

; 858  : 		else

	jmp	SHORT $LL433@Insert@8
$LN430@Insert@8:

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	mov	eax, DWORD PTR [ebx]
	jmp	$LN123@Insert@8
$LN429@Insert@8:

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi
; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN151@Insert@8
$LN428@Insert@8:

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN175@Insert@8
$LN14@Insert@8:

; 848  : 				}
; 849  : 			else
; 850  : 				{	// discard new list element and return existing
; 851  : 				if (_Where != end())

	mov	eax, DWORD PTR __Where$[esp+36]
	mov	esi, DWORD PTR [ebp+20]
	mov	ecx, DWORD PTR [ebp]
	test	eax, eax
	je	SHORT $LN200@Insert@8
	cmp	eax, ecx
	je	SHORT $LN201@Insert@8
$LN200@Insert@8:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+36]
$LN201@Insert@8:
	mov	ecx, DWORD PTR __Where$[esp+40]
	cmp	ecx, esi
	je	SHORT $LN11@Insert@8

; 852  : 					_List.erase(_Where);

	push	ecx
	push	eax
	lea	edx, DWORD PTR $T605900[esp+48]
	push	edx
	mov	edi, ebp
	call	?erase@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::erase
	mov	edi, DWORD PTR __Plist$[esp+44]
$LN11@Insert@8:

; 853  : 				return (_Pairib(_Plist, false));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], edi
	mov	BYTE PTR [eax+8], 0

; 884  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN10@Insert@8:

; 859  : 			_Where = _List.insert(_Plist, _Val);	// insert new element

	mov	edx, DWORD PTR __Val$[esp+36]
	push	edi
	push	ebx
	lea	ecx, DWORD PTR $T605906[esp+48]
	push	ecx
	push	ebp
	call	?insert@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@2@@Z ; std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::insert
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Where$[esp+36], edx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR __Where$[esp+40], eax
	npad	3
$LL433@Insert@8:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __Bucket$[esp+40]
	sar	ecx, 3
	cmp	edi, ecx
	jb	SHORT $LN240@Insert@8
	call	__invalid_parameter_noinfo
$LN240@Insert@8:
	mov	edx, DWORD PTR [esi+12]
	mov	edi, DWORD PTR [edx+edi*8+4]
	test	ebp, ebp
	jne	SHORT $LN253@Insert@8
	call	__invalid_parameter_noinfo
$LN253@Insert@8:
	mov	eax, DWORD PTR [ebp]
	test	ebx, ebx
	je	SHORT $LN265@Insert@8
	cmp	ebx, eax
	je	SHORT $LN266@Insert@8
$LN265@Insert@8:
	call	__invalid_parameter_noinfo
$LN266@Insert@8:
	cmp	DWORD PTR __Plist$[esp+44], edi
	jne	SHORT $LN424@Insert@8

; 861  : 			{	// update end iterators if new first bucket element
; 862  : 			_Vec[_Bucket] = _Where;

	mov	eax, DWORD PTR __Where$[esp+36]
	test	eax, eax
	je	SHORT $LN278@Insert@8
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN279@Insert@8
$LN278@Insert@8:
	xor	eax, eax
$LN279@Insert@8:
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+16]
	sub	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR __Bucket$[esp+40]
	mov	ebx, DWORD PTR __Where$[esp+40]
	sar	eax, 3
	cmp	ecx, eax
	jb	SHORT $LN298@Insert@8
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR __Bucket$[esp+40]
$LN298@Insert@8:
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+ecx*8], edi
	mov	DWORD PTR [eax+ecx*8+4], ebx

; 863  : 			if (_Bucket == 0)

	test	ecx, ecx
	je	SHORT $LN424@Insert@8
	mov	ebx, DWORD PTR __Plist$[esp+40]
	dec	ecx
	mov	DWORD PTR __Bucket$[esp+40], ecx
	jmp	$LL433@Insert@8
$LN424@Insert@8:

; 864  : 				break;
; 865  : 			}
; 866  : 
; 867  : 		if (max_load_factor() < load_factor())

	mov	eax, DWORD PTR _this$[esp+36]
	mov	ecx, DWORD PTR [eax+32]
	fld	DWORD PTR [eax+68]
	mov	ebx, DWORD PTR [eax+64]
	fild	DWORD PTR [eax+32]
	test	ecx, ecx
	jge	SHORT $LN438@Insert@8
	fadd	DWORD PTR __real@4f800000
$LN438@Insert@8:
	mov	edx, ebx
	mov	DWORD PTR tv1569[esp+36], edx
	fild	DWORD PTR tv1569[esp+36]
	test	edx, edx
	jge	SHORT $LN439@Insert@8
	fadd	DWORD PTR __real@4f800000
$LN439@Insert@8:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR tv1566[esp+36]
	fld	DWORD PTR tv1566[esp+36]
	fcomip	ST(1)
	fstp	ST(0)
	jbe	$LN4@Insert@8

; 868  :  #if _HAS_INCREMENTAL_HASH
; 869  : 			_Grow();	// too dense, need to grow hash table
; 870  : 
; 871  :  #else /* _HAS_INCREMENTAL_HASH */
; 872  : 			{	// rehash to bigger table
; 873  : 			size_type _Maxsize = _Vec.max_size() / 2;
; 874  : 			size_type _Newsize = bucket_count();
; 875  : 
; 876  : 			for (int _Idx = 0; _Idx < 3 && _Newsize < _Maxsize; ++_Idx)

	xor	eax, eax
	npad	6
$LL3@Insert@8:
	cmp	ebx, 268435455				; 0fffffffH
	jae	SHORT $LN1@Insert@8
	inc	eax

; 877  : 				_Newsize *= 2;	// multiply safely by 8

	add	ebx, ebx
	cmp	eax, 3
	jl	SHORT $LL3@Insert@8
$LN1@Insert@8:

; 878  : 			_Init(_Newsize);

	mov	ecx, DWORD PTR [ebp+20]
	mov	ebp, DWORD PTR [ebp]
	test	ebp, ebp
	je	SHORT $LN345@Insert@8
	mov	ebp, DWORD PTR [ebp]
	jmp	SHORT $LN346@Insert@8
$LN345@Insert@8:
	xor	ebp, ebp
$LN346@Insert@8:
	mov	edi, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR __Tmp$607434[esp+40], eax
	mov	DWORD PTR __Tmp$607434[esp+44], ecx
	cmp	DWORD PTR [esi+12], edi
	jbe	SHORT $LN374@Insert@8
	call	__invalid_parameter_noinfo
$LN374@Insert@8:
	mov	ebp, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR $T607437[esp+40], eax
	cmp	ebp, DWORD PTR [esi+16]
	jbe	SHORT $LN390@Insert@8
	call	__invalid_parameter_noinfo
$LN390@Insert@8:
	mov	ecx, DWORD PTR $T607437[esp+40]
	mov	eax, DWORD PTR [esi]
	push	edi
	push	ecx
	push	ebp
	push	eax
	lea	edx, DWORD PTR $T607440[esp+56]
	push	edx
	mov	edi, esi
	call	?erase@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@0@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::erase
	mov	edi, DWORD PTR [esi+12]
	cmp	edi, DWORD PTR [esi+16]
	jbe	SHORT $LN406@Insert@8
	call	__invalid_parameter_noinfo
$LN406@Insert@8:
	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	lea	eax, DWORD PTR __Tmp$607434[esp+48]
	push	eax
	lea	ecx, DWORD PTR [ebx+1]
	mov	edx, esi
	call	?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_List_position> >::_Insert_n
	mov	ecx, DWORD PTR _this$[esp+36]
	lea	edx, DWORD PTR [ebx-1]
	mov	DWORD PTR [ecx+60], edx
	mov	DWORD PTR [ecx+64], ebx

; 879  : 			_Reinsert();

	call	?_Reinsert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Reinsert
$LN4@Insert@8:

; 880  : 			}
; 881  : #endif /* _HAS_INCREMENTAL_HASH */
; 882  : 
; 883  : 		return (_Pairib(_Where, true));	// return iterator for new element

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	ecx, DWORD PTR __Where$[esp+36]
	mov	edx, DWORD PTR __Where$[esp+40]

; 884  : 		}

	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	BYTE PTR [eax+8], 1
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
?_Insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Insert
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?resize@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@Z
_TEXT	SEGMENT
$T607553 = -24						; size = 8
$T607555 = -16						; size = 8
$T607551 = -16						; size = 8
$T607554 = -8						; size = 8
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 8
?resize@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@Z PROC ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::resize, COMDAT
; _this$ = eax

; 717  : 		{	// determine new length, padding with _Val elements as needed

	sub	esp, 24					; 00000018H
	push	ebx
	mov	ebx, DWORD PTR __Newsize$[esp+24]
	push	esi
	push	edi
	mov	edi, eax

; 718  : 		if (size() < _Newsize)

	mov	esi, DWORD PTR [edi+16]
	mov	ecx, DWORD PTR [edi+12]
	mov	eax, esi
	sub	eax, ecx
	sar	eax, 3
	cmp	ebx, eax
	jbe	SHORT $LN60@resize@4

; 719  : 			_Insert_n(end(), _Newsize - size(), _Val);

	cmp	ecx, esi
	jbe	SHORT $LN13@resize@4
	call	__invalid_parameter_noinfo
$LN13@resize@4:
	mov	edx, DWORD PTR [edi+16]
	sub	edx, DWORD PTR [edi+12]
	mov	eax, DWORD PTR [edi]
	push	esi
	push	eax
	sar	edx, 3
	lea	eax, DWORD PTR __Val$[esp+40]
	mov	ecx, ebx
	sub	ecx, edx
	push	eax
	mov	edx, edi
	call	?_Insert_n@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@IAEXV?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@2@IABU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::_Insert_n
	pop	edi
	pop	esi
	pop	ebx

; 722  : 		}

	add	esp, 24					; 00000018H
	ret	12					; 0000000cH
$LN60@resize@4:

; 720  : 		else if (_Newsize < size())

	jae	SHORT $LN1@resize@4

; 721  : 			erase(begin() + _Newsize, end());

	cmp	ecx, esi
	jbe	SHORT $LN33@resize@4
	call	__invalid_parameter_noinfo
$LN33@resize@4:
	mov	eax, DWORD PTR [edi]
	push	ebp
	mov	ebp, DWORD PTR [edi+12]
	mov	DWORD PTR $T607551[esp+40], eax
	cmp	ebp, DWORD PTR [edi+16]
	jbe	SHORT $LN49@resize@4
	call	__invalid_parameter_noinfo
$LN49@resize@4:
	mov	ecx, DWORD PTR [edi]
	push	ebx
	lea	edx, DWORD PTR $T607554[esp+44]
	push	edx
	lea	eax, DWORD PTR $T607553[esp+48]
	mov	DWORD PTR $T607553[esp+48], ecx
	mov	DWORD PTR $T607553[esp+52], ebp
	call	??H?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::operator+
	mov	ecx, DWORD PTR $T607551[esp+40]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	esi
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T607555[esp+56]
	push	ecx
	call	?erase@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@2@V?$_Vector_const_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@2@0@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::erase
	pop	ebp
$LN1@resize@4:
	pop	edi
	pop	esi
	pop	ebx

; 722  : 		}

	add	esp, 24					; 00000018H
	ret	12					; 0000000cH
?resize@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@Z ENDP ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::resize
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::insert, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi

; 545  : 		return (_Insert(_Val, end()));

	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR __Val$[esp]
	push	edx
	push	ecx
	push	esi
	push	eax
	call	?_Insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Insert
	mov	eax, esi

; 546  : 		}

	ret	4
?insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::insert
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z$0
__tryblocktable$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z$2
__ehfuncinfo$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z
_TEXT	SEGMENT
$T607857 = -48						; size = 8
__Wherefrom$ = -40					; size = 8
$T607855 = -40						; size = 8
$T607852 = -40						; size = 8
$T607858 = -32						; size = 8
tv728 = -28						; size = 4
$T607849 = -28						; size = 4
__Whereto$ = -24					; size = 8
$T607856 = -24						; size = 8
__Pnext$608062 = -20					; size = 4
__$EHRec$ = -16						; size = 16
$T608274 = 8						; size = 1
_this$ = 8						; size = 4
?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Copy, COMDAT
; __Right$ = ecx

; 736  : 		{	// copy entire hash table

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	ebx, DWORD PTR _this$[ebp]

; 737  : 		_Vec.resize(_Right._Vec.size(), end());

	mov	edx, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+28]
	lea	esi, DWORD PTR [ebx+8]
	sub	esp, 8
	mov	DWORD PTR $T607849[ebp], esp
	mov	eax, esp
	test	edx, edx
	je	SHORT $LN34@Copy@10
	mov	edx, DWORD PTR [edx]
	jmp	SHORT $LN35@Copy@10
$LN34@Copy@10:
	xor	edx, edx
$LN35@Copy@10:
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR [edi+52]
	sub	eax, DWORD PTR [edi+48]
	lea	ecx, DWORD PTR [ebx+36]
	sar	eax, 3
	push	eax
	mov	eax, ecx
	mov	DWORD PTR tv728[ebp], ecx
	call	?resize@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAEXIU_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::resize

; 738  : 		_Mask = _Right._Mask;

	mov	edx, DWORD PTR [edi+60]
	mov	DWORD PTR [ebx+60], edx

; 739  : 		_Maxidx = _Right._Maxidx;

	mov	eax, DWORD PTR [edi+64]
	mov	DWORD PTR [ebx+64], eax

; 740  : 		_Max_bucket_size = _Right._Max_bucket_size;

	fld	DWORD PTR [edi+68]
	fstp	DWORD PTR [ebx+68]

; 741  : 		_List.clear();

	mov	eax, DWORD PTR [esi+20]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+4], eax
	mov	DWORD PTR [esi+24], 0
	cmp	ecx, DWORD PTR [esi+20]
	je	SHORT $LN56@Copy@10
	npad	6
$LL58@Copy@10:
	mov	edx, DWORD PTR [ecx]
	push	ecx
	mov	DWORD PTR __Pnext$608062[ebp], edx
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR __Pnext$608062[ebp]
	add	esp, 4
	cmp	ecx, DWORD PTR [esi+20]
	jne	SHORT $LL58@Copy@10
$LN56@Copy@10:

; 742  : 
; 743  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 744  : 		_List.insert(end(), _Right._List.begin(), _Right._List.end());

	mov	edx, DWORD PTR [edi+28]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [esi+20]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR $T607852[ebp+4], edx
	mov	edx, DWORD PTR [edi+28]
	push	edx
	mov	edx, DWORD PTR [edi+8]
	push	edx
	mov	edx, DWORD PTR $T607852[ebp+4]
	push	edx
	mov	edx, DWORD PTR [edi+8]
	push	edx
	push	eax
	mov	eax, DWORD PTR $T608274[ebp]
	push	ecx
	push	eax
	push	esi
	call	??$_Insert@V?$_Const_iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Insert<std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Const_iterator<1> >

; 745  : 		this->comp = _Right.comp;

	mov	cx, WORD PTR [edi+4]
	mov	WORD PTR [ebx+4], cx

; 750  : 		_CATCH_END
; 751  : 
; 752  : 		iterator _Whereto = begin();

	mov	edx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [edx]

; 753  : 		const_iterator _Wherefrom = _Right.begin();

	mov	edx, DWORD PTR [edi+28]

; 754  : 		for (size_type _Bucket = 0; _Bucket < _Vec.size(); )

	mov	ebx, DWORD PTR tv728[ebp]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR __Whereto$[ebp+4], eax
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ebx+16]
	sub	edx, DWORD PTR [ebx+12]
	mov	DWORD PTR __Whereto$[ebp], ecx
	mov	ecx, DWORD PTR [edi+8]
	sar	edx, 3
	xor	esi, esi
	mov	DWORD PTR __Wherefrom$[ebp+4], eax
	mov	DWORD PTR __Wherefrom$[ebp], ecx
	test	edx, edx
	jbe	$LN3@Copy@10
	npad	1
$LL4@Copy@10:

; 755  : 			if (_Right._Vec[_Bucket] == _Wherefrom)

	mov	eax, DWORD PTR [edi+52]
	sub	eax, DWORD PTR [edi+48]
	sar	eax, 3
	cmp	esi, eax
	jb	SHORT $LN181@Copy@10
	call	__invalid_parameter_noinfo
$LN181@Copy@10:
	mov	ecx, DWORD PTR [edi+48]
	mov	edx, DWORD PTR __Wherefrom$[ebp+4]

; 756  : 				_Vec[_Bucket] = _Whereto, ++_Bucket;

	mov	eax, DWORD PTR __Whereto$[ebp]
	cmp	DWORD PTR [ecx+esi*8+4], edx
	jne	SHORT $LN2@Copy@10
	test	eax, eax
	je	SHORT $LN196@Copy@10
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN197@Copy@10
$LN196@Copy@10:
	xor	eax, eax
$LN197@Copy@10:
	mov	ecx, DWORD PTR [ebx+16]
	sub	ecx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [eax]
	sar	ecx, 3
	mov	DWORD PTR $T607858[ebp], eax
	cmp	esi, ecx
	jb	SHORT $LN216@Copy@10
	call	__invalid_parameter_noinfo
$LN216@Copy@10:
	mov	eax, DWORD PTR [ebx+12]
	mov	edx, DWORD PTR $T607858[ebp]
	mov	ecx, DWORD PTR __Whereto$[ebp+4]
	mov	DWORD PTR [eax+esi*8], edx
	mov	DWORD PTR [eax+esi*8+4], ecx
	inc	esi

; 757  : 			else

	jmp	SHORT $LN243@Copy@10
$LN2@Copy@10:

; 758  : 				++_Whereto, ++_Wherefrom;

	test	eax, eax
	jne	SHORT $LN260@Copy@10
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN234@Copy@10:
	mov	edx, DWORD PTR __Whereto$[ebp+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN223@Copy@10
	call	__invalid_parameter_noinfo
$LN223@Copy@10:
	mov	eax, DWORD PTR __Whereto$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Wherefrom$[ebp]
	mov	DWORD PTR __Whereto$[ebp+4], ecx
	test	eax, eax
	jne	SHORT $LN259@Copy@10
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN250@Copy@10:
	mov	edx, DWORD PTR __Wherefrom$[ebp+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN239@Copy@10
	call	__invalid_parameter_noinfo
$LN239@Copy@10:
	mov	eax, DWORD PTR __Wherefrom$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherefrom$[ebp+4], ecx
$LN243@Copy@10:
	mov	edx, DWORD PTR [ebx+16]
	sub	edx, DWORD PTR [ebx+12]
	sar	edx, 3
	cmp	esi, edx
	jb	$LL4@Copy@10
$LN3@Copy@10:

; 759  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN260@Copy@10:

; 758  : 				++_Whereto, ++_Wherefrom;

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN234@Copy@10
$LN259@Copy@10:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN250@Copy@10
__catch$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z$0:

; 746  : 		_CATCH_ALL
; 747  : 		_List.clear();	// list or compare copy failed, bail out

	mov	edi, DWORD PTR _this$[ebp]
	lea	esi, DWORD PTR [edi+8]
	call	?clear@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAEXXZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::clear

; 748  : 		fill(_Vec.begin(), _Vec.end(), end());

	mov	eax, DWORD PTR [esi+20]
	mov	ecx, DWORD PTR [esi]
	add	edi, 36					; 00000024H
	lea	esi, DWORD PTR $T607856[ebp]
	mov	DWORD PTR $T607855[ebp+4], eax
	mov	DWORD PTR $T607855[ebp], ecx
	call	?end@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@2@XZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::end
	lea	esi, DWORD PTR $T607857[ebp]
	mov	ebx, eax
	call	?begin@?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE?AV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@2@XZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::begin
	mov	edx, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx]
	push	edx
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	edx
	push	eax
	lea	edi, DWORD PTR $T607855[ebp]
	call	??$fill@V?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@V?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@2@@std@@YAXV?$_Vector_iterator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@0@0ABV?$_Iterator@$00@?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@0@@Z ; std::fill<std::_Vector_iterator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >,std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::_Iterator<1> >
	add	esp, 16					; 00000010H

; 749  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN263@Copy@10:
$LN262@Copy@10:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Copy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\unordered_map
;	COMDAT ??A?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAEAAU?$pair@PAVTransaction@DRAMsimII@@PAV12@@2@ABI@Z
_TEXT	SEGMENT
$T608773 = -24						; size = 12
__Where$ = -24						; size = 8
$T608771 = -12						; size = 12
$T608770 = -12						; size = 8
__Keyval$ = 8						; size = 4
??A?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAEAAU?$pair@PAVTransaction@DRAMsimII@@PAV12@@2@ABI@Z PROC ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::operator[], COMDAT
; _this$ = esi

; 209  : 		{	// find element matching _Keyval or insert with default mapped

	sub	esp, 28					; 0000001cH
	push	ebx
	mov	ebx, DWORD PTR __Keyval$[esp+28]
	push	ebp
	push	edi

; 210  : 		iterator _Where = this->lower_bound(_Keyval);

	push	ebx
	lea	eax, DWORD PTR __Where$[esp+44]
	push	eax
	push	esi
	call	?lower_bound@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::lower_bound

; 211  : 		if (_Where == this->end())

	mov	edi, DWORD PTR __Where$[esp+40]
	mov	ecx, DWORD PTR [esi+28]
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR $T608770[esp+44], ecx
	test	edi, edi
	je	SHORT $LN22@operator@391
	cmp	edi, eax
	je	SHORT $LN23@operator@391
$LN22@operator@391:
	call	__invalid_parameter_noinfo
$LN23@operator@391:
	mov	ebp, DWORD PTR __Where$[esp+44]
	cmp	ebp, DWORD PTR $T608770[esp+44]
	jne	SHORT $LN1@operator@391

; 212  : 			_Where = _Mybase::insert(value_type(_Keyval, mapped_type())).first;

	mov	edx, DWORD PTR [ebx]
	xor	eax, eax
	xor	ecx, ecx
	mov	DWORD PTR $T608771[esp+44], eax
	mov	eax, DWORD PTR [esi+28]
	push	eax
	mov	DWORD PTR $T608771[esp+52], ecx
	mov	ecx, DWORD PTR [esi+8]
	push	ecx
	lea	eax, DWORD PTR $T608771[esp+48]
	push	eax
	lea	ecx, DWORD PTR $T608773[esp+52]
	push	ecx
	push	esi
	mov	DWORD PTR $T608771[esp+60], edx
	call	?_Insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Insert
	mov	edi, DWORD PTR $T608773[esp+40]
	mov	ebp, DWORD PTR $T608773[esp+44]
$LN1@operator@391:

; 213  : 		return ((*_Where).second);

	test	edi, edi
	jne	SHORT $LN73@operator@391
	call	__invalid_parameter_noinfo
$LN68@operator@391:
	cmp	ebp, DWORD PTR [edi+20]
	jne	SHORT $LN74@operator@391
	call	__invalid_parameter_noinfo
$LN74@operator@391:

; 214  : 		}

	pop	edi
	lea	eax, DWORD PTR [ebp+12]
	pop	ebp
	pop	ebx
	add	esp, 28					; 0000001cH
	ret	4
$LN73@operator@391:

; 213  : 		return ((*_Where).second);

	mov	edi, DWORD PTR [edi]
	jmp	SHORT $LN68@operator@391
??A?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAEAAU?$pair@PAVTransaction@DRAMsimII@@PAV12@@2@ABI@Z ENDP ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::operator[]
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T609238 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$609372 = 8					; size = 1
_this$ = 8						; size = 4
$T609368 = 12						; size = 1
__Right$ = 12						; size = 4
??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >, COMDAT

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR __Right$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN19@vector@68
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN20@vector@68
$LN19@vector@68:
	xor	eax, eax
$LN20@vector@68:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 501  : 		if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR [ebx+16]
	sub	ecx, DWORD PTR [ebx+12]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	edi, edx
	mov	eax, 0
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	je	SHORT $LN8@vector@68
	cmp	edi, 178956970				; 0aaaaaaaH
	jbe	SHORT $LN46@vector@68
	call	?_Xlen@?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@KAXXZ ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Xlen
$LN107@vector@68:
$LN46@vector@68:
	mov	ecx, edi
	call	?allocate@?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@std@@QAEPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@2@I@Z ; std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > >::allocate
	lea	ecx, DWORD PTR [edi+edi*2]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], edx

; 502  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	eax, DWORD PTR [ebx+16]
	mov	DWORD PTR $T609238[ebp], eax
	cmp	DWORD PTR [ebx+12], eax
	jbe	SHORT $LN60@vector@68
	call	__invalid_parameter_noinfo
$LN60@vector@68:
	mov	edi, DWORD PTR [ebx+12]
	cmp	edi, DWORD PTR [ebx+16]
	jbe	SHORT $LN74@vector@68
	call	__invalid_parameter_noinfo
$LN74@vector@68:
	mov	edx, DWORD PTR __Cat$609372[ebp]
	mov	eax, DWORD PTR [esi+12]
	mov	BYTE PTR $T609368[ebp], 0
	mov	ecx, DWORD PTR $T609368[ebp]
	push	ecx
	push	edx
	push	eax
	mov	eax, DWORD PTR $T609238[ebp]
	push	eax
	mov	ecx, edi
	call	??$_Uninit_copy@PBV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > const *,std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > *,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+16], eax
$LN8@vector@68:

; 507  : 			_CATCH_END
; 508  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	esi, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::_Tidy

; 506  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN108@vector@68:
$LN106@vector@68:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$2:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >, COMDAT
; __Right$ = edi

; 360  : 		{	// construct hash table by copying right

	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+16]
	mov	ax, WORD PTR [edi+4]
	lea	ecx, DWORD PTR [esi+8]
	push	ecx
	mov	WORD PTR [esi+4], ax
	call	??0?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBII@std@@@1@@Z ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
	lea	edx, DWORD PTR [esi+36]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+32], 0
	call	??0?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@ABV?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@1@@Z ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >

; 361  : 		_Copy(_Right);

	push	esi
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[esp+32], 1
	call	?_Copy@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@IAEXABV12@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Copy

; 362  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 8
	jmp	??1?$list@U?$pair@$$CBII@std@@V?$allocator@U?$pair@$$CBII@std@@@2@@std@@QAE@XZ ; std::list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::~list<std::pair<unsigned int const ,unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z$1:
	mov	esi, DWORD PTR _this$[ebp-4]
	add	esi, 36					; 00000024H
	jmp	??1?$vector@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@V?$allocator@U_List_position@?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@@std@@@std@@QAE@XZ ; std::vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >::~vector<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position,std::allocator<stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_List_position> >
__ehhandler$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T609624 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$609758 = 8					; size = 1
_this$ = 8						; size = 4
$T609755 = 12						; size = 1
__Right$ = 12						; size = 4
??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >, COMDAT

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR __Right$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN19@vector@69
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN20@vector@69
$LN19@vector@69:
	xor	eax, eax
$LN20@vector@69:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 501  : 		if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR [ebx+16]
	sub	ecx, DWORD PTR [ebx+12]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	edi, edx
	mov	eax, 0
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	je	SHORT $LN8@vector@69
	cmp	edi, 178956970				; 0aaaaaaaH
	jbe	SHORT $LN46@vector@69
	call	?_Xlen@?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@KAXXZ ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Xlen
$LN107@vector@69:
$LN46@vector@69:
	mov	ecx, edi
	call	?allocate@?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@std@@QAEPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@2@I@Z ; std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > >::allocate
	lea	ecx, DWORD PTR [edi+edi*2]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], edx

; 502  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	eax, DWORD PTR [ebx+16]
	mov	DWORD PTR $T609624[ebp], eax
	cmp	DWORD PTR [ebx+12], eax
	jbe	SHORT $LN60@vector@69
	call	__invalid_parameter_noinfo
$LN60@vector@69:
	mov	edi, DWORD PTR [ebx+12]
	cmp	edi, DWORD PTR [ebx+16]
	jbe	SHORT $LN74@vector@69
	call	__invalid_parameter_noinfo
$LN74@vector@69:
	mov	edx, DWORD PTR __Cat$609758[ebp]
	mov	eax, DWORD PTR [esi+12]
	mov	BYTE PTR $T609755[ebp], 0
	mov	ecx, DWORD PTR $T609755[ebp]
	push	ecx
	push	edx
	push	eax
	mov	eax, DWORD PTR $T609624[ebp]
	push	eax
	mov	ecx, edi
	call	??$_Uninit_copy@PBV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@PAV12@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@YAPAV?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > const *,std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > *,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+16], eax
$LN8@vector@69:

; 507  : 			_CATCH_END
; 508  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	esi, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::_Tidy

; 506  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN108@vector@69:
$LN106@vector@69:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z$2:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@ABV012@@Z
_TEXT	SEGMENT
??0?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@ABV012@@Z PROC ; std::tr1::unordered_map<unsigned int,unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::unordered_map<unsigned int,unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >, COMDAT
; _this$ = esi
; ___that$ = edi
	push	esi
	call	??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
	mov	eax, esi
	ret	0
??0?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@ABV012@@Z ENDP ; std::tr1::unordered_map<unsigned int,unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >::unordered_map<unsigned int,unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned int> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T625551 = -28						; size = 4
__Vptr$625548 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Last$ = 8						; size = 4
__Dest$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >, COMDAT
; __First$ = ecx

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR __Dest$[ebp]
	mov	edi, ecx

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
$LL6@Uninit_cop@14:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@14

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$625548[ebp], esi
	mov	DWORD PTR $T625551[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@14
	push	edi
	push	esi
	call	??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
$LN18@Uninit_cop@14:
	add	esi, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 24					; 00000018H
	jmp	SHORT $LL6@Uninit_cop@14
__catch$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@14
	npad	6
$LL3@Uninit_cop@14:

; 134  : 		_Al.destroy(_Next);

	call	?destroy@?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@std@@QAEXPAV?$vector@IV?$allocator@I@std@@@2@@Z ; std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > >::destroy
	add	esi, 24					; 00000018H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@14
$LN1@Uninit_cop@14:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN29@Uninit_cop@14:
$LN4@Uninit_cop@14:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN28@Uninit_cop@14:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$625548[ebp]
	push	eax
	mov	ecx, DWORD PTR $T625551[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@stdext@@YAPAV?$vector@IV?$allocator@I@std@@@std@@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T625572 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$625576 = 16					; size = 1
__Last$ = 16						; size = 8
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@stdext@@YAPAV?$vector@IV?$allocator@I@std@@@std@@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >, COMDAT
; __Dest$ = edx

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$625576[esp]
	mov	BYTE PTR $T625572[esp+4], 0
	mov	eax, DWORD PTR $T625572[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+12]
	push	edx
	push	eax
	call	??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >

; 823  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@PAV?$vector@IV?$allocator@I@std@@@2@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@stdext@@YAPAV?$vector@IV?$allocator@I@std@@@std@@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@2@0PAV12@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEPAV?$vector@IV?$allocator@I@std@@@1@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@1@0PAV21@@Z
_TEXT	SEGMENT
$T625658 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$625661 = 16					; size = 1
__Last$ = 16						; size = 8
??$_Ucopy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEPAV?$vector@IV?$allocator@I@std@@@1@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@1@0PAV21@@Z PROC ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Ucopy<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > >, COMDAT
; __Ptr$ = edx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	ecx, DWORD PTR __Cat$625661[esp]
	mov	BYTE PTR $T625658[esp+4], 0
	mov	eax, DWORD PTR $T625658[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+12]
	push	edx
	push	eax
	call	??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >

; 1142 : 		}

	add	esp, 20					; 00000014H
	ret	16					; 00000010H
??$_Ucopy@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEPAV?$vector@IV?$allocator@I@std@@@1@V?$_Vector_const_iterator@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@1@0PAV21@@Z ENDP ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Ucopy<std::_Vector_const_iterator<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xhash
_TEXT	ENDS
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ
_TEXT	SEGMENT
$T625684 = -20						; size = 8
$T625685 = -12						; size = 12
?_Reinsert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 887  : 		{	// insert elements at beginning of list into table

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx
	push	edi
	lea	edi, DWORD PTR [ebx+8]
	npad	4
$LL2@Reinsert:

; 888  : 		iterator _First;
; 889  : 		for (; (_First = _List.begin()) != _Get_iter_from_vec(_Vec[0]); )

	mov	ecx, DWORD PTR [ebx+52]
	sub	ecx, DWORD PTR [ebx+48]
	mov	eax, DWORD PTR [edi+20]
	mov	ebp, DWORD PTR [eax]
	mov	esi, DWORD PTR [edi]
	sar	ecx, 3
	test	ecx, ecx
	ja	SHORT $LN33@Reinsert
	call	__invalid_parameter_noinfo
$LN33@Reinsert:
	mov	edx, DWORD PTR [ebx+48]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T625684[esp+40], eax
	test	edi, edi
	jne	SHORT $LN46@Reinsert
	call	__invalid_parameter_noinfo
$LN46@Reinsert:
	mov	eax, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN60@Reinsert
	cmp	esi, eax
	je	SHORT $LN61@Reinsert
$LN60@Reinsert:
	call	__invalid_parameter_noinfo
$LN61@Reinsert:
	cmp	ebp, DWORD PTR $T625684[esp+40]
	je	SHORT $LN1@Reinsert

; 890  : 			_Insert(*_First, _First);

	test	esi, esi
	jne	SHORT $LN88@Reinsert
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN82@Reinsert:
	cmp	ebp, DWORD PTR [eax+20]
	jne	SHORT $LN71@Reinsert
	call	__invalid_parameter_noinfo
$LN71@Reinsert:
	push	ebp
	push	esi
	add	ebp, 8
	push	ebp
	lea	ecx, DWORD PTR $T625685[esp+48]
	push	ecx
	push	ebx
	call	?_Insert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@4@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Insert
	jmp	SHORT $LL2@Reinsert
$LN88@Reinsert:
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN82@Reinsert
$LN1@Reinsert:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 891  : 		}

	add	esp, 20					; 00000014H
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Reinsert
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T626173 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$626308 = 8					; size = 1
_this$ = 8						; size = 4
$T626305 = 12						; size = 1
__Right$ = 12						; size = 4
??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >, COMDAT

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR __Right$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN19@vector@73
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN20@vector@73
$LN19@vector@73:
	xor	eax, eax
$LN20@vector@73:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 501  : 		if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR [ebx+16]
	sub	ecx, DWORD PTR [ebx+12]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	edi, edx
	mov	eax, 0
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	je	SHORT $LN8@vector@73
	cmp	edi, 178956970				; 0aaaaaaaH
	jbe	SHORT $LN46@vector@73
	call	?_Xlen@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@KAXXZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Xlen
$LN107@vector@73:
$LN46@vector@73:
	mov	ecx, edi
	call	?allocate@?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@std@@QAEPAV?$vector@IV?$allocator@I@std@@@2@I@Z ; std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > >::allocate
	lea	ecx, DWORD PTR [edi+edi*2]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], edx

; 502  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	eax, DWORD PTR [ebx+16]
	mov	DWORD PTR $T626173[ebp], eax
	cmp	DWORD PTR [ebx+12], eax
	jbe	SHORT $LN60@vector@73
	call	__invalid_parameter_noinfo
$LN60@vector@73:
	mov	edi, DWORD PTR [ebx+12]
	cmp	edi, DWORD PTR [ebx+16]
	jbe	SHORT $LN74@vector@73
	call	__invalid_parameter_noinfo
$LN74@vector@73:
	mov	edx, DWORD PTR __Cat$626308[ebp]
	mov	eax, DWORD PTR [esi+12]
	mov	BYTE PTR $T626305[ebp], 0
	mov	ecx, DWORD PTR $T626305[ebp]
	push	ecx
	push	edx
	push	eax
	mov	eax, DWORD PTR $T626173[ebp]
	push	eax
	mov	ecx, edi
	call	??$_Uninit_copy@PBV?$vector@IV?$allocator@I@std@@@std@@PAV12@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@YAPAV?$vector@IV?$allocator@I@std@@@0@PBV10@0PAV10@AAV?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<unsigned int,std::allocator<unsigned int> > const *,std::vector<unsigned int,std::allocator<unsigned int> > *,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+16], eax
$LN8@vector@73:

; 507  : 			_CATCH_END
; 508  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	esi, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEXXZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::_Tidy

; 506  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN108@vector@73:
$LN106@vector@73:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z$2:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
PUBLIC	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4OutputFileType@0@@Z ; DRAMsimII::operator<<
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4OutputFileType@0@@Z PROC ; DRAMsimII::operator<<
; _os$ = esi
; _ot$ = eax

; 614  : 	switch (ot)

	cmp	eax, 4
	ja	SHORT $LN1@operator@408
	jmp	DWORD PTR $LN12@operator@408[eax*4]
$LN6@operator@408:

; 615  : 	{
; 616  : 	case COUT:
; 617  : 		os << "cout";

	push	OFFSET ??_C@_04JNGDPEGD@cout?$AA@

; 630  : 		break;
; 631  : 	default:
; 632  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 633  : 		break;
; 634  : 	}
; 635  : 
; 636  : 	return os;

	mov	eax, esi
	add	esp, 8

; 637  : }

	ret	0
$LN5@operator@408:

; 618  : 		break;
; 619  : 	case GZ:
; 620  : 		os << "gz";

	push	OFFSET ??_C@_02JIPGGKDE@gz?$AA@

; 630  : 		break;
; 631  : 	default:
; 632  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 633  : 		break;
; 634  : 	}
; 635  : 
; 636  : 	return os;

	mov	eax, esi
	add	esp, 8

; 637  : }

	ret	0
$LN4@operator@408:

; 621  : 		break;
; 622  : 	case BZ:
; 623  : 		os << "bz2";

	push	OFFSET ??_C@_03PLICKGJM@bz2?$AA@

; 630  : 		break;
; 631  : 	default:
; 632  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 633  : 		break;
; 634  : 	}
; 635  : 
; 636  : 	return os;

	mov	eax, esi
	add	esp, 8

; 637  : }

	ret	0
$LN3@operator@408:

; 624  : 		break;
; 625  : 	case UNCOMPRESSED:
; 626  : 		os << "uncompressed";

	push	OFFSET ??_C@_0N@NFCOPMLF@uncompressed?$AA@

; 630  : 		break;
; 631  : 	default:
; 632  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 633  : 		break;
; 634  : 	}
; 635  : 
; 636  : 	return os;

	mov	eax, esi
	add	esp, 8

; 637  : }

	ret	0
$LN2@operator@408:

; 627  : 		break;
; 628  : 	case NONE:
; 629  : 		os << "none";

	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@

; 630  : 		break;
; 631  : 	default:
; 632  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 633  : 		break;
; 634  : 	}
; 635  : 
; 636  : 	return os;

	mov	eax, esi
	add	esp, 8

; 637  : }

	ret	0
$LN1@operator@408:

; 630  : 		break;
; 631  : 	default:
; 632  : 		os << "unknown";

	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 633  : 		break;
; 634  : 	}
; 635  : 
; 636  : 	return os;

	mov	eax, esi
	add	esp, 8

; 637  : }

	ret	0
	npad	2
$LN12@operator@408:
	DD	$LN6@operator@408
	DD	$LN5@operator@408
	DD	$LN4@operator@408
	DD	$LN3@operator@408
	DD	$LN2@operator@408
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4OutputFileType@0@@Z ENDP ; DRAMsimII::operator<<
_TEXT	ENDS
PUBLIC	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4TransactionOrderingAlgorithm@0@@Z ; DRAMsimII::operator<<
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4TransactionOrderingAlgorithm@0@@Z PROC ; DRAMsimII::operator<<
; _os$ = esi
; _toa$ = eax

; 597  : 	switch (toa)

	sub	eax, 0
	je	SHORT $LN3@operator@409
	sub	eax, 1
	je	SHORT $LN2@operator@409

; 604  : 		break;
; 605  : 	default:
; 606  : 		os << "unknown";

	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 607  : 		break;
; 608  : 	}
; 609  : 	return os;

	mov	eax, esi

; 610  : }

	ret	0
$LN2@operator@409:

; 601  : 		break;
; 602  : 	case STRICT:
; 603  : 		os << "strict";

	push	OFFSET ??_C@_06OLFOGHEN@strict?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 607  : 		break;
; 608  : 	}
; 609  : 	return os;

	mov	eax, esi

; 610  : }

	ret	0
$LN3@operator@409:

; 598  : 	{
; 599  : 	case RIFF:
; 600  : 		os << "RIFF";

	push	OFFSET ??_C@_04EPCGJKAP@RIFF?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 607  : 		break;
; 608  : 	}
; 609  : 	return os;

	mov	eax, esi

; 610  : }

	ret	0
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4TransactionOrderingAlgorithm@0@@Z ENDP ; DRAMsimII::operator<<
_TEXT	ENDS
PUBLIC	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RefreshPolicy@0@@Z ; DRAMsimII::operator<<
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RefreshPolicy@0@@Z PROC ; DRAMsimII::operator<<
; _os$ = esi
; _rp$ = eax

; 573  : 	switch (rp)

	cmp	eax, 3
	ja	SHORT $LN1@operator@410
	jmp	DWORD PTR $LN11@operator@410[eax*4]
$LN5@operator@410:

; 574  : 	{
; 575  : 	case NO_REFRESH:
; 576  : 		os << "none";

	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@

; 586  : 		break;
; 587  : 	default:
; 588  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 589  : 		break;
; 590  : 	}
; 591  : 
; 592  : 	return os;

	mov	eax, esi

; 593  : }

	ret	0
$LN4@operator@410:

; 577  : 		break;
; 578  : 	case BANK_CONCURRENT:
; 579  : 		os << "bankConcurrent";

	push	OFFSET ??_C@_0P@KFFKBIKA@bankConcurrent?$AA@

; 586  : 		break;
; 587  : 	default:
; 588  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 589  : 		break;
; 590  : 	}
; 591  : 
; 592  : 	return os;

	mov	eax, esi

; 593  : }

	ret	0
$LN3@operator@410:

; 580  : 		break;
; 581  : 	case BANK_STAGGERED_HIDDEN:
; 582  : 		os << "bankStaggeredHidden";

	push	OFFSET ??_C@_0BE@GGMPALAP@bankStaggeredHidden?$AA@

; 586  : 		break;
; 587  : 	default:
; 588  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 589  : 		break;
; 590  : 	}
; 591  : 
; 592  : 	return os;

	mov	eax, esi

; 593  : }

	ret	0
$LN2@operator@410:

; 583  : 		break;
; 584  : 	case ONE_CHANNEL_ALL_RANK_ALL_BANK:
; 585  : 		os << "refreshOneChanAllRankAllBank";

	push	OFFSET ??_C@_0BN@EACCCNHH@refreshOneChanAllRankAllBank?$AA@

; 586  : 		break;
; 587  : 	default:
; 588  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 589  : 		break;
; 590  : 	}
; 591  : 
; 592  : 	return os;

	mov	eax, esi

; 593  : }

	ret	0
$LN1@operator@410:

; 586  : 		break;
; 587  : 	default:
; 588  : 		os << "unknown";

	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 589  : 		break;
; 590  : 	}
; 591  : 
; 592  : 	return os;

	mov	eax, esi

; 593  : }

	ret	0
	npad	3
$LN11@operator@410:
	DD	$LN5@operator@410
	DD	$LN4@operator@410
	DD	$LN3@operator@410
	DD	$LN2@operator@410
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RefreshPolicy@0@@Z ENDP ; DRAMsimII::operator<<
_TEXT	ENDS
PUBLIC	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4SystemConfigurationType@0@@Z ; DRAMsimII::operator<<
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4SystemConfigurationType@0@@Z PROC ; DRAMsimII::operator<<
; _os$ = esi
; _ct$ = eax

; 556  : 	switch (ct)

	sub	eax, 0
	je	SHORT $LN3@operator@411
	sub	eax, 1
	je	SHORT $LN2@operator@411

; 563  : 		break;
; 564  : 	default:
; 565  : 		os << "unknown";

	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 566  : 		break;
; 567  : 	}
; 568  : 
; 569  : 	return os;

	mov	eax, esi

; 570  : }

	ret	0
$LN2@operator@411:

; 560  : 		break;
; 561  : 	case FBD_CONFIG:
; 562  : 		os << "fbd";

	push	OFFSET ??_C@_03IKDEDJNB@fbd?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 566  : 		break;
; 567  : 	}
; 568  : 
; 569  : 	return os;

	mov	eax, esi

; 570  : }

	ret	0
$LN3@operator@411:

; 557  : 	{
; 558  : 	case BASELINE_CONFIG:
; 559  : 		os << "baseline";

	push	OFFSET ??_C@_08LCLEONAE@baseline?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 566  : 		break;
; 567  : 	}
; 568  : 
; 569  : 	return os;

	mov	eax, esi

; 570  : }

	ret	0
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4SystemConfigurationType@0@@Z ENDP ; DRAMsimII::operator<<
_TEXT	ENDS
PUBLIC	__real@3f1a36e2eb1c432d
PUBLIC	__real@4059000000000000
PUBLIC	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVSystem@0@@Z ; DRAMsimII::operator<<
;	COMDAT __real@3f1a36e2eb1c432d
; File c:\program files\microsoft visual studio 9.0\vc\include\iomanip
CONST	SEGMENT
__real@3f1a36e2eb1c432d DQ 03f1a36e2eb1c432dr	; 0.0001
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
CONST	ENDS
_TEXT	SEGMENT
$T626372 = -24						; size = 8
$T626376 = -16						; size = 8
$T626352 = -8						; size = 8
_os$ = 8						; size = 4
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVSystem@0@@Z PROC ; DRAMsimII::operator<<
; _thisSystem$ = eax

; 511  : {

	sub	esp, 24					; 00000018H
	push	ebx
	mov	ebx, DWORD PTR _os$[esp+24]
	push	ebp
	push	esi
	push	edi

; 512  : 
; 513  : 	os << "SYS[";

	push	OFFSET ??_C@_04MHNOOJKH@SYS?$FL?$AA@
	push	ebx
	mov	esi, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8

; 514  : 	switch(thisSystem.systemConfig.getConfigType())

	cmp	DWORD PTR [esi+304], 0
	je	SHORT $LN10@operator@412

; 518  : 		break;
; 519  : 	default:
; 520  : 		os << "UNKN] ";

	push	OFFSET ??_C@_06IDCEFCJK@UNKN?$FN?5?$AA@

; 521  : 		break;

	jmp	SHORT $LN31@operator@412
$LN10@operator@412:

; 515  : 	{
; 516  : 	case BASELINE_CONFIG:
; 517  : 		os << "BASE] ";

	push	OFFSET ??_C@_06FHJKBJEN@BASE?$FN?5?$AA@
$LN31@operator@412:
	push	ebx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 522  : 	}
; 523  : 	os << "RC[" << thisSystem.systemConfig.getRankCount() << "] ";

	mov	eax, DWORD PTR [esi+368]
	add	esp, 8
	push	OFFSET ??_C@_02PBFOLPKM@?$FN?5?$AA@
	push	eax
	push	OFFSET ??_C@_03JECMFAMM@RC?$FL?$AA@
	push	ebx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 524  : 	os << "BC[" << thisSystem.systemConfig.getBankCount() << "] ";

	mov	eax, DWORD PTR [esi+372]
	add	esp, 8
	push	OFFSET ??_C@_02PBFOLPKM@?$FN?5?$AA@
	push	eax
	push	OFFSET ??_C@_03MEDFAHFD@BC?$FL?$AA@
	push	ebx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 525  : 	os << "ALG[";

	push	OFFSET ??_C@_04KBBGIBEE@ALG?$FL?$AA@
	push	ebx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 526  : 	switch(thisSystem.systemConfig.getCommandOrderingAlgorithm())

	mov	eax, DWORD PTR [esi+296]
	add	esp, 16					; 00000010H
	cmp	eax, 6
	ja	SHORT $LN1@operator@412
	jmp	DWORD PTR $LN33@operator@412[eax*4]
$LN6@operator@412:

; 527  : 	{
; 528  : 	case STRICT_ORDER:
; 529  : 		os << "STR ] ";

	push	OFFSET ??_C@_06PELADDJO@STR?5?$FN?5?$AA@

; 530  : 		break;

	jmp	SHORT $LN32@operator@412
$LN5@operator@412:

; 531  : 	case RANK_ROUND_ROBIN:
; 532  : 		os << "RRR ] ";

	push	OFFSET ??_C@_06IEJONLDH@RRR?5?$FN?5?$AA@

; 533  : 		break;

	jmp	SHORT $LN32@operator@412
$LN4@operator@412:

; 534  : 	case BANK_ROUND_ROBIN:
; 535  : 		os << "BRR ] ";

	push	OFFSET ??_C@_06ODEAEHPJ@BRR?5?$FN?5?$AA@

; 536  : 		break;

	jmp	SHORT $LN32@operator@412
$LN3@operator@412:

; 537  : 	case COMMAND_PAIR_RANK_HOPPING:
; 538  : 		os << "CPRH] ";

	push	OFFSET ??_C@_06PGGNDCKK@CPRH?$FN?5?$AA@

; 539  : 		break;

	jmp	SHORT $LN32@operator@412
$LN2@operator@412:

; 540  : 	case FIRST_AVAILABLE_AGE:
; 541  : 		os << "GRDY] ";

	push	OFFSET ??_C@_06EIOPOFGK@GRDY?$FN?5?$AA@

; 542  : 		break;

	jmp	SHORT $LN32@operator@412
$LN1@operator@412:

; 543  : 	default:
; 544  : 		os << "UNKN] ";

	push	OFFSET ??_C@_06IDCEFCJK@UNKN?$FN?5?$AA@
$LN32@operator@412:
	push	ebx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 545  : 		break;
; 546  : 	}
; 547  : 	
; 548  : 	os << "BLR[" << setprecision(0) << floor(100*(thisSystem.systemConfig.getShortBurstRatio() + 0.0001) + .5) << "] "
; 549  : 		<< "RP[" << (int)(100*thisSystem.systemConfig.getReadPercentage()) << "] "<< thisSystem.systemConfig;

	movsd	xmm0, QWORD PTR [esi+400]
	add	esp, 8
	lea	eax, DWORD PTR $T626352[esp+40]
	movsd	QWORD PTR $T626372[esp+40], xmm0
	movsd	xmm0, QWORD PTR [esi+392]
	push	0
	push	eax
	movsd	QWORD PTR $T626376[esp+48], xmm0
	call	?setprecision@std@@YA?AU?$_Smanip@H@1@H@Z ; std::setprecision
	push	OFFSET ??_C@_04PMFLJKAP@BLR?$FL?$AA@
	push	ebx
	mov	edi, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ebp, eax
	add	esp, 16					; 00000010H
	test	ebp, ebp
	je	SHORT $LN30@operator@412
$LN29@operator@412:
	mov	ecx, DWORD PTR [ebp]
	mov	eax, DWORD PTR [ecx+4]
	add	eax, ebp
$LN30@operator@412:
	mov	edx, DWORD PTR [edi+4]
	push	edx
	push	eax
	mov	eax, DWORD PTR [edi]
	call	eax
	movsd	xmm1, QWORD PTR __real@4059000000000000
	movsd	xmm0, QWORD PTR $T626372[esp+48]
	movsd	xmm2, QWORD PTR __real@4330000000000000
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	mulsd	xmm0, xmm1
	cvttsd2si ecx, xmm0
	movsd	xmm0, QWORD PTR $T626376[esp+48]
	addsd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	add	esp, 8
	mulsd	xmm0, xmm1
	addsd	xmm0, QWORD PTR __real@3fe0000000000000
	movsd	xmm1, QWORD PTR __real@8000000000000000
	push	OFFSET ??_C@_02PBFOLPKM@?$FN?5?$AA@
	movapd	xmm3, xmm0
	push	ecx
	andpd	xmm1, xmm3
	orpd	xmm2, xmm1
	addsd	xmm0, xmm2
	subsd	xmm0, xmm2
	push	OFFSET ??_C@_03IKEMENOF@RP?$FL?$AA@
	movapd	xmm2, xmm0
	push	OFFSET ??_C@_02PBFOLPKM@?$FN?5?$AA@
	subsd	xmm2, xmm3
	cmpnlesd xmm2, xmm1
	sub	esp, 8
	andpd	xmm2, xmm4
	subsd	xmm0, xmm2
	movsd	QWORD PTR [esp], xmm0
	push	ebp
	lea	edi, DWORD PTR [esi+8]
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@N@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVSystemConfiguration@0@@Z ; DRAMsimII::operator<<
	pop	edi
	pop	esi
	pop	ebp

; 550  : 
; 551  : 	return os;

	mov	eax, ebx
	pop	ebx

; 552  : }

	add	esp, 24					; 00000018H
	ret	0
	npad	1
$LN33@operator@412:
	DD	$LN6@operator@412
	DD	$LN5@operator@412
	DD	$LN4@operator@412
	DD	$LN2@operator@412
	DD	$LN1@operator@412
	DD	$LN1@operator@412
	DD	$LN3@operator@412
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVSystem@0@@Z ENDP ; DRAMsimII::operator<<
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Statistics@DRAMsimII@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$10
__ehfuncinfo$??0Statistics@DRAMsimII@@QAE@ABV01@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??0Statistics@DRAMsimII@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0Statistics@DRAMsimII@@QAE@ABV01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
___that$ = 12						; size = 4
??0Statistics@DRAMsimII@@QAE@ABV01@@Z PROC		; DRAMsimII::Statistics::Statistics, COMDAT
	push	-1
	push	__ehhandler$??0Statistics@DRAMsimII@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR ___that$[esp+24]
	mov	esi, DWORD PTR _this$[esp+24]
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR [esi+4], ecx
	mov	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [esi+8], edx
	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [esi+12], eax
	mov	ecx, DWORD PTR [ebx+16]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [ebx+20]
	mov	DWORD PTR [esi+20], edx
	mov	eax, DWORD PTR [ebx+24]
	mov	DWORD PTR [esi+24], eax
	mov	ecx, DWORD PTR [ebx+28]
	mov	DWORD PTR [esi+28], ecx
	mov	edx, DWORD PTR [ebx+32]
	mov	DWORD PTR [esi+32], edx
	mov	eax, DWORD PTR [ebx+36]
	mov	DWORD PTR [esi+36], eax
	mov	ecx, DWORD PTR [ebx+40]
	mov	DWORD PTR [esi+40], ecx
	mov	edx, DWORD PTR [ebx+44]
	mov	DWORD PTR [esi+44], edx
	mov	eax, DWORD PTR [ebx+48]
	lea	ecx, DWORD PTR [ebx+56]
	mov	DWORD PTR [esi+48], eax
	fld	DWORD PTR [ebx+52]
	push	ecx
	fstp	DWORD PTR [esi+52]
	lea	edx, DWORD PTR [esi+56]
	push	edx
	call	??0?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
	lea	eax, DWORD PTR [ebx+80]
	push	eax
	lea	ecx, DWORD PTR [esi+80]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+44], 0
	call	??0?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
	mov	BYTE PTR __$EHRec$[esp+36], 1
	mov	edx, DWORD PTR [ebx+104]
	lea	eax, DWORD PTR [esi+108]
	lea	edi, DWORD PTR [ebx+108]
	push	eax
	mov	DWORD PTR [esi+104], edx
	call	??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
	lea	eax, DWORD PTR [esi+180]
	lea	edi, DWORD PTR [ebx+180]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+40], 2
	call	??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
	lea	eax, DWORD PTR [esi+252]
	lea	edi, DWORD PTR [ebx+252]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+40], 3
	call	??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
	lea	eax, DWORD PTR [esi+324]
	lea	edi, DWORD PTR [ebx+324]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+40], 4
	call	??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
	lea	eax, DWORD PTR [esi+396]
	lea	edi, DWORD PTR [ebx+396]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+40], 5
	call	??0?$_Hash@V?$_Umap_traits@IIV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBII@std@@@std@@$0A@@tr1@std@@@stdext@@QAE@ABV01@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,unsigned int,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,unsigned int> >,0> >
	lea	ecx, DWORD PTR [ebx+468]
	lea	eax, DWORD PTR [esi+468]
	push	ecx
	push	eax
	mov	BYTE PTR __$EHRec$[esp+44], 6
	call	??0?$_Tree@V?$_Tmap_traits@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@$0A@@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,DRAMsimII::Statistics::DelayCounter,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,DRAMsimII::Statistics::DelayCounter> >,0> >
	mov	BYTE PTR __$EHRec$[esp+36], 7
	lea	edx, DWORD PTR [ebx+500]
	lea	eax, DWORD PTR [esi+500]
	push	edx
	push	eax
	call	??0?$_Tree@V?$_Tmap_traits@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@$0A@@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,unsigned int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,unsigned int> >,0> >
	lea	eax, DWORD PTR [ebx+532]
	push	eax
	lea	ecx, DWORD PTR [esi+532]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+44], 8
	call	??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
	lea	edx, DWORD PTR [ebx+556]
	push	edx
	lea	eax, DWORD PTR [esi+556]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+44], 9
	call	??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z ; std::vector<__int64,std::allocator<__int64> >::vector<__int64,std::allocator<__int64> >
	add	ebx, 580				; 00000244H
	push	ebx
	lea	ecx, DWORD PTR [esi+580]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+44], 10		; 0000000aH
	call	??0?$vector@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@U?$pair@_K_K@std@@U12@@std@@V?$allocator@U?$pair@U?$pair@_K_K@std@@U12@@std@@@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >::vector<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > >,std::allocator<std::vector<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> >,std::allocator<std::pair<std::pair<unsigned __int64,unsigned __int64>,std::pair<unsigned __int64,unsigned __int64> > > > > >
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$0:
	mov	esi, DWORD PTR _this$[ebp-4]
	add	esi, 56					; 00000038H
	jmp	??1?$vector@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@II@std@@V?$allocator@U?$pair@II@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >::~vector<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > >,std::allocator<std::vector<std::pair<unsigned int,unsigned int>,std::allocator<std::pair<unsigned int,unsigned int> > > > >
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$1:
	mov	esi, DWORD PTR _this$[ebp-4]
	add	esi, 80					; 00000050H
	jmp	??1?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::~vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$2:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 108				; 0000006cH
	jmp	??1?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@XZ
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$3:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 180				; 000000b4H
	jmp	??1?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@XZ
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$4:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 252				; 000000fcH
	jmp	??1?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@XZ
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$5:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 324				; 00000144H
	jmp	??1?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@XZ
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$6:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 396				; 0000018cH
	jmp	??1?$unordered_map@IIV?$hash@I@tr1@std@@U?$equal_to@I@3@V?$allocator@U?$pair@$$CBII@std@@@3@@tr1@std@@QAE@XZ
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$7:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 468				; 000001d4H
	push	eax
	call	??1?$map@_KVDelayCounter@Statistics@DRAMsimII@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KVDelayCounter@Statistics@DRAMsimII@@@std@@@5@@std@@QAE@XZ
	ret	0
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$8:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 500				; 000001f4H
	push	eax
	call	??1?$map@_KIU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KI@std@@@2@@std@@QAE@XZ
	ret	0
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$9:
	mov	esi, DWORD PTR _this$[ebp-4]
	add	esi, 532				; 00000214H
	jmp	??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
__unwindfunclet$??0Statistics@DRAMsimII@@QAE@ABV01@@Z$10:
	mov	esi, DWORD PTR _this$[ebp-4]
	add	esi, 556				; 0000022cH
	jmp	??1?$vector@_JV?$allocator@_J@std@@@std@@QAE@XZ ; std::vector<__int64,std::allocator<__int64> >::~vector<__int64,std::allocator<__int64> >
__ehhandler$??0Statistics@DRAMsimII@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Statistics@DRAMsimII@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Statistics@DRAMsimII@@QAE@ABV01@@Z ENDP		; DRAMsimII::Statistics::Statistics
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
?printStatistics@System@DRAMsimII@@MAEXXZ PROC		; DRAMsimII::System::printStatistics
; _this$ = ecx

; 326  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx

; 327  : 	systemConfig.statsOutStream << statistics;

	lea	eax, DWORD PTR [ecx+152]
	push	esi
	test	eax, eax
	je	SHORT $LN3@printStati
	lea	eax, DWORD PTR [ecx+160]
	jmp	SHORT $LN4@printStati
$LN3@printStati:
	xor	eax, eax
$LN4@printStati:
	lea	esi, DWORD PTR [ecx+568]
	push	esi
	push	eax
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVStatistics@0@@Z ; DRAMsimII::operator<<
	add	esp, 8

; 328  : 	statistics.clear();

	push	esi
	call	?clear@Statistics@DRAMsimII@@QAEXXZ	; DRAMsimII::Statistics::clear

; 329  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?printStatistics@System@DRAMsimII@@MAEXXZ ENDP		; DRAMsimII::System::printStatistics
_TEXT	ENDS
PUBLIC	?enqueue@System@DRAMsimII@@QAE_NPAVTransaction@2@@Z ; DRAMsimII::System::enqueue
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_currentTransaction$ = 8				; size = 4
?enqueue@System@DRAMsimII@@QAE_NPAVTransaction@2@@Z PROC ; DRAMsimII::System::enqueue
; _this$ = edi

; 243  : 	assert(!currentTransaction->isRefresh());
; 244  : 
; 245  : 	// attempt to insert the transaction into the per-channel transaction queue
; 246  : 	bool result = channel[currentTransaction->getAddress().getChannel()].enqueue(currentTransaction);

	mov	ecx, DWORD PTR [edi+1188]
	sub	ecx, DWORD PTR [edi+1184]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	push	ebx
	mov	ebx, DWORD PTR _currentTransaction$[esp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	push	esi
	mov	esi, DWORD PTR [ebx+56]
	add	eax, edx
	cmp	esi, eax
	jb	SHORT $LN7@enqueue@2
	call	__invalid_parameter_noinfo
$LN7@enqueue@2:
	imul	esi, 456				; 000001c8H
	add	esi, DWORD PTR [edi+1184]
	push	ebx
	push	esi
	call	?enqueue@Channel@DRAMsimII@@QAE_NPAVTransaction@2@@Z ; DRAMsimII::Channel::enqueue

; 247  : 
; 248  : 	DEBUG_TRANSACTION_LOG((result ? "" : "!") << "+T ch[" << currentTransaction->getAddress().getChannel() << "](" << channel[currentTransaction->getAddress().getChannel()].getTransactionQueueCount() << "/" << channel[currentTransaction->getAddress().getChannel()].getTransactionQueueDepth() << ") " << *currentTransaction);
; 249  : 
; 250  : 	return result;
; 251  : }

	pop	esi
	pop	ebx
	ret	4
?enqueue@System@DRAMsimII@@QAE_NPAVTransaction@2@@Z ENDP ; DRAMsimII::System::enqueue
PUBLIC	?runSimulations@System@DRAMsimII@@QAEXI@Z	; DRAMsimII::System::runSimulations
__unwindtable$?runSimulations@System@DRAMsimII@@QAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?runSimulations@System@DRAMsimII@@QAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?runSimulations@System@DRAMsimII@@QAEXI@Z$1
__ehfuncinfo$?runSimulations@System@DRAMsimII@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?runSimulations@System@DRAMsimII@@QAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
$T680159 = -200						; size = 4
_inputTransaction$ = -200				; size = 4
__Num$681655 = -196					; size = 4
$T680198 = -196						; size = 2
_foundOne$145455 = -196					; size = 1
_finishedTransactions$ = -192				; size = 32
$T681662 = -160						; size = 1
_outstandingTransacitonCounter$ = -160			; size = 4
_i$145255 = -156					; size = 8
$T680147 = -148						; size = 8
$T680148 = -140						; size = 8
__Where$681654 = -132					; size = 16
_outstandingTransactions$ = -116			; size = 72
$T680146 = -44						; size = 8
$T680149 = -32						; size = 8
$T681659 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?runSimulations@System@DRAMsimII@@QAEXI@Z PROC		; DRAMsimII::System::runSimulations

; 379  : {

	push	-1
	push	__ehhandler$?runSimulations@System@DRAMsimII@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+224]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _this$[esp+220]

; 380  : 	unsigned outstandingTransacitonCounter = 0;
; 381  : 
; 382  : 	Transaction *inputTransaction = inputStream.getNextIncomingTransaction(outstandingTransacitonCounter++);

	xor	ebx, ebx
	lea	ecx, DWORD PTR [ebp+1200]
	push	ebx
	call	?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z ; DRAMsimII::InputStream::getNextIncomingTransaction
	mov	esi, eax

; 383  : 
; 384  : 	resetToTime(inputTransaction->getArrivalTime());

	mov	ecx, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi+8]
	push	ecx
	push	eax
	mov	edi, ebp
	mov	DWORD PTR _inputTransaction$[esp+232], esi
	mov	DWORD PTR _outstandingTransacitonCounter$[esp+232], 1
	call	?resetToTime@System@DRAMsimII@@QAEX_J@Z	; DRAMsimII::System::resetToTime

; 385  : 
; 386  : 	std::tr1::unordered_map<unsigned,std::pair<Transaction *, Transaction *> > outstandingTransactions;

	lea	eax, DWORD PTR $T680198[esp+224]
	push	eax
	lea	ecx, DWORD PTR _outstandingTransactions$[esp+228]
	push	ecx
	call	??0?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@1@ABV?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >

; 387  : 
; 388  : 	std::queue<std::pair<unsigned, tick> > finishedTransactions;

	push	4
	mov	DWORD PTR __$EHRec$[esp+236], ebx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN66@runSimulat
	lea	edx, DWORD PTR _finishedTransactions$[esp+224]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN67@runSimulat
$LN66@runSimulat:
	xor	eax, eax
$LN67@runSimulat:
	mov	DWORD PTR _finishedTransactions$[esp+224], eax
	mov	DWORD PTR _finishedTransactions$[esp+240], ebx
	mov	DWORD PTR _finishedTransactions$[esp+244], ebx
	mov	DWORD PTR _finishedTransactions$[esp+248], ebx
	mov	DWORD PTR _finishedTransactions$[esp+252], ebx
	mov	BYTE PTR __$EHRec$[esp+232], 1

; 389  : 
; 390  : 	bool running = true;
; 391  : 
; 392  : 	if (inputTransaction)
; 393  : 	{		
; 394  : 		tick newTime = inputTransaction->getArrivalTime();// = (rand() % 65536) + 65536;
; 395  : 
; 396  : 		resetToTime(newTime);

	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+8]
	push	eax
	push	ecx
	mov	edi, ebp
	call	?resetToTime@System@DRAMsimII@@QAEX_J@Z	; DRAMsimII::System::resetToTime

; 397  : 
; 398  : 		for (tick i = requestCount > 0 ? requestCount : simParameters.getRequestCount(); i > 0;)

	mov	eax, DWORD PTR [ebp+556]
	cmp	eax, ebx
	mov	ecx, DWORD PTR [ebp+552]
	mov	DWORD PTR _i$145255[esp+224], ecx
	mov	DWORD PTR _i$145255[esp+228], eax
	jl	$LN710@runSimulat
	jg	SHORT $LL18@runSimulat
	cmp	ecx, ebx
	jbe	$LN710@runSimulat
	npad	2
$LL18@runSimulat:

; 399  : 		{				
; 400  : 			moveToTime(max(min(nextTick(), inputTransaction->getArrivalTime()),time + 1));

	mov	eax, DWORD PTR _inputTransaction$[esp+224]
	mov	edi, DWORD PTR [ebp+11544]
	mov	edx, DWORD PTR [eax+8]
	mov	ebx, DWORD PTR [eax+12]
	mov	esi, DWORD PTR [ebp+11548]
	mov	eax, DWORD PTR [ebp]
	add	edi, 1
	adc	esi, 0
	mov	DWORD PTR $T680147[esp+224], edx
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, ebp
	mov	DWORD PTR $T680146[esp+224], edi
	mov	DWORD PTR $T680146[esp+228], esi
	mov	DWORD PTR $T680147[esp+228], ebx
	call	edx
	cmp	ebx, edx
	mov	DWORD PTR $T680148[esp+224], eax
	mov	DWORD PTR $T680148[esp+228], edx
	jg	SHORT $LN103@runSimulat
	jl	SHORT $LN707@runSimulat
	cmp	DWORD PTR $T680147[esp+224], eax
	jae	SHORT $LN103@runSimulat
$LN707@runSimulat:
	lea	eax, DWORD PTR $T680147[esp+224]
	jmp	SHORT $LN104@runSimulat
$LN103@runSimulat:
	lea	eax, DWORD PTR $T680148[esp+224]
$LN104@runSimulat:
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, esi
	jg	SHORT $LN107@runSimulat
	jl	SHORT $LN708@runSimulat
	mov	edx, DWORD PTR [eax]
	cmp	edx, edi
	jae	SHORT $LN107@runSimulat
$LN708@runSimulat:
	lea	eax, DWORD PTR $T680146[esp+224]
$LN107@runSimulat:
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	edx
	mov	eax, ebp
	call	?moveToTime@System@DRAMsimII@@QAE_N_J@Z	; DRAMsimII::System::moveToTime

; 401  : 
; 402  : 			if (this->pendingTransactionCount() > 0)

	push	ebp
	call	?pendingTransactionCount@System@DRAMsimII@@QBEIXZ ; DRAMsimII::System::pendingTransactionCount
	test	eax, eax
	jbe	$LN702@runSimulat

; 403  : 			{
; 404  : 				getPendingTransactions(finishedTransactions);

	lea	eax, DWORD PTR _finishedTransactions$[esp+224]
	push	eax
	push	ebp
	call	?getPendingTransactions@System@DRAMsimII@@QAEXAAV?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@@Z ; DRAMsimII::System::getPendingTransactions

; 405  : 
; 406  : 				while (!finishedTransactions.empty())

	mov	ecx, DWORD PTR _finishedTransactions$[esp+252]
	test	ecx, ecx
	je	$LN702@runSimulat
	mov	eax, DWORD PTR _finishedTransactions$[esp+248]
$LL15@runSimulat:

; 407  : 				{
; 408  : 					if (outstandingTransactions.find(finishedTransactions.front().first) == outstandingTransactions.end())

	mov	ebx, DWORD PTR _outstandingTransactions$[esp+232]
	add	ecx, eax
	mov	esi, eax
	cmp	eax, ecx
	jbe	SHORT $LN140@runSimulat
	call	__invalid_parameter_noinfo
$LN140@runSimulat:
	mov	eax, DWORD PTR _finishedTransactions$[esp+224]
	mov	edi, eax
	test	eax, eax
	jne	SHORT $LN705@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
	xor	ecx, ecx
$LN170@runSimulat:
	mov	ecx, DWORD PTR [ecx+28]
	add	ecx, DWORD PTR [eax+24]
	cmp	esi, ecx
	jb	SHORT $LN155@runSimulat
	call	__invalid_parameter_noinfo
$LN155@runSimulat:
	test	edi, edi
	je	SHORT $LN175@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN176@runSimulat
$LN705@runSimulat:
	mov	eax, DWORD PTR [eax]
	mov	ecx, eax
	jmp	SHORT $LN170@runSimulat
$LN175@runSimulat:
	xor	eax, eax
$LN176@runSimulat:
	cmp	DWORD PTR [eax+20], esi
	ja	SHORT $LN154@runSimulat
	test	edi, edi
	je	SHORT $LN181@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN182@runSimulat
$LN181@runSimulat:
	xor	eax, eax
$LN182@runSimulat:
	sub	esi, DWORD PTR [eax+20]
$LN154@runSimulat:
	test	edi, edi
	je	SHORT $LN187@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN188@runSimulat
$LN187@runSimulat:
	xor	eax, eax
$LN188@runSimulat:
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [edx+esi*4]
	push	eax
	lea	ecx, DWORD PTR $T680149[esp+228]
	push	ecx
	lea	edx, DWORD PTR _outstandingTransactions$[esp+232]
	push	edx
	call	?lower_bound@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::lower_bound
	mov	eax, DWORD PTR $T680149[esp+224]
	test	eax, eax
	je	SHORT $LN193@runSimulat
	cmp	eax, ebx
	je	SHORT $LN194@runSimulat
$LN193@runSimulat:
	call	__invalid_parameter_noinfo
$LN194@runSimulat:

; 409  : 						assert(outstandingTransactions.find(finishedTransactions.front().first) != outstandingTransactions.end());
; 410  : 
; 411  : 					delete outstandingTransactions[finishedTransactions.front().first].first;

	mov	esi, DWORD PTR _finishedTransactions$[esp+248]
	mov	eax, DWORD PTR _finishedTransactions$[esp+252]
	add	eax, esi
	cmp	esi, eax
	jbe	SHORT $LN211@runSimulat
	call	__invalid_parameter_noinfo
$LN211@runSimulat:
	mov	eax, DWORD PTR _finishedTransactions$[esp+224]
	mov	edi, eax
	test	eax, eax
	jne	SHORT $LN704@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
	xor	ecx, ecx
$LN241@runSimulat:
	mov	ecx, DWORD PTR [ecx+28]
	add	ecx, DWORD PTR [eax+24]
	cmp	esi, ecx
	jb	SHORT $LN226@runSimulat
	call	__invalid_parameter_noinfo
$LN226@runSimulat:
	test	edi, edi
	je	SHORT $LN246@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN247@runSimulat
$LN704@runSimulat:
	mov	eax, DWORD PTR [eax]
	mov	ecx, eax
	jmp	SHORT $LN241@runSimulat
$LN246@runSimulat:
	xor	eax, eax
$LN247@runSimulat:
	cmp	DWORD PTR [eax+20], esi
	ja	SHORT $LN225@runSimulat
	test	edi, edi
	je	SHORT $LN252@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN253@runSimulat
$LN252@runSimulat:
	xor	eax, eax
$LN253@runSimulat:
	sub	esi, DWORD PTR [eax+20]
$LN225@runSimulat:
	test	edi, edi
	je	SHORT $LN258@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN259@runSimulat
$LN258@runSimulat:
	xor	eax, eax
$LN259@runSimulat:
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [edx+esi*4]
	push	eax
	lea	esi, DWORD PTR _outstandingTransactions$[esp+228]
	call	??A?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAEAAU?$pair@PAVTransaction@DRAMsimII@@PAV12@@2@ABI@Z ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::operator[]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN24@runSimulat
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN24@runSimulat:

; 412  : 
; 413  : 					outstandingTransactions.erase(finishedTransactions.front().first);

	mov	esi, DWORD PTR _finishedTransactions$[esp+248]
	mov	eax, DWORD PTR _finishedTransactions$[esp+252]
	add	eax, esi
	cmp	esi, eax
	jbe	SHORT $LN271@runSimulat
	call	__invalid_parameter_noinfo
$LN271@runSimulat:
	mov	eax, DWORD PTR _finishedTransactions$[esp+224]
	mov	edi, eax
	test	eax, eax
	jne	SHORT $LN703@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
	xor	ecx, ecx
$LN301@runSimulat:
	mov	ecx, DWORD PTR [ecx+28]
	add	ecx, DWORD PTR [eax+24]
	cmp	esi, ecx
	jb	SHORT $LN286@runSimulat
	call	__invalid_parameter_noinfo
$LN286@runSimulat:
	test	edi, edi
	je	SHORT $LN306@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN307@runSimulat
$LN703@runSimulat:
	mov	eax, DWORD PTR [eax]
	mov	ecx, eax
	jmp	SHORT $LN301@runSimulat
$LN306@runSimulat:
	xor	eax, eax
$LN307@runSimulat:
	cmp	DWORD PTR [eax+20], esi
	ja	SHORT $LN285@runSimulat
	test	edi, edi
	je	SHORT $LN312@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN313@runSimulat
$LN312@runSimulat:
	xor	eax, eax
$LN313@runSimulat:
	sub	esi, DWORD PTR [eax+20]
$LN285@runSimulat:
	test	edi, edi
	je	SHORT $LN318@runSimulat
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN319@runSimulat
$LN318@runSimulat:
	xor	eax, eax
$LN319@runSimulat:
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [edx+esi*4]
	push	eax
	lea	ecx, DWORD PTR __Where$681654[esp+228]
	push	ecx
	lea	edx, DWORD PTR _outstandingTransactions$[esp+232]
	push	edx
	call	?equal_range@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V123@@std@@ABI@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::equal_range
	mov	eax, DWORD PTR $T681662[esp+224]
	mov	edi, DWORD PTR __Where$681654[esp+236]
	mov	ebp, DWORD PTR __Where$681654[esp+232]
	mov	ebx, DWORD PTR __Where$681654[esp+228]
	mov	ecx, DWORD PTR __Where$681654[esp+224]
	push	eax
	push	edi
	push	ebp
	push	ebx
	push	ecx
	lea	esi, DWORD PTR __Num$681655[esp+244]
	mov	DWORD PTR __Num$681655[esp+244], 0
	call	??$_Distance2@V?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@I@std@@YAXV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::list<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::_Iterator<1>,unsigned int>
	mov	edx, DWORD PTR __Where$681654[esp+244]
	add	esp, 20					; 00000014H
	push	edi
	push	ebp
	push	ebx
	push	edx
	lea	eax, DWORD PTR $T681659[esp+240]
	push	eax
	lea	eax, DWORD PTR _outstandingTransactions$[esp+244]
	call	?erase@?$_Hash@V?$_Umap_traits@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$_Hash_compare@IV?$hash@I@tr1@std@@U?$equal_to@I@3@@stdext@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$00@?$list@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@std@@V?$_Const_iterator@$00@45@0@Z ; stdext::_Hash<std::tr1::_Umap_traits<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,stdext::_Hash_compare<unsigned int,std::tr1::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > >,0> >::erase

; 414  : 
; 415  : 					finishedTransactions.pop();

	mov	ecx, DWORD PTR _finishedTransactions$[esp+252]
	test	ecx, ecx
	je	SHORT $LN715@runSimulat
	mov	eax, DWORD PTR _finishedTransactions$[esp+248]
	inc	eax
	mov	DWORD PTR _finishedTransactions$[esp+248], eax
	cmp	DWORD PTR _finishedTransactions$[esp+244], eax
	ja	SHORT $LN331@runSimulat
	xor	eax, eax
	mov	DWORD PTR _finishedTransactions$[esp+248], eax
$LN331@runSimulat:
	sub	ecx, 1
	mov	DWORD PTR _finishedTransactions$[esp+252], ecx
	jne	$LL15@runSimulat
	mov	DWORD PTR _finishedTransactions$[esp+248], 0
$LN715@runSimulat:
	mov	ebp, DWORD PTR _this$[esp+220]
$LN702@runSimulat:

; 416  : 				}
; 417  : 
; 418  : 			}
; 419  : 
; 420  : 			// attempt to enqueue external transactions
; 421  : 			// as internal transactions (REFRESH) are enqueued automatically
; 422  : 			if (time >= inputTransaction->getArrivalTime())

	mov	ecx, DWORD PTR [ebp+11548]
	mov	edi, DWORD PTR _inputTransaction$[esp+224]
	cmp	ecx, DWORD PTR [edi+12]
	jl	$LN11@runSimulat
	jg	SHORT $LN709@runSimulat
	mov	edx, DWORD PTR [ebp+11544]
	cmp	edx, DWORD PTR [edi+8]
	jb	$LN11@runSimulat
$LN709@runSimulat:

; 423  : 			{
; 424  : 				if (!isFull(inputTransaction->getAddress().getChannel()))

	mov	ecx, DWORD PTR [ebp+1188]
	sub	ecx, DWORD PTR [ebp+1184]
	mov	esi, DWORD PTR [edi+56]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	jb	SHORT $LN345@runSimulat
	call	__invalid_parameter_noinfo
$LN345@runSimulat:
	mov	ecx, DWORD PTR [ebp+1184]
	imul	esi, 456				; 000001c8H
	mov	edx, DWORD PTR [esi+ecx+140]
	sub	edx, DWORD PTR [esi+ecx+136]
	lea	esi, DWORD PTR [esi+ecx+112]
	sar	edx, 2
	cmp	edx, DWORD PTR [esi]
	je	$LN11@runSimulat

; 425  : 				{
; 426  : #ifndef NDEBUG
; 427  : 					bool result =
; 428  : #endif
; 429  : 						enqueue(inputTransaction);

	mov	ecx, DWORD PTR [ebp+1188]
	sub	ecx, DWORD PTR [ebp+1184]
	mov	esi, DWORD PTR [edi+56]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	jb	SHORT $LN362@runSimulat
	call	__invalid_parameter_noinfo
$LN362@runSimulat:
	imul	esi, 456				; 000001c8H
	add	esi, DWORD PTR [ebp+1184]
	push	edi
	push	esi
	call	?enqueue@Channel@DRAMsimII@@QAE_NPAVTransaction@2@@Z ; DRAMsimII::Channel::enqueue

; 430  : 
; 431  : 					assert(result);
; 432  : 
; 433  : 					Transaction *duplicateTrans = new Transaction(*inputTransaction);

	call	?acquireItem@?$Queue@VTransaction@DRAMsimII@@@DRAMsimII@@QAEPAVTransaction@2@XZ ; DRAMsimII::Queue<DRAMsimII::Transaction>::acquireItem
	test	eax, eax
	je	SHORT $LN26@runSimulat
	mov	esi, eax
	call	??0Transaction@DRAMsimII@@QAE@ABV01@@Z	; DRAMsimII::Transaction::Transaction
	mov	ebx, eax
	jmp	SHORT $LN27@runSimulat
$LN26@runSimulat:
	xor	ebx, ebx
$LN27@runSimulat:

; 434  : 
; 435  : 					outstandingTransactions[inputTransaction->getOriginalTransaction()] = std::pair<Transaction *, Transaction*>(duplicateTrans, inputTransaction);

	mov	ecx, DWORD PTR [edi+108]
	lea	edx, DWORD PTR $T680159[esp+224]
	push	edx
	lea	esi, DWORD PTR _outstandingTransactions$[esp+228]
	mov	DWORD PTR $T680159[esp+228], ecx
	call	??A?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAEAAU?$pair@PAVTransaction@DRAMsimII@@PAV12@@2@ABI@Z ; std::tr1::unordered_map<unsigned int,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *>,std::tr1::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,std::pair<DRAMsimII::Transaction *,DRAMsimII::Transaction *> > > >::operator[]

; 436  : 
; 437  : 					inputTransaction = inputStream.getNextIncomingTransaction(outstandingTransacitonCounter++);

	mov	esi, DWORD PTR _outstandingTransacitonCounter$[esp+224]
	mov	DWORD PTR [eax], ebx
	push	esi
	lea	ecx, DWORD PTR [ebp+1200]
	mov	DWORD PTR [eax+4], edi
	call	?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z ; DRAMsimII::InputStream::getNextIncomingTransaction
	mov	DWORD PTR _inputTransaction$[esp+224], eax
	inc	esi

; 438  : 
; 439  : 					bool foundOne = false;
; 440  : 
; 441  : 					if (outstandingTransacitonCounter % 5000 == 0)

	mov	eax, -776530087				; d1b71759H
	mul	esi
	shr	edx, 12					; 0000000cH
	imul	edx, 5000				; 00001388H
	mov	DWORD PTR _outstandingTransacitonCounter$[esp+224], esi
	sub	esi, edx
	mov	BYTE PTR _foundOne$145455[esp+224], 0
	jne	$LN484@runSimulat

; 442  : 					{
; 443  : 						for (std::tr1::unordered_map<unsigned, std::pair<Transaction *, Transaction *> >::const_iterator j = outstandingTransactions.begin(); j != outstandingTransactions.end(); j++)

	mov	eax, DWORD PTR _outstandingTransactions$[esp+252]
	mov	edi, DWORD PTR [eax]
	mov	ebx, DWORD PTR _outstandingTransactions$[esp+232]
$LL399@runSimulat:
	mov	esi, DWORD PTR _outstandingTransactions$[esp+252]
	test	ebx, ebx
	je	SHORT $LN431@runSimulat
	cmp	ebx, DWORD PTR _outstandingTransactions$[esp+232]
	je	SHORT $LN432@runSimulat
$LN431@runSimulat:
	call	__invalid_parameter_noinfo
$LN432@runSimulat:
	cmp	edi, esi
	je	$LN7@runSimulat

; 444  : 						{
; 445  : 							unsigned diff = time - j->second.first->getEnqueueTime();

	test	ebx, ebx
	jne	$LN701@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN453@runSimulat:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN442@runSimulat
	call	__invalid_parameter_noinfo
$LN442@runSimulat:
	mov	ecx, DWORD PTR [edi+12]
	mov	esi, DWORD PTR [ebp+11544]
	sub	esi, DWORD PTR [ecx+16]

; 446  : 							if (diff > 10000)

	cmp	esi, 10000				; 00002710H
	jbe	SHORT $LN8@runSimulat

; 447  : 							{
; 448  : 								foundOne = true;

	mov	BYTE PTR _foundOne$145455[esp+224], 1

; 449  : 								//assert(time - i->second.first->getEnqueueTime() < 10000);
; 450  : 								std::cerr << j->first << " @ " << diff << std::endl;

	test	ebx, ebx
	jne	SHORT $LN700@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN473@runSimulat:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN462@runSimulat
	call	__invalid_parameter_noinfo
$LN462@runSimulat:
	mov	edx, DWORD PTR [edi+8]
	push	esi
	push	ecx
	push	OFFSET ??_C@_03JLJHCGLP@?5?$EA?5?$AA@
	push	ecx
	push	edx
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN8@runSimulat:

; 442  : 					{
; 443  : 						for (std::tr1::unordered_map<unsigned, std::pair<Transaction *, Transaction *> >::const_iterator j = outstandingTransactions.begin(); j != outstandingTransactions.end(); j++)

	test	ebx, ebx
	jne	SHORT $LN699@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN406@runSimulat:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN395@runSimulat
	call	__invalid_parameter_noinfo
$LN395@runSimulat:
	mov	edi, DWORD PTR [edi]
	jmp	$LL399@runSimulat
$LN701@runSimulat:

; 444  : 						{
; 445  : 							unsigned diff = time - j->second.first->getEnqueueTime();

	mov	eax, DWORD PTR [ebx]
	jmp	$LN453@runSimulat
$LN700@runSimulat:

; 449  : 								//assert(time - i->second.first->getEnqueueTime() < 10000);
; 450  : 								std::cerr << j->first << " @ " << diff << std::endl;

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN473@runSimulat
$LN699@runSimulat:

; 442  : 					{
; 443  : 						for (std::tr1::unordered_map<unsigned, std::pair<Transaction *, Transaction *> >::const_iterator j = outstandingTransactions.begin(); j != outstandingTransactions.end(); j++)

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN406@runSimulat
$LN7@runSimulat:

; 451  : 							}
; 452  : 						}
; 453  : 					}
; 454  : 
; 455  : 					if (foundOne)

	cmp	BYTE PTR _foundOne$145455[esp+224], 0
	je	SHORT $LN484@runSimulat

; 456  : 						cerr << "-----------------------------" << endl;

	push	OFFSET ??_C@_0BO@OCAALIAC@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN484@runSimulat:

; 457  : 
; 458  : 					if (!inputTransaction)
; 459  : 						running = false;
; 460  : 
; 461  : 					i--;

	or	eax, -1
	add	DWORD PTR _i$145255[esp+224], eax
	adc	DWORD PTR _i$145255[esp+228], eax
$LN11@runSimulat:

; 397  : 
; 398  : 		for (tick i = requestCount > 0 ? requestCount : simParameters.getRequestCount(); i > 0;)

	cmp	DWORD PTR _i$145255[esp+228], 0
	jg	$LL18@runSimulat
	jl	SHORT $LN710@runSimulat
	cmp	DWORD PTR _i$145255[esp+224], 0
	ja	$LL18@runSimulat
$LN710@runSimulat:

; 462  : 				}
; 463  : 			}
; 464  : 		}
; 465  : 
; 466  : 		delete inputTransaction;

	mov	ecx, DWORD PTR _inputTransaction$[esp+224]
	xor	ebp, ebp
	cmp	ecx, ebp
	je	SHORT $LN28@runSimulat
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN28@runSimulat:

; 467  : 
; 468  : 	}
; 469  : 	for (std::tr1::unordered_map<unsigned,std::pair<Transaction *, Transaction *> >::iterator i = outstandingTransactions.begin(); i != outstandingTransactions.end(); i++)

	mov	eax, DWORD PTR _outstandingTransactions$[esp+252]
	mov	ebx, DWORD PTR [eax]
	mov	edi, DWORD PTR _outstandingTransactions$[esp+232]
	npad	5
$LL514@runSimulat:
	mov	esi, DWORD PTR _outstandingTransactions$[esp+252]
	cmp	edi, ebp
	je	SHORT $LN546@runSimulat
	cmp	edi, DWORD PTR _outstandingTransactions$[esp+232]
	je	SHORT $LN547@runSimulat
$LN546@runSimulat:
	call	__invalid_parameter_noinfo
$LN547@runSimulat:
	cmp	ebx, esi
	je	SHORT $LN1@runSimulat

; 470  : 	{
; 471  : 		delete i->second.first;

	cmp	edi, ebp
	jne	SHORT $LN698@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN570@runSimulat:
	cmp	ebx, DWORD PTR [eax+20]
	jne	SHORT $LN559@runSimulat
	call	__invalid_parameter_noinfo
$LN559@runSimulat:
	mov	ecx, DWORD PTR [ebx+12]
	cmp	ecx, ebp
	je	SHORT $LN30@runSimulat
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN30@runSimulat:

; 472  : 		delete i->second.second;

	cmp	edi, ebp
	jne	SHORT $LN697@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN590@runSimulat:
	cmp	ebx, DWORD PTR [eax+20]
	jne	SHORT $LN579@runSimulat
	call	__invalid_parameter_noinfo
$LN579@runSimulat:
	mov	ecx, DWORD PTR [ebx+16]
	cmp	ecx, ebp
	je	SHORT $LN2@runSimulat
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN2@runSimulat:

; 467  : 
; 468  : 	}
; 469  : 	for (std::tr1::unordered_map<unsigned,std::pair<Transaction *, Transaction *> >::iterator i = outstandingTransactions.begin(); i != outstandingTransactions.end(); i++)

	cmp	edi, ebp
	jne	SHORT $LN696@runSimulat
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN521@runSimulat:
	cmp	ebx, DWORD PTR [eax+20]
	jne	SHORT $LN510@runSimulat
	call	__invalid_parameter_noinfo
$LN510@runSimulat:
	mov	ebx, DWORD PTR [ebx]
	jmp	SHORT $LL514@runSimulat
$LN698@runSimulat:

; 470  : 	{
; 471  : 		delete i->second.first;

	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN570@runSimulat
$LN697@runSimulat:

; 472  : 		delete i->second.second;

	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN590@runSimulat
$LN696@runSimulat:

; 467  : 
; 468  : 	}
; 469  : 	for (std::tr1::unordered_map<unsigned,std::pair<Transaction *, Transaction *> >::iterator i = outstandingTransactions.begin(); i != outstandingTransactions.end(); i++)

	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN521@runSimulat
$LN1@runSimulat:

; 473  : 	}
; 474  : 	//	moveToTime(channel[0].getTime() + 64000000);
; 475  : }

	mov	eax, DWORD PTR _finishedTransactions$[esp+252]
	cmp	eax, ebp
	je	SHORT $LN695@runSimulat
	npad	1
$LL604@runSimulat:
	cmp	eax, ebp
	je	SHORT $LN718@runSimulat
	sub	eax, 1
	jne	SHORT $LL604@runSimulat
	mov	DWORD PTR _finishedTransactions$[esp+248], ebp
$LN718@runSimulat:
	mov	DWORD PTR _finishedTransactions$[esp+252], eax
$LN695@runSimulat:
	mov	esi, DWORD PTR _finishedTransactions$[esp+244]
	mov	eax, DWORD PTR _finishedTransactions$[esp+240]
	cmp	esi, ebp
	jbe	SHORT $LN601@runSimulat
	npad	3
$LL602@runSimulat:
	dec	esi
	cmp	DWORD PTR [eax+esi*4], ebp
	je	SHORT $LN616@runSimulat
	mov	ecx, DWORD PTR [eax+esi*4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR _finishedTransactions$[esp+244]
	add	esp, 4
$LN616@runSimulat:
	cmp	esi, ebp
	ja	SHORT $LL602@runSimulat
$LN601@runSimulat:
	cmp	eax, ebp
	je	SHORT $LN618@runSimulat
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN618@runSimulat:
	mov	edx, DWORD PTR _finishedTransactions$[esp+224]
	push	edx
	mov	DWORD PTR _finishedTransactions$[esp+248], ebp
	mov	DWORD PTR _finishedTransactions$[esp+244], ebp
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR _outstandingTransactions$[esp+276]
	add	esp, 4
	cmp	eax, ebp
	je	SHORT $LN639@runSimulat
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN639@runSimulat:
	mov	eax, DWORD PTR _outstandingTransactions$[esp+260]
	push	eax
	mov	DWORD PTR _outstandingTransactions$[esp+276], ebp
	mov	DWORD PTR _outstandingTransactions$[esp+280], ebp
	mov	DWORD PTR _outstandingTransactions$[esp+284], ebp
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR _outstandingTransactions$[esp+256]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], ecx
	mov	ecx, DWORD PTR _outstandingTransactions$[esp+256]
	mov	DWORD PTR [ecx+4], ecx
	mov	ecx, DWORD PTR _outstandingTransactions$[esp+256]
	add	esp, 4
	mov	DWORD PTR _outstandingTransactions$[esp+256], ebp
	cmp	eax, ecx
	je	SHORT $LN653@runSimulat
	npad	4
$LL655@runSimulat:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR _outstandingTransactions$[esp+256]
	add	esp, 4
	mov	eax, esi
	cmp	esi, ecx
	jne	SHORT $LL655@runSimulat
$LN653@runSimulat:
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR _outstandingTransactions$[esp+236]
	add	esp, 4
	push	ecx
	mov	DWORD PTR _outstandingTransactions$[esp+256], ebp
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+224]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 204				; 000000ccH
	ret	4
__unwindfunclet$?runSimulations@System@DRAMsimII@@QAEXI@Z$0:
	lea	eax, DWORD PTR _outstandingTransactions$[ebp]
	jmp	??1?$unordered_map@IU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@V?$hash@I@tr1@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIU?$pair@PAVTransaction@DRAMsimII@@PAV12@@std@@@std@@@2@@tr1@std@@QAE@XZ
__unwindfunclet$?runSimulations@System@DRAMsimII@@QAEXI@Z$1:
	lea	eax, DWORD PTR _finishedTransactions$[ebp]
	jmp	??1?$queue@U?$pair@I_J@std@@V?$deque@U?$pair@I_J@std@@V?$allocator@U?$pair@I_J@std@@@2@@2@@std@@QAE@XZ
__ehhandler$?runSimulations@System@DRAMsimII@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-208]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?runSimulations@System@DRAMsimII@@QAEXI@Z
	jmp	___CxxFrameHandler3
?runSimulations@System@DRAMsimII@@QAEXI@Z ENDP		; DRAMsimII::System::runSimulations
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z$0
__ehfuncinfo$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z
_TEXT	SEGMENT
$T699283 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z PROC ; std::_Construct<DRAMsimII::Channel,DRAMsimII::Channel>, COMDAT
; __Val$ = ecx

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR __Ptr$[esp+20]

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	DWORD PTR __Vptr$[esp+20], eax

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T699283[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+32], 0
	test	eax, eax
	je	SHORT $LN3@Construct@31
	push	ecx
	push	eax
	call	??0Channel@DRAMsimII@@QAE@ABV01@@Z	; DRAMsimII::Channel::Channel
$LN3@Construct@31:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T699283[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@VChannel@DRAMsimII@@V12@@std@@YAXPAVChannel@DRAMsimII@@ABV12@@Z ENDP ; std::_Construct<DRAMsimII::Channel,DRAMsimII::Channel>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@Uforward_iterator_tag@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Last$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@Uforward_iterator_tag@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *,std::forward_iterator_tag>, COMDAT
; __First$ = ecx
; __Dest$ = eax

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebx
	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, eax

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	esi, ebx
	je	SHORT $LN1@Copy_opt@12
	npad	1
$LL3@Copy_opt@12:

; 2472 : 		*_Dest = *_First;

	mov	ecx, esi
	call	??4Channel@DRAMsimII@@QAEAAV01@ABV01@@Z	; DRAMsimII::Channel::operator=
	add	esi, 456				; 000001c8H
	add	edi, 456				; 000001c8H
	cmp	esi, ebx
	jne	SHORT $LL3@Copy_opt@12

; 2473 : 	return (_Dest);

	mov	eax, edi
$LN1@Copy_opt@12:
	pop	edi
	pop	esi
	pop	ebx

; 2474 : 	}

	ret	0
??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@Uforward_iterator_tag@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *,std::forward_iterator_tag>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z$0
__ehfuncinfo$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z
_TEXT	SEGMENT
$T699318 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$699315 = 8					; size = 4
__Ptr$ = 8						; size = 4
?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z PROC ; std::allocator<DRAMsimII::Channel>::construct, COMDAT
; __Val$ = ecx

; 154  : 		{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR __Ptr$[esp+20]

; 155  : 		_Construct(_Ptr, _Val);

	mov	DWORD PTR __Vptr$699315[esp+20], eax
	mov	DWORD PTR $T699318[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+32], 0
	test	eax, eax
	je	SHORT $LN5@construct@26
	push	ecx
	push	eax
	call	??0Channel@DRAMsimII@@QAE@ABV01@@Z	; DRAMsimII::Channel::Channel
$LN5@construct@26:

; 156  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z$0:
	mov	eax, DWORD PTR __Vptr$699315[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T699318[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@VChannel@DRAMsimII@@@std@@QAEXPAVChannel@DRAMsimII@@ABV34@@Z ENDP ; std::allocator<DRAMsimII::Channel>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T699361 = -28						; size = 4
__Vptr$699358 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Val$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >, COMDAT
; __Count$ = ecx

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	esi, DWORD PTR __First$[ebp]

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	DWORD PTR __Next$[ebp], esi

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	ebx, 1
	npad	1
$LL6@Uninit_fil@24:

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	test	edi, edi
	jbe	SHORT $LN4@Uninit_fil@24

; 404  : 		_Al.construct(_First, _Val);

	mov	DWORD PTR __Vptr$699358[ebp], esi
	mov	DWORD PTR $T699361[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	test	esi, esi
	je	SHORT $LN18@Uninit_fil@24
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	push	esi
	call	??0Channel@DRAMsimII@@QAE@ABV01@@Z	; DRAMsimII::Channel::Channel
$LN18@Uninit_fil@24:
	sub	edi, ebx
	add	esi, 456				; 000001c8H
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	DWORD PTR __First$[ebp], esi
	jmp	SHORT $LL6@Uninit_fil@24
__catch$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __First$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_fil@24
$LL3@Uninit_fil@24:

; 407  : 		_Al.destroy(_Next);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+16]
	push	0
	mov	ecx, esi
	call	eax
	add	esi, 456				; 000001c8H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_fil@24
$LN1@Uninit_fil@24:

; 408  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN34@Uninit_fil@24:
$LN4@Uninit_fil@24:

; 409  : 	_CATCH_END
; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN33@Uninit_fil@24:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$699358[ebp]
	push	eax
	mov	ecx, DWORD PTR $T699361[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv148 = 8						; size = 4
__Last$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *>, COMDAT
; __First$ = ecx
; __Dest$ = eax

; 2481 : 	{	// copy [_First, _Last) to [_Dest, ...), random_access iterators

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __Last$[esp+4]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, eax

; 2482 : 	// if _OutIt is range checked, this will make sure there is enough space for the copy
; 2483 : 	_OutIt _Result = _Dest + (_Last - _First);

	mov	ecx, ebp
	sub	ecx, esi
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ebx, eax
	imul	ebx, 456				; 000001c8H
	add	ebx, edi

; 2484 : 	_Copy_opt(_First, _Last, _CHECKED_BASE(_Dest), 
; 2485 : 		forward_iterator_tag(), _Nonscalar_ptr_iterator_tag(), _Range_checked_iterator_tag());

	cmp	esi, ebp
	je	SHORT $LN14@Copy_opt@13
	mov	eax, edi
	sub	eax, esi
	mov	DWORD PTR tv148[esp+12], eax
	jmp	SHORT $LN9@Copy_opt@13
	npad	5
$LL15@Copy_opt@13:
	mov	eax, DWORD PTR tv148[esp+12]
$LN9@Copy_opt@13:
	lea	edi, DWORD PTR [eax+esi]
	mov	ecx, esi
	call	??4Channel@DRAMsimII@@QAEAAV01@ABV01@@Z	; DRAMsimII::Channel::operator=
	add	esi, 456				; 000001c8H
	cmp	esi, ebp
	jne	SHORT $LL15@Copy_opt@13
$LN14@Copy_opt@13:
	pop	edi
	pop	esi
	pop	ebp

; 2486 : 	return _Result;

	mov	eax, ebx
	pop	ebx

; 2487 : 	}

	ret	0
??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z
_TEXT	SEGMENT
$T699420 = -4						; size = 1
__Cat$699425 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
??$unchecked_uninitialized_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >, COMDAT
; __Val$ = edx

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	BYTE PTR $T699420[esp+4], 0
	mov	eax, DWORD PTR $T699420[esp+4]
	mov	ecx, DWORD PTR __Cat$699425[esp+4]
	push	eax
	mov	eax, DWORD PTR __First$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	push	eax
	call	??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >

; 943  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$unchecked_uninitialized_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$unchecked_copy@PAVChannel@DRAMsimII@@PAV12@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00@Z
_TEXT	SEGMENT
$T699429 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$699435 = 12					; size = 1
$T699431 = 12						; size = 1
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAVChannel@DRAMsimII@@PAV12@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00@Z PROC ; stdext::unchecked_copy<DRAMsimII::Channel *,DRAMsimII::Channel *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ecx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$699435[esp]
	mov	edx, DWORD PTR $T699431[esp]
	mov	BYTE PTR $T699429[esp+4], 0
	mov	eax, DWORD PTR $T699429[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+8]
	push	edx
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+16]
	call	??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *>

; 3607 : 	}

	add	esp, 20					; 00000014H
	ret	0
??$unchecked_copy@PAVChannel@DRAMsimII@@PAV12@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00@Z ENDP ; stdext::unchecked_copy<DRAMsimII::Channel *,DRAMsimII::Channel *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV34@IABV34@@Z
_TEXT	SEGMENT
$T699471 = -4						; size = 1
__Cat$699475 = -4					; size = 1
?_Ufill@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV34@IABV34@@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ufill, COMDAT
; __Ptr$ = edi
; __Count$ = esi
; __Val$ = edx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	BYTE PTR $T699471[esp+4], 0
	mov	eax, DWORD PTR $T699471[esp+4]
	mov	ecx, DWORD PTR __Cat$699475[esp+4]
	push	eax
	push	ecx
	push	edx
	push	edi
	mov	ecx, esi
	call	??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >

; 1255 : 		return (_Ptr + _Count);

	mov	eax, esi
	imul	eax, 456				; 000001c8H
	add	eax, edi

; 1256 : 		}

	add	esp, 20					; 00000014H
	ret	0
?_Ufill@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV34@IABV34@@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ufill
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@0@Z
_TEXT	SEGMENT
$T699667 = -4						; size = 1
__Cat$699672 = 8					; size = 1
$T699669 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 8
__Last_arg$ = 20					; size = 8
?erase@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@0@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::erase, COMDAT
; _this$ = edi

; 1028 : 		{	// erase [_First, _Last)

	push	ecx
	push	ebx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+4]
	push	esi
	mov	DWORD PTR [ebx], 0
	test	edi, edi
	je	SHORT $LN8@erase@35
	mov	eax, DWORD PTR __First_arg$[esp+12]
	cmp	DWORD PTR [edi+12], eax
	ja	SHORT $LN8@erase@35
	cmp	eax, DWORD PTR [edi+16]
	jbe	SHORT $LN9@erase@35
$LN8@erase@35:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First_arg$[esp+12]
$LN9@erase@35:

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	esi, DWORD PTR __Last_arg$[esp+12]
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [ebx], ecx
	mov	DWORD PTR [ebx+4], eax
	cmp	DWORD PTR [edi+12], esi
	ja	SHORT $LN24@erase@35
	cmp	esi, DWORD PTR [edi+16]
	jbe	SHORT $LN25@erase@35
$LN24@erase@35:
	call	__invalid_parameter_noinfo
	mov	esi, DWORD PTR __Last_arg$[esp+12]
$LN25@erase@35:

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN38@erase@35
	cmp	eax, ecx
	je	SHORT $LN39@erase@35
$LN38@erase@35:
	call	__invalid_parameter_noinfo
$LN39@erase@35:
	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, esi
	je	SHORT $LN77@erase@35

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	ecx, DWORD PTR [edi+16]
	push	ebp
	mov	BYTE PTR $T699667[esp+16], 0
	mov	edx, DWORD PTR $T699667[esp+16]
	push	edx
	mov	edx, DWORD PTR __Cat$699672[esp+16]
	push	edx
	mov	edx, DWORD PTR $T699669[esp+20]
	push	edx
	push	ecx
	mov	ecx, esi
	call	??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *>

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	ebx, DWORD PTR [edi+16]
	mov	ebp, eax
	add	esp, 16					; 00000010H
	mov	esi, ebp
	cmp	ebp, ebx
	je	SHORT $LN66@erase@35
	npad	4
$LL68@erase@35:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	push	0
	mov	ecx, esi
	call	edx
	add	esi, 456				; 000001c8H
	cmp	esi, ebx
	jne	SHORT $LL68@erase@35
$LN66@erase@35:

; 1049 : 			_Mylast = _Ptr;
; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	DWORD PTR [edi+16], ebp
	pop	ebp
	pop	esi
	pop	ebx

; 1055 : #endif
; 1056 : 		}

	pop	ecx
	ret	20					; 00000014H
$LN77@erase@35:
	pop	esi

; 1049 : 			_Mylast = _Ptr;
; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, ebx
	pop	ebx

; 1055 : #endif
; 1056 : 		}

	pop	ecx
	ret	20					; 00000014H
?erase@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@0@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T699761 = -8						; size = 8
?clear@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXXZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::clear, COMDAT
; _this$ = eax

; 1059 : 		{	// erase all

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, eax

; 1060 : 		erase(begin(), end());

	mov	ebp, DWORD PTR [edi+16]
	cmp	DWORD PTR [edi+12], ebp
	jbe	SHORT $LN8@clear@25
	call	__invalid_parameter_noinfo
$LN8@clear@25:
	mov	esi, DWORD PTR [edi+12]
	mov	ebx, DWORD PTR [edi]
	cmp	esi, DWORD PTR [edi+16]
	jbe	SHORT $LN24@clear@25
	call	__invalid_parameter_noinfo
$LN24@clear@25:
	mov	eax, DWORD PTR [edi]
	push	ebp
	push	ebx
	push	esi
	push	eax
	lea	eax, DWORD PTR $T699761[esp+40]
	push	eax
	call	?erase@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV?$_Vector_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@0@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::erase
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1061 : 		}

	add	esp, 8
	ret	0
?clear@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXXZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::clear
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z$0
__tryblocktable$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z$2
__ehfuncinfo$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z
_TEXT	SEGMENT
$T699948 = -20						; size = 1
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Cat$699952 = 12					; size = 1
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Construct_n, COMDAT

; 545  : 		{	// construct from _Count * _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]

; 546  : 		if (_Buy(_Count))

	mov	ebx, DWORD PTR __Count$[ebp]
	xor	eax, eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	cmp	ebx, eax
	je	SHORT $LN7@Construct_@19
	cmp	ebx, 9418787				; 008fb823H
	jbe	SHORT $LN10@Construct_@19
	call	?_Xlen@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@KAXXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Xlen
$LN32@Construct_@19:
$LN10@Construct_@19:
	mov	ecx, ebx
	call	?allocate@?$allocator@VChannel@DRAMsimII@@@std@@QAEPAVChannel@DRAMsimII@@I@Z ; std::allocator<DRAMsimII::Channel>::allocate
	imul	ebx, 456				; 000001c8H
	mov	edi, eax

; 547  : 			{	// nonzero, fill it
; 548  : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 549  : 			_Mylast = _Ufill(_Myfirst, _Count, _Val);

	mov	edx, DWORD PTR __Cat$699952[ebp]
	mov	BYTE PTR $T699948[ebp], 0
	mov	ecx, DWORD PTR $T699948[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ebx+edi]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	edx
	push	eax
	push	edi
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
	call	??$_Uninit_fill_n@PAVChannel@DRAMsimII@@IV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAXPAVChannel@DRAMsimII@@IABV12@AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<DRAMsimII::Channel *,unsigned int,DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	add	esp, 16					; 00000010H
	add	ebx, edi
	mov	DWORD PTR [esi+16], ebx
$LN7@Construct_@19:

; 553  : 			_CATCH_END
; 554  : 			}
; 555  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z$0:

; 550  : 			_CATCH_ALL
; 551  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?_Tidy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEXXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Tidy

; 552  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN33@Construct_@19:
$LN31@Construct_@19:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Construct_n
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z$0
__ehfuncinfo$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >, COMDAT

; 488  : 		{	// construct from _Count * _Val

	push	-1
	push	__ehhandler$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@vector@78
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN14@vector@78
$LN13@vector@78:
	xor	eax, eax
$LN14@vector@78:
	mov	DWORD PTR [esi], eax

; 489  : 		_Construct_n(_Count, _Val);

	mov	eax, DWORD PTR __Val$[esp+20]
	mov	ecx, DWORD PTR __Count$[esp+20]
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR __$EHRec$[esp+44], 0
	call	?_Construct_n@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXIABVChannel@DRAMsimII@@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Construct_n

; 490  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_Vector_val@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
?doPowerCalculation@System@DRAMsimII@@MAEXXZ PROC	; DRAMsimII::System::doPowerCalculation
; _this$ = ecx

; 336  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi

; 337  : 	// waiting for OpenMP 3.0
; 338  : 	//#pragma omp parallel
; 339  : 
; 340  : 	//#pragma omp for
; 341  : 
; 342  : 	//for_each(channel.begin(),channel.end(),bind2nd(mem_fun_ref(&Channel::doPowerCalculation),time, systemConfig.powerOutStream));
; 343  : 
; 344  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	mov	edi, DWORD PTR [esi+1184]
	cmp	edi, DWORD PTR [esi+1188]
	jbe	SHORT $LN13@doPowerCal@2
	call	__invalid_parameter_noinfo
$LN13@doPowerCal@2:
	mov	ebx, DWORD PTR [esi+1172]
	npad	11
$LL30@doPowerCal@2:
	mov	ebp, DWORD PTR [esi+1188]
	cmp	DWORD PTR [esi+1184], ebp
	jbe	SHORT $LN45@doPowerCal@2
	call	__invalid_parameter_noinfo
$LN45@doPowerCal@2:
	mov	eax, DWORD PTR [esi+1172]
	test	ebx, ebx
	je	SHORT $LN58@doPowerCal@2
	cmp	ebx, eax
	je	SHORT $LN59@doPowerCal@2
$LN58@doPowerCal@2:
	call	__invalid_parameter_noinfo
$LN59@doPowerCal@2:
	cmp	edi, ebp
	je	SHORT $LN1@doPowerCal@2

; 345  : 	{
; 346  : 		i->doPowerCalculation(time, systemConfig.powerOutStream);

	lea	eax, DWORD PTR [esi+80]
	test	eax, eax
	je	SHORT $LN6@doPowerCal@2
	lea	ebp, DWORD PTR [esi+88]
	jmp	SHORT $LN7@doPowerCal@2
$LN6@doPowerCal@2:
	xor	ebp, ebp
$LN7@doPowerCal@2:
	test	ebx, ebx
	jne	SHORT $LN84@doPowerCal@2
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN79@doPowerCal@2:
	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN70@doPowerCal@2
	call	__invalid_parameter_noinfo
$LN70@doPowerCal@2:
	mov	ecx, DWORD PTR [esi+11548]
	mov	edx, DWORD PTR [esi+11544]
	push	ebp
	push	ecx
	push	edx
	call	?doPowerCalculation@Channel@DRAMsimII@@QAEX_JAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; DRAMsimII::Channel::doPowerCalculation
	test	ebx, ebx
	jne	SHORT $LN83@doPowerCal@2
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN37@doPowerCal@2:

; 337  : 	// waiting for OpenMP 3.0
; 338  : 	//#pragma omp parallel
; 339  : 
; 340  : 	//#pragma omp for
; 341  : 
; 342  : 	//for_each(channel.begin(),channel.end(),bind2nd(mem_fun_ref(&Channel::doPowerCalculation),time, systemConfig.powerOutStream));
; 343  : 
; 344  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	cmp	edi, DWORD PTR [eax+16]
	jb	SHORT $LN28@doPowerCal@2
	call	__invalid_parameter_noinfo
$LN28@doPowerCal@2:
	add	edi, 456				; 000001c8H
	jmp	SHORT $LL30@doPowerCal@2
$LN84@doPowerCal@2:

; 345  : 	{
; 346  : 		i->doPowerCalculation(time, systemConfig.powerOutStream);

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN79@doPowerCal@2
$LN83@doPowerCal@2:

; 337  : 	// waiting for OpenMP 3.0
; 338  : 	//#pragma omp parallel
; 339  : 
; 340  : 	//#pragma omp for
; 341  : 
; 342  : 	//for_each(channel.begin(),channel.end(),bind2nd(mem_fun_ref(&Channel::doPowerCalculation),time, systemConfig.powerOutStream));
; 343  : 
; 344  : 	for (vector<Channel>::iterator i = channel.begin(); i != channel.end(); i++)

	mov	eax, DWORD PTR [ebx]
	jmp	SHORT $LN37@doPowerCal@2
$LN1@doPowerCal@2:

; 347  : 	}
; 348  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?doPowerCalculation@System@DRAMsimII@@MAEXXZ ENDP	; DRAMsimII::System::doPowerCalculation
_TEXT	ENDS
PUBLIC	__real@3f50000000000000
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??0System@DRAMsimII@@QAE@ABVSettings@1@@Z	; DRAMsimII::System::System
;	COMDAT __real@3f50000000000000
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
CONST	SEGMENT
__real@3f50000000000000 DQ 03f50000000000000r	; 0.000976563
__unwindtable$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$6
__ehfuncinfo$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
$T700556 = -552						; size = 1
$T700560 = -552						; size = 1
tv1237 = -548						; size = 4
tv1235 = -548						; size = 4
tv1232 = -548						; size = 4
tv1155 = -548						; size = 4
tv1122 = -548						; size = 4
tv1116 = -548						; size = 4
tv1114 = -548						; size = 4
tv1100 = -548						; size = 4
tv1095 = -548						; size = 4
tv1093 = -548						; size = 4
tv922 = -548						; size = 4
tv723 = -548						; size = 4
$T700598 = -544						; size = 4
$T700401 = -544						; size = 8
$T700398 = -544						; size = 8
$T700395 = -544						; size = 8
$T700392 = -544						; size = 8
_this$GSCopy$ = -536					; size = 4
$T700387 = -532						; size = 28
$T700386 = -504						; size = 456
_commandLine$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_settings$ = 12						; size = 4
??0System@DRAMsimII@@QAE@ABVSettings@1@@Z PROC		; DRAMsimII::System::System

; 60   : {

	push	-1
	push	__ehhandler$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 540				; 0000021cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+552], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+572]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR _this$[esp+568]
	mov	ebp, DWORD PTR _settings$[esp+568]
	lea	esi, DWORD PTR [ebx+8]
	push	ebp
	mov	edi, esi
	mov	DWORD PTR _this$GSCopy$[esp+576], ebx
	mov	DWORD PTR [ebx], OFFSET ??_7System@DRAMsimII@@6B@
	call	??0SystemConfiguration@DRAMsimII@@QAE@ABVSettings@1@@Z ; DRAMsimII::SystemConfiguration::SystemConfiguration
	mov	DWORD PTR __$EHRec$[esp+580], 0
	mov	eax, DWORD PTR [ebp+184]
	mov	DWORD PTR [ebx+552], eax
	mov	ecx, DWORD PTR [ebp+188]
	push	ebp
	lea	edi, DWORD PTR [ebx+568]
	push	edi
	mov	DWORD PTR [ebx+556], ecx
	mov	DWORD PTR [ebx+560], 2
	call	??0Statistics@DRAMsimII@@QAE@ABVSettings@1@@Z ; DRAMsimII::Statistics::Statistics
	push	edi
	push	esi
	push	ebp
	lea	edx, DWORD PTR $T700386[esp+584]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+596], 1
	call	??0Channel@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@AAVStatistics@1@@Z ; DRAMsimII::Channel::Channel
	mov	BYTE PTR __$EHRec$[esp+580], 2
	mov	ecx, DWORD PTR [ebx+364]
	push	eax
	push	ecx
	lea	edi, DWORD PTR [ebx+1172]
	push	edi
	call	??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	lea	ecx, DWORD PTR $T700386[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 4
	call	??1Channel@DRAMsimII@@UAE@XZ		; DRAMsimII::Channel::~Channel
	push	edi
	push	ebp
	lea	eax, DWORD PTR [ebx+1200]
	push	eax
	mov	edx, esi
	call	??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z ; DRAMsimII::InputStream::InputStream
	mov	BYTE PTR __$EHRec$[esp+580], 5
	xor	esi, esi
	mov	DWORD PTR [ebx+11544], esi
	mov	DWORD PTR [ebx+11548], esi
	mov	ecx, DWORD PTR [ebp+28]
	mov	DWORD PTR [ebx+11552], ecx

; 61   : 	Address::initialize(settings);

	mov	ecx, ebp
	mov	DWORD PTR [ebx+11556], esi
	call	?initialize@Address@DRAMsimII@@SAXABVSettings@2@@Z ; DRAMsimII::Address::initialize

; 62   : 
; 63   : 	string commandLine(settings.commandLine);

	push	-1
	lea	eax, DWORD PTR [ebp+152]
	push	esi
	push	eax
	lea	ecx, DWORD PTR _commandLine$[esp+584]
	mov	DWORD PTR _commandLine$[esp+608], 15	; 0000000fH
	mov	DWORD PTR _commandLine$[esp+604], esi
	mov	BYTE PTR _commandLine$[esp+588], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[esp+580], 6

; 64   : 
; 65   : 	if (commandLine.length() < 1)

	cmp	DWORD PTR _commandLine$[esp+592], 1
	jae	$LN82@System

; 66   : 	{
; 67   : 		if (settings.inFileType == InputStream::RANDOM)

	mov	eax, DWORD PTR [ebp+92]
	cmp	eax, 2
	jne	SHORT $LN9@System

; 68   : 			commandLine = "Random";

	push	6
	push	OFFSET ??_C@_06BEOPDEGP@Random?$AA@
	lea	ecx, DWORD PTR _commandLine$[esp+580]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	$LN82@System
$LN9@System:

; 69   : 		else if (settings.inFileType == InputStream::MASE_TRACE || settings.inFileType == InputStream::DRAMSIM)

	cmp	eax, 1
	je	SHORT $LN6@System
	cmp	eax, 6
	jne	$LN82@System
$LN6@System:

; 70   : 		{			
; 71   : 			size_t begin = settings.inFile.find_last_of('/');

	push	1
	push	-1
	lea	edx, DWORD PTR $T700556[esp+580]
	lea	esi, DWORD PTR [ebp+32]
	push	edx
	mov	ecx, esi
	mov	BYTE PTR $T700556[esp+584], 47		; 0000002fH
	call	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind

; 72   : 			size_t end = settings.inFile.find_last_of('.');

	push	1
	mov	edi, eax
	push	-1
	lea	eax, DWORD PTR $T700560[esp+580]
	push	eax
	mov	ecx, esi
	mov	BYTE PTR $T700560[esp+584], 46		; 0000002eH
	call	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind

; 73   : 			if (begin != string::npos && end != string::npos)

	cmp	edi, -1
	je	SHORT $LN5@System
	cmp	eax, -1
	je	SHORT $LN5@System

; 74   : 				commandLine = settings.inFile.substr(begin + 1,end - begin - 1);

	sub	eax, edi
	dec	eax
	push	eax
	inc	edi
	push	edi
	lea	ecx, DWORD PTR $T700387[esp+580]
	push	ecx
	mov	ecx, esi
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	push	-1
	push	0
	push	eax
	lea	ecx, DWORD PTR _commandLine$[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 7
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T700387[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 6
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 75   : 			else

	jmp	SHORT $LN222@System
$LN5@System:

; 76   : 				commandLine = settings.inFile;

	push	-1
	push	0
	push	esi
	lea	ecx, DWORD PTR _commandLine$[esp+584]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN222@System:
	xor	esi, esi
$LN82@System:

; 77   : 		}
; 78   : 	}
; 79   : 
; 80   : 	assert(systemConfig.statsOutStream.is_complete());
; 81   : 
; 82   : 	// else printing to these streams goes nowhere
; 83   : 	systemConfig.statsOutStream << "----Command Line: " << commandLine << " ch[" << settings.channelCount <<
; 84   : 		"] rk[" << settings.rankCount << "] bk[" << settings.bankCount << "] row[" << settings.rowCount <<
; 85   : 		"] col[" << settings.columnCount << "] [x" << settings.DQperDRAM << "] t_{RAS}[" << settings.tRAS <<
; 86   : 		"] t_{CAS}[" << settings.tCAS << "] t_{RCD}[" << settings.tRCD << "] t_{RC}[" << settings.tRC <<
; 87   : 		"] AMP[" << settings.addressMappingScheme << "] COA[" << settings.commandOrderingAlgorithm <<
; 88   : 		"] RBMP[" << settings.rowBufferManagementPolicy << "] DR[" << settings.dataRate / 1E6 <<
; 89   : 		"M] PBQ[" << settings.perBankQueueDepth << "] t_{FAW}[" << settings.tFAW << "] " <<
; 90   : 		"cache[" << settings.cacheSize / 1024.0F << "kB] " <<
; 91   : 		"blkSz[" << settings.blockSize << "] assoc[" << settings.associativity << "] sets[" << settings.cacheSize / settings.blockSize / settings.associativity << "]"
; 92   : 		<< endl;

	lea	eax, DWORD PTR [ebx+152]
	cmp	eax, esi
	je	SHORT $LN13@System
	lea	eax, DWORD PTR [ebx+160]
	jmp	SHORT $LN14@System
$LN13@System:
	xor	eax, eax
$LN14@System:
	push	OFFSET ??_C@_06BOCDPGPG@?$FN?5AMP?$FL?$AA@
	push	ecx
	mov	edx, DWORD PTR [ebp+348]
	push	edx
	push	ecx
	push	OFFSET ??_C@_09IABIPHAA@?$FN?5t_?$HLRC?$HN?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+352]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0L@OICMBBBB@?$FN?5t_?$HLRCD?$HN?$FL?$AA@
	push	ecx
	mov	edx, DWORD PTR [ebp+332]
	push	edx
	push	ecx
	push	OFFSET ??_C@_0L@JHKIPMGJ@?$FN?5t_?$HLCAS?$HN?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+344]
	push	ecx
	push	ecx
	mov	edx, DWORD PTR [ebp+416]
	push	OFFSET ??_C@_0L@FPCCCNFH@?$FN?5t_?$HLRAS?$HN?$FL?$AA@
	push	ecx
	push	edx
	push	ecx
	push	OFFSET ??_C@_04NOGDJOAJ@?$FN?5?$FLx?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+236]
	mov	edx, DWORD PTR [ebp+240]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_06ICGIPBND@?$FN?5col?$FL?$AA@
	push	ecx
	push	edx
	mov	edx, DWORD PTR [ebp+304]
	push	ecx
	push	OFFSET ??_C@_06MPJLADHA@?$FN?5row?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+308]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_05LDAOPFKH@?$FN?5bk?$FL?$AA@
	push	ecx
	push	edx
	push	ecx
	push	OFFSET ??_C@_05ODBHKCDI@?$FN?5rk?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+300]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_04MOAEGBAM@?5ch?$FL?$AA@
	push	ecx
	lea	edx, DWORD PTR _commandLine$[esp+740]
	push	edx
	push	ecx
	push	OFFSET ??_C@_0BD@NKGPPGBC@?9?9?9?9Command?5Line?3?5?$AA@
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	mov	eax, DWORD PTR [ebp+284]
	add	esp, 8
	cmp	eax, 7
	ja	SHORT $LN86@System
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABW4AddressMappingScheme@Address@0@@Z ; DRAMsimII::operator<<
	mov	DWORD PTR $T700598[esp+572], eax
	jmp	SHORT $LN97@System
$LN86@System:
	push	OFFSET ??_C@_05LOKBKELC@UNKWN?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	DWORD PTR $T700598[esp+572], esi
$LN97@System:
	mov	ecx, DWORD PTR [ebp+480]
	mov	esi, DWORD PTR [ebp+484]
	xor	edx, edx
	mov	eax, ecx
	div	esi
	mov	edi, DWORD PTR [ebp+476]
	xor	edx, edx
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	push	ecx
	mov	DWORD PTR tv1237[esp+580], ecx
	fild	DWORD PTR tv1237[esp+580]
	div	edi
	push	eax
	push	ecx
	push	OFFSET ??_C@_07KMICBNBC@?$FN?5sets?$FL?$AA@
	push	ecx
	push	edi
	push	ecx
	push	OFFSET ??_C@_08NADJLLE@?$FN?5assoc?$FL?$AA@
	push	ecx
	push	esi
	push	ecx
	push	OFFSET ??_C@_06DGPPDNGF@blkSz?$FL?$AA@
	push	ecx
	push	OFFSET ??_C@_04BHMCEHEJ@kB?$FN?5?$AA@
	push	ecx
	test	ecx, ecx
	jge	SHORT $LN213@System
	fadd	DWORD PTR __real@4f800000
$LN213@System:
	fmul	QWORD PTR __real@3f50000000000000
	mov	eax, DWORD PTR [ebp+340]
	sub	esp, 8
	mov	edx, DWORD PTR [ebp+204]
	fstp	DWORD PTR tv1235[esp+644]
	fld	DWORD PTR tv1235[esp+644]
	fstp	DWORD PTR [esp+4]
	push	OFFSET ??_C@_06CMDGPFCD@cache?$FL?$AA@
	fild	DWORD PTR [ebp+204]
	push	ecx
	push	OFFSET ??_C@_02PBFOLPKM@?$FN?5?$AA@
	push	ecx
	push	eax
	push	ecx
	push	OFFSET ??_C@_0L@EIAHPKIN@?$FN?5t_?$HLFAW?$HN?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+220]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_07FANEOFIO@M?$FN?5PBQ?$FL?$AA@
	push	ecx
	test	edx, edx
	jge	SHORT $LN214@System
	fadd	QWORD PTR __real@41f0000000000000
$LN214@System:
	fdiv	QWORD PTR __real@412e848000000000
	mov	eax, DWORD PTR $T700598[esp+692]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_05BNONNLFK@?$FN?5DR?$FL?$AA@
	push	ecx
	push	OFFSET ??_C@_07KELLHHAH@?$FN?5RBMP?$FL?$AA@
	push	ecx
	push	OFFSET ??_C@_06NDAOKEFK@?$FN?5COA?$FL?$AA@
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	mov	eax, DWORD PTR [ebp+208]
	add	esp, 8
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4CommandOrderingAlgorithm@0@@Z ; DRAMsimII::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	mov	eax, DWORD PTR [ebp+280]
	add	esp, 8
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RowBufferPolicy@0@@Z ; DRAMsimII::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@N@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 93   : 
; 94   : 	systemConfig.powerOutStream << "----Command Line: " << commandLine << " ch[" << settings.channelCount <<
; 95   : 		"] rk[" << settings.rankCount << "] bk[" << settings.bankCount << "] row[" << settings.rowCount <<
; 96   : 		"] col[" << settings.columnCount << "] [x" << settings.DQperDRAM << "] t_{RAS}[" << settings.tRAS <<
; 97   : 		"] t_{CAS}[" << settings.tCAS << "] t_{RCD}[" << settings.tRCD << "] t_{RC}[" << settings.tRC <<
; 98   : 		"] AMP[" << settings.addressMappingScheme << "] COA[" << settings.commandOrderingAlgorithm <<
; 99   : 		"] RBMP[" << settings.rowBufferManagementPolicy << "] DR[" << settings.dataRate / 1E6 <<
; 100  : 		"M] PBQ[" << settings.perBankQueueDepth << "] t_{FAW}[" << settings.tFAW << "]" << endl;

	lea	eax, DWORD PTR [ebx+80]
	test	eax, eax
	je	SHORT $LN15@System
	lea	eax, DWORD PTR [ebx+88]
	jmp	SHORT $LN16@System
$LN15@System:
	xor	eax, eax
$LN16@System:
	push	OFFSET ??_C@_06BOCDPGPG@?$FN?5AMP?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+348]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_09IABIPHAA@?$FN?5t_?$HLRC?$HN?$FL?$AA@
	push	ecx
	mov	edx, DWORD PTR [ebp+352]
	push	edx
	push	ecx
	push	OFFSET ??_C@_0L@OICMBBBB@?$FN?5t_?$HLRCD?$HN?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+332]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0L@JHKIPMGJ@?$FN?5t_?$HLCAS?$HN?$FL?$AA@
	push	ecx
	mov	edx, DWORD PTR [ebp+344]
	push	edx
	push	ecx
	push	OFFSET ??_C@_0L@FPCCCNFH@?$FN?5t_?$HLRAS?$HN?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+416]
	push	ecx
	mov	edx, DWORD PTR [ebp+236]
	push	ecx
	push	OFFSET ??_C@_04NOGDJOAJ@?$FN?5?$FLx?$AA@
	push	ecx
	push	edx
	push	ecx
	mov	edx, DWORD PTR [ebp+308]
	push	OFFSET ??_C@_06ICGIPBND@?$FN?5col?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+240]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_06MPJLADHA@?$FN?5row?$FL?$AA@
	push	ecx
	push	edx
	mov	edx, DWORD PTR [ebp+300]
	push	ecx
	push	OFFSET ??_C@_05LDAOPFKH@?$FN?5bk?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+304]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_05ODBHKCDI@?$FN?5rk?$FL?$AA@
	push	ecx
	push	edx
	push	ecx
	push	OFFSET ??_C@_04MOAEGBAM@?5ch?$FL?$AA@
	push	ecx
	lea	ecx, DWORD PTR _commandLine$[esp+740]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0BD@NKGPPGBC@?9?9?9?9Command?5Line?3?5?$AA@
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	mov	eax, DWORD PTR [ebp+284]
	add	esp, 8
	cmp	eax, 7
	ja	SHORT $LN107@System
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABW4AddressMappingScheme@Address@0@@Z ; DRAMsimII::operator<<
	jmp	SHORT $LN118@System
$LN107@System:
	push	OFFSET ??_C@_05LOKBKELC@UNKWN?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	eax, esi
$LN118@System:
	mov	edx, DWORD PTR [ebp+340]
	fild	DWORD PTR [ebp+204]
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	push	ecx
	push	edx
	mov	edx, DWORD PTR [ebp+204]
	push	ecx
	push	OFFSET ??_C@_0L@EIAHPKIN@?$FN?5t_?$HLFAW?$HN?$FL?$AA@
	push	ecx
	mov	ecx, DWORD PTR [ebp+220]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_07FANEOFIO@M?$FN?5PBQ?$FL?$AA@
	push	ecx
	test	edx, edx
	jge	SHORT $LN215@System
	fadd	QWORD PTR __real@41f0000000000000
$LN215@System:
	fdiv	QWORD PTR __real@412e848000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_05BNONNLFK@?$FN?5DR?$FL?$AA@
	push	ecx
	push	OFFSET ??_C@_07KELLHHAH@?$FN?5RBMP?$FL?$AA@
	push	ecx
	push	OFFSET ??_C@_06NDAOKEFK@?$FN?5COA?$FL?$AA@
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	mov	eax, DWORD PTR [ebp+208]
	add	esp, 8
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4CommandOrderingAlgorithm@0@@Z ; DRAMsimII::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	mov	eax, DWORD PTR [ebp+280]
	add	esp, 8
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RowBufferPolicy@0@@Z ; DRAMsimII::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@N@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 101  : 
; 102  : #ifndef NDEBUG 
; 103  : 	systemConfig.timingOutStream << "----Command Line: " << commandLine << " ch[" << settings.channelCount <<
; 104  : 		"] rk[" << settings.rankCount << "] bk[" << settings.bankCount << "] row[" << settings.rowCount <<
; 105  : 		"] col[" << settings.columnCount << "] [x" << settings.DQperDRAM << "] t_{RAS}[" << settings.tRAS <<
; 106  : 		"] t_{CAS}[" << settings.tCAS << "] t_{RCD}[" << settings.tRCD << "] t_{RC}[" << settings.tRC <<
; 107  : 		"] AMP[" << settings.addressMappingScheme << "] COA[" << settings.commandOrderingAlgorithm <<
; 108  : 		"] RBMP[" << settings.rowBufferManagementPolicy << "] DR[" << settings.dataRate / 1E6 <<
; 109  : 		"M] PBQ[" << settings.perBankQueueDepth << "] t_{FAW}[" << settings.tFAW << "]" << endl;
; 110  : #endif
; 111  : 
; 112  : 
; 113  : 	systemConfig.statsOutStream << "----Epoch " << setprecision(5) << (float)settings.epoch / (float)settings.dataRate << endl;

	lea	eax, DWORD PTR [ebx+152]
	test	eax, eax
	je	SHORT $LN17@System
	lea	esi, DWORD PTR [ebx+160]
	jmp	SHORT $LN18@System
$LN17@System:
	xor	esi, esi
$LN18@System:
	lea	eax, DWORD PTR $T700392[esp+572]
	push	5
	push	eax
	call	?setprecision@std@@YA?AU?$_Smanip@H@1@H@Z ; std::setprecision
	push	OFFSET ??_C@_0L@IOLOEHIE@?9?9?9?9Epoch?5?$AA@
	push	esi
	mov	edi, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	je	SHORT $LN131@System
$LN130@System:
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
$LN131@System:
	mov	edx, DWORD PTR [edi+4]
	push	edx
	push	eax
	mov	eax, DWORD PTR [edi]
	call	eax
	fild	DWORD PTR [ebp+28]
	mov	ecx, DWORD PTR [ebp+28]
	test	ecx, ecx
	jge	SHORT $LN216@System
	fadd	DWORD PTR __real@4f800000
$LN216@System:
	mov	edx, DWORD PTR [ebp+204]
	fild	DWORD PTR [ebp+204]
	test	edx, edx
	jge	SHORT $LN217@System
	fadd	DWORD PTR __real@4f800000
$LN217@System:
	fdivp	ST(1), ST(0)
	add	esp, 4
	fstp	DWORD PTR tv1114[esp+576]
	fld	DWORD PTR tv1114[esp+576]
	fstp	DWORD PTR [esp]
	push	esi
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 114  : 
; 115  : 	systemConfig.powerOutStream << "----Epoch " << setprecision(5) << (float)settings.epoch / (float)settings.dataRate << endl;

	lea	eax, DWORD PTR [ebx+80]
	test	eax, eax
	je	SHORT $LN19@System
	lea	esi, DWORD PTR [ebx+88]
	jmp	SHORT $LN20@System
$LN19@System:
	xor	esi, esi
$LN20@System:
	lea	eax, DWORD PTR $T700395[esp+572]
	push	5
	push	eax
	call	?setprecision@std@@YA?AU?$_Smanip@H@1@H@Z ; std::setprecision
	push	OFFSET ??_C@_0L@IOLOEHIE@?9?9?9?9Epoch?5?$AA@
	push	esi
	mov	edi, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	je	SHORT $LN139@System
$LN138@System:
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
$LN139@System:
	mov	edx, DWORD PTR [edi+4]
	push	edx
	push	eax
	mov	eax, DWORD PTR [edi]
	call	eax
	fild	DWORD PTR [ebp+28]
	mov	ecx, DWORD PTR [ebp+28]
	test	ecx, ecx
	jge	SHORT $LN218@System
	fadd	DWORD PTR __real@4f800000
$LN218@System:
	mov	edx, DWORD PTR [ebp+204]
	fild	DWORD PTR [ebp+204]
	test	edx, edx
	jge	SHORT $LN219@System
	fadd	DWORD PTR __real@4f800000
$LN219@System:
	fdivp	ST(1), ST(0)
	add	esp, 4
	fstp	DWORD PTR tv1093[esp+576]
	fld	DWORD PTR tv1093[esp+576]
	fstp	DWORD PTR [esp]
	push	esi
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 116  : 
; 117  : 	systemConfig.statsOutStream << "----Datarate " << setprecision(5) << (float)settings.dataRate << endl;

	lea	eax, DWORD PTR [ebx+152]
	test	eax, eax
	je	SHORT $LN21@System
	lea	esi, DWORD PTR [ebx+160]
	jmp	SHORT $LN22@System
$LN21@System:
	xor	esi, esi
$LN22@System:
	lea	eax, DWORD PTR $T700398[esp+572]
	push	5
	push	eax
	call	?setprecision@std@@YA?AU?$_Smanip@H@1@H@Z ; std::setprecision
	push	OFFSET ??_C@_0O@GPPBLPGF@?9?9?9?9Datarate?5?$AA@
	push	esi
	mov	edi, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	je	SHORT $LN147@System
$LN146@System:
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
$LN147@System:
	mov	edx, DWORD PTR [edi+4]
	push	edx
	push	eax
	mov	eax, DWORD PTR [edi]
	call	eax
	fild	DWORD PTR [ebp+204]
	mov	ecx, DWORD PTR [ebp+204]
	test	ecx, ecx
	jge	SHORT $LN220@System
	fadd	DWORD PTR __real@4f800000
$LN220@System:
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	esi
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 118  : 
; 119  : 	systemConfig.powerOutStream << "----Datarate " << setprecision(5) << (float)settings.dataRate << endl;

	lea	eax, DWORD PTR [ebx+80]
	test	eax, eax
	je	SHORT $LN23@System
	lea	esi, DWORD PTR [ebx+88]
	jmp	SHORT $LN24@System
$LN23@System:
	xor	esi, esi
$LN24@System:
	lea	edx, DWORD PTR $T700401[esp+572]
	push	5
	push	edx
	call	?setprecision@std@@YA?AU?$_Smanip@H@1@H@Z ; std::setprecision
	push	OFFSET ??_C@_0O@GPPBLPGF@?9?9?9?9Datarate?5?$AA@
	push	esi
	mov	edi, eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	je	SHORT $LN155@System
$LN154@System:
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	add	eax, esi
$LN155@System:
	mov	ecx, DWORD PTR [edi+4]
	mov	edx, DWORD PTR [edi]
	push	ecx
	push	eax
	call	edx
	fild	DWORD PTR [ebp+204]
	mov	eax, DWORD PTR [ebp+204]
	test	eax, eax
	jge	SHORT $LN221@System
	fadd	DWORD PTR __real@4f800000
$LN221@System:
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	esi
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 120  : 
; 121  : 	systemConfig.powerOutStream << "-+++ch[" << channel.size() << "]rk[" << systemConfig.getRankCount() << "]+++-" << endl;	

	lea	eax, DWORD PTR [ebx+80]
	test	eax, eax
	je	SHORT $LN25@System
	lea	edi, DWORD PTR [ebx+88]
	jmp	SHORT $LN26@System
$LN25@System:
	xor	edi, edi
$LN26@System:
	mov	ecx, DWORD PTR [ebx+1188]
	sub	ecx, DWORD PTR [ebx+1184]
	mov	esi, DWORD PTR [ebx+368]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	push	OFFSET ??_C@_05CLDNIALB@?$FN?$CL?$CL?$CL?9?$AA@
	push	ecx
	push	esi
	push	ecx
	add	edx, ecx
	sar	edx, 8
	push	OFFSET ??_C@_04CFKFMLNB@?$FNrk?$FL?$AA@
	mov	eax, edx
	push	ecx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	push	ecx
	push	OFFSET ??_C@_07NIHGJHHN@?9?$CL?$CL?$CLch?$FL?$AA@
	push	edi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 122  : 
; 123  : 	systemConfig.statsOutStream << "-+++ch[" << channel.size() << "]rk[" << systemConfig.getRankCount() << "]+++-" << endl;

	lea	eax, DWORD PTR [ebx+152]
	test	eax, eax
	je	SHORT $LN27@System
	lea	edi, DWORD PTR [ebx+160]
	jmp	SHORT $LN28@System
$LN27@System:
	xor	edi, edi
$LN28@System:
	mov	ecx, DWORD PTR [ebx+1188]
	sub	ecx, DWORD PTR [ebx+1184]
	mov	esi, DWORD PTR [ebx+368]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	push	OFFSET ??_C@_05CLDNIALB@?$FN?$CL?$CL?$CL?9?$AA@
	push	ecx
	push	esi
	push	ecx
	add	edx, ecx
	sar	edx, 8
	push	OFFSET ??_C@_04CFKFMLNB@?$FNrk?$FL?$AA@
	mov	eax, edx
	push	ecx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	push	ecx
	push	OFFSET ??_C@_07NIHGJHHN@?9?$CL?$CL?$CLch?$FL?$AA@
	push	edi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	add	esp, 4
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 124  : 
; 125  : 	// set the channelID so that each channel may know its ordinal value
; 126  : 	for (unsigned i = 0; i < settings.channelCount; i++)

	xor	esi, esi
	cmp	DWORD PTR [ebp+300], esi
	jbe	SHORT $LN1@System

; 122  : 
; 123  : 	systemConfig.statsOutStream << "-+++ch[" << channel.size() << "]rk[" << systemConfig.getRankCount() << "]+++-" << endl;

	xor	edi, edi
$LL3@System:

; 127  : 	{
; 128  : 		channel[i].setChannelID(i);		

	mov	ecx, DWORD PTR [ebx+1188]
	sub	ecx, DWORD PTR [ebx+1184]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	esi, ecx
	jb	SHORT $LN176@System
	call	__invalid_parameter_noinfo
$LN176@System:
	mov	edx, DWORD PTR [ebx+1184]
	mov	DWORD PTR [edi+edx+392], esi
	inc	esi
	add	edi, 456				; 000001c8H
	cmp	esi, DWORD PTR [ebp+300]
	jb	SHORT $LL3@System
$LN1@System:

; 129  : 	}
; 130  : }

	cmp	DWORD PTR _commandLine$[esp+596], 16	; 00000010H
	jb	SHORT $LN211@System
	mov	eax, DWORD PTR _commandLine$[esp+576]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN211@System:
	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[esp+572]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+552]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 552				; 00000228H
	ret	8
__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$0:
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	add	eax, 8
	push	eax
	call	??1SystemConfiguration@DRAMsimII@@QAE@XZ ; DRAMsimII::SystemConfiguration::~SystemConfiguration
	ret	0
__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$1:
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	add	eax, 568				; 00000238H
	push	eax
	call	??1Statistics@DRAMsimII@@QAE@XZ
	ret	0
__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$2:
	lea	ecx, DWORD PTR $T700386[ebp]
	jmp	??1Channel@DRAMsimII@@UAE@XZ		; DRAMsimII::Channel::~Channel
__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$3:
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	add	eax, 1172				; 00000494H
	push	eax
	call	??1?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@XZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::~vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	ret	0
__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$4:
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	add	eax, 1200				; 000004b0H
	push	eax
	call	??1InputStream@DRAMsimII@@QAE@XZ	; DRAMsimII::InputStream::~InputStream
	ret	0
__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$5:
	lea	ecx, DWORD PTR _commandLine$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z$6:
	lea	ecx, DWORD PTR $T700387[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-556]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0System@DRAMsimII@@QAE@ABVSettings@1@@Z
	jmp	___CxxFrameHandler3
??0System@DRAMsimII@@QAE@ABVSettings@1@@Z ENDP		; DRAMsimII::System::System
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T701298 = -28						; size = 4
__Vptr$701295 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Last$ = 8						; size = 4
__Dest$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >, COMDAT
; __First$ = ecx

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR __Dest$[ebp]
	mov	edi, ecx

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	DWORD PTR __Next$[ebp], esi

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	bl, 1
	npad	4
$LL6@Uninit_cop@19:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@19

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$701295[ebp], esi
	mov	DWORD PTR $T701298[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	test	esi, esi
	je	SHORT $LN18@Uninit_cop@19
	push	edi
	push	esi
	call	??0Channel@DRAMsimII@@QAE@ABV01@@Z	; DRAMsimII::Channel::Channel
$LN18@Uninit_cop@19:
	add	esi, 456				; 000001c8H
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 456				; 000001c8H
	jmp	SHORT $LL6@Uninit_cop@19
__catch$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@19
$LL3@Uninit_cop@19:

; 134  : 		_Al.destroy(_Next);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	push	0
	mov	ecx, esi
	call	edx
	add	esi, 456				; 000001c8H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@19
$LN1@Uninit_cop@19:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN34@Uninit_cop@19:
$LN4@Uninit_cop@19:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN33@Uninit_cop@19:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$701295[ebp]
	push	eax
	mov	ecx, DWORD PTR $T701298[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z
_TEXT	SEGMENT
$T701328 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$701332 = 12					; size = 1
__Last$ = 12						; size = 4
??$unchecked_uninitialized_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >, COMDAT
; __Dest$ = edx

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$701332[esp]
	mov	BYTE PTR $T701328[esp+4], 0
	mov	eax, DWORD PTR $T701328[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+8]
	push	edx
	push	eax
	call	??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >

; 823  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$unchecked_uninitialized_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAVChannel@DRAMsimII@@@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV23@00@Z
_TEXT	SEGMENT
$T701386 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$701389 = 12					; size = 1
__Last$ = 12						; size = 4
??$_Ucopy@PAVChannel@DRAMsimII@@@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV23@00@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ucopy<DRAMsimII::Channel *>, COMDAT
; __Ptr$ = edx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	ecx, DWORD PTR __Cat$701389[esp]
	mov	BYTE PTR $T701386[esp+4], 0
	mov	eax, DWORD PTR $T701386[esp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+8]
	push	edx
	push	eax
	call	??$_Uninit_copy@PAVChannel@DRAMsimII@@PAV12@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YAPAVChannel@DRAMsimII@@PAV12@00AAV?$allocator@VChannel@DRAMsimII@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<DRAMsimII::Channel *,DRAMsimII::Channel *,std::allocator<DRAMsimII::Channel> >

; 1142 : 		}

	add	esp, 20					; 00000014H
	ret	8
??$_Ucopy@PAVChannel@DRAMsimII@@@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV23@00@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ucopy<DRAMsimII::Channel *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv292 = 8						; size = 4
$T701455 = 8						; size = 1
__Cat$701459 = 8					; size = 1
$T701457 = 8						; size = 1
__Right$ = 8						; size = 4
??4?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator=, COMDAT
; _this$ = esi

; 563  : 		{	// assign _Right

	push	ebp
	mov	ebp, DWORD PTR __Right$[esp]

; 564  : 		if (this != &_Right)

	cmp	esi, ebp
	je	$LN47@operator@437

; 565  : 			{	// worth doing
; 566  : 
; 567  :  #if _HAS_ITERATOR_DEBUGGING
; 568  : 			this->_Orphan_all();
; 569  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 570  : 
; 571  : 			if (_Right.size() == 0)

	mov	eax, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR [ebp+16]
	sub	ecx, eax
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	push	edi
	sar	edx, 8
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
	jne	SHORT $LN8@operator@437

; 572  : 				clear();	// new sequence empty, erase existing sequence

	mov	eax, esi
	call	?clear@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEXXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::clear
	pop	edi

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	ebp

; 599  : 		}

	ret	4
$LN8@operator@437:

; 573  : 			else if (_Right.size() <= size())

	mov	ecx, DWORD PTR [esi+12]
	push	ebx
	mov	ebx, DWORD PTR [esi+16]
	sub	ebx, ecx
	mov	eax, -1883757585			; 8fb823efH
	imul	ebx
	add	edx, ebx
	sar	edx, 8
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
	cmp	edi, ebx
	ja	SHORT $LN6@operator@437

; 574  : 				{	// enough elements, copy new and destroy old
; 575  : 				pointer _Ptr = _STDEXT unchecked_copy(_Right._Myfirst, _Right._Mylast,
; 576  : 					_Myfirst);	// copy new

	mov	BYTE PTR $T701455[esp+8], 0
	mov	eax, DWORD PTR $T701455[esp+8]
	mov	edx, DWORD PTR __Cat$701459[esp+8]
	push	eax
	mov	eax, DWORD PTR $T701457[esp+12]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ebp+16]
	push	eax
	mov	eax, ecx
	mov	ecx, DWORD PTR [ebp+12]
	call	??$_Copy_opt@PAVChannel@DRAMsimII@@PAV12@@std@@YAPAVChannel@DRAMsimII@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<DRAMsimII::Channel *,DRAMsimII::Channel *>

; 577  : 				_Destroy(_Ptr, _Mylast);	// destroy old

	mov	edi, DWORD PTR [esi+16]
	add	esp, 16					; 00000010H
	call	?_Destroy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEXPAVChannel@DRAMsimII@@0@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Destroy

; 578  : 				_Mylast = _Myfirst + _Right.size();

	mov	ecx, DWORD PTR [ebp+16]
	sub	ecx, DWORD PTR [ebp+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	imul	ecx, 456				; 000001c8H
	add	ecx, DWORD PTR [esi+12]
	pop	ebx
	pop	edi
	mov	DWORD PTR [esi+16], ecx

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	ebp

; 599  : 		}

	ret	4
$LN6@operator@437:

; 579  : 				}
; 580  : 			else if (_Right.size() <= capacity())

	test	ecx, ecx
	jne	SHORT $LN38@operator@437
	xor	eax, eax
	jmp	SHORT $LN39@operator@437
$LN38@operator@437:
	mov	edx, DWORD PTR [esi+20]
	sub	edx, ecx
	mov	DWORD PTR tv292[esp+8], edx
	mov	eax, -1883757585			; 8fb823efH
	imul	edx
	add	edx, DWORD PTR tv292[esp+8]
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
$LN39@operator@437:
	cmp	edi, eax
	ja	SHORT $LN4@operator@437

; 581  : 				{	// enough room, copy and construct new
; 582  : 				pointer _Ptr = _Right._Myfirst + size();

	mov	eax, DWORD PTR [ebp+12]
	imul	ebx, 456				; 000001c8H

; 583  : 				_STDEXT unchecked_copy(_Right._Myfirst, _Ptr, _Myfirst);

	push	ecx
	add	ebx, eax
	push	ebx
	push	eax
	call	??$unchecked_copy@PAVChannel@DRAMsimII@@PAV12@@stdext@@YAPAVChannel@DRAMsimII@@PAV12@00@Z ; stdext::unchecked_copy<DRAMsimII::Channel *,DRAMsimII::Channel *>

; 584  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

	mov	edx, DWORD PTR [ebp+16]
	add	esp, 12					; 0000000cH
	push	edx
	mov	edx, DWORD PTR [esi+16]
	push	ebx
	call	??$_Ucopy@PAVChannel@DRAMsimII@@@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV23@00@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ucopy<DRAMsimII::Channel *>
	pop	ebx
	pop	edi
	mov	DWORD PTR [esi+16], eax

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	ebp

; 599  : 		}

	ret	4
$LN4@operator@437:

; 585  : 				}
; 586  : 			else
; 587  : 				{	// not enough room, allocate new array and construct new
; 588  : 				if (_Myfirst != 0)

	test	ecx, ecx
	je	SHORT $LN42@operator@437

; 589  : 					{	// discard old array
; 590  : 					_Destroy(_Myfirst, _Mylast);

	mov	edi, DWORD PTR [esi+16]
	mov	eax, ecx
	call	?_Destroy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEXPAVChannel@DRAMsimII@@0@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Destroy

; 591  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@operator@437:

; 592  : 					}
; 593  : 				if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR [ebp+16]
	sub	ecx, DWORD PTR [ebp+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edi, esi
	call	?_Buy@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAE_NI@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Buy
	test	al, al
	je	SHORT $LN46@operator@437

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	ecx, DWORD PTR [ebp+16]
	mov	edx, DWORD PTR [ebp+12]
	push	ecx
	push	edx
	mov	edx, DWORD PTR [esi+12]
	call	??$_Ucopy@PAVChannel@DRAMsimII@@@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IAEPAVChannel@DRAMsimII@@PAV23@00@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Ucopy<DRAMsimII::Channel *>
	mov	DWORD PTR [esi+16], eax
$LN46@operator@437:
	pop	ebx
	pop	edi
$LN47@operator@437:

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	ebp

; 599  : 		}

	ret	4
??4?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator=
_TEXT	ENDS
PUBLIC	??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z ; DRAMsimII::System::System
__unwindtable$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$4
__ehfuncinfo$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\system.cpp
_TEXT	SEGMENT
tv148 = -472						; size = 4
$T701506 = -468						; size = 456
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_sysConfig$ = 12					; size = 4
_rhsChan$ = 16						; size = 4
_simParams$ = 20					; size = 4
_stats$ = 24						; size = 4
_inputStr$ = 28						; size = 4
??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z PROC ; DRAMsimII::System::System

; 162  : {

	push	-1
	push	__ehhandler$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 460				; 000001ccH
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+492]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _rhsChan$[esp+488]
	mov	ebx, DWORD PTR _this$[esp+488]
	mov	edi, DWORD PTR _sysConfig$[esp+488]
	lea	esi, DWORD PTR [ebx+8]
	push	esi
	mov	DWORD PTR [ebx], OFFSET ??_7System@DRAMsimII@@6B@
	call	??0SystemConfiguration@DRAMsimII@@QAE@ABV01@@Z ; DRAMsimII::SystemConfiguration::SystemConfiguration
	mov	eax, DWORD PTR _simParams$[esp+488]
	mov	DWORD PTR __$EHRec$[esp+500], 0
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ebx+552], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	mov	eax, DWORD PTR _stats$[esp+488]
	push	eax
	lea	edi, DWORD PTR [ebx+568]
	push	edi
	movq	QWORD PTR [ebx+560], xmm0
	call	??0Statistics@DRAMsimII@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[esp+500], 1
	mov	ecx, DWORD PTR [ebp+16]
	sub	ecx, DWORD PTR [ebp+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	jne	SHORT $LN8@System@2
	call	__invalid_parameter_noinfo
$LN8@System@2:
	mov	edx, DWORD PTR _sysConfig$[esp+488]
	mov	eax, DWORD PTR [ebp+12]
	push	edi
	push	edx
	push	eax
	lea	eax, DWORD PTR $T701506[esp+504]
	push	eax
	call	??0Channel@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@AAVStatistics@1@@Z ; DRAMsimII::Channel::Channel
	mov	DWORD PTR tv148[esp+492], eax
	mov	BYTE PTR __$EHRec$[esp+500], 2
	mov	ecx, DWORD PTR [ebp+16]
	sub	ecx, DWORD PTR [ebp+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	mov	ecx, DWORD PTR tv148[esp+492]
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	push	ecx
	add	eax, edx
	push	eax
	lea	edi, DWORD PTR [ebx+1172]
	push	edi
	call	??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	lea	ecx, DWORD PTR $T701506[esp+492]
	mov	BYTE PTR __$EHRec$[esp+500], 4
	call	??1Channel@DRAMsimII@@UAE@XZ		; DRAMsimII::Channel::~Channel
	mov	ecx, DWORD PTR _inputStr$[esp+488]
	lea	edx, DWORD PTR [ebx+1200]
	push	edx
	call	??0InputStream@DRAMsimII@@QAE@ABV01@@Z	; DRAMsimII::InputStream::InputStream
	xor	eax, eax
	mov	BYTE PTR __$EHRec$[esp+500], 5

; 163  : 	Address::initialize(systemConfig);

	mov	ecx, esi
	mov	DWORD PTR [ebx+11544], eax
	mov	DWORD PTR [ebx+11548], eax
	mov	DWORD PTR [ebx+11552], eax
	mov	DWORD PTR [ebx+11556], eax
	call	?initialize@Address@DRAMsimII@@SAXABVSystemConfiguration@2@@Z ; DRAMsimII::Address::initialize

; 164  : 	channel = rhsChan;

	push	ebp
	mov	esi, edi
	call	??4?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator=

; 165  : }

	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[esp+492]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 472				; 000001d8H
	ret	24					; 00000018H
__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 8
	push	eax
	call	??1SystemConfiguration@DRAMsimII@@QAE@XZ ; DRAMsimII::SystemConfiguration::~SystemConfiguration
	ret	0
__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$1:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 568				; 00000238H
	push	eax
	call	??1Statistics@DRAMsimII@@QAE@XZ
	ret	0
__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$2:
	lea	ecx, DWORD PTR $T701506[ebp]
	jmp	??1Channel@DRAMsimII@@UAE@XZ		; DRAMsimII::Channel::~Channel
__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$3:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 1172				; 00000494H
	push	eax
	call	??1?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@XZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::~vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	ret	0
__unwindfunclet$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z$4:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 1200				; 000004b0H
	push	eax
	call	??1InputStream@DRAMsimII@@QAE@XZ	; DRAMsimII::InputStream::~InputStream
	ret	0
__ehhandler$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-476]
	mov	ecx, DWORD PTR [edx-480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z
	jmp	___CxxFrameHandler3
??0System@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@ABVSimulationParameters@1@ABVStatistics@1@ABVInputStream@1@@Z ENDP ; DRAMsimII::System::System
PUBLIC	??0System@DRAMsimII@@QAE@ABV01@@Z		; DRAMsimII::System::System
__unwindtable$??0System@DRAMsimII@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$4
__ehfuncinfo$??0System@DRAMsimII@@QAE@ABV01@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0System@DRAMsimII@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
$T701531 = -468						; size = 456
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_rhs$ = 12						; size = 4
??0System@DRAMsimII@@QAE@ABV01@@Z PROC			; DRAMsimII::System::System

; 145  : {

	push	-1
	push	__ehhandler$??0System@DRAMsimII@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 456				; 000001c8H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+488]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _rhs$[esp+484]
	mov	ebx, DWORD PTR _this$[esp+484]
	lea	esi, DWORD PTR [ebx+8]
	lea	edi, DWORD PTR [ebp+8]
	push	esi
	mov	DWORD PTR [ebx], OFFSET ??_7System@DRAMsimII@@6B@
	call	??0SystemConfiguration@DRAMsimII@@QAE@ABV01@@Z ; DRAMsimII::SystemConfiguration::SystemConfiguration
	mov	DWORD PTR __$EHRec$[esp+496], 0
	movq	xmm0, QWORD PTR [ebp+552]
	lea	ecx, DWORD PTR [ebp+568]
	movq	QWORD PTR [ebx+552], xmm0
	movq	xmm0, QWORD PTR [ebp+560]
	lea	eax, DWORD PTR [ebx+568]
	push	ecx
	push	eax
	movq	QWORD PTR [ebx+560], xmm0
	call	??0Statistics@DRAMsimII@@QAE@ABV01@@Z
	lea	edi, DWORD PTR [ebp+1172]
	mov	BYTE PTR __$EHRec$[esp+496], 1
	mov	ecx, DWORD PTR [edi+16]
	sub	ecx, DWORD PTR [edi+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jne	SHORT $LN8@System@3
	call	__invalid_parameter_noinfo
$LN8@System@3:
	mov	ecx, DWORD PTR [edi+12]
	lea	eax, DWORD PTR [ebx+568]
	push	eax
	push	esi
	push	ecx
	lea	ecx, DWORD PTR $T701531[esp+500]
	push	ecx
	call	??0Channel@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@AAVStatistics@1@@Z ; DRAMsimII::Channel::Channel
	mov	BYTE PTR __$EHRec$[esp+496], 2
	mov	edx, DWORD PTR [ebx+364]
	push	eax
	lea	ecx, DWORD PTR [ebx+1172]
	push	edx
	push	ecx
	call	??0?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@IABVChannel@DRAMsimII@@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	lea	ecx, DWORD PTR $T701531[esp+488]
	mov	BYTE PTR __$EHRec$[esp+496], 4
	call	??1Channel@DRAMsimII@@UAE@XZ		; DRAMsimII::Channel::~Channel
	lea	edx, DWORD PTR [ebp+1200]
	push	edx
	lea	eax, DWORD PTR [ebx+1200]
	push	eax
	lea	edx, DWORD PTR [ebx+1172]
	mov	ecx, esi
	call	??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z ; DRAMsimII::InputStream::InputStream
	mov	BYTE PTR __$EHRec$[esp+496], 5
	xor	eax, eax
	mov	DWORD PTR [ebx+11544], eax
	mov	DWORD PTR [ebx+11548], eax
	mov	ecx, DWORD PTR [ebp+11552]
	mov	DWORD PTR [ebx+11552], ecx
	mov	edx, DWORD PTR [ebp+11556]

; 146  : 	Address::initialize(systemConfig);

	mov	ecx, esi
	mov	DWORD PTR [ebx+11556], edx
	call	?initialize@Address@DRAMsimII@@SAXABVSystemConfiguration@2@@Z ; DRAMsimII::Address::initialize

; 147  : 	channel = rhs.channel;

	push	edi
	lea	esi, DWORD PTR [ebx+1172]
	call	??4?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator=

; 148  : }

	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[esp+488]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 468				; 000001d4H
	ret	8
__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 8
	push	eax
	call	??1SystemConfiguration@DRAMsimII@@QAE@XZ ; DRAMsimII::SystemConfiguration::~SystemConfiguration
	ret	0
__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$1:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 568				; 00000238H
	push	eax
	call	??1Statistics@DRAMsimII@@QAE@XZ
	ret	0
__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$2:
	lea	ecx, DWORD PTR $T701531[ebp]
	jmp	??1Channel@DRAMsimII@@UAE@XZ		; DRAMsimII::Channel::~Channel
__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$3:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 1172				; 00000494H
	push	eax
	call	??1?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@XZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::~vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	ret	0
__unwindfunclet$??0System@DRAMsimII@@QAE@ABV01@@Z$4:
	mov	eax, DWORD PTR _this$[ebp-4]
	add	eax, 1200				; 000004b0H
	push	eax
	call	??1InputStream@DRAMsimII@@QAE@XZ	; DRAMsimII::InputStream::~InputStream
	ret	0
__ehhandler$??0System@DRAMsimII@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-472]
	mov	ecx, DWORD PTR [edx-476]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0System@DRAMsimII@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
??0System@DRAMsimII@@QAE@ABV01@@Z ENDP			; DRAMsimII::System::System
END
