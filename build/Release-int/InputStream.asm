; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\CriuS\Documents\Visual Studio 2008\Projects\DRAMsimIIhg\src\InputStream.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl> `RTTI Type Descriptor'
PUBLIC	??_R4?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@@8 ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp> `RTTI Type Descriptor'
PUBLIC	??_R4?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
PUBLIC	??_R4?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
PUBLIC	??_R4?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl> `RTTI Type Descriptor'
PUBLIC	??_R4?$codecvt@DDH@std@@6B@			; std::codecvt<char,char,int>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$codecvt@DDH@std@@8			; std::codecvt<char,char,int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$codecvt@DDH@std@@8			; std::codecvt<char,char,int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$codecvt@DDH@std@@8		; std::codecvt<char,char,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$codecvt@DDH@std@@@8			; std::codecvt<char,char,int> `RTTI Type Descriptor'
PUBLIC	??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Base Class Array'
PUBLIC	??_R1GI@?0A@EA@clone_base@exception_detail@boost@@8 ; boost::exception_detail::clone_base::`RTTI Base Class Descriptor at (104,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Base Class Array'
PUBLIC	??_R1FE@?0A@EA@exception@boost@@8		; boost::exception::`RTTI Base Class Descriptor at (84,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@ ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8 ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8 ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Base Class Array'
PUBLIC	??_R1373EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (4,8,4,64)'
PUBLIC	??_R1A@73EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,8,4,64)'
PUBLIC	??_R1A@73FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,8,4,80)'
PUBLIC	??_R17?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8 ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8 ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8 ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@@8 ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8 ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@8 ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8 ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8 ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8 ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4sp_counted_base@detail@boost@@6B@		; boost::detail::sp_counted_base::`RTTI Complete Object Locator'
PUBLIC	??_R3sp_counted_base@detail@boost@@8		; boost::detail::sp_counted_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2sp_counted_base@detail@boost@@8		; boost::detail::sp_counted_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@sp_counted_base@detail@boost@@8	; boost::detail::sp_counted_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVsp_counted_base@detail@boost@@@8	; boost::detail::sp_counted_base `RTTI Type Descriptor'
PUBLIC	??_R4clone_base@exception_detail@boost@@6B@	; boost::exception_detail::clone_base::`RTTI Complete Object Locator'
PUBLIC	??_R3clone_base@exception_detail@boost@@8	; boost::exception_detail::clone_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2clone_base@exception_detail@boost@@8	; boost::exception_detail::clone_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@clone_base@exception_detail@boost@@8 ; boost::exception_detail::clone_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4exception@boost@@6B@			; boost::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@boost@@8				; boost::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@boost@@8				; boost::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@boost@@8		; boost::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@system@boost@@6B@		; boost::system::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@system@boost@@8		; boost::system::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@system@boost@@8		; boost::system::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@system@boost@@8	; boost::system::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R4codecvt_base@std@@6B@			; std::codecvt_base::`RTTI Complete Object Locator'
PUBLIC	??_R3codecvt_base@std@@8			; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2codecvt_base@std@@8			; std::codecvt_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@codecvt_base@std@@8		; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVcodecvt_base@std@@@8			; std::codecvt_base `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_istream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R13A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (4,0,4,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4ios_base@std@@6B@				; std::ios_base::`RTTI Complete Object Locator'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
PUBLIC	?exists@filesystem@boost@@YA_NVfile_status@12@@Z ; boost::filesystem::exists
PUBLIC	??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::exists<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	?exists@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z ; boost::filesystem::exists
PUBLIC	??0error_code@system@boost@@QAE@XZ		; boost::system::error_code::error_code
PUBLIC	?to_external@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@ABV45@@Z ; boost::filesystem::path_traits::to_external
PUBLIC	?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::external_file_string
PUBLIC	?type@file_status@filesystem@boost@@QBE?AW4file_type@23@XZ ; boost::filesystem::file_status::type
PUBLIC	?is_regular@filesystem@boost@@YA_NVfile_status@12@@Z ; boost::filesystem::is_regular
PUBLIC	??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::is_regular<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	?is_regular@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z ; boost::filesystem::is_regular
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??4?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator=
PUBLIC	?to_internal@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV45@@Z ; boost::filesystem::path_traits::to_internal
PUBLIC	??0system_error@system@boost@@QAE@Verror_code@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::system::system_error::system_error
PUBLIC	??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	?reset@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXXZ ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset
PUBLIC	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	??0m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::m_imp
PUBLIC	??$swap@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@std@@YAXAAPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@0@Z ; std::swap<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp *>
PUBLIC	?swap@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXAAV12@@Z ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::swap
PUBLIC	?dispose@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEXXZ ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::dispose
PUBLIC	?get_deleter@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::get_deleter
PUBLIC	??1?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAE@XZ ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::~sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	??_G?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXI@Z ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`scalar deleting destructor'
PUBLIC	??0?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	??1m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::~m_imp
PUBLIC	??_Gm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAEPAXI@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::`scalar deleting destructor'
PUBLIC	??$checked_delete@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::checked_delete<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ; boost::detail::shared_count::shared_count<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp><boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	??$reset@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	?throw_exception_assert_compatibility@boost@@YAXABVexception@std@@@Z ; boost::throw_exception_assert_compatibility
PUBLIC	??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::refcount_ptr<boost::exception_detail::error_info_container>
PUBLIC	??0exception@boost@@IAE@XZ			; boost::exception::exception
PUBLIC	??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
PUBLIC	??$enable_error_info@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YA?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@0@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::enable_error_info<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
PUBLIC	??0clone_base@exception_detail@boost@@QAE@XZ	; boost::exception_detail::clone_base::clone_base
PUBLIC	?adopt@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEXPAUerror_info_container@23@@Z ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt
PUBLIC	??4?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEAAV012@ABV012@@Z ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::operator=
PUBLIC	??4exception@boost@@QAEAAV01@ABV01@@Z		; boost::exception::operator=
PUBLIC	?copy_boost_exception@exception_detail@boost@@YAXPAVexception@2@PBV32@@Z ; boost::exception_detail::copy_boost_exception
PUBLIC	??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
PUBLIC	??$enable_current_exception@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@20@@Z ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
PUBLIC	?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone
PUBLIC	?rethrow@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::rethrow
PUBLIC	??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WFE@AEPAXI@Z ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vector deleting destructor'
PUBLIC	??1?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::~clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
PUBLIC	??_G?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`scalar deleting destructor'
PUBLIC	??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WGI@AEPAXI@Z ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vector deleting destructor'
PUBLIC	??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
PUBLIC	??1exception@boost@@MAE@XZ			; boost::exception::~exception
PUBLIC	??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
PUBLIC	??_G?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAEPAXI@Z ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`scalar deleting destructor'
PUBLIC	??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@WFE@AEPAXI@Z ; [thunk]:boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vector deleting destructor'
PUBLIC	??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
PUBLIC	??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@ABV01@@Z ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z	; std::char_traits<char>::find
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	??$root_directory_start@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@detail@filesystem@boost@@YAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; boost::filesystem::detail::root_directory_start<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::file_string
PUBLIC	?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::detail::what
PUBLIC	??C?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@XZ ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::operator->
PUBLIC	?get@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@XZ ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::get
PUBLIC	?what@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UBEPBDXZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::what
PUBLIC	??1?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::~shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
PUBLIC	??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::~basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	??_G?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAEPAXI@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`scalar deleting destructor'
PUBLIC	??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?value@error_code@system@boost@@QBEHXZ		; boost::system::error_code::value
PUBLIC	?message@error_code@system@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::system::error_code::message
PUBLIC	?unspecified_bool_true@error_code@system@boost@@SAXXZ ; boost::system::error_code::unspecified_bool_true
PUBLIC	??Berror_code@system@boost@@QBEP6AXXZXZ		; boost::system::error_code::operator void (__cdecl*)(void)
PUBLIC	?what@system_error@system@boost@@UBEPBDXZ	; boost::system::system_error::what
PUBLIC	??1system_error@system@boost@@UAE@XZ		; boost::system::system_error::~system_error
PUBLIC	??_Gsystem_error@system@boost@@UAEPAXI@Z	; boost::system::system_error::`scalar deleting destructor'
PUBLIC	??0system_error@system@boost@@QAE@ABV012@@Z	; boost::system::system_error::system_error
PUBLIC	?release@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::release
PUBLIC	??1?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr<boost::exception_detail::error_info_container>
PUBLIC	?add_ref@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::add_ref
PUBLIC	??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::refcount_ptr<boost::exception_detail::error_info_container>
PUBLIC	??0exception@boost@@QAE@ABV01@@Z		; boost::exception::exception
PUBLIC	??1clone_base@exception_detail@boost@@UAE@XZ	; boost::exception_detail::clone_base::~clone_base
PUBLIC	??_Gclone_base@exception_detail@boost@@UAEPAXI@Z ; boost::exception_detail::clone_base::`scalar deleting destructor'
PUBLIC	??0clone_base@exception_detail@boost@@QAE@ABV012@@Z ; boost::exception_detail::clone_base::clone_base
PUBLIC	??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::throw_exception<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
PUBLIC	??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ ; boost::filesystem::current_path<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	?current_path@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@XZ ; boost::filesystem::current_path
PUBLIC	?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::seed
PUBLIC	??0?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAE@ABK@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>
PUBLIC	??0?$uniform_real@N@boost@@QAE@NN@Z		; boost::uniform_real<double>::uniform_real<double>
PUBLIC	??R?$subtract@H$00@detail@random@boost@@QAEIHH@Z ; boost::random::detail::subtract<int,1>::operator()
PUBLIC	?init@?$uniform_int@H@boost@@AAEXXZ		; boost::uniform_int<int>::init
PUBLIC	??0?$uniform_int@H@boost@@QAE@HH@Z		; boost::uniform_int<int>::uniform_int<int>
PUBLIC	??0?$normal_distribution@N@boost@@QAE@ABN0@Z	; boost::normal_distribution<double>::normal_distribution<double>
PUBLIC	??0?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>
PUBLIC	??0?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z ; boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>
PUBLIC	??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_real@N@1@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >
PUBLIC	??0?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>
PUBLIC	??0?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >
PUBLIC	??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_int@H@1@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >
PUBLIC	??0?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >
PUBLIC	??0?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >
PUBLIC	?max@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::max
PUBLIC	?max@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::max
PUBLIC	??0?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>
PUBLIC	??0?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z ; boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>
PUBLIC	??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$normal_distribution@N@1@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >
PUBLIC	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
PUBLIC	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?empty@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE_NXZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::empty
PUBLIC	??Z?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-=
PUBLIC	??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
PUBLIC	?m_append_separator_if_needed@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXXZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::m_append_separator_if_needed
PUBLIC	?m_append@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::m_append
PUBLIC	??$is_separator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@detail@filesystem@boost@@YA_ND@Z ; boost::filesystem::detail::is_separator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
PUBLIC	?string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::string
PUBLIC	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
PUBLIC	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ; std::basic_streambuf<char,std::char_traits<char> >::getloc
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; boost::iostreams::basic_file<char>::impl::impl
PUBLIC	?swap@shared_count@detail@boost@@QAEXAAV123@@Z	; boost::detail::shared_count::swap
PUBLIC	??$swap@PAUimpl@?$basic_file@D@iostreams@boost@@@std@@YAXAAPAUimpl@?$basic_file@D@iostreams@boost@@0@Z ; std::swap<boost::iostreams::basic_file<char>::impl *>
PUBLIC	?swap@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXAAV12@@Z ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::swap
PUBLIC	?dispose@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEXXZ ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::dispose
PUBLIC	?get_deleter@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::get_deleter
PUBLIC	??1?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAE@XZ ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::~sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>
PUBLIC	??_G?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXI@Z ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`scalar deleting destructor'
PUBLIC	??0?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>
PUBLIC	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::out
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec
PUBLIC	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z		; std::_Ungetc<char>
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::in
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?state@?$fpos@H@std@@QBEHXZ			; std::fpos<int>::state
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PADH@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?always_noconv@codecvt_base@std@@QBE_NXZ	; std::codecvt_base::always_noconv
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	??0codecvt_base@std@@QAE@I@Z			; std::codecvt_base::codecvt_base
PUBLIC	?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z	; std::codecvt<char,char,int>::_Init
PUBLIC	?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::do_in
PUBLIC	?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ; std::codecvt<char,char,int>::do_out
PUBLIC	?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z ; std::codecvt<char,char,int>::do_unshift
PUBLIC	?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z	; std::codecvt<char,char,int>::do_length
PUBLIC	?do_always_noconv@codecvt_base@std@@MBE_NXZ	; std::codecvt_base::do_always_noconv
PUBLIC	?do_max_length@codecvt_base@std@@MBEHXZ		; std::codecvt_base::do_max_length
PUBLIC	?do_encoding@codecvt_base@std@@MBEHXZ		; std::codecvt_base::do_encoding
PUBLIC	??_Gcodecvt_base@std@@UAEPAXI@Z			; std::codecvt_base::`scalar deleting destructor'
PUBLIC	??1codecvt_base@std@@UAE@XZ			; std::codecvt_base::~codecvt_base
PUBLIC	??1?$codecvt@DDH@std@@MAE@XZ			; std::codecvt<char,char,int>::~codecvt<char,char,int>
PUBLIC	??_G?$codecvt@DDH@std@@MAEPAXI@Z		; std::codecvt<char,char,int>::`scalar deleting destructor'
PUBLIC	??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z	; std::codecvt<char,char,int>::codecvt<char,char,int>
PUBLIC	?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::codecvt<char,char,int>::_Getcat
PUBLIC	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::is_open
PUBLIC	??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ	; boost::iostreams::basic_file<char>::impl::~impl
PUBLIC	??_Gimpl@?$basic_file@D@iostreams@boost@@QAEPAXI@Z ; boost::iostreams::basic_file<char>::impl::`scalar deleting destructor'
PUBLIC	??$checked_delete@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@YAXPAUimpl@?$basic_file@D@iostreams@0@@Z ; boost::checked_delete<boost::iostreams::basic_file<char>::impl>
PUBLIC	??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z ; boost::detail::shared_count::shared_count<boost::iostreams::basic_file<char>::impl>
PUBLIC	??$?0Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@1@@Z ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl><boost::iostreams::basic_file<char>::impl>
PUBLIC	??$reset@Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXPAUimpl@?$basic_file@D@iostreams@1@@Z ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::reset<boost::iostreams::basic_file<char>::impl>
PUBLIC	?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z ; boost::iostreams::basic_file<char>::open
PUBLIC	??0shared_count@detail@boost@@QAE@XZ		; boost::detail::shared_count::shared_count
PUBLIC	??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl>
PUBLIC	??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z ; boost::iostreams::basic_file<char>::basic_file<char>
PUBLIC	??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
PUBLIC	??$resolve@Uinput@iostreams@boost@@DU?$basic_file_source@D@23@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@PAX@Z ; boost::iostreams::detail::resolve<boost::iostreams::input,char,boost::iostreams::basic_file_source<char> >
PUBLIC	??$_Construct@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAV1234@@std@@YAXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV1234@@Z ; std::_Construct<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
PUBLIC	?construct@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAEXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV3456@@Z ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::construct
PUBLIC	?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@0ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode
PUBLIC	?max_size@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QBEIXZ ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::max_size
PUBLIC	?max_size@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEIXZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::max_size
PUBLIC	?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Incsize
PUBLIC	?_Insert@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Insert
PUBLIC	?push_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::push_back
PUBLIC	?notify@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::notify
PUBLIC	?set_needs_close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXXZ ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_needs_close
PUBLIC	??0?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >
PUBLIC	??_G?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
PUBLIC	??0?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@@Z ; boost::iostreams::detail::unwrap<boost::iostreams::basic_file_source<char> >
PUBLIC	??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABU?$basic_file_source@D@23@@Z ; boost::iostreams::detail::optimal_buffer_size_impl<boost::iostreams::device_tag>::optimal_buffer_size<boost::iostreams::basic_file_source<char> >
PUBLIC	??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHABU?$basic_file_source@D@01@@Z ; boost::iostreams::optimal_buffer_size<boost::iostreams::basic_file_source<char> >
PUBLIC	?can_read@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_read
PUBLIC	?can_write@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_write
PUBLIC	??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV0123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::concept_adapter<boost::iostreams::basic_file_source<char> >
PUBLIC	?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@@Z ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::reset
PUBLIC	??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABU?$basic_file_source@D@23@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::concept_adapter<boost::iostreams::basic_file_source<char> >
PUBLIC	?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open
PUBLIC	?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl
PUBLIC	?set_auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close
PUBLIC	?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::strict_sync
PUBLIC	??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@ABVlocale@std@@@Z ; boost::iostreams::detail::imbue_impl<boost::iostreams::any_tag>::imbue<boost::iostreams::basic_file_source<char>,std::locale>
PUBLIC	??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@ABVlocale@std@@@Z ; boost::iostreams::imbue<boost::iostreams::basic_file_source<char>,std::locale>
PUBLIC	??$imbue@Vlocale@std@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::imbue<std::locale>
PUBLIC	?imbue@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::imbue
PUBLIC	?sgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHPADH@Z ; std::basic_streambuf<char,std::char_traits<char> >::sgetn
PUBLIC	?read@?$basic_file@D@iostreams@boost@@QAEHPADH@Z ; boost::iostreams::basic_file<char>::read
PUBLIC	??$read@U?$basic_file_source@D@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PADH@Z ; boost::iostreams::detail::read_device_impl<boost::iostreams::input>::read<boost::iostreams::basic_file_source<char> >
PUBLIC	??$read@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHAAU?$basic_file_source@D@01@PADH@Z ; boost::iostreams::read<boost::iostreams::basic_file_source<char> >
PUBLIC	??$read@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::read<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::read<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?underflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::underflow
PUBLIC	?pbackfail@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pbackfail
PUBLIC	?overflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::overflow
PUBLIC	??$flush@U?$basic_file_source@D@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@@Z ; boost::iostreams::detail::flush_device_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_file_source<char> >
PUBLIC	??$flush@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA_NAAU?$basic_file_source@D@01@@Z ; boost::iostreams::flush<boost::iostreams::basic_file_source<char> >
PUBLIC	??$flush@U?$basic_file_source@D@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_file_source<char>,std::basic_streambuf<char,std::char_traits<char> > >
PUBLIC	?flush@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::flush
PUBLIC	?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync
PUBLIC	?seekoff@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekoff
PUBLIC	??0random_access@detail@iostreams@boost@@QAE@ABU0123@@Z ; boost::iostreams::detail::random_access::random_access
PUBLIC	??0random_access@detail@iostreams@boost@@QAE@XZ	; boost::iostreams::detail::random_access::random_access
PUBLIC	??0input_seekable@iostreams@boost@@QAE@XZ	; boost::iostreams::input_seekable::input_seekable
PUBLIC	??0category@?$basic_file_source@D@iostreams@boost@@QAE@XZ ; boost::iostreams::basic_file_source<char>::category::category
PUBLIC	??$unwrap@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@detail@iostreams@boost@@YAAAV?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAV34@@Z ; boost::iostreams::detail::unwrap<std::basic_filebuf<char,std::char_traits<char> > >
PUBLIC	?pubseekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@JHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::pubseekoff
PUBLIC	?pubseekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@V32@H@Z ; std::basic_streambuf<char,std::char_traits<char> >::pubseekpos
PUBLIC	??0?$fpos@H@std@@QAE@H_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	?offset_to_position@iostreams@boost@@YA?AV?$fpos@H@std@@_J@Z ; boost::iostreams::offset_to_position
PUBLIC	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
PUBLIC	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@3@_JHH@Z ; boost::iostreams::seek<std::basic_filebuf<char,std::char_traits<char> > >
PUBLIC	?seek@?$basic_file@D@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHH@Z ; boost::iostreams::basic_file<char>::seek
PUBLIC	??$seek@U?$basic_file_source@D@iostreams@boost@@@?$seek_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char> >
PUBLIC	??$seek@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAU?$basic_file_source@D@01@_JHH@Z ; boost::iostreams::seek<boost::iostreams::basic_file_source<char> >
PUBLIC	??$seek@U?$basic_file_source@D@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHHUrandom_access@123@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char> >
PUBLIC	??$seek@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::seek<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?seek_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl
PUBLIC	?seekpos@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekpos
PUBLIC	?set_next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next
PUBLIC	??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAAAU?$basic_file_source@D@12@AAU312@@Z ; boost::iostreams::detail::unwrap<boost::iostreams::basic_file_source<char> >
PUBLIC	??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_file_source<char> >
PUBLIC	??C?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QBEPAUimpl@?$basic_file@D@iostreams@1@XZ ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::operator->
PUBLIC	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z ; std::basic_streambuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
PUBLIC	??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
PUBLIC	?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z	; std::codecvt<char,char,int>::unshift
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?close@?$basic_file@D@iostreams@boost@@QAEXXZ	; boost::iostreams::basic_file<char>::close
PUBLIC	??$close@U?$basic_file_source@D@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@H@Z ; boost::iostreams::detail::close_impl<boost::iostreams::closable_tag>::close<boost::iostreams::basic_file_source<char> >
PUBLIC	??$close@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@H@Z ; boost::iostreams::close<boost::iostreams::basic_file_source<char> >
PUBLIC	??$close@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::close<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?close_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close_impl
PUBLIC	?component_type@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_type
PUBLIC	??D?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEAAU?$basic_file_source@D@23@XZ ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::operator*
PUBLIC	?component@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAU?$basic_file_source@D@34@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component
PUBLIC	?component_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_impl
PUBLIC	?in@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::in
PUBLIC	??D?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@123@XZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::operator*
PUBLIC	?obj@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::obj
PUBLIC	?next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::next
PUBLIC	??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::write<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?sync_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync_impl
PUBLIC	?init_get_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_get_area
PUBLIC	?out@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::out
PUBLIC	?output_buffered@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::output_buffered
PUBLIC	?shared_buffer@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::shared_buffer
PUBLIC	?init_put_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_put_area
PUBLIC	?is_open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_open
PUBLIC	??0?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@123@@Z ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >
PUBLIC	??$call_reset@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ; boost::iostreams::detail::call_reset<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >
PUBLIC	??R?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >::operator()
PUBLIC	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > > >
PUBLIC	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >,boost::iostreams::detail::clear_flags_operation<int> >
PUBLIC	?close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
PUBLIC	?auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close
PUBLIC	?address@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::address
PUBLIC	??1?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::~concept_adapter<boost::iostreams::basic_file_source<char> >
PUBLIC	?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::reset
PUBLIC	??1?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::~optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >
PUBLIC	??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??_G?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
PUBLIC	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ ; boost::iostreams::basic_file_source<char>::~basic_file_source<char>
PUBLIC	??1?$basic_file@D@iostreams@boost@@QAE@XZ	; boost::iostreams::basic_file<char>::~basic_file<char>
PUBLIC	??1?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::~shared_ptr<boost::iostreams::basic_file<char>::impl>
PUBLIC	?add_ref_copy@sp_counted_base@detail@boost@@QAEXXZ ; boost::detail::sp_counted_base::add_ref_copy
PUBLIC	??0shared_count@detail@boost@@QAE@ABV012@@Z	; boost::detail::shared_count::shared_count
PUBLIC	??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@ABV01@@Z ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl>
PUBLIC	??0?$basic_file@D@iostreams@boost@@QAE@ABV012@@Z ; boost::iostreams::basic_file<char>::basic_file<char>
PUBLIC	??0?$basic_file_source@D@iostreams@boost@@QAE@ABU012@@Z ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
PUBLIC	??$wrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YA?AU?$basic_file_source@D@12@ABU312@PAX@Z ; boost::iostreams::detail::wrap<boost::iostreams::basic_file_source<char> >
PUBLIC	??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??0?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@PAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@Z ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >
PUBLIC	??1?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@XZ ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::~auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >
PUBLIC	?get@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QBEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::get
PUBLIC	?release@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::release
PUBLIC	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
PUBLIC	??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push<boost::iostreams::basic_file_source<char> >
PUBLIC	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::push_impl<boost::iostreams::basic_file_source<char> >
PUBLIC	??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::push<boost::iostreams::basic_file_source<char> >
PUBLIC	?clear@ios_base@std@@QAEXH@Z			; std::ios_base::clear
PUBLIC	?_Init@ios_base@std@@IAEXXZ			; std::ios_base::_Init
PUBLIC	?widen@?$ctype@D@std@@QBEDD@Z			; std::ctype<char>::widen
PUBLIC	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
PUBLIC	?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ; std::basic_ios<char,std::char_traits<char> >::init
PUBLIC	??0ios_base@std@@IAE@XZ				; std::ios_base::ios_base
PUBLIC	??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >
PUBLIC	??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::basic_istream<char,std::char_traits<char> >::basic_istream<char,std::char_traits<char> >
PUBLIC	??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@XZ ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
PUBLIC	??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@ABV01@@Z ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
PUBLIC	??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
PUBLIC	??0?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ; std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
PUBLIC	??0?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ; std::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??0?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ; std::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??$_Allocate@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::allocate
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *,std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::construct
PUBLIC	?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode
PUBLIC	??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??0chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::chain_impl
PUBLIC	?sp_enable_shared_from_this@detail@boost@@YAXZZ	; boost::detail::sp_enable_shared_from_this
PUBLIC	??0sp_counted_base@detail@boost@@QAE@XZ		; boost::detail::sp_counted_base::sp_counted_base
PUBLIC	?dispose@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEXXZ ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::dispose
PUBLIC	?get_deleter@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::get_deleter
PUBLIC	?destroy@sp_counted_base@detail@boost@@UAEXXZ	; boost::detail::sp_counted_base::destroy
PUBLIC	??_Gsp_counted_base@detail@boost@@UAEPAXI@Z	; boost::detail::sp_counted_base::`scalar deleting destructor'
PUBLIC	??1sp_counted_base@detail@boost@@UAE@XZ		; boost::detail::sp_counted_base::~sp_counted_base
PUBLIC	??1?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAE@XZ ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::~sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
PUBLIC	??_G?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXI@Z ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`scalar deleting destructor'
PUBLIC	??0?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??1?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??1?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??1?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::destroy
PUBLIC	?_Tidy@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXXZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Tidy
PUBLIC	??1?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
PUBLIC	?clear@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::clear
PUBLIC	?set_auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@_N@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close
PUBLIC	??9?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator!=
PUBLIC	?reset@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::reset
PUBLIC	??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::~chain_impl
PUBLIC	??_Gchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAXI@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::`scalar deleting destructor'
PUBLIC	??$checked_delete@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@YAXPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@0@@Z ; boost::checked_delete<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
PUBLIC	??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z ; boost::detail::shared_count::shared_count<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
PUBLIC	??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@@Z ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl><boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
PUBLIC	??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??0?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ ; boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?register_client@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXPAV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@234@@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::register_client
PUBLIC	?set_chain@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXPAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@34@@Z ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::set_chain
PUBLIC	??0?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAE@PAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@23@@Z ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??_G?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
PUBLIC	??0?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??_G?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
PUBLIC	??0?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@QAE@XZ ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??_D?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vbase destructor'
PUBLIC	??_G?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`scalar deleting destructor'
PUBLIC	??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@WBI@AEPAXI@Z ; [thunk]:boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vector deleting destructor'
PUBLIC	??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>
PUBLIC	??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
PUBLIC	??0?$normal_distribution@N@boost@@QAE@ABV01@@Z	; boost::normal_distribution<double>::normal_distribution<double>
PUBLIC	??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@ABV01@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >
PUBLIC	??_Gios_base@std@@UAEPAXI@Z			; std::ios_base::`scalar deleting destructor'
PUBLIC	??1ios_base@std@@UAE@XZ				; std::ios_base::~ios_base
PUBLIC	??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
PUBLIC	??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_istream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_istream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
PUBLIC	?weak_release@sp_counted_base@detail@boost@@QAEXXZ ; boost::detail::sp_counted_base::weak_release
PUBLIC	?release@sp_counted_base@detail@boost@@QAEXXZ	; boost::detail::sp_counted_base::release
PUBLIC	??1shared_count@detail@boost@@QAE@XZ		; boost::detail::shared_count::~shared_count
PUBLIC	??1?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::~shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
PUBLIC	??1?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??1?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ ; boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >::~chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?notify@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@MAEXXZ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::notify
PUBLIC	??_G?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	??1?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::~chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::~pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAE@XZ ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::~access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::~filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAV32@@Z ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	?front@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEAAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::front
PUBLIC	?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEABV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::list
PUBLIC	?empty@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::empty
PUBLIC	?notify@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@EAEXXZ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::notify
PUBLIC	??_G?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`scalar deleting destructor'
PUBLIC	??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@WBI@AEPAXI@Z ; [thunk]:boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vector deleting destructor'
PUBLIC	??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::~filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
PUBLIC	??_D?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAEXXZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vbase destructor'
PUBLIC	??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
PUBLIC	??$unwrap@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@AAV312@@Z ; boost::iostreams::detail::unwrap<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
PUBLIC	?is_complete@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_complete
PUBLIC	?is_complete@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QBE_NXZ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::is_complete
PUBLIC	?empty@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NXZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::empty
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::deallocate
PUBLIC	??$_Destroy@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::destroy
PUBLIC	?_Make_iter@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Make_iter
PUBLIC	??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV012@H@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator++
PUBLIC	?_Mynode@?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@3@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::_Mynode
PUBLIC	?erase@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::erase
PUBLIC	?pop_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::pop_back
PUBLIC	?auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close
PUBLIC	?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::list
PUBLIC	??C?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QBEPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@XZ ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::operator->
PUBLIC	?rbegin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rbegin
PUBLIC	??0?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >
PUBLIC	??0?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z ; std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >
PUBLIC	?rend@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rend
PUBLIC	?begin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::begin
PUBLIC	?front@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::front
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV3456@ABQAV3456@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Bidit@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV1234@ABQAV1234@@std@@QAE@XZ ; std::_Bidit<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &>::_Bidit<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &>
PUBLIC	??0?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::_Const_iterator<1>
PUBLIC	??0?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::_Iterator<1>
PUBLIC	?end@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::end
PUBLIC	?back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::back
PUBLIC	?set_next@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@0@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next
PUBLIC	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Init
PUBLIC	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
PUBLIC	?set_next@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@MAEXPAV1234@@Z ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_next
PUBLIC	??_G?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??0?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAE@XZ ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::linked_streambuf<char,std::char_traits<char> >
PUBLIC	??0?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >
PUBLIC	??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::basic_buffer<char,std::allocator<char> >
PUBLIC	??0?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >
PUBLIC	??0?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >
PUBLIC	??_G?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
PUBLIC	??0?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??0?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@XZ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	??0?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z ; boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$call_member_close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@AAV?$linked_streambuf@DU?$char_traits@D@std@@@012@H@Z ; boost::iostreams::detail::call_member_close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??0?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@123@@Z ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >
PUBLIC	??$call_reset@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ; boost::iostreams::detail::call_reset<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >
PUBLIC	??0?$clear_flags_operation@H@detail@iostreams@boost@@QAE@AAH@Z ; boost::iostreams::detail::clear_flags_operation<int>::clear_flags_operation<int>
PUBLIC	??$clear_flags@H@detail@iostreams@boost@@YA?AV?$clear_flags_operation@H@012@AAH@Z ; boost::iostreams::detail::clear_flags<int>
PUBLIC	??R?$clear_flags_operation@H@detail@iostreams@boost@@QBEXXZ ; boost::iostreams::detail::clear_flags_operation<int>::operator()
PUBLIC	??R?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >::operator()
PUBLIC	??R?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ; boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >::operator()
PUBLIC	??$execute@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@?$execute_traits_impl@X@detail@iostreams@boost@@SAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@123@@Z ; boost::iostreams::detail::execute_traits_impl<void>::execute<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
PUBLIC	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
PUBLIC	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
PUBLIC	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > > >
PUBLIC	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >,boost::iostreams::detail::clear_flags_operation<int> >
PUBLIC	?close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
PUBLIC	??_Glocale@std@@QAEPAXI@Z			; std::locale::`scalar deleting destructor'
PUBLIC	?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::underflow
PUBLIC	?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z ; std::basic_streambuf<char,std::char_traits<char> >::seekoff
PUBLIC	??0?$fpos@H@std@@QAE@J@Z			; std::fpos<int>::fpos<int>
PUBLIC	?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_streambuf<char,std::char_traits<char> >::seekpos
PUBLIC	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_streambuf<char,std::char_traits<char> >::imbue
PUBLIC	??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
PUBLIC	??1?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAE@XZ ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::~linked_streambuf<char,std::char_traits<char> >
PUBLIC	??1?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::~optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >
PUBLIC	??1?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::~single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >
PUBLIC	??1?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >::~double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >
PUBLIC	??1?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
PUBLIC	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::uflow
PUBLIC	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
PUBLIC	?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z ; std::basic_streambuf<char,std::char_traits<char> >::_Xsgetn_s
PUBLIC	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
PUBLIC	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
PUBLIC	?auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close
PUBLIC	?set_auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close
PUBLIC	?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::strict_sync
PUBLIC	??4locale@std@@QAEAAV01@ABV01@@Z		; std::locale::operator=
PUBLIC	?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue
PUBLIC	??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@ABVlocale@std@@@Z ; boost::iostreams::detail::imbue_impl<boost::iostreams::any_tag>::imbue<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::locale>
PUBLIC	??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@ABVlocale@std@@@Z ; boost::iostreams::imbue<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::locale>
PUBLIC	??$imbue@Vlocale@std@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::imbue<std::locale>
PUBLIC	?imbue@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::imbue
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?data@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::data
PUBLIC	?size@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEHXZ ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::size
PUBLIC	??$min@H@std@@YAABHABH0@Z			; std::min<int>
PUBLIC	?read@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEHPADH@Z ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::read
PUBLIC	??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PADH@Z ; boost::iostreams::detail::read_device_impl<boost::iostreams::input>::read<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHAAV?$basic_null_device@DUinput@iostreams@boost@@@01@PADH@Z ; boost::iostreams::read<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::read<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::read<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?underflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::underflow
PUBLIC	?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::bad_putback
PUBLIC	?pbackfail@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pbackfail
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::epptr
PUBLIC	?overflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::overflow
PUBLIC	??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z ; boost::iostreams::detail::flush_device_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z ; boost::iostreams::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::basic_streambuf<char,std::char_traits<char> > >
PUBLIC	?flush@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::flush
PUBLIC	?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync
PUBLIC	?seekoff@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekoff
PUBLIC	??B?$fpos@H@std@@QBEJXZ				; std::fpos<int>::operator long
PUBLIC	?fpos_t_to_offset@iostreams@boost@@YA_J_J@Z	; boost::iostreams::fpos_t_to_offset
PUBLIC	?seekpos@?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::seekpos
PUBLIC	?streampos_to_fpos_t@iostreams@boost@@YA_JV?$fpos@H@std@@@Z ; boost::iostreams::streampos_to_fpos_t
PUBLIC	?position_to_offset@iostreams@boost@@YA_JV?$fpos@H@std@@@Z ; boost::iostreams::position_to_offset
PUBLIC	?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::eback
PUBLIC	?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::egptr
PUBLIC	?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ; std::basic_streambuf<char,std::char_traits<char> >::gbump
PUBLIC	??Z?$fpos@H@std@@QAEAAV01@J@Z			; std::fpos<int>::operator-=
PUBLIC	??G?$fpos@H@std@@QBE?AV01@J@Z			; std::fpos<int>::operator-
PUBLIC	??0input@iostreams@boost@@QAE@XZ		; boost::iostreams::input::input
PUBLIC	??0device_tag@iostreams@boost@@QAE@XZ		; boost::iostreams::device_tag::device_tag
PUBLIC	??0closable_tag@iostreams@boost@@QAE@XZ		; boost::iostreams::closable_tag::closable_tag
PUBLIC	??0category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAE@XZ ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::category
PUBLIC	?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::cant_seek
PUBLIC	??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::seek<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?seek_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl
PUBLIC	?seekpos@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekpos
PUBLIC	?set_next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next
PUBLIC	??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$basic_null_device@DUinput@iostreams@boost@@@12@AAV312@@Z ; boost::iostreams::detail::unwrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$close_all@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	?close@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEXXZ ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::close
PUBLIC	??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@H@Z ; boost::iostreams::detail::close_impl<boost::iostreams::closable_tag>::close<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@H@Z ; boost::iostreams::close<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::close<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?close_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close_impl
PUBLIC	?component_type@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_type
PUBLIC	??D?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_null_device@DUinput@iostreams@boost@@@23@XZ ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::operator*
PUBLIC	?component@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAV?$basic_null_device@DUinput@iostreams@boost@@@34@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component
PUBLIC	?component_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_impl
PUBLIC	?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::pbase
PUBLIC	?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::pptr
PUBLIC	?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ; std::basic_streambuf<char,std::char_traits<char> >::pbump
PUBLIC	??D?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@123@XZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::operator*
PUBLIC	?obj@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::obj
PUBLIC	?next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::next
PUBLIC	?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::cant_write
PUBLIC	??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::write<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
PUBLIC	?sync_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync_impl
PUBLIC	?init_get_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_get_area
PUBLIC	?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ; std::basic_streambuf<char,std::char_traits<char> >::setg
PUBLIC	?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z ; std::basic_streambuf<char,std::char_traits<char> >::setp
PUBLIC	?output_buffered@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::output_buffered
PUBLIC	?begin@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::begin
PUBLIC	?end@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::end
PUBLIC	?init_put_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_put_area
PUBLIC	??_G?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
PUBLIC	??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	?set_true_eof@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEX_N@Z ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_true_eof
PUBLIC	?first@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::first
PUBLIC	?in@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::in
PUBLIC	?second@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::second
PUBLIC	?out@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::out
PUBLIC	?can_read@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_read
PUBLIC	?can_write@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_write
PUBLIC	?shared_buffer@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::shared_buffer
PUBLIC	?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::reset
PUBLIC	?address@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::address
PUBLIC	?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@@Z ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::reset
PUBLIC	??0?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	?allocate@?$allocator@D@std@@QAEPADIPBX@Z	; std::allocator<char>::allocate
PUBLIC	??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@H@Z ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::basic_buffer<char,std::allocator<char> >
PUBLIC	??1?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::~basic_buffer<char,std::allocator<char> >
PUBLIC	??$swap@H@std@@YAXAAH0@Z			; std::swap<int>
PUBLIC	??$swap@PAD@std@@YAXAAPAD0@Z			; std::swap<char *>
PUBLIC	?resize@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAEXH@Z ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::resize
PUBLIC	??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAABV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@@Z ; boost::iostreams::detail::unwrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z ; boost::iostreams::detail::optimal_buffer_size_impl<boost::iostreams::device_tag>::optimal_buffer_size<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHABV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z ; boost::iostreams::optimal_buffer_size<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	?open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@34@HH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open
PUBLIC	?is_open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_open
PUBLIC	?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl
PUBLIC	??$wrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@PAX@Z ; boost::iostreams::detail::wrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
PUBLIC	?open@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open
PUBLIC	??0closer@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@H@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer::closer
PUBLIC	??D?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::operator*
PUBLIC	?_Prevnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Prevnode
PUBLIC	??F?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator--
PUBLIC	??F?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator--
PUBLIC	??E?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAEAAV01@XZ ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::operator++
PUBLIC	??E?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >::operator++
PUBLIC	?base@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE?AV?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::base
PUBLIC	??$_Equal@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE_NABV01@@Z ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::_Equal<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >
PUBLIC	??$?8V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@V012@@std@@YA_NABV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@0@0@Z ; std::operator==<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >
PUBLIC	??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
PUBLIC	??8?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator==
PUBLIC	?_Myval@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Myval
PUBLIC	??D?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator*
PUBLIC	??D?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator*
PUBLIC	?_Nextnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Nextnode
PUBLIC	??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator++
PUBLIC	??E?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator++
PUBLIC	?close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXH@Z ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::close
PUBLIC	?close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@H@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
PUBLIC	??Rcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer::operator()
PUBLIC	??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
PUBLIC	?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::close
PUBLIC	??$swap@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@YAXAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@0@Z ; std::swap<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
PUBLIC	?pop@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pop
PUBLIC	?pop@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::pop
PUBLIC	??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@?$close_impl@Uclose_filtering_stream@detail@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@23@H@Z ; boost::iostreams::detail::close_impl<boost::iostreams::detail::close_filtering_stream>::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
PUBLIC	??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z ; boost::iostreams::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
PUBLIC	_expf
PUBLIC	?exp@@YAMM@Z					; exp
PUBLIC	_floorf
PUBLIC	?floor@@YAMM@Z					; floor
PUBLIC	_logf
PUBLIC	?log@@YAMM@Z					; log
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
PUBLIC	?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get
PUBLIC	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
PUBLIC	?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get
PUBLIC	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
PUBLIC	?_Init@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Init
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z ; std::_Getloctxt<char,std::istreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getffld
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
PUBLIC	?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::_Inc
PUBLIC	??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++
PUBLIC	??$?9DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z ; std::operator!=<char,std::char_traits<char> >
PUBLIC	??$_Maklocbyte@D@std@@YADDABU_Cvtvec@@@Z	; std::_Maklocbyte<char>
PUBLIC	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
PUBLIC	?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::_Peek
PUBLIC	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
PUBLIC	??$?8DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z ; std::operator==<char,std::char_traits<char> >
PUBLIC	?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	??1?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::~num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	??_G?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
PUBLIC	??0?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getcat
PUBLIC	??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >
PUBLIC	?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get
PUBLIC	??0?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::istreambuf_iterator<char,std::char_traits<char> >
PUBLIC	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
PUBLIC	?Frequency@SystemConfiguration@DRAMsimII@@QBENXZ ; DRAMsimII::SystemConfiguration::Frequency
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?is@?$ctype@D@std@@QBE_NFD@Z			; std::ctype<char>::is
PUBLIC	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc
PUBLIC	?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc
PUBLIC	?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::gptr
PUBLIC	?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::sgetc
PUBLIC	?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc
PUBLIC	?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
PUBLIC	?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::snextc
PUBLIC	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	??0locale@std@@QAE@XZ				; std::locale::locale
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::end
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Isnil
PUBLIC	?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0>::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Key
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Left
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Right
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Parent
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Root
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Lbound
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@HPBU12@ABU12@@std@@QAE@XZ ; std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &>::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &>
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::const_iterator
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::iterator
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::lower_bound
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::_Mynode
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::find
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator==
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator!=
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Myval
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator*
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::operator*
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::operator->
PUBLIC	?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z ; DRAMsimII::Settings::tokenize
PUBLIC	??$is_char_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YAJV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::range_detail::is_char_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	??$range_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_detail::range_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; boost::begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$adl_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; boost::iterator_range_detail::iterator_range_impl<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::adl_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0_Iterator_base_secure@std@@QAE@XZ		; std::_Iterator_base_secure::_Iterator_base_secure
PUBLIC	??0?$_Ranit_base@DHPBDABDV_Iterator_base_secure@std@@@std@@QAE@XZ ; std::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure>::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure>
PUBLIC	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBV_Container_base_secure@1@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBV_Container_base_secure@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	??$range_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::range_detail::range_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; boost::end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$adl_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; boost::iterator_range_detail::iterator_range_impl<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::adl_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Urange_tag@iterator_range_detail@1@@Z ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$make_iterator_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::make_iterator_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$make_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z ; boost::range_detail::make_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::as_literal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$to_lowerF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z ; boost::algorithm::detail::to_lowerF<char>::to_lowerF<char>
PUBLIC	?begin@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::begin
PUBLIC	??$range_begin@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; boost::range_detail::range_begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; boost::begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?end@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::end
PUBLIC	??$range_end@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; boost::range_detail::range_end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >
PUBLIC	??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; boost::end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Iter_random@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Iter_random<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?_Has_container@_Iterator_base_secure@std@@QBE_NXZ ; std::_Iterator_base_secure::_Has_container
PUBLIC	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+
PUBLIC	?_Checked_iterator_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPADXZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Checked_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?tolower@?$ctype@D@std@@QBEDD@Z			; std::ctype<char>::tolower
PUBLIC	??0ctype_base@std@@QAE@I@Z			; std::ctype_base::ctype_base
PUBLIC	?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z	; std::ctype<char>::_Init
PUBLIC	?do_tolower@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_toupper@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_widen@?$ctype@D@std@@MBEDD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z	; std::ctype<char>::do_widen
PUBLIC	?_Do_widen_s@?$ctype@D@std@@MBEPBDPBD0PADI@Z	; std::ctype<char>::_Do_widen_s
PUBLIC	?do_narrow@?$ctype@D@std@@MBEDDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z	; std::ctype<char>::do_narrow
PUBLIC	?_Do_narrow_s@?$ctype@D@std@@MBEPBDPBD0DPADI@Z	; std::ctype<char>::_Do_narrow_s
PUBLIC	??_Gctype_base@std@@UAEPAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	??1ctype_base@std@@UAE@XZ			; std::ctype_base::~ctype_base
PUBLIC	?_Tidy@?$ctype@D@std@@IAEXXZ			; std::ctype<char>::_Tidy
PUBLIC	??1?$ctype@D@std@@MAE@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	??_G?$ctype@D@std@@MAEPAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z		; std::ctype<char>::ctype<char>
PUBLIC	?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	??$tolower@D@std@@YADDABVlocale@0@@Z		; std::tolower<char>
PUBLIC	??R?$to_lowerF@D@detail@algorithm@boost@@QBEDD@Z ; boost::algorithm::detail::to_lowerF<char>::operator()
PUBLIC	??$_Transform@PADPADU?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@std@@@std@@YAPADPAD00U?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Transform<char *,char *,boost::algorithm::detail::to_lowerF<char>,std::forward_iterator_tag>
PUBLIC	??$_Transform@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAD0V10@U?$to_lowerF@D@detail@algorithm@boost@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Transform<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
PUBLIC	??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z ; std::transform<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
PUBLIC	??$transform_range@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$to_lowerF@D@012@@Z ; boost::algorithm::detail::transform_range<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::detail::to_lowerF<char> >
PUBLIC	??$to_lower@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z ; boost::algorithm::to_lower<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::dramTokenizer
PUBLIC	?abs@@YAMM@Z					; abs
PUBLIC	_fabsf
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z		; DRAMsimII::AlmostEqual<float>
PUBLIC	??$_Iter_random@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z ; std::_Iter_random<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
PUBLIC	??Y?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator+=
PUBLIC	??H?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator+
PUBLIC	?_Checked_iterator_base@?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
PUBLIC	??$_Equal@PBVChannel@DRAMsimII@@PBV12@Uforward_iterator_tag@std@@@std@@YA_NPBVChannel@DRAMsimII@@00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<DRAMsimII::Channel const *,DRAMsimII::Channel const *,std::forward_iterator_tag>
PUBLIC	??$_Equal@PBVChannel@DRAMsimII@@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YA_NPBVChannel@DRAMsimII@@0V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<DRAMsimII::Channel const *,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
PUBLIC	??$equal@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA_NV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@00@Z ; std::equal<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
PUBLIC	??$?8VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YA_NABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z ; std::operator==<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
PUBLIC	?abs@@YANN@Z					; abs
PUBLIC	??$max@N@std@@YAABNABN0@Z			; std::max<double>
PUBLIC	?min@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::min
PUBLIC	?max@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::max
PUBLIC	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
PUBLIC	??$?RV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$uniform_real@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z ; boost::uniform_real<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double> >
PUBLIC	??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAENXZ ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::operator()
PUBLIC	??R?$add@KH$00@detail@random@boost@@QAEHKH@Z	; boost::random::detail::add<unsigned long,int,1>::operator()
PUBLIC	?max@?$numeric_limits@I@std@@SAIXZ		; std::numeric_limits<unsigned int>::max
PUBLIC	?max@?$numeric_limits@K@std@@SAKXZ		; std::numeric_limits<unsigned long>::max
PUBLIC	?min@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::min
PUBLIC	?min@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::min
PUBLIC	?max@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::max
PUBLIC	?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::base
PUBLIC	?max@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::max
PUBLIC	?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::ref
PUBLIC	?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::base
PUBLIC	?max@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::max
PUBLIC	?ref@?$ptr_helper@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::ref
PUBLIC	?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::base
PUBLIC	??R?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::operator()
PUBLIC	?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::ref
PUBLIC	?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::base
PUBLIC	??R?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::operator()
PUBLIC	??R?$subtract@K$0A@@detail@random@boost@@QAEKKK@Z ; boost::random::detail::subtract<unsigned long,0>::operator()
PUBLIC	??R?$subtract@I$0A@@detail@random@boost@@QAEIII@Z ; boost::random::detail::subtract<unsigned int,0>::operator()
PUBLIC	?init@?$uniform_int@I@boost@@AAEXXZ		; boost::uniform_int<unsigned int>::init
PUBLIC	??0?$uniform_int@I@boost@@QAE@II@Z		; boost::uniform_int<unsigned int>::uniform_int<unsigned int>
PUBLIC	??R?$add@KI$0A@@detail@random@boost@@QAEIKI@Z	; boost::random::detail::add<unsigned long,unsigned int,0>::operator()
PUBLIC	??R?$add@II$0A@@detail@random@boost@@QAEIII@Z	; boost::random::detail::add<unsigned int,unsigned int,0>::operator()
PUBLIC	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@CAIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@III@Z ; boost::uniform_int<unsigned int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
PUBLIC	??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@QAEIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z ; boost::uniform_int<unsigned int>::operator()<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
PUBLIC	??R?$add@IH$00@detail@random@boost@@QAEHIH@Z	; boost::random::detail::add<unsigned int,int,1>::operator()
PUBLIC	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
PUBLIC	??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@QAEHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z ; boost::uniform_int<int>::operator()<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
PUBLIC	??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAEHXZ ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >::operator()
PUBLIC	?min@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::min
PUBLIC	?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@ABV534@@Z ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::ref
PUBLIC	?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::base
PUBLIC	?min@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::min
PUBLIC	?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::ref
PUBLIC	?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::base
PUBLIC	?min@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::min
PUBLIC	?twist@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@AAEXH@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::twist
PUBLIC	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
PUBLIC	?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::ref
PUBLIC	?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::base
PUBLIC	??R?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::operator()
PUBLIC	?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::ref
PUBLIC	?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::base
PUBLIC	??R?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::operator()
PUBLIC	??R?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::operator()
PUBLIC	??$?RV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$normal_distribution@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z ; boost::normal_distribution<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double> >
PUBLIC	??R?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAENXZ ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::operator()
PUBLIC	?getOpenRowID@Bank@DRAMsimII@@QBEIXZ		; DRAMsimII::Bank::getOpenRowID
PUBLIC	?getLastBankID@Rank@DRAMsimII@@QBEIXZ		; DRAMsimII::Rank::getLastBankID
PUBLIC	?getRank@Channel@DRAMsimII@@QBEABVRank@2@I@Z	; DRAMsimII::Channel::getRank
PUBLIC	?getLastRankID@Channel@DRAMsimII@@QBEIXZ	; DRAMsimII::Channel::getLastRankID
PUBLIC	?size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::size
PUBLIC	??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@I@Z ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator[]
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::begin
PUBLIC	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@VChannel@DRAMsimII@@HPBV34@ABV34@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::random_access_iterator_tag,DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Ranit@VChannel@DRAMsimII@@HPBV12@ABV12@@std@@QAE@XZ ; std::_Ranit<DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &>::_Ranit<DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &>
PUBLIC	??0?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
PUBLIC	?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::end
PUBLIC	??D?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@XZ ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator*
PUBLIC	??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
PUBLIC	??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
PUBLIC	??8?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator==
PUBLIC	??9?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator!=
PUBLIC	?value@?$is_error_condition_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB ; boost::system::is_error_condition_enum<enum boost::system::errc::errc_t>::value
PUBLIC	?value@?$is_error_condition_enum@Verror_condition@system@boost@@@system@boost@@2_NB ; boost::system::is_error_condition_enum<boost::system::error_condition>::value
PUBLIC	?value@?$is_error_code_enum@H@system@boost@@2_NB ; boost::system::is_error_code_enum<int>::value
PUBLIC	?value@?$is_error_code_enum@Verror_condition@system@boost@@@system@boost@@2_NB ; boost::system::is_error_code_enum<boost::system::error_condition>::value
PUBLIC	?value@?$is_error_condition_enum@Verror_code@system@boost@@@system@boost@@2_NB ; boost::system::is_error_condition_enum<boost::system::error_code>::value
PUBLIC	?value@?$is_error_code_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB ; boost::system::is_error_code_enum<enum boost::system::errc::errc_t>::value
PUBLIC	?value@?$is_error_code_enum@Verror_code@system@boost@@@system@boost@@2_NB ; boost::system::is_error_code_enum<boost::system::error_code>::value
PUBLIC	?value@?$is_error_condition_enum@H@system@boost@@2_NB ; boost::system::is_error_condition_enum<int>::value
PUBLIC	?value@?$is_error_condition_enum@Verror_category@system@boost@@@system@boost@@2_NB ; boost::system::is_error_condition_enum<boost::system::error_category>::value
PUBLIC	?value@?$is_error_code_enum@Verror_category@system@boost@@@system@boost@@2_NB ; boost::system::is_error_code_enum<boost::system::error_category>::value
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	?value@?$is_basic_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_NB ; boost::filesystem::is_basic_path<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
PUBLIC	?value@?$is_basic_path@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_NB ; boost::filesystem::is_basic_path<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
PUBLIC	?value@?$slash@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB ; boost::filesystem::slash<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
PUBLIC	?value@?$dot@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB ; boost::filesystem::dot<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
PUBLIC	?value@?$colon@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB ; boost::filesystem::colon<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
PUBLIC	?value@?$path_alt_separator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB ; boost::filesystem::path_alt_separator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
PUBLIC	??_C@_03NONCDIOG@?3?5?$CC?$AA@			; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
PUBLIC	??_C@_03KLKADAKF@?0?5?$CC?$AA@			; `string'
PUBLIC	??_C@_0BA@MGHELDEA@no?5write?5access?$AA@	; `string'
PUBLIC	??_C@_0BB@JFGNMMAL@no?5random?5access?$AA@	; `string'
PUBLIC	??_C@_0BE@DGJOHFIE@putback?5buffer?5full?$AA@	; `string'
PUBLIC	??_C@_0BG@GMOCOBCC@warn?3?5unknown?5token?3?5?$AA@ ; `string'
PUBLIC	??_C@_06NLFCANPD@random?$AA@			; `string'
PUBLIC	??_C@_07OCDKBNAP@?5failed?$AA@			; `string'
PUBLIC	??_C@_0L@JCBAPMDC@traceFiles?$AA@		; `string'
PUBLIC	??_C@_0BM@MLMDDFBP@Unable?5to?5open?5trace?5file?5?$CC?$AA@ ; `string'
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$is_arithmetic_impl@$$CBV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> const >::value
PUBLIC	??_C@_02MNCAJDFJ@k6?$AA@			; `string'
PUBLIC	??_C@_02PFGNNFLJ@K6?$AA@			; `string'
PUBLIC	??_C@_04JFNIGCJD@mase?$AA@			; `string'
PUBLIC	??_C@_04FJOCIAOL@MASE?$AA@			; `string'
PUBLIC	??_C@_04FEBJENJH@Mase?$AA@			; `string'
PUBLIC	??_C@_06NPHJNDCB@RANDOM?$AA@			; `string'
PUBLIC	??_C@_06BEOPDEGP@Random?$AA@			; `string'
PUBLIC	??_C@_06JGDKDGGA@mapped?$AA@			; `string'
PUBLIC	??_C@_06FJIHAPPM@Mapped?$AA@			; `string'
PUBLIC	??_C@_06JCBBOILC@MAPPED?$AA@			; `string'
PUBLIC	??_C@_02ELHCGPCE@ds?$AA@			; `string'
PUBLIC	??_C@_03NBDIMCMP@ds2?$AA@			; `string'
PUBLIC	??_C@_07PJFOMKOB@dramsim?$AA@			; `string'
PUBLIC	??_C@_08DKIENIFF@dramsim2?$AA@			; `string'
PUBLIC	??_C@_0BE@FKOGOOD@needs?5to?5be?5updated?$AA@	; `string'
PUBLIC	??_C@_0CM@CGJPJJEC@Unexpected?5EOF?0?5Please?5fix?5input@ ; `string'
PUBLIC	??_C@_0BF@CEJMJFKN@Unknown?5Token?5Found?5?$AA@	; `string'
PUBLIC	??_C@_0BO@HCCIPKHE@Unexpected?5transaction?5type?3?5?$AA@ ; `string'
PUBLIC	??_C@_0BL@KOHMPJBI@Unknown?5input?5trace?5format?$AA@ ; `string'
PUBLIC	??_C@_0BD@KJGDBDDP@unknown?5multipler?5?$AA@	; `string'
PUBLIC	??_C@_05FGCALOPN@type?$FL?$AA@			; `string'
PUBLIC	??_C@_08JHOICCJE@alphasim?$AA@			; `string'
PUBLIC	??_C@_04FKCKNGMI@gems?$AA@			; `string'
PUBLIC	??_C@_07CIFAGBMG@unknown?$AA@			; `string'
PUBLIC	?value@?$is_arithmetic_impl@$$CBK@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<unsigned long const >::value
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BH@HHDGIIFB@0123456789abcdefABCDEF?$AA@	; `string'
PUBLIC	?value@?$is_arithmetic_impl@$$CBV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > const >::value
PUBLIC	??_R0?AVexception@boost@@@8			; boost::exception `RTTI Type Descriptor'
PUBLIC	??_R0?AVclone_base@exception_detail@boost@@@8	; boost::exception_detail::clone_base `RTTI Type Descriptor'
PUBLIC	?value@?$slash@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB ; boost::filesystem::slash<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
PUBLIC	?value@?$colon@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB ; boost::filesystem::colon<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
PUBLIC	?value@?$path_alt_separator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB ; boost::filesystem::path_alt_separator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
PUBLIC	??_C@_0CA@PLMEELJH@boost?3?3filesystem?3?3current_path?$AA@ ; `string'
PUBLIC	??_C@_0BK@LKDJBKKI@boost?3?3filesystem?3?3exists?$AA@ ; `string'
PUBLIC	?value@?$is_basic_path@Vfile_status@filesystem@boost@@@filesystem@boost@@2_NB ; boost::filesystem::is_basic_path<boost::filesystem::file_status>::value
PUBLIC	??_C@_0BO@JCBFFKAC@boost?3?3filesystem?3?3is_regular?$AA@ ; `string'
PUBLIC	?_Stz@?$fpos@H@std@@0HB				; std::fpos<int>::_Stz
PUBLIC	?is_const@?$cv_traits_imp@PAU?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iostreams::basic_file_source<char> *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAU?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iostreams::basic_file_source<char> *>::is_volatile
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_incrementable_@detail@boost@@2_NB ; boost::detail::is_incrementable_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
PUBLIC	?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
PUBLIC	?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
PUBLIC	?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
PUBLIC	?value@?$is_arithmetic_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category>::value
PUBLIC	?value@?$is_arithmetic_impl@Uclosable_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::closable_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uclosable_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::closable_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category &,boost::iostreams::closable_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category,boost::iostreams::closable_tag>::value
PUBLIC	?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@34@@detail@boost@@2_NB ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> > >::value
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	?value@?$is_arithmetic_impl@Ubidirectional_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::bidirectional_traversal_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<std::input_iterator_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<std::input_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,std::input_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,std::input_iterator_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<std::output_iterator_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<std::output_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,std::output_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,std::output_iterator_tag>::value
PUBLIC	?p@?$assert_arg_pred_not@U?$is_iterator_category@Ubidirectional_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<boost::bidirectional_traversal_tag> >::p
PUBLIC	?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Ubidirectional_traversal_tag@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@@detail@boost@@2IB ; boost::detail::facade_iterator_category_impl<boost::bidirectional_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::mpl_assertion_in_line_10
PUBLIC	?value@?$is_arithmetic_impl@Uforward_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uforward_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Urandom_access_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::random_access_traversal_tag>::value
PUBLIC	?value@?$is_abstract_imp@Urandom_access_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::random_access_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,boost::random_access_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,boost::random_access_traversal_tag>::value
PUBLIC	?value@?$is_abstract_imp@Ubidirectional_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::bidirectional_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,boost::bidirectional_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,boost::bidirectional_traversal_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Ubidirectional_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::bidirectional_iterator_tag &,boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::bidirectional_iterator_tag,boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Urandom_access_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_abstract_imp@Urandom_access_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::bidirectional_iterator_tag &,std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::bidirectional_iterator_tag,std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_abstract_imp@Ubidirectional_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::bidirectional_iterator_tag &,std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::bidirectional_iterator_tag,std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
PUBLIC	?value@?$result_@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
PUBLIC	?value@?$is_pointer_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
PUBLIC	?value@?$is_scalar_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::is_scalar_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
PUBLIC	?value@?$is_pod_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::is_pod_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
PUBLIC	??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > > `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8 ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > `RTTI Type Descriptor'
PUBLIC	??_R0?AVsystem_error@system@boost@@@8		; boost::system::system_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z108
PUBLIC	__CT??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z104
PUBLIC	__CT??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z84
PUBLIC	__CT??_R0?AVsystem_error@system@boost@@@8??0system_error@system@boost@@QAE@ABV012@@Z76
PUBLIC	__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2084
PUBLIC	__CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z4104
PUBLIC	__CTA8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@
PUBLIC	__TI8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@
PUBLIC	?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Ubidirectional_traversal_tag@boost@@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV34@@detail@boost@@2IB ; boost::detail::facade_iterator_category_impl<boost::bidirectional_traversal_tag,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::mpl_assertion_in_line_10
PUBLIC	?is_const@?$cv_traits_imp@PBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const *>::is_volatile
PUBLIC	?value@?$is_arithmetic_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
PUBLIC	?value@?$is_pointer_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::value
PUBLIC	?value@?$result_@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
PUBLIC	?value@?$is_pointer_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
PUBLIC	?value@?$is_scalar_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB ; boost::detail::is_scalar_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
PUBLIC	?value@?$is_pod_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB ; boost::detail::is_pod_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
PUBLIC	?value@?$is_arithmetic_impl@Usingle_pass_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::single_pass_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,std::input_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,std::input_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,std::output_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,std::output_iterator_tag>::value
PUBLIC	?p@?$assert_arg_pred_not@U?$is_iterator_category@Usingle_pass_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<boost::single_pass_traversal_tag> >::p
PUBLIC	?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Usingle_pass_traversal_tag@boost@@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@AAV342@@detail@boost@@2IB ; boost::detail::facade_iterator_category_impl<boost::single_pass_traversal_tag,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &>::mpl_assertion_in_line_10
PUBLIC	?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_abstract_imp@Usingle_pass_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::single_pass_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,boost::single_pass_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,boost::single_pass_traversal_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &>::value
PUBLIC	?value@?$is_arithmetic_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_abstract_imp@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_convertible_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::input_iterator_tag,boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uforward_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<std::forward_iterator_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uforward_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<std::forward_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Uforward_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::forward_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Uforward_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::forward_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::input_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uinput_iterator_tag@std@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::input_iterator_tag>::value
PUBLIC	?is_const@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$result_@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_pointer_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_scalar_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_scalar_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_pod_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_pod_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_arithmetic_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_abstract_imp@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAV?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_convertible_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Usingle_pass_traversal_tag@boost@@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@AAV342@@detail@boost@@2IB ; boost::detail::facade_iterator_category_impl<boost::single_pass_traversal_tag,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &>::mpl_assertion_in_line_10
PUBLIC	?value@?$is_arithmetic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &>::value
PUBLIC	?value@?$is_arithmetic_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_abstract_imp@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_convertible_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?is_const@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$result_@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_pointer_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_scalar_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_scalar_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_pod_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_pod_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_arithmetic_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_abstract_imp@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAV?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_convertible_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category,boost::iostreams::output>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category &,boost::iostreams::output>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category,boost::iostreams::input>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category &,boost::iostreams::input>::value
PUBLIC	?_Psave@?$_Facetptr@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >::_Psave
PUBLIC	?is_const@?$cv_traits_imp@PAK@detail@boost@@2_NB ; boost::detail::cv_traits_imp<unsigned long *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAK@detail@boost@@2_NB ; boost::detail::cv_traits_imp<unsigned long *>::is_volatile
PUBLIC	?value@?$is_ununsigned_helper@K@detail@boost@@2_NB ; boost::detail::is_ununsigned_helper<unsigned long>::value
PUBLIC	?value@?$is_unsigned_imp@K@detail@boost@@2_NB	; boost::detail::is_unsigned_imp<unsigned long>::value
PUBLIC	?value@?$is_unsigned_imp@I@detail@boost@@2_NB	; boost::detail::is_unsigned_imp<unsigned int>::value
PUBLIC	?value@?$is_ununsigned_helper@I@detail@boost@@2_NB ; boost::detail::is_ununsigned_helper<unsigned int>::value
PUBLIC	?value@?$is_error_code_enum@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@system@boost@@2_NB ; boost::system::is_error_code_enum<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
PUBLIC	?value@?$is_error_code_enum@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@system@boost@@2_NB ; boost::system::is_error_code_enum<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?boost_select_by_size_temp_value@?$io_mode_id@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@2IB ; boost::iostreams::detail::io_mode_id<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::boost_select_by_size_temp_value
PUBLIC	?value@?$io_mode_id@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@2HB ; boost::iostreams::detail::io_mode_id<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$is_arithmetic_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category>::value
PUBLIC	?value@?$is_arithmetic_impl@Udirect_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::direct_tag>::value
PUBLIC	?value@?$is_abstract_imp@Udirect_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::direct_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::direct_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::direct_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::input>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::input>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::output>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::output>::value
PUBLIC	?value@?$is_arithmetic_impl@Udevice_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::device_tag>::value
PUBLIC	?value@?$is_abstract_imp@Udevice_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::device_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::device_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::device_tag>::value
PUBLIC	?value@?$has_trait_impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@23@@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::has_trait_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::device_tag>::value
PUBLIC	?value@?$alignment_of_impl@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@boost@@2IB ; boost::detail::alignment_of_impl<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::value
PUBLIC	?value@?$alignment_of_impl@T?$lower_alignment@$00@detail@boost@@@detail@boost@@2IB ; boost::detail::alignment_of_impl<boost::detail::lower_alignment<1> >::value
PUBLIC	?value@?$is_aligned@$00$00@detail@boost@@2_NB	; boost::detail::is_aligned<1,1>::value
PUBLIC	?found@?$type_with_alignment_imp@$00@detail@boost@@0IB ; boost::detail::type_with_alignment_imp<1>::found
PUBLIC	?value@?$is_arithmetic_impl@Utwo_sequence@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::detail::two_sequence>::value
PUBLIC	?value@?$is_abstract_imp@Utwo_sequence@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::detail::two_sequence>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUinput@iostreams@boost@@Utwo_sequence@detail@23@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::input &,boost::iostreams::detail::two_sequence>::value
PUBLIC	?value@?$is_convertible_impl@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::input,boost::iostreams::detail::two_sequence>::value
PUBLIC	?is_const@?$cv_traits_imp@PAV?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAV?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
PUBLIC	?value@?$result_@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
PUBLIC	?value@?$is_pointer_impl@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
PUBLIC	?value@?$is_arithmetic_impl@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
PUBLIC	?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> const >::value
PUBLIC	?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> const >::value
PUBLIC	?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> const >::value
PUBLIC	??_R0?AV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@8 ; boost::iostreams::basic_null_device<char,boost::iostreams::input> `RTTI Type Descriptor'
PUBLIC	??_C@_0N@DLOMBLKD@already?5open?$AA@		; `string'
PUBLIC	?value@?$dot@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB ; boost::filesystem::dot<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
PUBLIC	?value@?$is_arithmetic_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::basic_file_source<char>::category>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uinput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::input>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uinput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::input>::value
PUBLIC	??_C@_0P@HJKEEELA@chain?5complete?$AA@		; `string'
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::direct_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::direct_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::output>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::output>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::device_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::device_tag>::value
PUBLIC	?value@?$has_trait_impl@U?$basic_file_source@D@iostreams@boost@@Udevice_tag@23@@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::has_trait_impl<boost::iostreams::basic_file_source<char>,boost::iostreams::device_tag>::value
PUBLIC	?value@?$alignment_of_impl@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@boost@@2IB ; boost::detail::alignment_of_impl<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::value
PUBLIC	?value@?$alignment_of_impl@T?$lower_alignment@$03@detail@boost@@@detail@boost@@2IB ; boost::detail::alignment_of_impl<boost::detail::lower_alignment<4> >::value
PUBLIC	?value@?$is_aligned@$03$03@detail@boost@@2_NB	; boost::detail::is_aligned<4,4>::value
PUBLIC	?found@?$type_with_alignment_imp@$03@detail@boost@@0IB ; boost::detail::type_with_alignment_imp<4>::found
PUBLIC	__CTA2?AVlogic_error@std@@
PUBLIC	__TI2?AVlogic_error@std@@
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
PUBLIC	?value@?$has_result_type_impl_@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@X@detail@boost@@2_NB ; boost::detail::has_result_type_impl_<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,void>::value
PUBLIC	?value@?$is_arithmetic_impl@Udual_use@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::dual_use>::value
PUBLIC	?value@?$is_abstract_imp@Udual_use@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::dual_use>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::dual_use>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::dual_use>::value
PUBLIC	?value@?$is_arithmetic_impl@Useekable@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::seekable>::value
PUBLIC	?value@?$is_abstract_imp@Useekable@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::seekable>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUinput@iostreams@boost@@Useekable@23@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::input &,boost::iostreams::seekable>::value
PUBLIC	?value@?$is_convertible_impl@Uinput@iostreams@boost@@Useekable@23@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::input,boost::iostreams::seekable>::value
PUBLIC	?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_file_source<char> const >::value
PUBLIC	?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_file_source<char> const >::value
PUBLIC	?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_file_source<char> const >::value
PUBLIC	??_R0?AU?$basic_file_source@D@iostreams@boost@@@8 ; boost::iostreams::basic_file_source<char> `RTTI Type Descriptor'
PUBLIC	?value@?$is_arithmetic_impl@Uoptimally_buffered_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::optimally_buffered_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uoptimally_buffered_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::optimally_buffered_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::optimally_buffered_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::optimally_buffered_tag>::value
PUBLIC	?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@U?$basic_file_source@D@iostreams@boost@@@34@@detail@boost@@2_NB ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<boost::iostreams::basic_file_source<char> > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::dual_use>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::dual_use>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::optimally_buffered_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::optimally_buffered_tag>::value
PUBLIC	?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@34@@detail@boost@@2_NB ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::value
PUBLIC	?value@?$is_arithmetic_impl@Ustreambuf_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_abstract_imp@Ustreambuf_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Ulocalizable_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::localizable_tag>::value
PUBLIC	?value@?$is_abstract_imp@Ulocalizable_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::localizable_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::localizable_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::localizable_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uany_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::any_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uany_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::any_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::any_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::any_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uostream_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uostream_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uflushable_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::flushable_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uflushable_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::flushable_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::flushable_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::flushable_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::localizable_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::localizable_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::any_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::any_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Uistream_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uistream_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::closable_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::closable_tag>::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_wstream_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_streambuf_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_wstreambuf_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::detail::two_sequence>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::detail::two_sequence>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::flushable_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::flushable_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::closable_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::closable_tag>::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_wstream_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_streambuf_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_wstreambuf_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::detail::two_sequence>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::detail::two_sequence>::value
PUBLIC	?value@?$is_arithmetic_impl@Uiostream_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::iostream_tag>::value
PUBLIC	?value@?$is_abstract_imp@Uiostream_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::iostream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uiostream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::iostream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uiostream_tag@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::iostream_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@Utwo_head@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::detail::two_head>::value
PUBLIC	?value@?$is_abstract_imp@Utwo_head@detail@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::iostreams::detail::two_head>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Utwo_head@detail@34@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::detail::two_head>::value
PUBLIC	?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Utwo_head@detail@34@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::detail::two_head>::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_istream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_istream_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_ostream_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_ostream_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_streambuf_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_streambuf_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_wstream_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_streambuf_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB ; boost::iostreams::detail::is_filtering_wstreambuf_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filebuf_impl_@iostreams@boost@@2_NB ; boost::iostreams::is_filebuf_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
PUBLIC	?value@?$is_arithmetic_impl@Ufilebuf_tag@iostreams@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iostreams::filebuf_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uiostream_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::iostream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uiostream_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::iostream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uistream_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uistream_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::istream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uostream_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uostream_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::ostream_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Ustreambuf_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Ustreambuf_tag@23@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::streambuf_tag>::value
PUBLIC	?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@34@@detail@boost@@2_NB ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<std::basic_filebuf<char,std::char_traits<char> > > >::value
PUBLIC	??_7ios_base@std@@6B@				; std::ios_base::`vftable'
PUBLIC	??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_istream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_istream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7codecvt_base@std@@6B@			; std::codecvt_base::`vftable'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	??_7?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`vftable'
PUBLIC	??_7system_error@system@boost@@6B@		; boost::system::system_error::`vftable'
PUBLIC	??_7exception@boost@@6B@			; boost::exception::`vftable'
PUBLIC	??_7clone_base@exception_detail@boost@@6B@	; boost::exception_detail::clone_base::`vftable'
PUBLIC	??_7sp_counted_base@detail@boost@@6B@		; boost::detail::sp_counted_base::`vftable'
PUBLIC	??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`vftable'
PUBLIC	??_8random_access@detail@iostreams@boost@@7B@	; boost::iostreams::detail::random_access::`vbtable'
PUBLIC	??_8input@iostreams@boost@@7B@			; boost::iostreams::input::`vbtable'
PUBLIC	??_8input_seekable@iostreams@boost@@7B012@@	; boost::iostreams::input_seekable::`vbtable'
PUBLIC	??_8input_seekable@iostreams@boost@@7Binput@12@@ ; boost::iostreams::input_seekable::`vbtable'
PUBLIC	??_8input_seekable@iostreams@boost@@7Brandom_access@detail@12@@ ; boost::iostreams::input_seekable::`vbtable'
PUBLIC	??_8device_tag@iostreams@boost@@7B@		; boost::iostreams::device_tag::`vbtable'
PUBLIC	??_8closable_tag@iostreams@boost@@7B@		; boost::iostreams::closable_tag::`vbtable'
PUBLIC	??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vftable'
PUBLIC	??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vftable'
PUBLIC	??_8?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@7B@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vbtable'
PUBLIC	??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vftable'
PUBLIC	??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vftable'
PUBLIC	??_8?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@7B@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vbtable'
PUBLIC	??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`vftable'
PUBLIC	??_7?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`vftable'
PUBLIC	??_7?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@ ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
PUBLIC	??_7?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8category@?$basic_file_source@D@iostreams@boost@@7Binput_seekable@23@@ ; boost::iostreams::basic_file_source<char>::category::`vbtable'
PUBLIC	??_8category@?$basic_file_source@D@iostreams@boost@@7Bdevice_tag@23@@ ; boost::iostreams::basic_file_source<char>::category::`vbtable'
PUBLIC	??_8category@?$basic_file_source@D@iostreams@boost@@7Bclosable_tag@23@@ ; boost::iostreams::basic_file_source<char>::category::`vbtable'
PUBLIC	??_8category@?$basic_file_source@D@iostreams@boost@@7Binput@23@@ ; boost::iostreams::basic_file_source<char>::category::`vbtable'
PUBLIC	??_8category@?$basic_file_source@D@iostreams@boost@@7Brandom_access@detail@23@@ ; boost::iostreams::basic_file_source<char>::category::`vbtable'
PUBLIC	??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vftable'
PUBLIC	??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vftable'
PUBLIC	??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vftable'
PUBLIC	??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vftable'
PUBLIC	??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vftable'
PUBLIC	??_7?$codecvt@DDH@std@@6B@			; std::codecvt<char,char,int>::`vftable'
PUBLIC	??_7?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`vftable'
PUBLIC	??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Binput@23@@ ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::`vbtable'
PUBLIC	??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bdevice_tag@23@@ ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::`vbtable'
PUBLIC	??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bclosable_tag@23@@ ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::`vbtable'
PUBLIC	??_7?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
PUBLIC	??_7?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
PUBLIC	??_7?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
PUBLIC	??_7?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
PUBLIC	??_7?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`vftable'
PUBLIC	??_7?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`vftable'
EXTRN	?status_api@detail@filesystem@boost@@YA?AVfile_status@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVerror_code@system@3@@Z:PROC ; boost::filesystem::detail::status_api
EXTRN	__time64:PROC
EXTRN	?get_current_path_api@detail@filesystem@boost@@YA?AVerror_code@system@3@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; boost::filesystem::detail::get_current_path_api
EXTRN	??_E?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXI@Z:PROC ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`vector deleting destructor'
EXTRN	??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z:PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vector deleting destructor'
EXTRN	??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAEPAXI@Z:PROC ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vector deleting destructor'
EXTRN	??_E?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAEPAXI@Z:PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`vector deleting destructor'
EXTRN	??_Esystem_error@system@boost@@UAEPAXI@Z:PROC	; boost::system::system_error::`vector deleting destructor'
EXTRN	??_Eclone_base@exception_detail@boost@@UAEPAXI@Z:PROC ; boost::exception_detail::clone_base::`vector deleting destructor'
EXTRN	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z:PROC		; std::_Fiopen
EXTRN	??_E?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXI@Z:PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`vector deleting destructor'
EXTRN	_fputc:PROC
EXTRN	_ungetc:PROC
EXTRN	_fgetc:PROC
EXTRN	_fgetpos:PROC
EXTRN	_fsetpos:PROC
EXTRN	_fseek:PROC
EXTRN	_setvbuf:PROC
EXTRN	_fflush:PROC
EXTRN	??_Ecodecvt_base@std@@UAEPAXI@Z:PROC		; std::codecvt_base::`vector deleting destructor'
EXTRN	??_E?$codecvt@DDH@std@@MAEPAXI@Z:PROC		; std::codecvt<char,char,int>::`vector deleting destructor'
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vector deleting destructor'
EXTRN	_fclose:PROC
EXTRN	_fwrite:PROC
EXTRN	??_E?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vector deleting destructor'
EXTRN	?_Addstd@ios_base@std@@SAXPAV12@@Z:PROC		; std::ios_base::_Addstd
EXTRN	??_Esp_counted_base@detail@boost@@UAEPAXI@Z:PROC ; boost::detail::sp_counted_base::`vector deleting destructor'
EXTRN	??_E?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXI@Z:PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`vector deleting destructor'
EXTRN	??_E?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`vector deleting destructor'
EXTRN	??_E?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`vector deleting destructor'
EXTRN	??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vector deleting destructor'
EXTRN	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z:PROC	; std::ios_base::_Ios_base_dtor
EXTRN	??_Eios_base@std@@UAEPAXI@Z:PROC		; std::ios_base::`vector deleting destructor'
EXTRN	??_E?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ios<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_istream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`vector deleting destructor'
EXTRN	??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vector deleting destructor'
EXTRN	??0_Mutex@std@@QAE@XZ:PROC			; std::_Mutex::_Mutex
EXTRN	??_E?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vector deleting destructor'
EXTRN	??1_Mutex@std@@QAE@XZ:PROC			; std::_Mutex::~_Mutex
EXTRN	?_BADOFF@std@@3JB:DWORD				; std::_BADOFF
EXTRN	??_E?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z:PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vector deleting destructor'
EXTRN	__Stolx:PROC
EXTRN	__Stollx:PROC
EXTRN	__Stofx:PROC
EXTRN	__Stodx:PROC
EXTRN	__Stoldx:PROC
EXTRN	__Stoulx:PROC
EXTRN	__Stoullx:PROC
EXTRN	??_E?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z:PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`vector deleting destructor'
EXTRN	?_Init@locale@std@@CAPAV_Locimp@12@XZ:PROC	; std::locale::_Init
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:DWORD		; std::ctype<char>::id
EXTRN	__Getctype:PROC
EXTRN	__Tolower:PROC
EXTRN	__Toupper:PROC
EXTRN	??_Ectype_base@std@@UAEPAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	_free:PROC
EXTRN	??_E?$ctype@D@std@@MAEPAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	?get_system_category@system@boost@@YAABVerror_category@12@XZ:PROC ; boost::system::get_system_category
EXTRN	?get_generic_category@system@boost@@YAABVerror_category@12@XZ:PROC ; boost::system::get_generic_category
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA DD 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT ?use_last@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4_NA
_BSS	SEGMENT
?use_last@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4_NA DB 01H DUP (?) ; `DRAMsimII::InputStream::boxMuller'::`2'::use_last
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
;	COMDAT ??_7?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@
CONST	SEGMENT
??_7?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@ DD FLAT:??_R4?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`vftable'
	DD	FLAT:??_E?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXI@Z
	DD	FLAT:?dispose@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEXXZ
	DD	FLAT:?destroy@sp_counted_base@detail@boost@@UAEXXZ
	DD	FLAT:?get_deleter@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_R4?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@
rdata$r	SEGMENT
??_R4?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@ DD 00H ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@@8
	DD	FLAT:??_R3?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R3?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8 DD 00H ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R2?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8 DD FLAT:??_R1A@?0A@EA@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@sp_counted_base@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8 DD FLAT:??_R0?AV?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@@8
_DATA	SEGMENT
??_R0?AV?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@b'
	DB	'oost@@@detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@
CONST	SEGMENT
??_7?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@ DD FLAT:??_R4?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`vftable'
	DD	FLAT:??_E?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXI@Z
	DD	FLAT:?dispose@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEXXZ
	DD	FLAT:?destroy@sp_counted_base@detail@boost@@UAEXXZ
	DD	FLAT:?get_deleter@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_R4?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@
rdata$r	SEGMENT
??_R4?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@ DD 00H ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@@8
	DD	FLAT:??_R3?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R3?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8 DD 00H ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R2?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8 DD FLAT:??_R1A@?0A@EA@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@sp_counted_base@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8 DD FLAT:??_R0?AV?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@@8 ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@@8
_DATA	SEGMENT
??_R0?AV?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@'
	DB	'V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boo'
	DB	'st@@@filesystem@boost@@@detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ DD FLAT:??_R4?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
	DD	FLAT:??_E?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?overflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?pbackfail@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z
	DD	FLAT:?seekpos@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?imbue@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z
	DD	FLAT:?set_next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z
	DD	FLAT:?close_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z
	DD	FLAT:?auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ
	DD	FLAT:?set_auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z
	DD	FLAT:?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	FLAT:?component_type@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ
	DD	FLAT:?component_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ
	DD	FLAT:?init_get_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
	DD	FLAT:?init_put_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ DD 00H ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8
	DD	FLAT:??_R3?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ DD FLAT:??_R4?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
	DD	FLAT:??_E?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?overflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?pbackfail@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z
	DD	FLAT:?seekpos@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?imbue@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z
	DD	FLAT:?set_next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z
	DD	FLAT:?close_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z
	DD	FLAT:?auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ
	DD	FLAT:?set_auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z
	DD	FLAT:?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	FLAT:?component_type@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ
	DD	FLAT:?component_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ
	DD	FLAT:?init_get_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
	DD	FLAT:?init_put_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ DD 00H ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8
	DD	FLAT:??_R3?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 DD 00H ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 DD FLAT:??_R0?AV?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 DD 00H ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$indirect_streambuf@U?$basic_file_source@D@iostream'
	DB	's@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@de'
	DB	'tail@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 DD FLAT:??_R0?AV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$stream_buffer@U?$basic_file_source@D@iostreams@boo'
	DB	'st@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostrea'
	DB	'ms@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ DD FLAT:??_R4?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
	DD	FLAT:??_E?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?overflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?pbackfail@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z
	DD	FLAT:?seekpos@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?imbue@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z
	DD	FLAT:?set_next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z
	DD	FLAT:?close_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z
	DD	FLAT:?auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ
	DD	FLAT:?set_auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z
	DD	FLAT:?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	FLAT:?component_type@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ
	DD	FLAT:?component_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ
	DD	FLAT:?init_get_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
	DD	FLAT:?init_put_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@ DD 00H ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8
	DD	FLAT:??_R3?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ DD FLAT:??_R4?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`vftable'
	DD	FLAT:??_E?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?overflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?pbackfail@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z
	DD	FLAT:?seekpos@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	FLAT:?imbue@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z
	DD	FLAT:?set_next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z
	DD	FLAT:?close_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z
	DD	FLAT:?auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ
	DD	FLAT:?set_auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z
	DD	FLAT:?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	FLAT:?component_type@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ
	DD	FLAT:?component_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ
	DD	FLAT:?init_get_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
	DD	FLAT:?init_put_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@ DD 00H ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8
	DD	FLAT:??_R3?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 DD 00H ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 DD FLAT:??_R0?AV?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 DD 00H ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$indirect_streambuf@V?$basic_null_device@DUinput@io'
	DB	'streams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$all'
	DB	'ocator@D@5@Uinput@23@@detail@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8 DD FLAT:??_R0?AV?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8 ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$stream_buffer@V?$basic_null_device@DUinput@iostrea'
	DB	'ms@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocato'
	DB	'r@D@5@Uinput@23@@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bclosable_tag@23@@
CONST	SEGMENT
??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bclosable_tag@23@@ DD 00H ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bdevice_tag@23@@
CONST	SEGMENT
??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bdevice_tag@23@@ DD 00H ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::`vbtable'
	DD	08H
CONST	ENDS
;	COMDAT ??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Binput@23@@
CONST	SEGMENT
??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Binput@23@@ DD 00H ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::`vbtable'
	DD	0cH
CONST	ENDS
;	COMDAT ??_7?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@
CONST	SEGMENT
??_7?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@ DD FLAT:??_R4?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`vftable'
	DD	FLAT:??_E?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXI@Z
	DD	FLAT:?dispose@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEXXZ
	DD	FLAT:?destroy@sp_counted_base@detail@boost@@UAEXXZ
	DD	FLAT:?get_deleter@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_R4?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@
rdata$r	SEGMENT
??_R4?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@ DD 00H ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@@8
	DD	FLAT:??_R3?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R3?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8 DD 00H ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R2?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8 DD FLAT:??_R1A@?0A@EA@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@sp_counted_base@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8 DD FLAT:??_R0?AV?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@@8 ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@@8
_DATA	SEGMENT
??_R0?AV?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chai'
	DB	'n@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator'
	DB	'@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@'
	DB	'5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$codecvt@DDH@std@@6B@
CONST	SEGMENT
??_7?$codecvt@DDH@std@@6B@ DD FLAT:??_R4?$codecvt@DDH@std@@6B@ ; std::codecvt<char,char,int>::`vftable'
	DD	FLAT:??_E?$codecvt@DDH@std@@MAEPAXI@Z
	DD	FLAT:?do_always_noconv@codecvt_base@std@@MBE_NXZ
	DD	FLAT:?do_max_length@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_encoding@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
	DD	FLAT:?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
	DD	FLAT:?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z
	DD	FLAT:?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z
CONST	ENDS
;	COMDAT ??_R4?$codecvt@DDH@std@@6B@
rdata$r	SEGMENT
??_R4?$codecvt@DDH@std@@6B@ DD 00H			; std::codecvt<char,char,int>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$codecvt@DDH@std@@@8
	DD	FLAT:??_R3?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R3?$codecvt@DDH@std@@8 DD 00H			; std::codecvt<char,char,int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R2?$codecvt@DDH@std@@8 DD FLAT:??_R1A@?0A@EA@?$codecvt@DDH@std@@8 ; std::codecvt<char,char,int>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@codecvt_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$codecvt@DDH@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$codecvt@DDH@std@@8 DD FLAT:??_R0?AV?$codecvt@DDH@std@@@8 ; std::codecvt<char,char,int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$codecvt@DDH@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$codecvt@DDH@std@@@8
_DATA	SEGMENT
??_R0?AV?$codecvt@DDH@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::codecvt<char,char,int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$codecvt@DDH@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
CONST	SEGMENT
??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ DD FLAT:??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vftable'
	DD	FLAT:?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	DD	FLAT:?rethrow@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ
	DD	FLAT:??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WGI@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
rdata$r	SEGMENT
??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Complete Object Locator'
	DD	068H
	DD	00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
CONST	SEGMENT
??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ DD FLAT:??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vftable'
	DD	FLAT:??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WFE@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
rdata$r	SEGMENT
??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Complete Object Locator'
	DD	054H
	DD	00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
CONST	SEGMENT
??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ DD FLAT:??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vftable'
	DD	FLAT:??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
	DD	FLAT:?what@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
rdata$r	SEGMENT
??_R4?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R3?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8 DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R2?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8 DD FLAT:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
	DD	FLAT:??_R1A@?0A@EA@system_error@system@boost@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
	DD	FLAT:??_R1FE@?0A@EA@exception@boost@@8
	DD	FLAT:??_R1GI@?0A@EA@clone_base@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1GI@?0A@EA@clone_base@exception_detail@boost@@8
rdata$r	SEGMENT
??_R1GI@?0A@EA@clone_base@exception_detail@boost@@8 DD FLAT:??_R0?AVclone_base@exception_detail@boost@@@8 ; boost::exception_detail::clone_base::`RTTI Base Class Descriptor at (104,-1,0,64)'
	DD	00H
	DD	068H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3clone_base@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8 DD FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@
CONST	SEGMENT
??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@ DD FLAT:??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vftable'
	DD	FLAT:??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@WFE@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@
rdata$r	SEGMENT
??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@ DD 00H ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Complete Object Locator'
	DD	054H
	DD	00H
	DD	FLAT:??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
CONST	SEGMENT
??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ DD FLAT:??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vftable'
	DD	FLAT:??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAEPAXI@Z
	DD	FLAT:?what@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
rdata$r	SEGMENT
??_R4?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@ DD 00H ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R3?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8 DD 00H ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R2?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8 DD FLAT:??_R1A@?0A@EA@?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
	DD	FLAT:??_R1A@?0A@EA@system_error@system@boost@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
	DD	FLAT:??_R1FE@?0A@EA@exception@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1FE@?0A@EA@exception@boost@@8
rdata$r	SEGMENT
??_R1FE@?0A@EA@exception@boost@@8 DD FLAT:??_R0?AVexception@boost@@@8 ; boost::exception::`RTTI Base Class Descriptor at (84,-1,0,64)'
	DD	00H
	DD	054H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8 DD FLAT:??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_8category@?$basic_file_source@D@iostreams@boost@@7Brandom_access@detail@23@@
CONST	SEGMENT
??_8category@?$basic_file_source@D@iostreams@boost@@7Brandom_access@detail@23@@ DD 00H ; boost::iostreams::basic_file_source<char>::category::`vbtable'
	DD	0fffffffcH
CONST	ENDS
;	COMDAT ??_8category@?$basic_file_source@D@iostreams@boost@@7Binput@23@@
CONST	SEGMENT
??_8category@?$basic_file_source@D@iostreams@boost@@7Binput@23@@ DD 00H ; boost::iostreams::basic_file_source<char>::category::`vbtable'
	DD	00H
CONST	ENDS
;	COMDAT ??_8category@?$basic_file_source@D@iostreams@boost@@7Bclosable_tag@23@@
CONST	SEGMENT
??_8category@?$basic_file_source@D@iostreams@boost@@7Bclosable_tag@23@@ DD 00H ; boost::iostreams::basic_file_source<char>::category::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_8category@?$basic_file_source@D@iostreams@boost@@7Bdevice_tag@23@@
CONST	SEGMENT
??_8category@?$basic_file_source@D@iostreams@boost@@7Bdevice_tag@23@@ DD 00H ; boost::iostreams::basic_file_source<char>::category::`vbtable'
	DD	08H
CONST	ENDS
;	COMDAT ??_8category@?$basic_file_source@D@iostreams@boost@@7Binput_seekable@23@@
CONST	SEGMENT
??_8category@?$basic_file_source@D@iostreams@boost@@7Binput_seekable@23@@ DD 00H ; boost::iostreams::basic_file_source<char>::category::`vbtable'
	DD	0cH
	DD	0cH
	DD	010H
CONST	ENDS
;	COMDAT ??_7?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@ DD FLAT:??_R4?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
	DD	FLAT:?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
	DD	FLAT:?set_next@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@MAEXPAV1234@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@ DD 00H ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@8
	DD	FLAT:??_R3?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8 DD 00H ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8 DD FLAT:??_R0?AV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$linked_streambuf@DU?$char_traits@D@std@@@detail@io'
	DB	'streams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@ DD FLAT:??_R4?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@ ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`vftable'
	DD	FLAT:??_E?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?notify@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@MAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@ DD 00H ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@@8
	DD	FLAT:??_R3?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@ DD FLAT:??_R4?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`vftable'
	DD	FLAT:??_E?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?notify@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@MAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@ DD 00H ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@8
	DD	FLAT:??_R3?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
CONST	SEGMENT
??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@ DD FLAT:??_R4?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`vftable'
	DD	FLAT:??_E?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?notify@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@MAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
rdata$r	SEGMENT
??_R4?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@ DD 00H ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@8
	DD	FLAT:??_R3?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_8?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@7B@
CONST	SEGMENT
??_8?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@7B@ DD 00H ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vbtable'
	DD	010H
CONST	ENDS
;	COMDAT ??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@
CONST	SEGMENT
??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ DD FLAT:??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vftable'
	DD	FLAT:??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@WBI@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@
rdata$r	SEGMENT
??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ DD 00H ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@@8
	DD	FLAT:??_R3?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@
CONST	SEGMENT
??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@ DD FLAT:??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vftable'
	DD	FLAT:??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?notify@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@EAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@
rdata$r	SEGMENT
??_R4?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@ DD 00H ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@@8
	DD	FLAT:??_R3?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_8?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@7B@
CONST	SEGMENT
??_8?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@7B@ DD 00H ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vbtable'
	DD	010H
CONST	ENDS
;	COMDAT ??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@
CONST	SEGMENT
??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ DD FLAT:??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vftable'
	DD	FLAT:??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@WBI@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@
rdata$r	SEGMENT
??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@ DD 00H ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@8
	DD	FLAT:??_R3?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@
CONST	SEGMENT
??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@ DD FLAT:??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vftable'
	DD	FLAT:??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAEPAXI@Z
	DD	FLAT:?notify@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@EAEXXZ
CONST	ENDS
;	COMDAT ??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@
rdata$r	SEGMENT
??_R4?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@ DD 00H ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@8
	DD	FLAT:??_R3?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8 DD 00H ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8 ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
	DD	FLAT:??_R17?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@73FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@73EA@ios_base@std@@8
	DD	FLAT:??_R1373EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8 DD FLAT:??_R0?AV?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8 DD 00H ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	08H
	DD	FLAT:??_R2?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@8 ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
	DD	FLAT:??_R17?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@73FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@73EA@ios_base@std@@8
	DD	FLAT:??_R1373EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1373EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1373EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (4,8,4,64)'
	DD	00H
	DD	04H
	DD	08H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@73EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@73EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,8,4,64)'
	DD	01H
	DD	00H
	DD	08H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@73FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@73FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,8,4,80)'
	DD	02H
	DD	00H
	DD	08H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	03H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8 DD FLAT:??_R0?AU?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@@8 ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8 DD 00H ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@8 ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
	DD	FLAT:??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8 DD FLAT:??_R0?AU?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8 DD 00H ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8 DD FLAT:??_R0?AV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@8 ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R3?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8 DD 00H ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8
rdata$r	SEGMENT
??_R2?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8 DD FLAT:??_R1A@?0A@EA@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@8 ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$'
	DB	'char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail'
	DB	'@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AU?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AU?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boo'
	DB	'st@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@'
	DB	'@@detail@iostreams@boost@@@detail@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AU?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AU?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$access_control@V?$chain_client@V?$chain@Uinput@ios'
	DB	'treams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostre'
	DB	'ams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$ch'
	DB	'ain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D'
	DB	'@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@bo'
	DB	'ost@@@234@@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AV?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$filtering_stream_base@V?$chain@Uinput@iostreams@bo'
	DB	'ost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost'
	DB	'@@Upublic_@23@@detail@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8 DD FLAT:??_R0?AV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@8 ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_'
	DB	'traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@'
	DB	00H
_DATA	ENDS
;	COMDAT ??_8closable_tag@iostreams@boost@@7B@
CONST	SEGMENT
??_8closable_tag@iostreams@boost@@7B@ DD 00H		; boost::iostreams::closable_tag::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_8device_tag@iostreams@boost@@7B@
CONST	SEGMENT
??_8device_tag@iostreams@boost@@7B@ DD 00H		; boost::iostreams::device_tag::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_8input_seekable@iostreams@boost@@7Brandom_access@detail@12@@
CONST	SEGMENT
??_8input_seekable@iostreams@boost@@7Brandom_access@detail@12@@ DD 00H ; boost::iostreams::input_seekable::`vbtable'
	DD	0fffffffcH
CONST	ENDS
;	COMDAT ??_8input_seekable@iostreams@boost@@7Binput@12@@
CONST	SEGMENT
??_8input_seekable@iostreams@boost@@7Binput@12@@ DD 00H	; boost::iostreams::input_seekable::`vbtable'
	DD	00H
CONST	ENDS
;	COMDAT ??_8input_seekable@iostreams@boost@@7B012@@
CONST	SEGMENT
??_8input_seekable@iostreams@boost@@7B012@@ DD 00H	; boost::iostreams::input_seekable::`vbtable'
	DD	04H
	DD	04H
	DD	08H
CONST	ENDS
;	COMDAT ??_8input@iostreams@boost@@7B@
CONST	SEGMENT
??_8input@iostreams@boost@@7B@ DD 00H			; boost::iostreams::input::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_8random_access@detail@iostreams@boost@@7B@
CONST	SEGMENT
??_8random_access@detail@iostreams@boost@@7B@ DD 00H	; boost::iostreams::detail::random_access::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
CONST	SEGMENT
??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@ DD FLAT:??_R4?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`vftable'
	DD	FLAT:??_E?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAEPAXI@Z
	DD	FLAT:?what@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
rdata$r	SEGMENT
??_R4?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@ DD 00H ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8
	DD	FLAT:??_R3?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
rdata$r	SEGMENT
??_R3?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8 DD 00H ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
rdata$r	SEGMENT
??_R2?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8 ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@system_error@system@boost@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8 DD FLAT:??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8 ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@8
rdata$r	ENDS
;	COMDAT ??_7sp_counted_base@detail@boost@@6B@
CONST	SEGMENT
??_7sp_counted_base@detail@boost@@6B@ DD FLAT:??_R4sp_counted_base@detail@boost@@6B@ ; boost::detail::sp_counted_base::`vftable'
	DD	FLAT:??_Esp_counted_base@detail@boost@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?destroy@sp_counted_base@detail@boost@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4sp_counted_base@detail@boost@@6B@
rdata$r	SEGMENT
??_R4sp_counted_base@detail@boost@@6B@ DD 00H		; boost::detail::sp_counted_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVsp_counted_base@detail@boost@@@8
	DD	FLAT:??_R3sp_counted_base@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3sp_counted_base@detail@boost@@8
rdata$r	SEGMENT
??_R3sp_counted_base@detail@boost@@8 DD 00H		; boost::detail::sp_counted_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2sp_counted_base@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2sp_counted_base@detail@boost@@8
rdata$r	SEGMENT
??_R2sp_counted_base@detail@boost@@8 DD FLAT:??_R1A@?0A@EA@sp_counted_base@detail@boost@@8 ; boost::detail::sp_counted_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@sp_counted_base@detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@sp_counted_base@detail@boost@@8 DD FLAT:??_R0?AVsp_counted_base@detail@boost@@@8 ; boost::detail::sp_counted_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3sp_counted_base@detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVsp_counted_base@detail@boost@@@8
_DATA	SEGMENT
??_R0?AVsp_counted_base@detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::detail::sp_counted_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsp_counted_base@detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7clone_base@exception_detail@boost@@6B@
CONST	SEGMENT
??_7clone_base@exception_detail@boost@@6B@ DD FLAT:??_R4clone_base@exception_detail@boost@@6B@ ; boost::exception_detail::clone_base::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_Eclone_base@exception_detail@boost@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4clone_base@exception_detail@boost@@6B@
rdata$r	SEGMENT
??_R4clone_base@exception_detail@boost@@6B@ DD 00H	; boost::exception_detail::clone_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVclone_base@exception_detail@boost@@@8
	DD	FLAT:??_R3clone_base@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3clone_base@exception_detail@boost@@8
rdata$r	SEGMENT
??_R3clone_base@exception_detail@boost@@8 DD 00H	; boost::exception_detail::clone_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2clone_base@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2clone_base@exception_detail@boost@@8
rdata$r	SEGMENT
??_R2clone_base@exception_detail@boost@@8 DD FLAT:??_R1A@?0A@EA@clone_base@exception_detail@boost@@8 ; boost::exception_detail::clone_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@clone_base@exception_detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@clone_base@exception_detail@boost@@8 DD FLAT:??_R0?AVclone_base@exception_detail@boost@@@8 ; boost::exception_detail::clone_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3clone_base@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7exception@boost@@6B@
CONST	SEGMENT
??_7exception@boost@@6B@ DD FLAT:??_R4exception@boost@@6B@ ; boost::exception::`vftable'
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4exception@boost@@6B@
rdata$r	SEGMENT
??_R4exception@boost@@6B@ DD 00H			; boost::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@boost@@@8
	DD	FLAT:??_R3exception@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3exception@boost@@8
rdata$r	SEGMENT
??_R3exception@boost@@8 DD 00H				; boost::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@boost@@8
rdata$r	SEGMENT
??_R2exception@boost@@8 DD FLAT:??_R1A@?0A@EA@exception@boost@@8 ; boost::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@boost@@8 DD FLAT:??_R0?AVexception@boost@@@8 ; boost::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@boost@@8
rdata$r	ENDS
;	COMDAT ??_7system_error@system@boost@@6B@
CONST	SEGMENT
??_7system_error@system@boost@@6B@ DD FLAT:??_R4system_error@system@boost@@6B@ ; boost::system::system_error::`vftable'
	DD	FLAT:??_Esystem_error@system@boost@@UAEPAXI@Z
	DD	FLAT:?what@system_error@system@boost@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4system_error@system@boost@@6B@
rdata$r	SEGMENT
??_R4system_error@system@boost@@6B@ DD 00H		; boost::system::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVsystem_error@system@boost@@@8
	DD	FLAT:??_R3system_error@system@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3system_error@system@boost@@8
rdata$r	SEGMENT
??_R3system_error@system@boost@@8 DD 00H		; boost::system::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2system_error@system@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@system@boost@@8
rdata$r	SEGMENT
??_R2system_error@system@boost@@8 DD FLAT:??_R1A@?0A@EA@system_error@system@boost@@8 ; boost::system::system_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@system@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@system@boost@@8 DD FLAT:??_R0?AVsystem_error@system@boost@@@8 ; boost::system::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3system_error@system@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DD FLAT:??_R4?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`vftable'
	DD	FLAT:??_E?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z
	DD	FLAT:?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z
CONST	ENDS
;	COMDAT ??_R4?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DD 00H ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
	DD	FLAT:??_R3?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD 00H ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD FLAT:??_R0?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@'
	DB	'std@@@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DD FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DD	FLAT:??_E?$ctype@D@std@@MAEPAXI@Z
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_tolower@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
	DD	FLAT:?do_toupper@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
	DD	FLAT:?do_widen@?$ctype@D@std@@MBEDD@Z
	DD	FLAT:?_Do_widen_s@?$ctype@D@std@@MBEPBDPBD0PADI@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
	DD	FLAT:?do_narrow@?$ctype@D@std@@MBEDDD@Z
	DD	FLAT:?_Do_narrow_s@?$ctype@D@std@@MBEPBDPBD0DPADI@Z
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 00H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ctype@D@std@@@8
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD FLAT:??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ctype_base@std@@8
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD FLAT:??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
_DATA	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ctype@D@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DD FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DD	FLAT:??_Ectype_base@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 00H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUctype_base@std@@@8
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD FLAT:??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD FLAT:??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
_DATA	SEGMENT
??_R0?AUctype_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUctype_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7codecvt_base@std@@6B@
CONST	SEGMENT
??_7codecvt_base@std@@6B@ DD FLAT:??_R4codecvt_base@std@@6B@ ; std::codecvt_base::`vftable'
	DD	FLAT:??_Ecodecvt_base@std@@UAEPAXI@Z
	DD	FLAT:?do_always_noconv@codecvt_base@std@@MBE_NXZ
	DD	FLAT:?do_max_length@codecvt_base@std@@MBEHXZ
	DD	FLAT:?do_encoding@codecvt_base@std@@MBEHXZ
CONST	ENDS
;	COMDAT ??_R4codecvt_base@std@@6B@
rdata$r	SEGMENT
??_R4codecvt_base@std@@6B@ DD 00H			; std::codecvt_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVcodecvt_base@std@@@8
	DD	FLAT:??_R3codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3codecvt_base@std@@8
rdata$r	SEGMENT
??_R3codecvt_base@std@@8 DD 00H				; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2codecvt_base@std@@8
rdata$r	SEGMENT
??_R2codecvt_base@std@@8 DD FLAT:??_R1A@?0A@EA@codecvt_base@std@@8 ; std::codecvt_base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@codecvt_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@codecvt_base@std@@8 DD FLAT:??_R0?AVcodecvt_base@std@@@8 ; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVcodecvt_base@std@@@8
_DATA	SEGMENT
??_R0?AVcodecvt_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::codecvt_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVcodecvt_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PADH@Z
	DD	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_istream<char,std::char_traits<char> >::`vbtable'
	DD	08H
CONST	ENDS
;	COMDAT ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_istream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_istream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R13A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R13A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (4,0,4,64)'
	DD	00H
	DD	04H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_streambuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
	DD	FLAT:?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ios<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ios@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ios<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R13?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7ios_base@std@@6B@
CONST	SEGMENT
??_7ios_base@std@@6B@ DD FLAT:??_R4ios_base@std@@6B@	; std::ios_base::`vftable'
	DD	FLAT:??_Eios_base@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4ios_base@std@@6B@
rdata$r	SEGMENT
??_R4ios_base@std@@6B@ DD 00H				; std::ios_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVios_base@std@@@8
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<std::basic_filebuf<char,std::char_traits<char> > > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Ustreambuf_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Ustreambuf_tag@23@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Ustreambuf_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Ustreambuf_tag@23@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uostream_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uostream_tag@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uostream_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uostream_tag@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uistream_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uistream_tag@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uistream_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uistream_tag@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uiostream_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ufilebuf_tag@iostreams@boost@@Uiostream_tag@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::filebuf_tag,boost::iostreams::iostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uiostream_tag@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUfilebuf_tag@iostreams@boost@@Uiostream_tag@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::filebuf_tag &,boost::iostreams::iostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ufilebuf_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ufilebuf_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::filebuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filebuf_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filebuf_impl_@iostreams@boost@@2_NB DB 01H ; boost::iostreams::is_filebuf_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_wstreambuf_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_streambuf_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_wstream_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_streambuf_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_streambuf_impl_@iostreams@boost@@2_NB DB 01H ; boost::iostreams::is_streambuf_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_ostream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_ostream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_ostream_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_istream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@is_istream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_istream_impl_::impl<std::basic_filebuf<char,std::char_traits<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Utwo_head@detail@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Utwo_head@detail@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::detail::two_head>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Utwo_head@detail@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Utwo_head@detail@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::detail::two_head>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Utwo_head@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Utwo_head@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::detail::two_head>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Utwo_head@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Utwo_head@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::detail::two_head>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uiostream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uiostream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::iostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uiostream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uiostream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::iostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uiostream_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uiostream_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::iostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uiostream_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uiostream_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::iostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_wstreambuf_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_streambuf_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_wstream_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::flushable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::flushable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Utwo_sequence@detail@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_wstreambuf_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_wstreambuf_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_streambuf_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_streambuf_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_wstream_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_wstream_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uistream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uistream_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uistream_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uistream_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uistream_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::istream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::any_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::any_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::localizable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::localizable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::flushable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uflushable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::flushable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uflushable_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uflushable_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::flushable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uflushable_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uflushable_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::flushable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uostream_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uostream_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uostream_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uostream_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uostream_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::ostream_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::any_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uany_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::any_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uany_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uany_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::any_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uany_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uany_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::any_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::localizable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ulocalizable_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::localizable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Ulocalizable_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Ulocalizable_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::localizable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ulocalizable_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ulocalizable_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::localizable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Ustreambuf_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Ustreambuf_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Ustreambuf_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ustreambuf_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ustreambuf_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::streambuf_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::optimally_buffered_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::optimally_buffered_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::dual_use>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::dual_use>::value
CONST	ENDS
;	COMDAT ?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@U?$basic_file_source@D@iostreams@boost@@@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@U?$basic_file_source@D@iostreams@boost@@@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<boost::iostreams::basic_file_source<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::optimally_buffered_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uoptimally_buffered_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::optimally_buffered_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uoptimally_buffered_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uoptimally_buffered_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::optimally_buffered_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uoptimally_buffered_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uoptimally_buffered_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::optimally_buffered_tag>::value
CONST	ENDS
;	COMDAT ??_R0?AU?$basic_file_source@D@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AU?$basic_file_source@D@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::basic_file_source<char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$basic_file_source@D@iostreams@boost@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_file_source<char> const >::value
CONST	ENDS
;	COMDAT ?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_file_source<char> const >::value
CONST	ENDS
;	COMDAT ?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@$$CBU?$basic_file_source@D@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_file_source<char> const >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uinput@iostreams@boost@@Useekable@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uinput@iostreams@boost@@Useekable@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::input,boost::iostreams::seekable>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUinput@iostreams@boost@@Useekable@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUinput@iostreams@boost@@Useekable@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::input &,boost::iostreams::seekable>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Useekable@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Useekable@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::seekable>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Useekable@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Useekable@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::seekable>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::dual_use>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udual_use@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::dual_use>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Udual_use@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Udual_use@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::dual_use>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Udual_use@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Udual_use@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::dual_use>::value
CONST	ENDS
;	COMDAT ?value@?$has_result_type_impl_@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@X@detail@boost@@2_NB
CONST	SEGMENT
?value@?$has_result_type_impl_@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@X@detail@boost@@2_NB DB 01H ; boost::detail::has_result_type_impl_<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,void>::value
CONST	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT
__TI2?AVlogic_error@std@@ DD 00H
	DD	FLAT:??1logic_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVlogic_error@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT
__CTA2?AVlogic_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT ?found@?$type_with_alignment_imp@$03@detail@boost@@0IB
CONST	SEGMENT
?found@?$type_with_alignment_imp@$03@detail@boost@@0IB DD 04H ; boost::detail::type_with_alignment_imp<4>::found
CONST	ENDS
;	COMDAT ?value@?$is_aligned@$03$03@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_aligned@$03$03@detail@boost@@2_NB DB 01H	; boost::detail::is_aligned<4,4>::value
CONST	ENDS
;	COMDAT ?value@?$alignment_of_impl@T?$lower_alignment@$03@detail@boost@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$alignment_of_impl@T?$lower_alignment@$03@detail@boost@@@detail@boost@@2IB DD 04H ; boost::detail::alignment_of_impl<boost::detail::lower_alignment<4> >::value
CONST	ENDS
;	COMDAT ?value@?$alignment_of_impl@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$alignment_of_impl@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@boost@@2IB DD 04H ; boost::detail::alignment_of_impl<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$has_trait_impl@U?$basic_file_source@D@iostreams@boost@@Udevice_tag@23@@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$has_trait_impl@U?$basic_file_source@D@iostreams@boost@@Udevice_tag@23@@detail@iostreams@boost@@2_NB DB 01H ; boost::iostreams::detail::has_trait_impl<boost::iostreams::basic_file_source<char>,boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::output>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::output>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::direct_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::direct_tag>::value
CONST	ENDS
;	COMDAT ??_C@_0P@HJKEEELA@chain?5complete?$AA@
CONST	SEGMENT
??_C@_0P@HJKEEELA@chain?5complete?$AA@ DB 'chain complete', 00H ; `string'
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uinput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@Uinput@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_file_source<char>::category,boost::iostreams::input>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uinput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_file_source@D@iostreams@boost@@Uinput@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_file_source<char>::category &,boost::iostreams::input>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ucategory@?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::basic_file_source<char>::category>::value
CONST	ENDS
;	COMDAT ?value@?$dot@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB
CONST	SEGMENT
?value@?$dot@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB DB 02eH ; boost::filesystem::dot<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
CONST	ENDS
;	COMDAT ??_C@_0N@DLOMBLKD@already?5open?$AA@
CONST	SEGMENT
??_C@_0N@DLOMBLKD@already?5open?$AA@ DB 'already open', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0?AV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@8
_DATA	SEGMENT
??_R0?AV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::iostreams::basic_null_device<char,boost::iostreams::input> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_null_device@DUinput@iostreams@boost@@@iostre'
	DB	'ams@boost@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> const >::value
CONST	ENDS
;	COMDAT ?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> const >::value
CONST	ENDS
;	COMDAT ?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@$$CBV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> const >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$result_@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAV?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAV?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAV?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAV?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > *>::is_const
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::input,boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUinput@iostreams@boost@@Utwo_sequence@detail@23@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUinput@iostreams@boost@@Utwo_sequence@detail@23@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::input &,boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Utwo_sequence@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Utwo_sequence@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Utwo_sequence@detail@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Utwo_sequence@detail@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::detail::two_sequence>::value
CONST	ENDS
;	COMDAT ?found@?$type_with_alignment_imp@$00@detail@boost@@0IB
CONST	SEGMENT
?found@?$type_with_alignment_imp@$00@detail@boost@@0IB DD 01H ; boost::detail::type_with_alignment_imp<1>::found
CONST	ENDS
;	COMDAT ?value@?$is_aligned@$00$00@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_aligned@$00$00@detail@boost@@2_NB DB 01H	; boost::detail::is_aligned<1,1>::value
CONST	ENDS
;	COMDAT ?value@?$alignment_of_impl@T?$lower_alignment@$00@detail@boost@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$alignment_of_impl@T?$lower_alignment@$00@detail@boost@@@detail@boost@@2IB DD 01H ; boost::detail::alignment_of_impl<boost::detail::lower_alignment<1> >::value
CONST	ENDS
;	COMDAT ?value@?$alignment_of_impl@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$alignment_of_impl@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@boost@@2IB DD 01H ; boost::detail::alignment_of_impl<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::value
CONST	ENDS
;	COMDAT ?value@?$has_trait_impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@23@@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$has_trait_impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@23@@detail@iostreams@boost@@2_NB DB 01H ; boost::iostreams::detail::has_trait_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udevice_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Udevice_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Udevice_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Udevice_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Udevice_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::device_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::output>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::output>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::input>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::input>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category,boost::iostreams::direct_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Udirect_tag@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category &,boost::iostreams::direct_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Udirect_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Udirect_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::direct_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Udirect_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Udirect_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::direct_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ucategory@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::basic_null_device<char,boost::iostreams::input>::category>::value
CONST	ENDS
;	COMDAT ?value@?$io_mode_id@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@2HB
CONST	SEGMENT
?value@?$io_mode_id@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@2HB DD 01H ; boost::iostreams::detail::io_mode_id<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?boost_select_by_size_temp_value@?$io_mode_id@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@2IB
CONST	SEGMENT
?boost_select_by_size_temp_value@?$io_mode_id@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@2IB DD 03H ; boost::iostreams::detail::io_mode_id<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::boost_select_by_size_temp_value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::value
CONST	ENDS
;	COMDAT ?value@?$is_error_code_enum@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_code_enum@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_code_enum<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_error_code_enum@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_code_enum@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_code_enum<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_ununsigned_helper@I@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_ununsigned_helper@I@detail@boost@@2_NB DB 01H ; boost::detail::is_ununsigned_helper<unsigned int>::value
CONST	ENDS
;	COMDAT ?value@?$is_unsigned_imp@I@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_unsigned_imp@I@detail@boost@@2_NB DB 01H	; boost::detail::is_unsigned_imp<unsigned int>::value
CONST	ENDS
;	COMDAT ?value@?$is_unsigned_imp@K@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_unsigned_imp@K@detail@boost@@2_NB DB 01H	; boost::detail::is_unsigned_imp<unsigned long>::value
CONST	ENDS
;	COMDAT ?value@?$is_ununsigned_helper@K@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_ununsigned_helper@K@detail@boost@@2_NB DB 01H ; boost::detail::is_ununsigned_helper<unsigned long>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAK@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAK@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<unsigned long *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAK@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAK@detail@boost@@2_NB DB 00H	; boost::detail::cv_traits_imp<unsigned long *>::is_const
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category &,boost::iostreams::input>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uinput@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category,boost::iostreams::input>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category &,boost::iostreams::output>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uoutput@34@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category,boost::iostreams::output>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAV?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAV?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pod_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pod_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pod_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_scalar_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_scalar_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_scalar_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$result_@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > *>::is_const
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &>::value
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Usingle_pass_traversal_tag@boost@@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@AAV342@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Usingle_pass_traversal_tag@boost@@V?$basic_directory_entry@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@AAV342@@detail@boost@@2IB DD 04H ; boost::detail::facade_iterator_category_impl<boost::single_pass_traversal_tag,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> > &>::mpl_assertion_in_line_10
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAV?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAV?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &,boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@V?$basic_directory_iterator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_iterator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pod_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pod_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pod_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_scalar_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_scalar_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_scalar_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$result_@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > *>::is_const
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uinput_iterator_tag@std@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uinput_iterator_tag@std@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Uforward_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Uforward_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::forward_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Uforward_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Uforward_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::forward_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uforward_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uforward_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<std::forward_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uforward_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uforward_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<std::forward_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::input_iterator_tag,std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uinput_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::input_iterator_tag,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUinput_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::input_iterator_tag &,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@AAV?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,boost::single_pass_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,boost::single_pass_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Usingle_pass_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Usingle_pass_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::single_pass_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Usingle_pass_traversal_tag@boost@@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@AAV342@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Usingle_pass_traversal_tag@boost@@V?$basic_directory_entry@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@AAV342@@detail@boost@@2IB DD 04H ; boost::detail::facade_iterator_category_impl<boost::single_pass_traversal_tag,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >,boost::filesystem::basic_directory_entry<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > &>::mpl_assertion_in_line_10
CONST	ENDS
;	COMDAT ?p@?$assert_arg_pred_not@U?$is_iterator_category@Usingle_pass_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB
CONST	SEGMENT
?p@?$assert_arg_pred_not@U?$is_iterator_category@Usingle_pass_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB DB 01H ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<boost::single_pass_traversal_tag> >::p
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Usingle_pass_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::single_pass_traversal_tag,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUsingle_pass_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::single_pass_traversal_tag &,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Usingle_pass_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Usingle_pass_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::single_pass_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_pod_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pod_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pod_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_scalar_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_scalar_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_scalar_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
CONST	ENDS
;	COMDAT ?value@?$result_@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB DB 01H ; boost::detail::cv_traits_imp<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const *>::is_const
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Ubidirectional_traversal_tag@boost@@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV34@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Ubidirectional_traversal_tag@boost@@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV34@@detail@boost@@2IB DD 04H ; boost::detail::facade_iterator_category_impl<boost::bidirectional_traversal_tag,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>::mpl_assertion_in_line_10
CONST	ENDS
;	COMDAT __TI8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@
xdata$x	SEGMENT
__TI8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@ DD 00H
	DD	FLAT:??1?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@
xdata$x	ENDS
;	COMDAT __CTA8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@
xdata$x	SEGMENT
__CTA8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@ DD 08H
	DD	FLAT:__CT??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z108
	DD	FLAT:__CT??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z104
	DD	FLAT:__CT??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z84
	DD	FLAT:__CT??_R0?AVsystem_error@system@boost@@@8??0system_error@system@boost@@QAE@ABV012@@Z76
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2084
	DD	FLAT:__CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z4104
xdata$x	ENDS
;	COMDAT __CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z4104
xdata$x	SEGMENT
__CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z4104 DD 00H
	DD	FLAT:??_R0?AVclone_base@exception_detail@boost@@@8
	DD	068H
	DD	0ffffffffH
	DD	00H
	DD	04H
	DD	FLAT:??0clone_base@exception_detail@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2084
xdata$x	SEGMENT
__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2084 DD 00H
	DD	FLAT:??_R0?AVexception@boost@@@8
	DD	054H
	DD	0ffffffffH
	DD	00H
	DD	014H
	DD	FLAT:??0exception@boost@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVsystem_error@system@boost@@@8??0system_error@system@boost@@QAE@ABV012@@Z76
xdata$x	SEGMENT
__CT??_R0?AVsystem_error@system@boost@@@8??0system_error@system@boost@@QAE@ABV012@@Z76 DD 00H
	DD	FLAT:??_R0?AVsystem_error@system@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04cH
	DD	FLAT:??0system_error@system@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z84
xdata$x	SEGMENT
__CT??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z84 DD 00H
	DD	FLAT:??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	054H
	DD	FLAT:??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z104
xdata$x	SEGMENT
__CT??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z104 DD 00H
	DD	FLAT:??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	068H
	DD	FLAT:??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z108
xdata$x	SEGMENT
__CT??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z108 DD 00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	06cH
	DD	FLAT:??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@system@boost@@@8
_DATA	SEGMENT
??_R0?AVsystem_error@system@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::system::system_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVsystem_error@system@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8
_DATA	SEGMENT
??_R0?AV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filesystem_error@V?$basic_path@V?$basic_stri'
	DB	'ng@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits'
	DB	'@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8
_DATA	SEGMENT
??_R0?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$error_info_injector@V?$basic_filesystem_error@V?$b'
	DB	'asic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator'
	DB	'@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@'
	DB	'@filesystem@boost@@@exception_detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
_DATA	SEGMENT
??_R0?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$clone_impl@U?$error_info_injector@V?$basic_filesys'
	DB	'tem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std'
	DB	'@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@file'
	DB	'system@boost@@@filesystem@boost@@@exception_detail@boost@@@ex'
	DB	'ception_detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$is_pod_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pod_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pod_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_scalar_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_scalar_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_scalar_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
CONST	ENDS
;	COMDAT ?value@?$result_@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<std::bidirectional_iterator_tag,std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<std::bidirectional_iterator_tag &,std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Ubidirectional_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Ubidirectional_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::bidirectional_iterator_tag,std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::bidirectional_iterator_tag &,std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Urandom_access_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Urandom_access_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Urandom_access_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Urandom_access_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::bidirectional_iterator_tag,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::bidirectional_iterator_tag &,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ubidirectional_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ubidirectional_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,boost::bidirectional_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,boost::bidirectional_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Ubidirectional_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Ubidirectional_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::bidirectional_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,boost::random_access_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,boost::random_access_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Urandom_access_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Urandom_access_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::random_access_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Urandom_access_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Urandom_access_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::random_access_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uforward_traversal_tag@2@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uforward_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uforward_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uforward_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uforward_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Ubidirectional_traversal_tag@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Ubidirectional_traversal_tag@boost@@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@@detail@boost@@2IB DD 04H ; boost::detail::facade_iterator_category_impl<boost::bidirectional_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::mpl_assertion_in_line_10
CONST	ENDS
;	COMDAT ?p@?$assert_arg_pred_not@U?$is_iterator_category@Ubidirectional_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB
CONST	SEGMENT
?p@?$assert_arg_pred_not@U?$is_iterator_category@Ubidirectional_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB DB 01H ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<boost::bidirectional_traversal_tag> >::p
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ubidirectional_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::bidirectional_traversal_tag,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUbidirectional_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::bidirectional_traversal_tag &,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ubidirectional_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ubidirectional_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::bidirectional_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_base_and_derived_impl@Ucustom_tag@detail@iostreams@boost@@U?$operations@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_base_and_derived_impl<boost::iostreams::detail::custom_tag,boost::iostreams::operations<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category,boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUcategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@Uclosable_tag@34@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category &,boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@Uclosable_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@Uclosable_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Uclosable_tag@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Uclosable_tag@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::closable_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@Ucategory@?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::category>::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_filtering_stream_impl_impl_@detail@iostreams@boost@@2_NB DB 01H ; boost::iostreams::detail::is_filtering_stream_impl_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_boost_stream_buffer_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_buffer_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_boost_stream_impl_@detail@iostreams@boost@@2_NB DB 00H ; boost::iostreams::detail::is_boost_stream_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB DB 01H ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_incrementable_@detail@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_incrementable_@detail@boost@@2_NB DB 00H ; boost::detail::is_incrementable_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAU?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAU?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iostreams::basic_file_source<char> *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAU?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAU?$basic_file_source@D@iostreams@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iostreams::basic_file_source<char> *>::is_const
CONST	ENDS
;	COMDAT ?_Stz@?$fpos@H@std@@0HB
CONST	SEGMENT
?_Stz@?$fpos@H@std@@0HB DD 00H				; std::fpos<int>::_Stz
CONST	ENDS
;	COMDAT ??_C@_0BO@JCBFFKAC@boost?3?3filesystem?3?3is_regular?$AA@
CONST	SEGMENT
??_C@_0BO@JCBFFKAC@boost?3?3filesystem?3?3is_regular?$AA@ DB 'boost::file'
	DB	'system::is_regular', 00H			; `string'
CONST	ENDS
;	COMDAT ?value@?$is_basic_path@Vfile_status@filesystem@boost@@@filesystem@boost@@2_NB
CONST	SEGMENT
?value@?$is_basic_path@Vfile_status@filesystem@boost@@@filesystem@boost@@2_NB DB 00H ; boost::filesystem::is_basic_path<boost::filesystem::file_status>::value
CONST	ENDS
;	COMDAT ??_C@_0BK@LKDJBKKI@boost?3?3filesystem?3?3exists?$AA@
CONST	SEGMENT
??_C@_0BK@LKDJBKKI@boost?3?3filesystem?3?3exists?$AA@ DB 'boost::filesyst'
	DB	'em::exists', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PLMEELJH@boost?3?3filesystem?3?3current_path?$AA@
CONST	SEGMENT
??_C@_0CA@PLMEELJH@boost?3?3filesystem?3?3current_path?$AA@ DB 'boost::fi'
	DB	'lesystem::current_path', 00H		; `string'
CONST	ENDS
;	COMDAT ?value@?$path_alt_separator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB
CONST	SEGMENT
?value@?$path_alt_separator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB DB 05cH ; boost::filesystem::path_alt_separator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
CONST	ENDS
;	COMDAT ?value@?$colon@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB
CONST	SEGMENT
?value@?$colon@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB DB 03aH ; boost::filesystem::colon<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
CONST	ENDS
;	COMDAT ?value@?$slash@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB
CONST	SEGMENT
?value@?$slash@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2DB DB 02fH ; boost::filesystem::slash<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
CONST	ENDS
;	COMDAT ??_R0?AVclone_base@exception_detail@boost@@@8
_DATA	SEGMENT
??_R0?AVclone_base@exception_detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::exception_detail::clone_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVclone_base@exception_detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVexception@boost@@@8
_DATA	SEGMENT
??_R0?AVexception@boost@@@8 DD FLAT:??_7type_info@@6B@	; boost::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@boost@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@$$CBV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@$$CBV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > const >::value
CONST	ENDS
;	COMDAT ??_C@_0BH@HHDGIIFB@0123456789abcdefABCDEF?$AA@
CONST	SEGMENT
??_C@_0BH@HHDGIIFB@0123456789abcdefABCDEF?$AA@ DB '0123456789abcdefABCDEF'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@$$CBK@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@$$CBK@detail@boost@@2_NB DB 01H ; boost::detail::is_arithmetic_impl<unsigned long const >::value
CONST	ENDS
;	COMDAT ??_C@_07CIFAGBMG@unknown?$AA@
CONST	SEGMENT
??_C@_07CIFAGBMG@unknown?$AA@ DB 'unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FKCKNGMI@gems?$AA@
CONST	SEGMENT
??_C@_04FKCKNGMI@gems?$AA@ DB 'gems', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JHOICCJE@alphasim?$AA@
CONST	SEGMENT
??_C@_08JHOICCJE@alphasim?$AA@ DB 'alphasim', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FGCALOPN@type?$FL?$AA@
CONST	SEGMENT
??_C@_05FGCALOPN@type?$FL?$AA@ DB 'type[', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KJGDBDDP@unknown?5multipler?5?$AA@
CONST	SEGMENT
??_C@_0BD@KJGDBDDP@unknown?5multipler?5?$AA@ DB 'unknown multipler ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KOHMPJBI@Unknown?5input?5trace?5format?$AA@
CONST	SEGMENT
??_C@_0BL@KOHMPJBI@Unknown?5input?5trace?5format?$AA@ DB 'Unknown input t'
	DB	'race format', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HCCIPKHE@Unexpected?5transaction?5type?3?5?$AA@
CONST	SEGMENT
??_C@_0BO@HCCIPKHE@Unexpected?5transaction?5type?3?5?$AA@ DB 'Unexpected '
	DB	'transaction type: ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CEJMJFKN@Unknown?5Token?5Found?5?$AA@
CONST	SEGMENT
??_C@_0BF@CEJMJFKN@Unknown?5Token?5Found?5?$AA@ DB 'Unknown Token Found ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@CGJPJJEC@Unexpected?5EOF?0?5Please?5fix?5input@
CONST	SEGMENT
??_C@_0CM@CGJPJJEC@Unexpected?5EOF?0?5Please?5fix?5input@ DB 'Unexpected '
	DB	'EOF, Please fix input trace file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FKOGOOD@needs?5to?5be?5updated?$AA@
CONST	SEGMENT
??_C@_0BE@FKOGOOD@needs?5to?5be?5updated?$AA@ DB 'needs to be updated', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DKIENIFF@dramsim2?$AA@
CONST	SEGMENT
??_C@_08DKIENIFF@dramsim2?$AA@ DB 'dramsim2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PJFOMKOB@dramsim?$AA@
CONST	SEGMENT
??_C@_07PJFOMKOB@dramsim?$AA@ DB 'dramsim', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NBDIMCMP@ds2?$AA@
CONST	SEGMENT
??_C@_03NBDIMCMP@ds2?$AA@ DB 'ds2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02ELHCGPCE@ds?$AA@
CONST	SEGMENT
??_C@_02ELHCGPCE@ds?$AA@ DB 'ds', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JCBBOILC@MAPPED?$AA@
CONST	SEGMENT
??_C@_06JCBBOILC@MAPPED?$AA@ DB 'MAPPED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FJIHAPPM@Mapped?$AA@
CONST	SEGMENT
??_C@_06FJIHAPPM@Mapped?$AA@ DB 'Mapped', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JGDKDGGA@mapped?$AA@
CONST	SEGMENT
??_C@_06JGDKDGGA@mapped?$AA@ DB 'mapped', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BEOPDEGP@Random?$AA@
CONST	SEGMENT
??_C@_06BEOPDEGP@Random?$AA@ DB 'Random', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NPHJNDCB@RANDOM?$AA@
CONST	SEGMENT
??_C@_06NPHJNDCB@RANDOM?$AA@ DB 'RANDOM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FEBJENJH@Mase?$AA@
CONST	SEGMENT
??_C@_04FEBJENJH@Mase?$AA@ DB 'Mase', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FJOCIAOL@MASE?$AA@
CONST	SEGMENT
??_C@_04FJOCIAOL@MASE?$AA@ DB 'MASE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFNIGCJD@mase?$AA@
CONST	SEGMENT
??_C@_04JFNIGCJD@mase?$AA@ DB 'mase', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02PFGNNFLJ@K6?$AA@
CONST	SEGMENT
??_C@_02PFGNNFLJ@K6?$AA@ DB 'K6', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MNCAJDFJ@k6?$AA@
CONST	SEGMENT
??_C@_02MNCAJDFJ@k6?$AA@ DB 'k6', 00H			; `string'
CONST	ENDS
;	COMDAT ?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA
_DATA	SEGMENT
?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA DD 042985c35r ; 76.1801 ; `DRAMsimII::InputStream::gammaLn'::`2'::coefficients
	DD	0c2ad02b9r			; -86.5053
	DD	041c01ce0r			; 24.0141
	DD	0bf9da9a4r			; -1.23174
	DD	03a9e6b99r			; 0.00120865
	DD	0b6b508c1r			; -5.39524e-006
_DATA	ENDS
;	COMDAT ?oldm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
_DATA	SEGMENT
?oldm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA DD 0bf800000r ; -1 ; `DRAMsimII::InputStream::Poisson'::`2'::oldm
_DATA	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@$$CBV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@$$CBV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> const >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_streambuf_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_streambuf_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_ostream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_ostream_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB
CONST	SEGMENT
?value@?$impl@U?$basic_file_source@D@iostreams@boost@@@is_istream_impl_@iostreams@boost@@2_NB DB 00H ; boost::iostreams::is_istream_impl_::impl<boost::iostreams::basic_file_source<char> >::value
CONST	ENDS
;	COMDAT ??_C@_0BM@MLMDDFBP@Unable?5to?5open?5trace?5file?5?$CC?$AA@
CONST	SEGMENT
??_C@_0BM@MLMDDFBP@Unable?5to?5open?5trace?5file?5?$CC?$AA@ DB 'Unable to'
	DB	' open trace file "', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JCBAPMDC@traceFiles?$AA@
CONST	SEGMENT
??_C@_0L@JCBAPMDC@traceFiles?$AA@ DB 'traceFiles', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OCDKBNAP@?5failed?$AA@
CONST	SEGMENT
??_C@_07OCDKBNAP@?5failed?$AA@ DB ' failed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLFCANPD@random?$AA@
CONST	SEGMENT
??_C@_06NLFCANPD@random?$AA@ DB 'random', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GMOCOBCC@warn?3?5unknown?5token?3?5?$AA@
CONST	SEGMENT
??_C@_0BG@GMOCOBCC@warn?3?5unknown?5token?3?5?$AA@ DB 'warn: unknown toke'
	DB	'n: ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DGJOHFIE@putback?5buffer?5full?$AA@
CONST	SEGMENT
??_C@_0BE@DGJOHFIE@putback?5buffer?5full?$AA@ DB 'putback buffer full', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JFGNMMAL@no?5random?5access?$AA@
CONST	SEGMENT
??_C@_0BB@JFGNMMAL@no?5random?5access?$AA@ DB 'no random access', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MGHELDEA@no?5write?5access?$AA@
CONST	SEGMENT
??_C@_0BA@MGHELDEA@no?5write?5access?$AA@ DB 'no write access', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03KLKADAKF@?0?5?$CC?$AA@
CONST	SEGMENT
??_C@_03KLKADAKF@?0?5?$CC?$AA@ DB ', "', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NONCDIOG@?3?5?$CC?$AA@
CONST	SEGMENT
??_C@_03NONCDIOG@?3?5?$CC?$AA@ DB ': "', 00H		; `string'
CONST	ENDS
;	COMDAT ?value@?$path_alt_separator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB
CONST	SEGMENT
?value@?$path_alt_separator@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB DW 05cH ; boost::filesystem::path_alt_separator<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
CONST	ENDS
;	COMDAT ?value@?$colon@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB
CONST	SEGMENT
?value@?$colon@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB DW 03aH ; boost::filesystem::colon<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
CONST	ENDS
;	COMDAT ?value@?$dot@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB
CONST	SEGMENT
?value@?$dot@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB DW 02eH ; boost::filesystem::dot<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
CONST	ENDS
;	COMDAT ?value@?$slash@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB
CONST	SEGMENT
?value@?$slash@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_WB DW 02fH ; boost::filesystem::slash<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
CONST	ENDS
;	COMDAT ?value@?$is_basic_path@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_NB
CONST	SEGMENT
?value@?$is_basic_path@V?$basic_path@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@Uwpath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_NB DB 01H ; boost::filesystem::is_basic_path<boost::filesystem::basic_path<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,boost::filesystem::wpath_traits> >::value
CONST	ENDS
;	COMDAT ?value@?$is_basic_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_NB
CONST	SEGMENT
?value@?$is_basic_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@2_NB DB 01H ; boost::filesystem::is_basic_path<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::value
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ?value@?$is_error_code_enum@Verror_category@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_code_enum@Verror_category@system@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_code_enum<boost::system::error_category>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_condition_enum@Verror_category@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_condition_enum@Verror_category@system@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_condition_enum<boost::system::error_category>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_condition_enum@H@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_condition_enum@H@system@boost@@2_NB DB 00H ; boost::system::is_error_condition_enum<int>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_code_enum@Verror_code@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_code_enum@Verror_code@system@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_code_enum<boost::system::error_code>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_code_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_code_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_code_enum<enum boost::system::errc::errc_t>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_condition_enum@Verror_code@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_condition_enum@Verror_code@system@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_condition_enum<boost::system::error_code>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_code_enum@Verror_condition@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_code_enum@Verror_condition@system@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_code_enum<boost::system::error_condition>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_code_enum@H@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_code_enum@H@system@boost@@2_NB DB 00H	; boost::system::is_error_code_enum<int>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_condition_enum@Verror_condition@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_condition_enum@Verror_condition@system@boost@@@system@boost@@2_NB DB 00H ; boost::system::is_error_condition_enum<boost::system::error_condition>::value
CONST	ENDS
;	COMDAT ?value@?$is_error_condition_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB
CONST	SEGMENT
?value@?$is_error_condition_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB DB 01H ; boost::system::is_error_condition_enum<enum boost::system::errc::errc_t>::value
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
; Function compile flags: /Odtpy
;	COMDAT ??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@WBI@AEPAXI@Z PROC ; [thunk]:boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vector deleting destructor', COMDAT
	sub	ecx, 24					; 00000018H
	jmp	??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAEPAXI@Z
??_E?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@WBI@AEPAXI@Z ENDP ; [thunk]:boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@WFE@AEPAXI@Z
_TEXT	SEGMENT
??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@WFE@AEPAXI@Z PROC ; [thunk]:boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vector deleting destructor', COMDAT
	sub	ecx, 84					; 00000054H
	jmp	??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAEPAXI@Z
??_E?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@WFE@AEPAXI@Z ENDP ; [thunk]:boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WFE@AEPAXI@Z
_TEXT	SEGMENT
??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WFE@AEPAXI@Z PROC ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vector deleting destructor', COMDAT
	sub	ecx, 84					; 00000054H
	jmp	??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WFE@AEPAXI@Z ENDP ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@WBI@AEPAXI@Z PROC ; [thunk]:boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vector deleting destructor', COMDAT
	sub	ecx, 24					; 00000018H
	jmp	??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAEPAXI@Z
??_E?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@WBI@AEPAXI@Z ENDP ; [thunk]:boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WGI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WGI@AEPAXI@Z PROC ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vector deleting destructor', COMDAT
	sub	ecx, 104				; 00000068H
	jmp	??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
??_E?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@WGI@AEPAXI@Z ENDP ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?pubseekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 24
?pubseekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubseekpos, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi

; 66   : 		return (seekpos(_Pos, _Mode));

	movq	xmm0, QWORD PTR __Pos$[esp-4]
	mov	edx, DWORD PTR [ecx]
	push	3
	sub	esp, 24					; 00000018H
	mov	eax, esp
	movq	QWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR __Pos$[esp+32]
	movq	QWORD PTR [eax+8], xmm0
	movq	xmm0, QWORD PTR __Pos$[esp+40]
	movq	QWORD PTR [eax+16], xmm0
	mov	eax, DWORD PTR [edx+40]
	push	esi
	call	eax
	mov	eax, esi

; 67   : 		}

	ret	24					; 00000018H
?pubseekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubseekpos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pubseekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?pubseekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@JHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubseekoff, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Way$ = edx

; 53   : 		return (seekoff(_Off, _Way, _Mode));

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+36]
	push	3
	push	edx
	mov	edx, DWORD PTR __Off$[esp+4]
	push	edx
	push	esi
	call	eax
	mov	eax, esi

; 54   : 		}

	ret	4
?pubseekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AV?$fpos@H@2@JHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubseekoff
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$unwrap@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@detail@iostreams@boost@@YAAAV?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAV34@@Z
_TEXT	SEGMENT
??$unwrap@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@detail@iostreams@boost@@YAAAV?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAV34@@Z PROC ; boost::iostreams::detail::unwrap<std::basic_filebuf<char,std::char_traits<char> > >, COMDAT
; _t$ = eax

; 93   : typename unwrapped_type<T>::type& unwrap(T& t) { return t; }

	ret	0
??$unwrap@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@detail@iostreams@boost@@YAAAV?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAV34@@Z ENDP ; boost::iostreams::detail::unwrap<std::basic_filebuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ??C?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QBEPAUimpl@?$basic_file@D@iostreams@1@XZ
_TEXT	SEGMENT
??C?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QBEPAUimpl@?$basic_file@D@iostreams@1@XZ PROC ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::operator->, COMDAT
; _this$ = eax

; 418  :         BOOST_ASSERT(px != 0);
; 419  :         return px;

	mov	eax, DWORD PTR [eax]

; 420  :     }

	ret	0
??C?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QBEPAUimpl@?$basic_file@D@iostreams@1@XZ ENDP ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::operator->
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?sgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHPADH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?sgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHPADH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sgetn, COMDAT
; _this$ = ecx
; __Count$ = edx

; 123  : #pragma warning(push)
; 124  : #pragma warning(disable:4996)
; 125  : 		return xsgetn(_Ptr, _Count);

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	mov	edx, DWORD PTR __Ptr$[esp]
	push	edx
	call	eax

; 126  : #pragma warning(pop)
; 127  : 		}

	ret	4
?sgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHPADH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sgetn
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
_TEXT	ENDS
;	COMDAT ?read@?$basic_file@D@iostreams@boost@@QAEHPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_n$ = 12						; size = 4
?read@?$basic_file@D@iostreams@boost@@QAEHPADH@Z PROC	; boost::iostreams::basic_file<char>::read, COMDAT
; _this$ = eax

; 148  :     std::streamsize result = pimpl_->file_.sgetn(s, n); 

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _n$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	eax, DWORD PTR _s$[esp]
	push	eax
	call	edx

; 149  :     return result != 0 ? result : -1;

	test	eax, eax
	jne	SHORT $LN4@read
	or	eax, -1
$LN4@read:

; 150  : }

	ret	8
?read@?$basic_file@D@iostreams@boost@@QAEHPADH@Z ENDP	; boost::iostreams::basic_file<char>::read
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\read.hpp
_TEXT	ENDS
;	COMDAT ??$read@U?$basic_file_source@D@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_n$ = 12						; size = 4
??$read@U?$basic_file_source@D@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PADH@Z PROC ; boost::iostreams::detail::read_device_impl<boost::iostreams::input>::read<boost::iostreams::basic_file_source<char> >, COMDAT
; _t$ = eax

; 184  :     static std::streamsize

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _n$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	eax, DWORD PTR _s$[esp]
	push	eax
	call	edx
	test	eax, eax
	jne	SHORT $LN6@read@2
	or	eax, -1
$LN6@read@2:

; 185  :     read(T& t, typename char_type_of<T>::type* s, std::streamsize n)
; 186  :     { return t.read(s, n); }

	ret	0
??$read@U?$basic_file_source@D@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PADH@Z ENDP ; boost::iostreams::detail::read_device_impl<boost::iostreams::input>::read<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\null.hpp
_TEXT	ENDS
;	COMDAT ?close@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
?close@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::close, COMDAT

; 38   :     void close() { }

	ret	0
?close@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?read@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEHPADH@Z
_TEXT	SEGMENT
?read@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEHPADH@Z PROC ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::read, COMDAT

; 32   :     std::streamsize read(Ch*, std::streamsize) { return 0; }

	xor	eax, eax
	ret	0
?read@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAEHPADH@Z ENDP ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::read
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0random_access@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0random_access@detail@iostreams@boost@@QAE@XZ PROC	; boost::iostreams::detail::random_access::random_access, COMDAT
; _this$ = eax
	ret	0
??0random_access@detail@iostreams@boost@@QAE@XZ ENDP	; boost::iostreams::detail::random_access::random_access
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0random_access@detail@iostreams@boost@@QAE@ABU0123@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0random_access@detail@iostreams@boost@@QAE@ABU0123@@Z PROC ; boost::iostreams::detail::random_access::random_access, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_8random_access@detail@iostreams@boost@@7B@
	ret	4
??0random_access@detail@iostreams@boost@@QAE@ABU0123@@Z ENDP ; boost::iostreams::detail::random_access::random_access
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\flush.hpp
_TEXT	ENDS
;	COMDAT ??$flush@U?$basic_file_source@D@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@@Z
_TEXT	SEGMENT
??$flush@U?$basic_file_source@D@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@@Z PROC ; boost::iostreams::detail::flush_device_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_file_source<char> >, COMDAT

; 88   :     static bool flush(T&) { return true; }

	mov	al, 1
	ret	0
??$flush@U?$basic_file_source@D@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@@Z ENDP ; boost::iostreams::detail::flush_device_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
_TEXT	ENDS
;	COMDAT ??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@H@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@H@Z PROC ; boost::iostreams::detail::close_impl<boost::iostreams::closable_tag>::close<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 220  :     {
; 221  :         typedef typename category_of<T>::type category;
; 222  :         const bool in =  is_convertible<category, input>::value &&
; 223  :                         !is_convertible<category, output>::value;
; 224  :         if (in == (which == BOOST_IOS::in))
; 225  :             t.close();
; 226  :     }

	ret	0
??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@H@Z ENDP ; boost::iostreams::detail::close_impl<boost::iostreams::closable_tag>::close<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\read.hpp
_TEXT	ENDS
;	COMDAT ??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PADH@Z
_TEXT	SEGMENT
??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PADH@Z PROC ; boost::iostreams::detail::read_device_impl<boost::iostreams::input>::read<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 184  :     static std::streamsize

	xor	eax, eax

; 185  :     read(T& t, typename char_type_of<T>::type* s, std::streamsize n)
; 186  :     { return t.read(s, n); }

	ret	0
??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$read_device_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PADH@Z ENDP ; boost::iostreams::detail::read_device_impl<boost::iostreams::input>::read<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\imbue.hpp
_TEXT	ENDS
;	COMDAT ??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@ABVlocale@std@@@Z
_TEXT	SEGMENT
??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@ABVlocale@std@@@Z PROC ; boost::iostreams::detail::imbue_impl<boost::iostreams::any_tag>::imbue<boost::iostreams::basic_file_source<char>,std::locale>, COMDAT

; 61   :     static void imbue(T&, const Locale&) { }

	ret	0
??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@ABVlocale@std@@@Z ENDP ; boost::iostreams::detail::imbue_impl<boost::iostreams::any_tag>::imbue<boost::iostreams::basic_file_source<char>,std::locale>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAAAU?$basic_file_source@D@12@AAU312@@Z
_TEXT	SEGMENT
??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAAAU?$basic_file_source@D@12@AAU312@@Z PROC ; boost::iostreams::detail::unwrap<boost::iostreams::basic_file_source<char> >, COMDAT
; _t$ = eax

; 93   : typename unwrapped_type<T>::type& unwrap(T& t) { return t; }

	ret	0
??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAAAU?$basic_file_source@D@12@AAU312@@Z ENDP ; boost::iostreams::detail::unwrap<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\read.hpp
_TEXT	ENDS
;	COMDAT ??$read@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHAAU?$basic_file_source@D@01@PADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_n$ = 12						; size = 4
??$read@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHAAU?$basic_file_source@D@01@PADH@Z PROC ; boost::iostreams::read<boost::iostreams::basic_file_source<char> >, COMDAT
; _t$ = eax

; 52   : { return detail::read_device_impl<T>::read(detail::unwrap(t), s, n); }

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _n$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	eax, DWORD PTR _s$[esp]
	push	eax
	call	edx
	test	eax, eax
	jne	SHORT $LN10@read@3
	or	eax, -1
$LN10@read@3:
	ret	0
??$read@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHAAU?$basic_file_source@D@01@PADH@Z ENDP ; boost::iostreams::read<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\flush.hpp
_TEXT	ENDS
;	COMDAT ??$flush@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA_NAAU?$basic_file_source@D@01@@Z
_TEXT	SEGMENT
??$flush@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA_NAAU?$basic_file_source@D@01@@Z PROC ; boost::iostreams::flush<boost::iostreams::basic_file_source<char> >, COMDAT

; 41   : { return detail::flush_device_impl<T>::flush(detail::unwrap(t)); }

	mov	al, 1
	ret	0
??$flush@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA_NAAU?$basic_file_source@D@01@@Z ENDP ; boost::iostreams::flush<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z
_TEXT	SEGMENT
??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z PROC ; boost::iostreams::detail::flush_device_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 88   :     static bool flush(T&) { return true; }

	mov	al, 1
	ret	0
??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$flush_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z ENDP ; boost::iostreams::detail::flush_device_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\imbue.hpp
_TEXT	ENDS
;	COMDAT ??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@ABVlocale@std@@@Z
_TEXT	SEGMENT
??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@ABVlocale@std@@@Z PROC ; boost::iostreams::detail::imbue_impl<boost::iostreams::any_tag>::imbue<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::locale>, COMDAT

; 61   :     static void imbue(T&, const Locale&) { }

	ret	0
??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@?$imbue_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@ABVlocale@std@@@Z ENDP ; boost::iostreams::detail::imbue_impl<boost::iostreams::any_tag>::imbue<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::locale>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$basic_null_device@DUinput@iostreams@boost@@@12@AAV312@@Z
_TEXT	SEGMENT
??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$basic_null_device@DUinput@iostreams@boost@@@12@AAV312@@Z PROC ; boost::iostreams::detail::unwrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT
; _t$ = eax

; 93   : typename unwrapped_type<T>::type& unwrap(T& t) { return t; }

	ret	0
??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$basic_null_device@DUinput@iostreams@boost@@@12@AAV312@@Z ENDP ; boost::iostreams::detail::unwrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\read.hpp
_TEXT	ENDS
;	COMDAT ??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHAAV?$basic_null_device@DUinput@iostreams@boost@@@01@PADH@Z
_TEXT	SEGMENT
??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHAAV?$basic_null_device@DUinput@iostreams@boost@@@01@PADH@Z PROC ; boost::iostreams::read<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 52   : { return detail::read_device_impl<T>::read(detail::unwrap(t), s, n); }

	xor	eax, eax
	ret	0
??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHAAV?$basic_null_device@DUinput@iostreams@boost@@@01@PADH@Z ENDP ; boost::iostreams::read<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\imbue.hpp
_TEXT	ENDS
;	COMDAT ??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@ABVlocale@std@@@Z
_TEXT	SEGMENT
??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@ABVlocale@std@@@Z PROC ; boost::iostreams::imbue<boost::iostreams::basic_file_source<char>,std::locale>, COMDAT

; 38   : { detail::imbue_impl<T>::imbue(detail::unwrap(t), loc); }

	ret	0
??$imbue@U?$basic_file_source@D@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@ABVlocale@std@@@Z ENDP ; boost::iostreams::imbue<boost::iostreams::basic_file_source<char>,std::locale>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$read@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_n$ = 12						; size = 4
??$read@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::read<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _dev$ = eax

; 165  :     static std::streamsize

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _n$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	eax, DWORD PTR _s$[esp]
	push	eax
	call	edx
	test	eax, eax
	jne	SHORT $LN12@read@4
	or	eax, -1
$LN12@read@4:

; 166  :     read( Device& dev, Dummy*, typename char_type_of<Device>::type* s,
; 167  :           std::streamsize n )
; 168  :     { return iostreams::read(dev, s, n); }

	ret	0
??$read@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::read<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
_TEXT	ENDS
;	COMDAT ?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::is_open, COMDAT
; _this$ = ecx

; 145  : 		return (_Myfile != 0);

	xor	eax, eax
	cmp	DWORD PTR [ecx+76], eax
	setne	al

; 146  : 		}

	ret	0
?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::is_open
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
_TEXT	ENDS
;	COMDAT ??0?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@123@@Z
_TEXT	SEGMENT
??0?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@123@@Z PROC ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >, COMDAT
; _this$ = eax
; _t$ = ecx

; 133  :     reset_operation(T& t) : t_(t) { }

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@123@@Z ENDP ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ
_TEXT	SEGMENT
?next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::next, COMDAT
; _this$ = eax

; 105  :     streambuf_type* next() const { return next_; }

	mov	eax, DWORD PTR [eax+76]
	ret	0
?next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::next
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ?base@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE?AV?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ
_TEXT	SEGMENT
?base@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE?AV?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ PROC ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::base, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 1930 : 		return (current);

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 1931 : 		}

	ret	0
?base@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE?AV?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ ENDP ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$flush@U?$basic_file_source@D@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
??$flush@U?$basic_file_source@D@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_file_source<char>,std::basic_streambuf<char,std::char_traits<char> > >, COMDAT

; 157  :     static bool flush(Device& dev, Dummy*)

	mov	al, 1

; 158  :     { return iostreams::flush(dev); }

	ret	0
??$flush@U?$basic_file_source@D@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAU?$basic_file_source@D@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_file_source<char>,std::basic_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\flush.hpp
_TEXT	ENDS
;	COMDAT ??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z
_TEXT	SEGMENT
??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z PROC ; boost::iostreams::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 41   : { return detail::flush_device_impl<T>::flush(detail::unwrap(t)); }

	mov	al, 1
	ret	0
??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z ENDP ; boost::iostreams::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\imbue.hpp
_TEXT	ENDS
;	COMDAT ??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@ABVlocale@std@@@Z
_TEXT	SEGMENT
??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@ABVlocale@std@@@Z PROC ; boost::iostreams::imbue<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::locale>, COMDAT

; 38   : { detail::imbue_impl<T>::imbue(detail::unwrap(t), loc); }

	ret	0
??$imbue@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@Vlocale@std@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@ABVlocale@std@@@Z ENDP ; boost::iostreams::imbue<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::locale>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z
_TEXT	SEGMENT
??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::read<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 165  :     static std::streamsize

	xor	eax, eax

; 166  :     read( Device& dev, Dummy*, typename char_type_of<Device>::type* s,
; 167  :           std::streamsize n )
; 168  :     { return iostreams::read(dev, s, n); }

	ret	0
??$read@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PADH@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::read<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\optimal_buffer_size.hpp
_TEXT	ENDS
;	COMDAT ??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z
_TEXT	SEGMENT
??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z PROC ; boost::iostreams::detail::optimal_buffer_size_impl<boost::iostreams::device_tag>::optimal_buffer_size<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 70   :     static std::streamsize optimal_buffer_size(const T&)

	mov	eax, 4096				; 00001000H

; 71   :     { return default_device_buffer_size; }

	ret	0
??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z ENDP ; boost::iostreams::detail::optimal_buffer_size_impl<boost::iostreams::device_tag>::optimal_buffer_size<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAABV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@@Z
_TEXT	SEGMENT
??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAABV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@@Z PROC ; boost::iostreams::detail::unwrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT
; _t$ = eax

; 96   : const typename unwrapped_type<T>::type& unwrap(const T& t) { return t; }

	ret	0
??$unwrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAABV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@@Z ENDP ; boost::iostreams::detail::unwrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$swap@PAD@std@@YAXAAPAD0@Z
_TEXT	SEGMENT
??$swap@PAD@std@@YAXAAPAD0@Z PROC			; std::swap<char *>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 18   : 	if (&_Left != &_Right)

	cmp	ecx, eax
	je	SHORT $LN1@swap@6

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [eax], edx
	pop	esi
$LN1@swap@6:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAD@std@@YAXAAPAD0@Z ENDP			; std::swap<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$swap@H@std@@YAXAAH0@Z
_TEXT	SEGMENT
??$swap@H@std@@YAXAAH0@Z PROC				; std::swap<int>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 18   : 	if (&_Left != &_Right)

	cmp	ecx, eax
	je	SHORT $LN1@swap@7

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [eax], edx
	pop	esi
$LN1@swap@7:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@H@std@@YAXAAH0@Z ENDP				; std::swap<int>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$imbue@Vlocale@std@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z
_TEXT	SEGMENT
??$imbue@Vlocale@std@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::imbue<std::locale>, COMDAT

; 113  :     void imbue(const Locale& loc) { iostreams::imbue(t_, loc); }

	ret	0
??$imbue@Vlocale@std@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::imbue<std::locale>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_n$ = 12						; size = 4
??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::read<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _this$ = eax

; 74   :     std::streamsize read(char_type* s, std::streamsize n, Source* src)

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _n$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	eax, DWORD PTR _s$[esp]
	push	eax
	call	edx
	test	eax, eax
	jne	SHORT $LN14@read@5
	or	eax, -1
$LN14@read@5:

; 75   :     { return input_impl::read(t_, src, s, n); }

	ret	8
??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::read<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
_TEXT	ENDS
;	COMDAT ??$call_reset@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
_TEXT	SEGMENT
??$call_reset@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@012@@Z PROC ; boost::iostreams::detail::call_reset<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _t$ = ecx

; 141  : reset_operation<T> call_reset(T& t) { return reset_operation<T>(t); }

	mov	DWORD PTR [eax], ecx
	ret	0
??$call_reset@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ENDP ; boost::iostreams::detail::call_reset<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\optimal_buffer_size.hpp
_TEXT	ENDS
;	COMDAT ??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABU?$basic_file_source@D@23@@Z
_TEXT	SEGMENT
??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABU?$basic_file_source@D@23@@Z PROC ; boost::iostreams::detail::optimal_buffer_size_impl<boost::iostreams::device_tag>::optimal_buffer_size<boost::iostreams::basic_file_source<char> >, COMDAT

; 70   :     static std::streamsize optimal_buffer_size(const T&)

	mov	eax, 4096				; 00001000H

; 71   :     { return default_device_buffer_size; }

	ret	0
??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@?$optimal_buffer_size_impl@Udevice_tag@iostreams@boost@@@detail@iostreams@boost@@SAHABU?$basic_file_source@D@23@@Z ENDP ; boost::iostreams::detail::optimal_buffer_size_impl<boost::iostreams::device_tag>::optimal_buffer_size<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@@Z
_TEXT	SEGMENT
??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@@Z PROC ; boost::iostreams::detail::unwrap<boost::iostreams::basic_file_source<char> >, COMDAT
; _t$ = eax

; 96   : const typename unwrapped_type<T>::type& unwrap(const T& t) { return t; }

	ret	0
??$unwrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@@Z ENDP ; boost::iostreams::detail::unwrap<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ??Z?$fpos@H@std@@QAEAAV01@J@Z
_TEXT	SEGMENT
??Z?$fpos@H@std@@QAEAAV01@J@Z PROC			; std::fpos<int>::operator-=, COMDAT
; _this$ = eax
; __Off$ = ecx

; 95   : 		_Myoff -= _Off;

	sub	DWORD PTR [eax], ecx

; 96   : 		return (*this);
; 97   : 		}

	ret	0
??Z?$fpos@H@std@@QAEAAV01@J@Z ENDP			; std::fpos<int>::operator-=
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_impl.hpp
_TEXT	ENDS
;	COMDAT ?get_deleter@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?get_deleter@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::get_deleter, COMDAT
; _this$ = ecx

; 83   :         return 0;

	xor	eax, eax

; 84   :     }

	ret	4
?get_deleter@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::get_deleter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get_deleter@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?get_deleter@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z PROC ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::get_deleter, COMDAT
; _this$ = ecx

; 83   :         return 0;

	xor	eax, eax

; 84   :     }

	ret	4
?get_deleter@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z ENDP ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::get_deleter
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
_TEXT	ENDS
;	COMDAT ??R?$clear_flags_operation@H@detail@iostreams@boost@@QBEXXZ
_TEXT	SEGMENT
??R?$clear_flags_operation@H@detail@iostreams@boost@@QBEXXZ PROC ; boost::iostreams::detail::clear_flags_operation<int>::operator(), COMDAT
; _this$ = eax

; 150  :     void operator()() const { t_ = 0; }

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
	ret	0
??R?$clear_flags_operation@H@detail@iostreams@boost@@QBEXXZ ENDP ; boost::iostreams::detail::clear_flags_operation<int>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$clear_flags_operation@H@detail@iostreams@boost@@QAE@AAH@Z
_TEXT	SEGMENT
??0?$clear_flags_operation@H@detail@iostreams@boost@@QAE@AAH@Z PROC ; boost::iostreams::detail::clear_flags_operation<int>::clear_flags_operation<int>, COMDAT
; _this$ = eax
; _t$ = ecx

; 149  :     clear_flags_operation(T& t) : t_(t) { }

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$clear_flags_operation@H@detail@iostreams@boost@@QAE@AAH@Z ENDP ; boost::iostreams::detail::clear_flags_operation<int>::clear_flags_operation<int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@123@@Z
_TEXT	SEGMENT
??0?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@123@@Z PROC ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >, COMDAT
; _this$ = eax
; _t$ = ecx

; 133  :     reset_operation(T& t) : t_(t) { }

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@123@@Z ENDP ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z
_TEXT	SEGMENT
_which$ = 8						; size = 4
??0?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z PROC ; boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _this$ = eax
; _t$ = ecx

; 115  :         { }

	mov	edx, DWORD PTR _which$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	4
??0?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@AAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z ENDP ; boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ??0?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >, COMDAT
; _this$ = eax

; 50   :     optional() : initialized_(false) { }

	mov	BYTE PTR [eax+8], 0
	ret	0
??0?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?shared_buffer@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?shared_buffer@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::shared_buffer, COMDAT

; 111  :     bool shared_buffer() const { return is_convertible<Mode, seekable>::value; }

	xor	al, al
	ret	0
?shared_buffer@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::shared_buffer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?output_buffered@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?output_buffered@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::output_buffered, COMDAT
; _this$ = eax

; 110  :     bool output_buffered() const { return (flags_ & f_output_buffered) != 0; }

	mov	eax, DWORD PTR [eax+92]
	shr	eax, 1
	and	eax, 1
	ret	0
?output_buffered@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::output_buffered
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?can_write@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?can_write@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_write, COMDAT

; 109  :     bool can_write() const { return is_convertible<Mode, output>::value; }

	xor	al, al
	ret	0
?can_write@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_write
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?can_read@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?can_read@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_read, COMDAT

; 108  :     bool can_read() const { return is_convertible<Mode, input>::value; }

	mov	al, 1
	ret	0
?can_read@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_read
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ
_TEXT	SEGMENT
?next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::next, COMDAT
; _this$ = eax

; 105  :     streambuf_type* next() const { return next_; }

	mov	eax, DWORD PTR [eax+68]
	ret	0
?next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::next
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPADXZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPADXZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_Checked_iterator_base, COMDAT
; _this$ = ecx

; 358  : 		return const_cast<pointer>(this->_Myptr);

	mov	eax, DWORD PTR [ecx+4]

; 359  : 	}

	ret	0
?_Checked_iterator_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPADXZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_Checked_iterator_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ??G?$fpos@H@std@@QBE?AV01@J@Z
_TEXT	SEGMENT
__Tmp$ = -24						; size = 24
__Off$ = 8						; size = 4
??G?$fpos@H@std@@QBE?AV01@J@Z PROC			; std::fpos<int>::operator-, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 106  : 		{	// return this - offset

	sub	esp, 24					; 00000018H

; 107  : 		_Myt _Tmp = *this;

	movq	xmm0, QWORD PTR [ecx]
	movq	xmm1, QWORD PTR [ecx+16]
	movq	QWORD PTR __Tmp$[esp+24], xmm0
	movq	xmm0, QWORD PTR [ecx+8]

; 108  : 		return (_Tmp -= _Off);

	mov	ecx, DWORD PTR __Off$[esp+20]
	sub	DWORD PTR __Tmp$[esp+24], ecx
	movq	xmm2, QWORD PTR __Tmp$[esp+24]
	movq	QWORD PTR [eax], xmm2
	movq	QWORD PTR [eax+8], xmm0
	movq	QWORD PTR [eax+16], xmm1

; 109  : 		}

	add	esp, 24					; 00000018H
	ret	4
??G?$fpos@H@std@@QBE?AV01@J@Z ENDP			; std::fpos<int>::operator-
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pbase, COMDAT
; _this$ = ecx

; 195  : 		return (*_IPfirst);

	mov	eax, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [eax]

; 196  : 		}

	ret	0
?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pbase
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::basic_streambuf<char,std::char_traits<char> > >, COMDAT

; 157  :     static bool flush(Device& dev, Dummy*)

	mov	al, 1

; 158  :     { return iostreams::flush(dev); }

	ret	0
??$flush@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$basic_streambuf@DU?$char_traits@D@std@@@std@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA_NAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::flush<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::basic_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$imbue@Vlocale@std@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z
_TEXT	SEGMENT
??$imbue@Vlocale@std@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::imbue<std::locale>, COMDAT

; 113  :     void imbue(const Locale& loc) { iostreams::imbue(t_, loc); }

	ret	0
??$imbue@Vlocale@std@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXABVlocale@std@@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::imbue<std::locale>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::read<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 74   :     std::streamsize read(char_type* s, std::streamsize n, Source* src)

	xor	eax, eax

; 75   :     { return input_impl::read(t_, src, s, n); }

	ret	0
??$read@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPADHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::read<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$min@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
??$min@H@std@@YAABHABH0@Z PROC				; std::min<int>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 3399 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jl	SHORT $LN4@min@2
	mov	eax, ecx
$LN4@min@2:

; 3400 : 	}

	ret	0
??$min@H@std@@YAABHABH0@Z ENDP				; std::min<int>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
_TEXT	ENDS
;	COMDAT ??$clear_flags@H@detail@iostreams@boost@@YA?AV?$clear_flags_operation@H@012@AAH@Z
_TEXT	SEGMENT
??$clear_flags@H@detail@iostreams@boost@@YA?AV?$clear_flags_operation@H@012@AAH@Z PROC ; boost::iostreams::detail::clear_flags<int>, COMDAT
; ___$ReturnUdt$ = eax
; _t$ = ecx

; 158  : { return clear_flags_operation<T>(t); }

	mov	DWORD PTR [eax], ecx
	ret	0
??$clear_flags@H@detail@iostreams@boost@@YA?AV?$clear_flags_operation@H@012@AAH@Z ENDP ; boost::iostreams::detail::clear_flags<int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$call_reset@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
_TEXT	SEGMENT
??$call_reset@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@012@@Z PROC ; boost::iostreams::detail::call_reset<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _t$ = ecx

; 141  : reset_operation<T> call_reset(T& t) { return reset_operation<T>(t); }

	mov	DWORD PTR [eax], ecx
	ret	0
??$call_reset@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@AAV?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ENDP ; boost::iostreams::detail::call_reset<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$call_member_close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@AAV?$linked_streambuf@DU?$char_traits@D@std@@@012@H@Z
_TEXT	SEGMENT
_which$ = 8						; size = 4
??$call_member_close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@AAV?$linked_streambuf@DU?$char_traits@D@std@@@012@H@Z PROC ; boost::iostreams::detail::call_member_close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; ___$ReturnUdt$ = eax
; _t$ = ecx

; 125  : { return member_close_operation<T>(t, which); }

	mov	edx, DWORD PTR _which$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	0
??$call_member_close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@AAV?$linked_streambuf@DU?$char_traits@D@std@@@012@H@Z ENDP ; boost::iostreams::detail::call_member_close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\optimal_buffer_size.hpp
_TEXT	ENDS
;	COMDAT ??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHABV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z
_TEXT	SEGMENT
??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHABV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z PROC ; boost::iostreams::optimal_buffer_size<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 38   :     typedef detail::optimal_buffer_size_impl<T> impl;
; 39   :     return impl::optimal_buffer_size(detail::unwrap(t));

	mov	eax, 4096				; 00001000H

; 40   : }

	ret	0
??$optimal_buffer_size@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAHABV?$basic_null_device@DUinput@iostreams@boost@@@01@@Z ENDP ; boost::iostreams::optimal_buffer_size<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\buffer.hpp
_TEXT	ENDS
;	COMDAT ??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::basic_buffer<char,std::allocator<char> >, COMDAT
; _this$ = eax

; 146  : basic_buffer<Ch, Alloc>::basic_buffer() : buf_(0), size_(0) { }

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	ret	0
??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::basic_buffer<char,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?set_next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z
_TEXT	SEGMENT
_next$ = 8						; size = 4
?set_next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next, COMDAT
; _this$ = ecx

; 365  : { next_ = next; }

	mov	eax, DWORD PTR _next$[esp-4]
	mov	DWORD PTR [ecx+76], eax
	ret	4
?set_next@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?set_auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z
_TEXT	SEGMENT
_close$ = 8						; size = 1
?set_auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close, COMDAT
; _this$ = ecx

; 216  : { flags_ = (flags_ & ~f_auto_close) | (close ? f_auto_close : 0); }

	movzx	eax, BYTE PTR _close$[esp-4]
	mov	edx, DWORD PTR [ecx+92]
	neg	eax
	sbb	eax, eax
	and	eax, 4
	and	edx, -5					; fffffffbH
	or	eax, edx
	mov	DWORD PTR [ecx+92], eax
	ret	4
?set_auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ
_TEXT	SEGMENT
?auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close, COMDAT
; _this$ = ecx

; 212  : { return (flags_ & f_auto_close) != 0; }

	mov	eax, DWORD PTR [ecx+92]
	shr	eax, 2
	and	eax, 1
	ret	0
?auto_close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?is_open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ
_TEXT	SEGMENT
?is_open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_open, COMDAT
; _this$ = eax

; 195  : { return (flags_ & f_open) != 0; }

	mov	eax, DWORD PTR [eax+92]
	and	eax, 1
	ret	0
?is_open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_open
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\optimal_buffer_size.hpp
_TEXT	ENDS
;	COMDAT ??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHABU?$basic_file_source@D@01@@Z
_TEXT	SEGMENT
??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHABU?$basic_file_source@D@01@@Z PROC ; boost::iostreams::optimal_buffer_size<boost::iostreams::basic_file_source<char> >, COMDAT

; 38   :     typedef detail::optimal_buffer_size_impl<T> impl;
; 39   :     return impl::optimal_buffer_size(detail::unwrap(t));

	mov	eax, 4096				; 00001000H

; 40   : }

	ret	0
??$optimal_buffer_size@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAHABU?$basic_file_source@D@01@@Z ENDP ; boost::iostreams::optimal_buffer_size<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_Different_checked_iterator_base_type_tag>, COMDAT

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QBEIXZ PROC ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QBEIXZ ENDP ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::max_size
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ?address@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ
_TEXT	SEGMENT
?address@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::address, COMDAT
; _this$ = eax

; 106  :     void* address() { return &storage_; }

	ret	0
?address@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::address
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@123@XZ
_TEXT	SEGMENT
??D?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@123@XZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::operator*, COMDAT
; _this$ = eax

; 55   :         assert(initialized_);
; 56   :         return *static_cast<T*>(address()); 
; 57   :     }

	ret	0
??D?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@123@XZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?max_size@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEIXZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::max_size, COMDAT

; 625  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 626  : 		}

	ret	0
?max_size@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEIXZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??D?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEAAU?$basic_file_source@D@23@XZ
_TEXT	SEGMENT
??D?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEAAU?$basic_file_source@D@23@XZ PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::operator*, COMDAT
; _this$ = eax

; 67   :     T& operator*() { return t_; }

	ret	0
??D?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEAAU?$basic_file_source@D@23@XZ ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?obj@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@XZ
_TEXT	SEGMENT
?obj@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::obj, COMDAT
; _this$ = eax

; 104  :     wrapper& obj() { return *storage_; }

	add	eax, 64					; 00000040H
	ret	0
?obj@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::obj
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\linked_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXH@Z
_TEXT	SEGMENT
?close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXH@Z PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx
; _which$ = eax

; 72   :         if ( which == BOOST_IOS::in && 
; 73   :             (flags_ & f_input_closed) == 0 )

	cmp	eax, 1
	jne	SHORT $LN2@close
	mov	eax, DWORD PTR [ecx+60]
	test	al, 2
	jne	SHORT $LN1@close

; 74   :         {
; 75   :             flags_ |= f_input_closed;

	or	eax, 2

; 80   :         {
; 81   :             flags_ |= f_output_closed;

	mov	DWORD PTR [ecx+60], eax

; 82   :             close_impl(which);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	1
	call	edx

; 83   :         }
; 84   :     }

	ret	0
$LN2@close:

; 76   :             close_impl(which);
; 77   :         }
; 78   :         if ( which == BOOST_IOS::out && 
; 79   :             (flags_ & f_output_closed) == 0 )

	cmp	eax, 2
	jne	SHORT $LN1@close
	mov	eax, DWORD PTR [ecx+60]
	test	al, 4
	jne	SHORT $LN1@close

; 80   :         {
; 81   :             flags_ |= f_output_closed;

	or	eax, 4
	mov	DWORD PTR [ecx+60], eax

; 82   :             close_impl(which);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	2
	call	edx
$LN1@close:

; 83   :         }
; 84   :     }

	ret	0
?close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXH@Z ENDP ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::close
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?component@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAU?$basic_file_source@D@34@XZ
_TEXT	SEGMENT
?component@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAU?$basic_file_source@D@34@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component, COMDAT
; _this$ = eax

; 73   :     T* component() { return &*obj(); }

	add	eax, 64					; 00000040H
	ret	0
?component@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAU?$basic_file_source@D@34@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\double_object.hpp
_TEXT	ENDS
;	COMDAT ?second@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ
_TEXT	SEGMENT
?second@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ PROC ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::second, COMDAT
; _this$ = eax

; 47   :     reference second() { return first_; }

	ret	0
?second@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ENDP ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::second
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?first@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ
_TEXT	SEGMENT
?first@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ PROC ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::first, COMDAT
; _this$ = eax

; 45   :     reference first() { return first_; }

	ret	0
?first@?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ENDP ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::first
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\signed_unsigned_tools.hpp
_TEXT	ENDS
;	COMDAT ??R?$add@II$0A@@detail@random@boost@@QAEIII@Z
_TEXT	SEGMENT
??R?$add@II$0A@@detail@random@boost@@QAEIII@Z PROC	; boost::random::detail::add<unsigned int,unsigned int,0>::operator(), COMDAT
; _x$ = ecx
; _y$ = eax

; 64   :   result_type operator()(T1 x, T2 y) { return x + y; }

	add	eax, ecx
	ret	0
??R?$add@II$0A@@detail@random@boost@@QAEIII@Z ENDP	; boost::random::detail::add<unsigned int,unsigned int,0>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$add@KI$0A@@detail@random@boost@@QAEIKI@Z
_TEXT	SEGMENT
??R?$add@KI$0A@@detail@random@boost@@QAEIKI@Z PROC	; boost::random::detail::add<unsigned long,unsigned int,0>::operator(), COMDAT
; _x$ = ecx
; _y$ = eax

; 64   :   result_type operator()(T1 x, T2 y) { return x + y; }

	add	eax, ecx
	ret	0
??R?$add@KI$0A@@detail@random@boost@@QAEIKI@Z ENDP	; boost::random::detail::add<unsigned long,unsigned int,0>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ?release@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ
_TEXT	SEGMENT
?release@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ PROC ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::release, COMDAT
; _this$ = ecx

; 755  : 		_Ty *_Tmp = _Myptr;

	mov	eax, DWORD PTR [ecx]

; 756  : 		_Myptr = 0;

	mov	DWORD PTR [ecx], 0

; 757  : 		return (_Tmp);
; 758  : 		}

	ret	0
?release@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ ENDP ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QBEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ
_TEXT	SEGMENT
?get@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QBEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ PROC ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::get, COMDAT
; _this$ = eax

; 750  : 		return (_Myptr);

	mov	eax, DWORD PTR [eax]

; 751  : 		}

	ret	0
?get@?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QBEPAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@XZ ENDP ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::get
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@XZ PROC ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::~auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >, COMDAT
; _this$ = eax

; 721  : 		delete _Myptr;

	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@auto_ptr@4
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN3@auto_ptr@4:

; 722  : 		}

	ret	0
??1?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@XZ ENDP ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::~auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@PAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@Z
_TEXT	SEGMENT
??0?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@PAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@Z PROC ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >, COMDAT
; _this$ = eax
; __Ptr$ = ecx

; 661  : 		{	// construct from object pointer

	mov	DWORD PTR [eax], ecx

; 662  : 		}

	ret	0
??0?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@PAV?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@Z ENDP ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?component_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ
_TEXT	SEGMENT
?component_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_impl, COMDAT
; _this$ = ecx

; 99   :     void* component_impl() { return component(); }

	lea	eax, DWORD PTR [ecx+64]
	ret	0
?component_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_impl
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?component_type@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ
_TEXT	SEGMENT
?component_type@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_type, COMDAT
; _this$ = ecx

; 98   :     const std::type_info& component_type() const { return typeid(T); }

	mov	eax, OFFSET ??_R0?AU?$basic_file_source@D@iostreams@boost@@@8
	ret	0
?component_type@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_type
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\buffer.hpp
_TEXT	ENDS
;	COMDAT ?size@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEHXZ
_TEXT	SEGMENT
?size@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEHXZ PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::size, COMDAT
; _this$ = eax

; 54   :     std::streamsize size() const { return size_; }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?size@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEHXZ ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?data@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ
_TEXT	SEGMENT
?data@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::data, COMDAT
; _this$ = eax

; 53   :     Ch* data() const { return buf_; }

	mov	eax, DWORD PTR [eax]
	ret	0
?data@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::data
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ
_TEXT	SEGMENT
?end@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::end, COMDAT
; _this$ = ecx

; 52   :     Ch* end() const { return buf_ + size_; }

	mov	eax, DWORD PTR [ecx+4]
	add	eax, DWORD PTR [ecx]
	ret	0
?end@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ
_TEXT	SEGMENT
?begin@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::begin, COMDAT
; _this$ = eax

; 51   :     Ch* begin() const { return buf_; }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QBEPADXZ ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::begin
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??0?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z
_TEXT	SEGMENT
??0?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT
; _this$ = eax

; 65   :     { BOOST_STATIC_ASSERT(!is_std_io<T>::value); }

	ret	0
??0?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV?$basic_null_device@DUinput@iostreams@boost@@@23@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ??0?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >, COMDAT
; _this$ = eax

; 50   :     optional() : initialized_(false) { }

	mov	BYTE PTR [eax+1], 0
	ret	0
??0?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?shared_buffer@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?shared_buffer@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::shared_buffer, COMDAT

; 111  :     bool shared_buffer() const { return is_convertible<Mode, seekable>::value; }

	xor	al, al
	ret	0
?shared_buffer@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::shared_buffer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?output_buffered@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?output_buffered@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::output_buffered, COMDAT
; _this$ = eax

; 110  :     bool output_buffered() const { return (flags_ & f_output_buffered) != 0; }

	mov	eax, DWORD PTR [eax+84]
	shr	eax, 1
	and	eax, 1
	ret	0
?output_buffered@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::output_buffered
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?can_write@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?can_write@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_write, COMDAT

; 109  :     bool can_write() const { return is_convertible<Mode, output>::value; }

	xor	al, al
	ret	0
?can_write@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_write
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?can_read@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ
_TEXT	SEGMENT
?can_read@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_read, COMDAT

; 108  :     bool can_read() const { return is_convertible<Mode, input>::value; }

	mov	al, 1
	ret	0
?can_read@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::can_read
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?out@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ
_TEXT	SEGMENT
?out@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::out, COMDAT
; _this$ = eax

; 107  :     buffer_type& out() { return buffer_.second(); }

	add	eax, 72					; 00000048H
	ret	0
?out@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::out
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?in@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ
_TEXT	SEGMENT
?in@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::in, COMDAT
; _this$ = eax

; 106  :     buffer_type& in() { return buffer_.first(); }

	add	eax, 72					; 00000048H
	ret	0
?in@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::in
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ?end@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?end@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 281  :                 BOOST_ASSERT( !is_singular() );
; 282  :                 return m_End; 

	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 283  :             } 

	ret	0
?end@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?begin@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 275  :                 BOOST_ASSERT( !is_singular() );
; 276  :                 return m_Begin; 

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 277  :             }

	ret	0
?begin@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::begin
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\linked_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?set_needs_close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXXZ
_TEXT	SEGMENT
?set_needs_close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXXZ PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_needs_close, COMDAT
; _this$ = eax

; 87   :         flags_ &= ~(f_input_closed | f_output_closed);

	and	DWORD PTR [eax+60], -7			; fffffff9H

; 88   :     }

	ret	0
?set_needs_close@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEXXZ ENDP ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_needs_close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?set_true_eof@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEX_N@Z
_TEXT	SEGMENT
_eof$ = 8						; size = 1
?set_true_eof@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEX_N@Z PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_true_eof, COMDAT
; _this$ = eax

; 46   :         flags_ = (flags_ & ~f_true_eof) | (eof ? f_true_eof : 0); 

	mov	edx, DWORD PTR [eax+60]
	xor	ecx, ecx
	cmp	BYTE PTR _eof$[esp-4], cl
	setne	cl
	and	edx, -2					; fffffffeH
	or	ecx, edx
	mov	DWORD PTR [eax+60], ecx

; 47   :     }

	ret	4
?set_true_eof@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAEX_N@Z ENDP ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_true_eof
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Checked_iterator_base, COMDAT
; _this$ = eax

; 47   : 		return _Myptr;

	mov	eax, DWORD PTR [eax+4]

; 48   : 	}

	ret	0
?_Checked_iterator_base@?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEPBVChannel@DRAMsimII@@XZ ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Checked_iterator_base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$wrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@PAX@Z
_TEXT	SEGMENT
??$wrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@PAX@Z PROC ; boost::iostreams::detail::wrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT
; _t$ = eax

; 53   :     { return t; }

	mov	al, BYTE PTR [eax]
	ret	0
??$wrap@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YA?AV?$basic_null_device@DUinput@iostreams@boost@@@12@ABV312@PAX@Z ENDP ; boost::iostreams::detail::wrap<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?set_next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z
_TEXT	SEGMENT
_next$ = 8						; size = 4
?set_next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next, COMDAT
; _this$ = ecx

; 365  : { next_ = next; }

	mov	eax, DWORD PTR _next$[esp-4]
	mov	DWORD PTR [ecx+68], eax
	ret	4
?set_next@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?set_auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z
_TEXT	SEGMENT
_close$ = 8						; size = 1
?set_auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close, COMDAT
; _this$ = ecx

; 216  : { flags_ = (flags_ & ~f_auto_close) | (close ? f_auto_close : 0); }

	movzx	eax, BYTE PTR _close$[esp-4]
	mov	edx, DWORD PTR [ecx+84]
	neg	eax
	sbb	eax, eax
	and	eax, 4
	and	edx, -5					; fffffffbH
	or	eax, edx
	mov	DWORD PTR [ecx+84], eax
	ret	4
?set_auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEX_N@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ
_TEXT	SEGMENT
?auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close, COMDAT
; _this$ = ecx

; 212  : { return (flags_ & f_auto_close) != 0; }

	mov	eax, DWORD PTR [ecx+84]
	shr	eax, 2
	and	eax, 1
	ret	0
?auto_close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UBE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?is_open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ
_TEXT	SEGMENT
?is_open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_open, COMDAT
; _this$ = eax

; 195  : { return (flags_ & f_open) != 0; }

	mov	eax, DWORD PTR [eax+84]
	and	eax, 1
	ret	0
?is_open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_open
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$swap@PAUimpl@?$basic_file@D@iostreams@boost@@@std@@YAXAAPAUimpl@?$basic_file@D@iostreams@boost@@0@Z
_TEXT	SEGMENT
??$swap@PAUimpl@?$basic_file@D@iostreams@boost@@@std@@YAXAAPAUimpl@?$basic_file@D@iostreams@boost@@0@Z PROC ; std::swap<boost::iostreams::basic_file<char>::impl *>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 18   : 	if (&_Left != &_Right)

	cmp	ecx, eax
	je	SHORT $LN1@swap@8

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [eax], edx
	pop	esi
$LN1@swap@8:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAUimpl@?$basic_file@D@iostreams@boost@@@std@@YAXAAPAUimpl@?$basic_file@D@iostreams@boost@@0@Z ENDP ; std::swap<boost::iostreams::basic_file<char>::impl *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Different_checked_iterator_base_type_tag>, COMDAT
; __It$ = eax

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$swap@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@YAXAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@0@Z
_TEXT	SEGMENT
??$swap@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@YAXAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@0@Z PROC ; std::swap<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 18   : 	if (&_Left != &_Right)

	cmp	ecx, eax
	je	SHORT $LN1@swap@9

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [eax], edx
	pop	esi
$LN1@swap@9:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@YAXAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@0@Z ENDP ; std::swap<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Iter_random@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
??$_Iter_random@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Iter_random<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = eax

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);
; 998  : 	}

	ret	0
??$_Iter_random@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Iter_random<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Checked_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPADAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Checked_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
_TEXT	ENDS
;	COMDAT ??$range_end@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
??$range_end@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; boost::range_detail::range_end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT
; ___$ReturnUdt$ = eax
; _c$ = ecx

; 45   :             //
; 46   :             // If you get a compile-error here, it is most likely because
; 47   :             // you have not implemented range_begin() properly in
; 48   :             // the namespace of C
; 49   :             //
; 50   :             return c.end();

	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 51   :         }

	ret	0
??$range_end@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; boost::range_detail::range_end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$range_begin@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
??$range_begin@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; boost::range_detail::range_begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >, COMDAT
; ___$ReturnUdt$ = eax
; _c$ = ecx

; 44   :         //
; 45   :         // If you get a compile-error here, it is most likely because
; 46   :         // you have not implemented range_begin() properly in
; 47   :         // the namespace of C
; 48   :         //
; 49   :         return c.begin();

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 50   :     }

	ret	0
??$range_begin@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; boost::range_detail::range_begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ?address@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ
_TEXT	SEGMENT
?address@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::address, COMDAT
; _this$ = eax

; 106  :     void* address() { return &storage_; }

	ret	0
?address@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@AAEPAXXZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::address
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@123@XZ
_TEXT	SEGMENT
??D?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@123@XZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::operator*, COMDAT
; _this$ = eax

; 55   :         assert(initialized_);
; 56   :         return *static_cast<T*>(address()); 
; 57   :     }

	ret	0
??D?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@123@XZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 8
??0?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z PROC ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >, COMDAT
; _this$ = eax

; 1918 : 		{	// construct wrapped iterator from _Right

	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR __Right$[esp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 1919 : 		}

	ret	8
??0?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z ENDP ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??D?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_null_device@DUinput@iostreams@boost@@@23@XZ
_TEXT	SEGMENT
??D?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_null_device@DUinput@iostreams@boost@@@23@XZ PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::operator*, COMDAT
; _this$ = eax

; 67   :     T& operator*() { return t_; }

	ret	0
??D?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEAAV?$basic_null_device@DUinput@iostreams@boost@@@23@XZ ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::reset, COMDAT
; _this$ = eax

; 85   :         if (initialized_) { 

	cmp	BYTE PTR [eax+1], 0
	je	SHORT $LN1@reset@4

; 86   :         #if BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) || \
; 87   :             BOOST_WORKAROUND(__IBMCPP__, BOOST_TESTED_AT(600)) \
; 88   :             /**/
; 89   :             T* t = static_cast<T*>(address());
; 90   :             t->~T();
; 91   :         #else
; 92   :             static_cast<T*>(address())->T::~T();
; 93   :         #endif
; 94   :             initialized_ = false;

	mov	BYTE PTR [eax+1], 0
$LN1@reset@4:

; 95   :         }
; 96   :     }

	ret	0
?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::reset
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?obj@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@XZ
_TEXT	SEGMENT
?obj@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::obj, COMDAT
; _this$ = eax

; 104  :     wrapper& obj() { return *storage_; }

	add	eax, 64					; 00000040H
	ret	0
?obj@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::obj
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 8
??0?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z PROC ; std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >, COMDAT
; _this$ = eax

; 2145 : 		{	// construct wrapped iterator from _Right

	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR __Right$[esp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 2146 : 		}

	ret	8
??0?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@1@@Z ENDP ; std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ??1?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::~optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >, COMDAT
; _this$ = eax

; 52   :     ~optional() { reset(); }

	cmp	BYTE PTR [eax+1], 0
	je	SHORT $LN3@optional@4
	mov	BYTE PTR [eax+1], 0
$LN3@optional@4:
	ret	0
??1?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::~optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?component@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAV?$basic_null_device@DUinput@iostreams@boost@@@34@XZ
_TEXT	SEGMENT
?component@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAV?$basic_null_device@DUinput@iostreams@boost@@@34@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component, COMDAT
; _this$ = eax

; 73   :     T* component() { return &*obj(); }

	add	eax, 64					; 00000040H
	ret	0
?component@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAV?$basic_null_device@DUinput@iostreams@boost@@@34@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z PROC	; std::codecvt<char,char,int>::_Init, COMDAT
; _this$ = ecx

; 798  : 		}

	ret	4
?_Init@?$codecvt@DDH@std@@IAEXABV_Locinfo@2@@Z ENDP	; std::codecvt<char,char,int>::_Init
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@3@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::_Mynode, COMDAT
; _this$ = eax

; 308  : 			return (_Ptr);

	mov	eax, DWORD PTR [eax+4]

; 309  : 			}

	ret	0
?_Mynode@?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@3@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::_Mynode
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?set_auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@_N@Z
_TEXT	SEGMENT
?set_auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@_N@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close, COMDAT
; _b$ = ecx

; 283  :     { b->set_auto_close(close); }

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+68]
	push	0
	call	edx
	ret	0
?set_auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@_N@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_auto_close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0closer@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@H@Z
_TEXT	SEGMENT
??0closer@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@H@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer::closer, COMDAT
; _this$ = eax
; _m$ = ecx

; 286  :         closer(BOOST_IOS::openmode m) : mode_(m) { }

	mov	DWORD PTR [eax], ecx
	ret	0
??0closer@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@H@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer::closer
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?component_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ
_TEXT	SEGMENT
?component_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_impl, COMDAT
; _this$ = ecx

; 99   :     void* component_impl() { return component(); }

	lea	eax, DWORD PTR [ecx+64]
	ret	0
?component_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEPAXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_impl
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?component_type@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ
_TEXT	SEGMENT
?component_type@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_type, COMDAT
; _this$ = ecx

; 98   :     const std::type_info& component_type() const { return typeid(T); }

	mov	eax, OFFSET ??_R0?AV?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@8
	ret	0
?component_type@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MBEABVtype_info@@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::component_type
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?set_next@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@0@Z
_TEXT	SEGMENT
?set_next@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@0@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next, COMDAT
; _b$ = ecx
; _next$ = edx

; 280  :     { b->set_next(next); }

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+56]
	push	edx
	call	eax
	ret	0
?set_next@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@0@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::set_next
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0closable_tag@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0closable_tag@iostreams@boost@@QAE@XZ PROC		; boost::iostreams::closable_tag::closable_tag, COMDAT
; _this$ = eax
	ret	0
??0closable_tag@iostreams@boost@@QAE@XZ ENDP		; boost::iostreams::closable_tag::closable_tag
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0device_tag@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0device_tag@iostreams@boost@@QAE@XZ PROC		; boost::iostreams::device_tag::device_tag, COMDAT
; _this$ = eax
	ret	0
??0device_tag@iostreams@boost@@QAE@XZ ENDP		; boost::iostreams::device_tag::device_tag
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0input@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0input@iostreams@boost@@QAE@XZ PROC			; boost::iostreams::input::input, COMDAT
; _this$ = eax
	ret	0
??0input@iostreams@boost@@QAE@XZ ENDP			; boost::iostreams::input::input
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::category, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Binput@23@@
	mov	DWORD PTR [eax+4], OFFSET ??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bdevice_tag@23@@
	mov	DWORD PTR [eax+8], OFFSET ??_8category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@7Bclosable_tag@23@@
	ret	0
??0category@?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::basic_null_device<char,boost::iostreams::input>::category::category
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$swap@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@std@@YAXAAPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@std@@YAXAAPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@0@Z PROC ; std::swap<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp *>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap@10

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap@10:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@std@@YAXAAPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@0@Z ENDP ; std::swap<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\mersenne_twister.hpp
_TEXT	ENDS
;	COMDAT ?twist@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@AAEXH@Z
_TEXT	SEGMENT
?twist@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@AAEXH@Z PROC ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::twist, COMDAT
; _this$ = edx
; _block$ = eax

; 231  : {

	push	ebp
	push	esi
	push	edi

; 232  :   const UIntType upper_mask = (~0u) << r;
; 233  :   const UIntType lower_mask = ~upper_mask;
; 234  : 
; 235  :   if(block == 0) {

	test	eax, eax
	jne	$LN12@twist

; 236  :     for(int j = n; j < 2*n; j++) {

	lea	eax, DWORD PTR [edx+4]
	mov	ebp, 104				; 00000068H
$LL11@twist:

; 237  :       UIntType y = (x[j-n] & upper_mask) | (x[j-(n-1)] & lower_mask);

	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax-4]
	xor	ecx, esi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, DWORD PTR [eax-4]
	mov	edi, DWORD PTR [eax+4]

; 238  :       x[j] = x[j-(n-m)] ^ (y >> 1) ^ (y&1 ? a : 0);

	mov	edx, ecx
	and	dl, 1
	movzx	edx, dl
	neg	edx
	sbb	edx, edx
	and	edx, -1727483681			; 9908b0dfH
	shr	ecx, 1
	xor	edx, ecx
	xor	edx, DWORD PTR [eax+1584]
	mov	ecx, esi
	mov	DWORD PTR [eax+2492], edx
	xor	ecx, edi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, esi
	mov	edx, ecx
	and	dl, 1
	movzx	edx, dl
	neg	edx
	sbb	edx, edx
	mov	esi, DWORD PTR [eax+8]
	and	edx, -1727483681			; 9908b0dfH
	xor	edx, DWORD PTR [eax+1588]
	shr	ecx, 1
	xor	edx, ecx
	mov	DWORD PTR [eax+2496], edx
	mov	ecx, esi
	xor	ecx, edi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, edi
	mov	edi, DWORD PTR [eax+12]
	mov	edx, ecx
	and	dl, 1
	movzx	edx, dl
	neg	edx
	sbb	edx, edx
	and	edx, -1727483681			; 9908b0dfH
	xor	edx, DWORD PTR [eax+1592]
	shr	ecx, 1
	xor	edx, ecx
	mov	DWORD PTR [eax+2500], edx
	mov	ecx, edi
	xor	ecx, esi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, esi
	mov	esi, DWORD PTR [eax+16]
	mov	edx, ecx
	and	dl, 1
	movzx	edx, dl
	neg	edx
	sbb	edx, edx
	and	edx, -1727483681			; 9908b0dfH
	xor	edx, DWORD PTR [eax+1596]
	shr	ecx, 1
	xor	edx, ecx
	mov	DWORD PTR [eax+2504], edx
	mov	ecx, esi
	xor	ecx, edi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, edi
	mov	edx, ecx
	and	dl, 1
	movzx	edx, dl
	neg	edx
	sbb	edx, edx
	and	edx, -1727483681			; 9908b0dfH
	xor	edx, DWORD PTR [eax+1600]
	shr	ecx, 1
	xor	edx, ecx
	mov	ecx, DWORD PTR [eax+20]
	xor	ecx, esi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, esi
	mov	DWORD PTR [eax+2508], edx
	mov	edx, ecx
	and	dl, 1
	movzx	edx, dl
	neg	edx
	sbb	edx, edx
	and	edx, -1727483681			; 9908b0dfH
	xor	edx, DWORD PTR [eax+1604]
	shr	ecx, 1
	xor	edx, ecx
	mov	DWORD PTR [eax+2512], edx
	add	eax, 24					; 00000018H
	sub	ebp, 1
	jne	$LL11@twist
	pop	edi
	pop	esi
	pop	ebp

; 257  :   }
; 258  : }

	ret	0
$LN12@twist:

; 239  :     }
; 240  :   } else if (block == 1) {

	cmp	eax, 1
	jne	$LN7@twist

; 241  :     // split loop to avoid costly modulo operations
; 242  :     {  // extra scope for MSVC brokenness w.r.t. for scope
; 243  :       for(int j = 0; j < n-m; j++) {

	lea	ecx, DWORD PTR [edx+2496]
	mov	esi, 227				; 000000e3H
	push	ebx
	npad	3
$LL23@twist:

; 244  :         UIntType y = (x[j+n] & upper_mask) | (x[j+n+1] & lower_mask);

	mov	eax, DWORD PTR [ecx+4]
	xor	eax, DWORD PTR [ecx]
	and	eax, 2147483647				; 7fffffffH
	xor	eax, DWORD PTR [ecx]

; 245  :         x[j] = x[j+n+m] ^ (y >> 1) ^ (y&1 ? a : 0);

	mov	ebx, eax
	and	bl, 1
	movzx	edi, bl
	neg	edi
	sbb	edi, edi
	and	edi, -1727483681			; 9908b0dfH
	xor	edi, DWORD PTR [ecx+1588]
	shr	eax, 1
	xor	edi, eax
	mov	DWORD PTR [ecx-2496], edi
	add	ecx, 4
	sub	esi, 1
	jne	SHORT $LL23@twist

; 246  :       }
; 247  :     }
; 248  :     
; 249  :     for(int j = n-m; j < n-1; j++) {

	lea	eax, DWORD PTR [edx+3408]
	lea	ebp, DWORD PTR [esi+66]
	npad	1
$LL3@twist:

; 250  :       UIntType y = (x[j+n] & upper_mask) | (x[j+n+1] & lower_mask);

	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax-4]
	xor	ecx, esi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, DWORD PTR [eax-4]

; 251  :       x[j] = x[j-(n-m)] ^ (y >> 1) ^ (y&1 ? a : 0);

	mov	ebx, ecx
	and	bl, 1
	movzx	edi, bl
	neg	edi
	sbb	edi, edi
	shr	ecx, 1
	and	edi, -1727483681			; 9908b0dfH
	xor	edi, ecx
	xor	edi, DWORD PTR [eax-3408]
	mov	DWORD PTR [eax-2500], edi
	mov	edi, DWORD PTR [eax+4]
	mov	ecx, edi
	xor	ecx, esi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, esi
	mov	ebx, ecx
	and	bl, 1
	movzx	esi, bl
	neg	esi
	sbb	esi, esi
	shr	ecx, 1
	and	esi, -1727483681			; 9908b0dfH
	xor	esi, DWORD PTR [eax-3404]
	xor	esi, ecx
	mov	DWORD PTR [eax-2496], esi
	mov	esi, DWORD PTR [eax+8]
	mov	ecx, esi
	xor	ecx, edi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, edi
	mov	ebx, ecx
	and	bl, 1
	movzx	edi, bl
	neg	edi
	sbb	edi, edi
	shr	ecx, 1
	and	edi, -1727483681			; 9908b0dfH
	xor	edi, DWORD PTR [eax-3400]
	xor	edi, ecx
	mov	DWORD PTR [eax-2492], edi
	mov	edi, DWORD PTR [eax+12]
	mov	ecx, edi
	xor	ecx, esi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, esi
	mov	ebx, ecx
	and	bl, 1
	movzx	esi, bl
	neg	esi
	sbb	esi, esi
	shr	ecx, 1
	and	esi, -1727483681			; 9908b0dfH
	xor	esi, DWORD PTR [eax-3396]
	xor	esi, ecx
	mov	DWORD PTR [eax-2488], esi
	mov	esi, DWORD PTR [eax+16]
	mov	ecx, esi
	xor	ecx, edi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, edi
	mov	ebx, ecx
	and	bl, 1
	movzx	edi, bl
	neg	edi
	sbb	edi, edi
	and	edi, -1727483681			; 9908b0dfH
	xor	edi, DWORD PTR [eax-3392]
	shr	ecx, 1
	xor	edi, ecx
	mov	ecx, DWORD PTR [eax+20]
	xor	ecx, esi
	and	ecx, 2147483647				; 7fffffffH
	xor	ecx, esi
	mov	ebx, ecx
	mov	DWORD PTR [eax-2484], edi
	and	bl, 1
	movzx	esi, bl
	neg	esi
	sbb	esi, esi
	and	esi, -1727483681			; 9908b0dfH
	xor	esi, DWORD PTR [eax-3388]
	shr	ecx, 1
	xor	esi, ecx
	mov	DWORD PTR [eax-2480], esi
	add	eax, 24					; 00000018H
	sub	ebp, 1
	jne	$LL3@twist

; 252  :     }
; 253  :     // last iteration
; 254  :     UIntType y = (x[2*n-1] & upper_mask) | (x[0] & lower_mask);

	mov	eax, DWORD PTR [edx+4988]
	xor	eax, DWORD PTR [edx]

; 255  :     x[n-1] = x[m-1] ^ (y >> 1) ^ (y&1 ? a : 0);
; 256  :     i = 0;

	mov	DWORD PTR [edx+4992], ebp
	and	eax, 2147483647				; 7fffffffH
	xor	eax, DWORD PTR [edx+4988]
	pop	ebx
	mov	ecx, eax
	and	cl, 1
	movzx	ecx, cl
	neg	ecx
	sbb	ecx, ecx
	and	ecx, -1727483681			; 9908b0dfH
	xor	ecx, DWORD PTR [edx+1584]
	shr	eax, 1
	xor	ecx, eax
	mov	DWORD PTR [edx+2492], ecx
$LN7@twist:
	pop	edi
	pop	esi
	pop	ebp

; 257  :   }
; 258  : }

	ret	0
?twist@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@AAEXH@Z ENDP ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::twist
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Iter_random@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z
_TEXT	SEGMENT
??$_Iter_random@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z PROC ; std::_Iter_random<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >, COMDAT
; ___$ReturnUdt$ = eax

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);
; 998  : 	}

	ret	0
??$_Iter_random@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z ENDP ; std::_Iter_random<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z
_TEXT	SEGMENT
??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YAPBVChannel@DRAMsimII@@AAV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
_TEXT	ENDS
;	COMDAT ??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; boost::end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _r$ = ecx

; 105  : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 106  :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 107  :     /**/
; 108  :     using namespace range_detail;
; 109  : #endif
; 110  :     return range_end( r );

	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 111  : }

	ret	0
??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; boost::end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; boost::begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _r$ = ecx

; 109  : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 110  :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 111  :     /**/
; 112  :     using namespace range_detail;
; 113  : #endif
; 114  :     return range_begin( r );

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 115  : }

	ret	0
??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; boost::begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setp, COMDAT
; _this$ = ecx

; 257  : 		*_IPfirst = _First;

	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR __First$[esp-4]
	mov	DWORD PTR [edx], eax

; 258  : 		*_IPnext = _First;

	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx], eax

; 259  : 		*_IPcount = (int)(_Last - _First);

	mov	edx, DWORD PTR __Last$[esp-4]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax], edx

; 260  : 		}

	ret	8
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setp
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\signed_unsigned_tools.hpp
_TEXT	ENDS
;	COMDAT ??R?$subtract@I$0A@@detail@random@boost@@QAEIII@Z
_TEXT	SEGMENT
_y$ = 8							; size = 4
??R?$subtract@I$0A@@detail@random@boost@@QAEIII@Z PROC	; boost::random::detail::subtract<unsigned int,0>::operator(), COMDAT
; _x$ = eax

; 34   :   result_type operator()(T x, T y) { return x - y; }

	sub	eax, DWORD PTR _y$[esp-4]
	ret	4
??R?$subtract@I$0A@@detail@random@boost@@QAEIII@Z ENDP	; boost::random::detail::subtract<unsigned int,0>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First2$ = 12						; size = 4
__Last2$ = 16						; size = 4
__Mid2$ = 20						; size = 4
?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z PROC	; std::codecvt<char,char,int>::unshift, COMDAT
; _this$ = ecx

; 756  : 		return (do_unshift(_State, _First2, _Last2, _Mid2));

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	jmp	eax
?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z ENDP	; std::codecvt<char,char,int>::unshift
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z
_TEXT	SEGMENT
__Gf$ = 8						; size = 4
__Gn$ = 12						; size = 4
__Gc$ = 16						; size = 4
__Pf$ = 20						; size = 4
__Pn$ = 24						; size = 4
__Pc$ = 28						; size = 4
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx

; 291  : 		_IGfirst = _Gf, _IPfirst = _Pf;

	mov	eax, DWORD PTR __Gf$[esp-4]
	mov	edx, DWORD PTR __Pf$[esp-4]
	mov	DWORD PTR [ecx+16], eax

; 292  : 		_IGnext = _Gn, _IPnext = _Pn;

	mov	eax, DWORD PTR __Gn$[esp-4]
	mov	DWORD PTR [ecx+20], edx
	mov	edx, DWORD PTR __Pn$[esp-4]
	mov	DWORD PTR [ecx+32], eax

; 293  : 		_IGcount = _Gc, _IPcount = _Pc;

	mov	eax, DWORD PTR __Gc$[esp-4]
	mov	DWORD PTR [ecx+36], edx
	mov	edx, DWORD PTR __Pc$[esp-4]
	mov	DWORD PTR [ecx+48], eax
	mov	DWORD PTR [ecx+52], edx

; 294  : 		}

	ret	24					; 00000018H
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAPAD0PAH001@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Count$ = 20						; size = 4
?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z PROC	; std::codecvt<char,char,int>::do_length, COMDAT
; _this$ = ecx

; 826  : 		return ((int)(_Count < (size_t)(_Last1 - _First1)
; 827  : 			? _Count : _Last1 - _First1));	// assume 1-to-1 conversion

	mov	eax, DWORD PTR __Last1$[esp-4]
	sub	eax, DWORD PTR __First1$[esp-4]
	mov	ecx, DWORD PTR __Count$[esp-4]
	cmp	ecx, eax
	jae	SHORT $LN4@do_length
	mov	eax, ecx
$LN4@do_length:

; 828  : 		}

	ret	16					; 00000010H
?do_length@?$codecvt@DDH@std@@MBEHABHPBD1I@Z ENDP	; std::codecvt<char,char,int>::do_length
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First2$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid2$ = 20						; size = 4
?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z PROC	; std::codecvt<char,char,int>::do_unshift, COMDAT
; _this$ = ecx

; 819  : 		_Mid2 = _First2;

	mov	eax, DWORD PTR __Mid2$[esp-4]
	mov	ecx, DWORD PTR __First2$[esp-4]
	mov	DWORD PTR [eax], ecx

; 820  : 		return (noconv);	// convert nothing

	mov	eax, 3

; 821  : 		}

	ret	16					; 00000010H
?do_unshift@?$codecvt@DDH@std@@MBEHAAHPAD1AAPAD@Z ENDP	; std::codecvt<char,char,int>::do_unshift
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
___formal$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::do_out, COMDAT
; _this$ = ecx

; 812  : 		_Mid1 = _First1, _Mid2 = _First2;

	mov	eax, DWORD PTR __Mid1$[esp-4]
	mov	ecx, DWORD PTR __First1$[esp-4]
	mov	edx, DWORD PTR __Mid2$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR __First2$[esp-4]
	mov	DWORD PTR [edx], eax

; 813  : 		return (noconv);	// convert nothing

	mov	eax, 3

; 814  : 		}

	ret	28					; 0000001cH
?do_out@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::do_out
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__First1$ = 12						; size = 4
___formal$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
___formal$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::do_in, COMDAT
; _this$ = ecx

; 804  : 		_Mid1 = _First1, _Mid2 = _First2;

	mov	eax, DWORD PTR __Mid1$[esp-4]
	mov	ecx, DWORD PTR __First1$[esp-4]
	mov	edx, DWORD PTR __Mid2$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR __First2$[esp-4]
	mov	DWORD PTR [edx], eax

; 805  : 		return (noconv);	// convert nothing

	mov	eax, 3

; 806  : 		}

	ret	28					; 0000001cH
?do_in@?$codecvt@DDH@std@@MBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::do_in
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC ; std::codecvt<char,char,int>::out, COMDAT
; _this$ = ecx

; 749  : 		return (do_out(_State,
; 750  : 			_First1, _Last1, _Mid1, _First2, _Last2, _Mid2));

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	jmp	eax
?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP ; std::codecvt<char,char,int>::out
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__Mid1$ = 20						; size = 4
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
__Mid2$ = 32						; size = 4
?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z PROC	; std::codecvt<char,char,int>::in, COMDAT
; _this$ = ecx

; 741  : 		return (do_in(_State,
; 742  : 			_First1, _Last1, _Mid1, _First2, _Last2, _Mid2));

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	jmp	eax
?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z ENDP	; std::codecvt<char,char,int>::in
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ?init@?$uniform_int@I@boost@@AAEXXZ
_TEXT	SEGMENT
?init@?$uniform_int@I@boost@@AAEXXZ PROC		; boost::uniform_int<unsigned int>::init, COMDAT
; _this$ = eax

; 253  :     _range = random::detail::subtract<result_type>()(_max, _min);

	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax+8], ecx

; 254  :   }

	ret	0
?init@?$uniform_int@I@boost@@AAEXXZ ENDP		; boost::uniform_int<unsigned int>::init
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ?state@?$fpos@H@std@@QBEHXZ
_TEXT	SEGMENT
?state@?$fpos@H@std@@QBEHXZ PROC			; std::fpos<int>::state, COMDAT
; _this$ = ecx

; 64   : 		return (_Mystate);

	mov	eax, DWORD PTR [ecx+16]

; 65   : 		}

	ret	0
?state@?$fpos@H@std@@QBEHXZ ENDP			; std::fpos<int>::state
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec, COMDAT
; _this$ = ecx

; 228  : 		++*_IGcount;

	mov	eax, DWORD PTR [ecx+48]
	inc	DWORD PTR [eax]

; 229  : 		return (--*_IGnext);

	mov	eax, DWORD PTR [ecx+32]
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]

; 230  : 		}

	ret	0
?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gndec
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::epptr, COMDAT
; _this$ = ecx

; 223  : 		return (*_IPnext + *_IPcount);

	mov	eax, DWORD PTR [ecx+52]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR [ecx]

; 224  : 		}

	ret	0
?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::epptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Next$ = 12						; size = 4
__Last$ = 16						; size = 4
?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setg, COMDAT
; _this$ = ecx

; 216  : 		*_IGfirst = _First;

	mov	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	DWORD PTR [eax], edx

; 217  : 		*_IGnext = _Next;

	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR __Next$[esp-4]
	mov	DWORD PTR [edx], eax

; 218  : 		*_IGcount = (int)(_Last - _Next);

	mov	edx, DWORD PTR __Last$[esp-4]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], edx

; 219  : 		}

	ret	12					; 0000000cH
?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setg
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::egptr, COMDAT
; _this$ = ecx

; 205  : 		return (*_IGnext + *_IGcount);

	mov	eax, DWORD PTR [ecx+48]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR [ecx]

; 206  : 		}

	ret	0
?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::egptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::eback, COMDAT
; _this$ = ecx

; 185  : 		return (*_IGfirst);

	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]

; 186  : 		}

	ret	0
?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::eback
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0clone_base@exception_detail@boost@@QAE@XZ
_TEXT	SEGMENT
??0clone_base@exception_detail@boost@@QAE@XZ PROC	; boost::exception_detail::clone_base::clone_base, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	ret	0
??0clone_base@exception_detail@boost@@QAE@XZ ENDP	; boost::exception_detail::clone_base::clone_base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_impl.hpp
_TEXT	ENDS
;	COMDAT ?get_deleter@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?get_deleter@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::get_deleter, COMDAT
; _this$ = ecx

; 83   :         return 0;

	xor	eax, eax

; 84   :     }

	ret	4
?get_deleter@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::get_deleter
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\signed_unsigned_tools.hpp
_TEXT	ENDS
;	COMDAT ??R?$add@IH$00@detail@random@boost@@QAEHIH@Z
_TEXT	SEGMENT
??R?$add@IH$00@detail@random@boost@@QAEHIH@Z PROC	; boost::random::detail::add<unsigned int,int,1>::operator(), COMDAT
; _x$ = ecx
; _y$ = eax

; 73   :     if (y >= 0)
; 74   :       return x + y;
; 75   :     // y < 0
; 76   :     if (x >= T1(-(y+1)))  // result >= 0 after subtraction

	or	edx, -1
	sub	edx, eax

; 77   :       // avoid the nasty two's complement edge case for y == min()
; 78   :       return T2(x - T1(-(y+1)) - 1);

	add	eax, ecx

; 79   :     // abs(x) < abs(y), thus T2 able to represent x
; 80   :     return T2(x) + y;
; 81   :   }

	ret	0
??R?$add@IH$00@detail@random@boost@@QAEHIH@Z ENDP	; boost::random::detail::add<unsigned int,int,1>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ??0?$uniform_int@I@boost@@QAE@II@Z
_TEXT	SEGMENT
??0?$uniform_int@I@boost@@QAE@II@Z PROC			; boost::uniform_int<unsigned int>::uniform_int<unsigned int>, COMDAT
; _this$ = eax
; _max_arg$ = ecx

; 43   :   {

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], ecx

; 44   : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 45   :     // MSVC fails BOOST_STATIC_ASSERT with std::numeric_limits at class scope
; 46   :     BOOST_STATIC_ASSERT(std::numeric_limits<IntType>::is_integer);
; 47   : #endif
; 48   :     assert(min_arg <= max_arg);
; 49   :     init();

	mov	DWORD PTR [eax+8], ecx

; 50   :   }

	ret	0
??0?$uniform_int@I@boost@@QAE@II@Z ENDP			; boost::uniform_int<unsigned int>::uniform_int<unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\signed_unsigned_tools.hpp
_TEXT	ENDS
;	COMDAT ??R?$add@KH$00@detail@random@boost@@QAEHKH@Z
_TEXT	SEGMENT
??R?$add@KH$00@detail@random@boost@@QAEHKH@Z PROC	; boost::random::detail::add<unsigned long,int,1>::operator(), COMDAT
; _x$ = ecx
; _y$ = eax

; 73   :     if (y >= 0)
; 74   :       return x + y;
; 75   :     // y < 0
; 76   :     if (x >= T1(-(y+1)))  // result >= 0 after subtraction

	or	edx, -1
	sub	edx, eax

; 77   :       // avoid the nasty two's complement edge case for y == min()
; 78   :       return T2(x - T1(-(y+1)) - 1);

	add	eax, ecx

; 79   :     // abs(x) < abs(y), thus T2 able to represent x
; 80   :     return T2(x) + y;
; 81   :   }

	ret	0
??R?$add@KH$00@detail@random@boost@@QAEHKH@Z ENDP	; boost::random::detail::add<unsigned long,int,1>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$subtract@K$0A@@detail@random@boost@@QAEKKK@Z
_TEXT	SEGMENT
_y$ = 8							; size = 4
??R?$subtract@K$0A@@detail@random@boost@@QAEKKK@Z PROC	; boost::random::detail::subtract<unsigned long,0>::operator(), COMDAT
; _x$ = eax

; 34   :   result_type operator()(T x, T y) { return x - y; }

	sub	eax, DWORD PTR _y$[esp-4]
	ret	4
??R?$subtract@K$0A@@detail@random@boost@@QAEKKK@Z ENDP	; boost::random::detail::subtract<unsigned long,0>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\mersenne_twister.hpp
_TEXT	ENDS
;	COMDAT ??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ
_TEXT	SEGMENT
??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ PROC ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator(), COMDAT
; _this$ = esi

; 265  :   if(i == n)

	mov	eax, DWORD PTR [esi+4992]
	cmp	eax, 624				; 00000270H
	jne	SHORT $LN3@operator@19

; 266  :     twist(0);

	xor	eax, eax
	jmp	SHORT $LN6@operator@19
$LN3@operator@19:

; 267  :   else if(i >= 2*n)

	cmp	eax, 1248				; 000004e0H
	jl	SHORT $LN1@operator@19

; 268  :     twist(1);

	mov	eax, 1
$LN6@operator@19:
	mov	edx, esi
	call	?twist@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@AAEXH@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::twist
$LN1@operator@19:

; 269  :   // Step 4
; 270  :   UIntType z = x[i];

	mov	eax, DWORD PTR [esi+4992]
	mov	ecx, DWORD PTR [esi+eax*4]

; 271  :   ++i;

	inc	eax
	mov	DWORD PTR [esi+4992], eax

; 272  :   z ^= (z >> u);

	mov	eax, ecx
	shr	eax, 11					; 0000000bH
	xor	ecx, eax

; 273  :   z ^= ((z << s) & b);

	mov	edx, ecx
	and	edx, -12953427				; ff3a58adH
	shl	edx, 7
	xor	ecx, edx

; 274  :   z ^= ((z << t) & c);

	mov	eax, ecx
	and	eax, -8308				; ffffdf8cH
	shl	eax, 15					; 0000000fH
	xor	ecx, eax

; 275  :   z ^= (z >> l);

	mov	eax, ecx
	shr	eax, 18					; 00000012H
	xor	eax, ecx

; 276  :   return z;
; 277  : }

	ret	0
??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ENDP ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$unwrap@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@AAV312@@Z
_TEXT	SEGMENT
??$unwrap@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@AAV312@@Z PROC ; boost::iostreams::detail::unwrap<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >, COMDAT
; _t$ = eax

; 93   : typename unwrapped_type<T>::type& unwrap(T& t) { return t; }

	ret	0
??$unwrap@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@AAV312@@Z ENDP ; boost::iostreams::detail::unwrap<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
_TEXT	ENDS
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
xdata$x	SEGMENT
__unwindtable$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$1
__catchsym$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$0
__tryblocktable$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$5
__ehfuncinfo$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z
	DD	02H
	DD	FLAT:__tryblocktable$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
xdata$x	ENDS
;	COMDAT ??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_t$ = 8							; size = 4
??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z PROC ; boost::iostreams::detail::close_all<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >, COMDAT

; 50   : { 

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _t$[ebp]

; 51   :     try {
; 52   :         boost::iostreams::close(t, BOOST_IOS::in);

	push	1
	push	esi
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z ; boost::iostreams::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
	add	esp, 8

; 58   :     }
; 59   :     boost::iostreams::close(t, BOOST_IOS::out);

	push	2
	push	esi
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z ; boost::iostreams::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
	add	esp, 8

; 60   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$0:

; 53   :     } catch (...) {
; 54   :         try {
; 55   :             boost::iostreams::close(t, BOOST_IOS::out);

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	2
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z ; boost::iostreams::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN10@close_all:

; 57   :         throw;

	push	0
	push	0
	call	__CxxThrowException@8
$LN232@close_all:
__catch$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z$1:

; 56   :         } catch (...) { }

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN10@close_all
	ret	0
$LN231@close_all:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$close_all@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@12@@Z ENDP ; boost::iostreams::detail::close_all<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\resolve.hpp
;	COMDAT ??$resolve@Uinput@iostreams@boost@@DU?$basic_file_source@D@23@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@PAX@Z
_TEXT	SEGMENT
??$resolve@Uinput@iostreams@boost@@DU?$basic_file_source@D@23@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@PAX@Z PROC ; boost::iostreams::detail::resolve<boost::iostreams::input,char,boost::iostreams::basic_file_source<char> >, COMDAT
; _t$ = eax

; 76   :     typedef typename resolve_traits<Mode, Ch, T>::type return_type;
; 77   :     return return_type(t);
; 78   : }

	ret	0
??$resolve@Uinput@iostreams@boost@@DU?$basic_file_source@D@23@@detail@iostreams@boost@@YAABU?$basic_file_source@D@12@ABU312@PAX@Z ENDP ; boost::iostreams::detail::resolve<boost::iostreams::input,char,boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ??$is_separator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@detail@filesystem@boost@@YA_ND@Z
_TEXT	SEGMENT
_c$ = 8							; size = 1
??$is_separator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@detail@filesystem@boost@@YA_ND@Z PROC ; boost::filesystem::detail::is_separator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT

; 741  :         return c == slash<Path>::value
; 742  : #     ifdef BOOST_WINDOWS_PATH
; 743  :           || c == path_alt_separator<Path>::value
; 744  : #     endif
; 745  :           ;

	mov	al, BYTE PTR _c$[esp-4]
	cmp	al, 47					; 0000002fH
	je	SHORT $LN3@is_separat
	cmp	al, 92					; 0000005cH
	je	SHORT $LN3@is_separat
	xor	eax, eax

; 746  :       }

	ret	0
$LN3@is_separat:

; 741  :         return c == slash<Path>::value
; 742  : #     ifdef BOOST_WINDOWS_PATH
; 743  :           || c == path_alt_separator<Path>::value
; 744  : #     endif
; 745  :           ;

	mov	eax, 1

; 746  :       }

	ret	0
??$is_separator@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@detail@filesystem@boost@@YA_ND@Z ENDP ; boost::filesystem::detail::is_separator<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\ptr_helper.hpp
_TEXT	ENDS
;	COMDAT ?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z
_TEXT	SEGMENT
?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z PROC ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::ref, COMDAT
; _r$ = eax

; 31   :   static reference_type ref(T& r) { return r; }

	ret	0
?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z ENDP ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::ref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z
_TEXT	SEGMENT
?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z PROC ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::ref, COMDAT
; _r$ = eax

; 31   :   static reference_type ref(T& r) { return r; }

	ret	0
?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z ENDP ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::ref
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::base, COMDAT
; _this$ = eax

; 42   :   base_type& base() { return helper_type::ref(_rng); }

	ret	0
?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\ptr_helper.hpp
_TEXT	ENDS
;	COMDAT ?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z
_TEXT	SEGMENT
?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z PROC ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::ref, COMDAT
; _r$ = eax

; 31   :   static reference_type ref(T& r) { return r; }

	ret	0
?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@AAV5234@@Z ENDP ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::ref
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::base, COMDAT
; _this$ = eax

; 42   :   base_type& base() { return helper_type::ref(_rng); }

	ret	0
?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ
_TEXT	SEGMENT
??R?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::operator(), COMDAT
; _this$ = esi

; 45   :   result_type operator()() { return base()(); }

	jmp	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
??R?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::base, COMDAT
; _this$ = eax

; 42   :   base_type& base() { return helper_type::ref(_rng); }

	ret	0
?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEAAV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ?get@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@XZ
_TEXT	SEGMENT
?get@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@XZ PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::get, COMDAT
; _this$ = ecx

; 424  :         return px;

	mov	eax, DWORD PTR [ecx]

; 425  :     }

	ret	0
?get@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@XZ ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::get
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@XZ
_TEXT	SEGMENT
??C?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@XZ PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::operator->, COMDAT
; _this$ = ecx

; 418  :         BOOST_ASSERT(px != 0);
; 419  :         return px;

	mov	eax, DWORD PTR [ecx]

; 420  :     }

	ret	0
??C?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QBEPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@XZ ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::operator->
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ??R?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ
_TEXT	SEGMENT
??R?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::operator(), COMDAT
; _this$ = esi

; 45   :   result_type operator()() { return base()(); }

	jmp	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
??R?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\case_conv.hpp
_TEXT	ENDS
;	COMDAT ??0?$to_lowerF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z
_TEXT	SEGMENT
??0?$to_lowerF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z PROC ; boost::algorithm::detail::to_lowerF<char>::to_lowerF<char>, COMDAT
; _this$ = eax
; _Loc$ = ecx

; 34   :                 to_lowerF( const std::locale& Loc ) : m_Loc( Loc ) {}

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$to_lowerF@D@detail@algorithm@boost@@QAE@ABVlocale@std@@@Z ENDP ; boost::algorithm::detail::to_lowerF<char>::to_lowerF<char>
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
;	COMDAT __real@3ff0000000000000
; File c:\program files\boost\boost_1_40\boost\random\uniform_01.hpp
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?max@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ
_TEXT	SEGMENT
?max@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ PROC ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::max, COMDAT

; 96   :   result_type max BOOST_PREVENT_MACRO_SUBSTITUTION () const { return result_type(1); }

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	ret	0
?max@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ ENDP ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?min@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ
_TEXT	SEGMENT
?min@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ PROC ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::min, COMDAT

; 95   :   result_type min BOOST_PREVENT_MACRO_SUBSTITUTION () const { return result_type(0); }

	xorps	xmm0, xmm0
	ret	0
?min@?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QBENXZ ENDP ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::min
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0clone_base@exception_detail@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0clone_base@exception_detail@boost@@QAE@ABV012@@Z PROC ; boost::exception_detail::clone_base::clone_base, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	ret	4
??0clone_base@exception_detail@boost@@QAE@ABV012@@Z ENDP ; boost::exception_detail::clone_base::clone_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z
_TEXT	SEGMENT
??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z
_TEXT	SEGMENT
??$_Destroy@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z
_TEXT	SEGMENT
??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z PROC ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ENDP ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z
_TEXT	SEGMENT
??$_Destroy@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z
_TEXT	SEGMENT
??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z PROC ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	0
??$?0PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ENDP ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *><boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ??$_Maklocbyte@D@std@@YADDABU_Cvtvec@@@Z
_TEXT	SEGMENT
??$_Maklocbyte@D@std@@YADDABU_Cvtvec@@@Z PROC		; std::_Maklocbyte<char>, COMDAT
; __Char$ = eax

; 581  : 	return ((char)(unsigned char)_Char);
; 582  : 	}

	ret	0
??$_Maklocbyte@D@std@@YADDABU_Cvtvec@@@Z ENDP		; std::_Maklocbyte<char>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$max@N@std@@YAABNABN0@Z
_TEXT	SEGMENT
??$max@N@std@@YAABNABN0@Z PROC				; std::max<double>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 3384 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	movsd	xmm0, QWORD PTR [eax]
	comisd	xmm0, QWORD PTR [ecx]
	ja	SHORT $LN4@max
	mov	eax, ecx
$LN4@max:

; 3385 : 	}

	ret	0
??$max@N@std@@YAABNABN0@Z ENDP				; std::max<double>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z
_TEXT	SEGMENT
?destroy@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::destroy, COMDAT

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	0
?destroy@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z
_TEXT	SEGMENT
?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::destroy, COMDAT

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	0
?destroy@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z
_TEXT	SEGMENT
?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::deallocate, COMDAT
; __Ptr$ = eax

; 140  : 		::operator delete(_Ptr);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	0
?deallocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@ABV01@@Z PROC ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	0
??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
?_Prevnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Prevnode, COMDAT
; __Pnode$ = eax

; 120  : 		return ((_Nodepref)(*_Pnode)._Prev);

	add	eax, 4

; 121  : 		}

	ret	0
?_Prevnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Prevnode
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\ptr_helper.hpp
_TEXT	ENDS
;	COMDAT ?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@ABV534@@Z
_TEXT	SEGMENT
?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@ABV534@@Z PROC ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::ref, COMDAT
; _r$ = eax

; 32   :   static const T& ref(const T& r) { return r; }

	ret	0
?ref@?$ptr_helper@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@ABV534@@Z ENDP ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::ref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ref@?$ptr_helper@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z
_TEXT	SEGMENT
?ref@?$ptr_helper@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z PROC ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::ref, COMDAT
; _r$ = eax

; 42   :   static reference_type ref(T& r) { return r; }

	ret	0
?ref@?$ptr_helper@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@AAV534@@Z ENDP ; boost::random::detail::ptr_helper<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::ref
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@XZ PROC ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAE@XZ ENDP ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\ptr_helper.hpp
_TEXT	ENDS
;	COMDAT ?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z
_TEXT	SEGMENT
?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z PROC ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::ref, COMDAT
; _r$ = eax

; 32   :   static const T& ref(const T& r) { return r; }

	ret	0
?ref@?$ptr_helper@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z ENDP ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::ref
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::base, COMDAT
; _this$ = eax

; 43   :   const base_type& base() const { return helper_type::ref(_rng); }

	ret	0
?base@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\ptr_helper.hpp
_TEXT	ENDS
;	COMDAT ?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z
_TEXT	SEGMENT
?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z PROC ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::ref, COMDAT
; _r$ = eax

; 32   :   static const T& ref(const T& r) { return r; }

	ret	0
?ref@?$ptr_helper@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@SAABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@ABV5234@@Z ENDP ; boost::random::detail::ptr_helper<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::ref
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::base, COMDAT
; _this$ = eax

; 43   :   const base_type& base() const { return helper_type::ref(_rng); }

	mov	eax, DWORD PTR [eax]
	ret	0
?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEABV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\mersenne_twister.hpp
_TEXT	ENDS
;	COMDAT ?max@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ
_TEXT	SEGMENT
?max@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ PROC ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::max, COMDAT

; 112  :     // avoid "left shift count >= with of type" warning
; 113  :     result_type res = 0;

	xor	eax, eax

; 114  :     for(int j = 0; j < w; ++j)

	mov	ecx, 1
	mov	edx, 32					; 00000020H
	npad	4
$LL3@max@2:

; 115  :       res |= (1u << j);

	or	eax, ecx
	rol	ecx, 1
	sub	edx, 1
	jne	SHORT $LL3@max@2

; 116  :     return res;
; 117  :   }

	ret	0
?max@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ ENDP ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?min@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ
_TEXT	SEGMENT
?min@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ PROC ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::min, COMDAT

; 109  :   result_type min BOOST_PREVENT_MACRO_SUBSTITUTION () const { return 0; }

	xor	eax, eax
	ret	0
?min@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QBEKXZ ENDP ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::min
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z
_TEXT	SEGMENT
?_Myval@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Myval, COMDAT
; __Pnode$ = eax

; 125  : 		return ((_Vref)(*_Pnode)._Myval);

	add	eax, 8

; 126  : 		}

	ret	0
?_Myval@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Myval
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::base, COMDAT
; _this$ = eax

; 43   :   const base_type& base() const { return helper_type::ref(_rng); }

	ret	0
?base@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?max@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::max, COMDAT

; 41   :   result_type max BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().max)(); }

	xor	eax, eax
	mov	ecx, 1
	mov	edx, 32					; 00000020H
	npad	4
$LL9@max@3:
	or	eax, ecx
	rol	ecx, 1
	sub	edx, 1
	jne	SHORT $LL9@max@3
	ret	0
?max@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?min@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?min@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::min, COMDAT

; 40   :   result_type min BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().min)(); }

	xor	eax, eax
	ret	0
?min@?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::min
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::base, COMDAT
; _this$ = eax

; 43   :   const base_type& base() const { return helper_type::ref(_rng); }

	ret	0
?base@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@234@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?max@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::max, COMDAT

; 41   :   result_type max BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().max)(); }

	xor	eax, eax
	mov	ecx, 1
	mov	edx, 32					; 00000020H
	npad	4
$LL9@max@4:
	or	eax, ecx
	rol	ecx, 1
	sub	edx, 1
	jne	SHORT $LL9@max@4
	ret	0
?max@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?min@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?min@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::min, COMDAT

; 40   :   result_type min BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().min)(); }

	xor	eax, eax
	ret	0
?min@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::min
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
?_Nextnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Nextnode, COMDAT
; __Pnode$ = eax

; 115  : 		return ((_Nodepref)(*_Pnode)._Next);
; 116  : 		}

	ret	0
?_Nextnode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@KAAAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Nextnode
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ??0?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAE@PAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@23@@Z
_TEXT	SEGMENT
??0?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAE@PAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@23@@Z PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 439  :     chain_client(chain_type* chn = 0) : chain_(chn ) { }

	mov	DWORD PTR [eax], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	mov	DWORD PTR [eax+4], 0
	ret	0
??0?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAE@PAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@23@@Z ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ?max@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?max@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::max, COMDAT

; 41   :   result_type max BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().max)(); }

	xor	eax, eax
	mov	ecx, 1
	mov	edx, 32					; 00000020H
	npad	4
$LL15@max@5:
	or	eax, ecx
	rol	ecx, 1
	sub	edx, 1
	jne	SHORT $LL15@max@5
	ret	0
?max@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?min@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?min@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::min, COMDAT

; 40   :   result_type min BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().min)(); }

	xor	eax, eax
	ret	0
?min@?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::min
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4996
??0?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >, COMDAT
; _this$ = esi

; 38   :   { }

	push	4996					; 00001384H
	lea	eax, DWORD PTR _rng$[esp]
	push	eax
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, esi
	ret	4996					; 00001384H
??0?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?max@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::max, COMDAT

; 41   :   result_type max BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().max)(); }

	xor	eax, eax
	mov	ecx, 1
	mov	edx, 32					; 00000020H
	npad	4
$LL15@max@6:
	or	eax, ecx
	rol	ecx, 1
	sub	edx, 1
	jne	SHORT $LL15@max@6
	ret	0
?max@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?min@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ
_TEXT	SEGMENT
?min@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::min, COMDAT

; 40   :   result_type min BOOST_PREVENT_MACRO_SUBSTITUTION () const { return (base().min)(); }

	xor	eax, eax
	ret	0
?min@?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QBEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::min
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ??C?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QBEPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@XZ
_TEXT	SEGMENT
??C?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QBEPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@XZ PROC ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::operator->, COMDAT
; _this$ = eax

; 418  :         BOOST_ASSERT(px != 0);
; 419  :         return px;

	mov	eax, DWORD PTR [eax]

; 420  :     }

	ret	0
??C?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QBEPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@XZ ENDP ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::operator->
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?register_client@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXPAV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@234@@Z
_TEXT	SEGMENT
?register_client@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXPAV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@234@@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::register_client, COMDAT
; _this$ = eax
; _client$ = edx

; 267  :     void register_client(client_type* client) { pimpl_->client_ = client; }

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+28], edx
	ret	0
?register_client@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXPAV?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@234@@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::register_client
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\signed_unsigned_tools.hpp
_TEXT	ENDS
;	COMDAT ??R?$subtract@H$00@detail@random@boost@@QAEIHH@Z
_TEXT	SEGMENT
??R?$subtract@H$00@detail@random@boost@@QAEIHH@Z PROC	; boost::random::detail::subtract<int,1>::operator(), COMDAT
; _x$ = eax
; _y$ = ecx

; 43   :     if (y >= 0)   // because x >= y, it follows that x >= 0, too
; 44   :       return result_type(x) - result_type(y);
; 45   :     if (x >= 0)   // y < 0
; 46   :       // avoid the nasty two's complement case for y == min()
; 47   :       return result_type(x) + result_type(-(y+1)) + 1;
; 48   :     // both x and y are negative: no signed overflow
; 49   :     return result_type(x - y);

	sub	eax, ecx

; 50   :   }

	ret	0
??R?$subtract@H$00@detail@random@boost@@QAEIHH@Z ENDP	; boost::random::detail::subtract<int,1>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@@Z
_TEXT	SEGMENT
?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0>::_Kfn, COMDAT
; __Val$ = eax

; 65   : 		return (_Val.first);
; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Myval, COMDAT
; __Pnode$ = eax

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	add	eax, 12					; 0000000cH

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Myval
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Right, COMDAT
; __Pnode$ = eax

; 177  : 		return ((_Nodepref)(*_Pnode)._Right);

	add	eax, 8

; 178  : 		}

	ret	0
?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Right
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Parent, COMDAT
; __Pnode$ = eax

; 172  : 		return ((_Nodepref)(*_Pnode)._Parent);

	add	eax, 4

; 173  : 		}

	ret	0
?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Parent
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Left, COMDAT
; __Pnode$ = eax

; 167  : 		return ((_Nodepref)(*_Pnode)._Left);
; 168  : 		}

	ret	0
?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Left
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Isnil, COMDAT
; __Pnode$ = eax

; 157  : 		return ((_Charref)(*_Pnode)._Isnil);

	add	eax, 45					; 0000002dH

; 158  : 		}

	ret	0
?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Isnil
_TEXT	ENDS
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_01.hpp
;	COMDAT ??0?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z
_TEXT	SEGMENT
tv177 = 8						; size = 4
_this$ = 8						; size = 4
??0?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z PROC ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>, COMDAT
; _rng$ = edx

; 91   :   {

	push	ebx
	mov	ebx, DWORD PTR _this$[esp]
	push	esi
	push	edi
	mov	eax, 4996				; 00001384H
	call	__chkstk
	mov	esi, edx
	mov	edi, esp
	mov	ecx, 1249				; 000004e1H
	rep movsd
	mov	esi, ebx
	call	??0?$pass_through_engine@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> > >
	xor	ecx, ecx
	mov	eax, 1
	mov	edx, 32					; 00000020H
	npad	1
$LL17@backward_c:
	or	ecx, eax
	rol	eax, 1
	sub	edx, 1
	jne	SHORT $LL17@backward_c
	mov	DWORD PTR tv177[esp+8], ecx
	fild	DWORD PTR tv177[esp+8]
	test	ecx, ecx
	jge	SHORT $LN36@backward_c
	fadd	QWORD PTR __real@41f0000000000000
$LN36@backward_c:
	fld1

; 92   :   }

	pop	edi
	fadd	ST(1), ST(0)
	pop	esi
	mov	eax, ebx
	fdivrp	ST(1), ST(0)
	fstp	QWORD PTR [ebx+5000]
	pop	ebx
	ret	4
??0?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z ENDP ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?empty@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NXZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::empty, COMDAT
; _this$ = ecx

; 630  : 		return (_Mysize == 0);

	xor	eax, eax
	cmp	DWORD PTR [ecx+24], eax
	sete	al

; 631  : 		}

	ret	0
?empty@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NXZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::empty
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEABV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ
_TEXT	SEGMENT
?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEABV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::list, COMDAT
; _this$ = eax

; 266  :     const list_type& list() const { return pimpl_->links_; }

	mov	eax, DWORD PTR [eax]
	ret	0
?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@ABEABV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::list
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ
_TEXT	SEGMENT
?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::list, COMDAT
; _this$ = eax

; 265  :     list_type& list() { return pimpl_->links_; }

	mov	eax, DWORD PTR [eax]
	ret	0
?list@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@XZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::list
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?set_chain@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXPAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@34@@Z
_TEXT	SEGMENT
?set_chain@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXPAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@34@@Z PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::set_chain, COMDAT
; _this$ = ecx
; _c$ = eax

; 490  :     { chain_ = c; chain_->register_client(this); }

	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+28], ecx
	ret	0
?set_chain@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXPAV?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@34@@Z ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::set_chain
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ?add_ref@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ
_TEXT	SEGMENT
?add_ref@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ PROC ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::add_ref, COMDAT
; _this$ = ecx

; 65   :                 if( px_ )

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN1@add_ref

; 66   :                     px_->add_ref();

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	jmp	edx
$LN1@add_ref:

; 67   :                 }

	ret	0
?add_ref@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ ENDP ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::add_ref
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\linked_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?set_next@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@MAEXPAV1234@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?set_next@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@MAEXPAV1234@@Z PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_next, COMDAT
; _this$ = ecx

; 89   :     virtual void set_next(linked_streambuf<Ch, Tr>* /* next */) { }

	ret	4
?set_next@?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@MAEXPAV1234@@Z ENDP ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::set_next
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ??0?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT
??0?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z PROC ; std::istreambuf_iterator<char,std::char_traits<char> >::istreambuf_iterator<char,std::char_traits<char> >, COMDAT
; _this$ = eax
; __Sb$ = ecx

; 464  : 		{	// construct from stream buffer _Sb

	test	ecx, ecx
	mov	DWORD PTR [eax], ecx
	sete	cl
	mov	BYTE PTR [eax+4], cl

; 465  : 		}

	ret	0
??0?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ENDP ; std::istreambuf_iterator<char,std::char_traits<char> >::istreambuf_iterator<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
_TEXT	ENDS
;	COMDAT ?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
__State$ = 12						; size = 4
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Val$ = edx

; 339  : 		return (do_get(_First, _Last, _Iosbase, _State, _Val));

	mov	eax, DWORD PTR [ecx]
	push	edx
	mov	edx, DWORD PTR __State$[esp]
	mov	eax, DWORD PTR [eax+12]
	push	edx
	mov	edx, DWORD PTR __Iosbase$[esp+4]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+20]
	push	edx
	mov	edx, DWORD PTR __First$[esp+20]
	push	edx
	push	esi
	call	eax
	mov	eax, esi

; 340  : 		}

	ret	24					; 00000018H
?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
__State$ = 12						; size = 4
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Val$ = edx

; 324  : 		return (do_get(_First, _Last, _Iosbase, _State, _Val));

	mov	eax, DWORD PTR [ecx]
	push	edx
	mov	edx, DWORD PTR __State$[esp]
	mov	eax, DWORD PTR [eax+20]
	push	edx
	mov	edx, DWORD PTR __Iosbase$[esp+4]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+20]
	push	edx
	mov	edx, DWORD PTR __First$[esp+20]
	push	edx
	push	esi
	call	eax
	mov	eax, esi

; 325  : 		}

	ret	24					; 00000018H
?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
__State$ = 12						; size = 4
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; __Val$ = edx

; 317  : 		return (do_get(_First, _Last, _Iosbase, _State, _Val));

	mov	eax, DWORD PTR [ecx]
	push	edx
	mov	edx, DWORD PTR __State$[esp]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	mov	edx, DWORD PTR __Iosbase$[esp+4]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+20]
	push	edx
	mov	edx, DWORD PTR __First$[esp+20]
	push	edx
	push	esi
	call	eax
	mov	eax, esi

; 318  : 		}

	ret	24					; 00000018H
?get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::get
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::size, COMDAT
; _this$ = eax

; 726  : 		return (_Mylast - _Myfirst);

	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR [eax+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 727  : 		}

	ret	0
?size@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEIXZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::size
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@3@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = eax

; 410  : 			return (_Ptr);

	mov	eax, DWORD PTR [eax+4]

; 411  : 			}

	ret	0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Key, COMDAT
; __Pnode$ = eax

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	add	eax, 12					; 0000000cH

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_01.hpp
_TEXT	ENDS
;	COMDAT ??0?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z
_TEXT	SEGMENT
??0?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z PROC ; boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>, COMDAT
; _this$ = esi
; _rng$ = edx

; 196  :   {

	push	esi
	call	??0?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>

; 197  :   }

	mov	eax, esi
	ret	0
??0?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z ENDP ; boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ??0?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4996
??0?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >, COMDAT
; _this$ = esi

; 38   :   { }

	push	4996					; 00001384H
	lea	eax, DWORD PTR _rng$[esp]
	push	eax
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, esi
	ret	4996					; 00001384H
??0?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4
??0?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >, COMDAT
; _this$ = eax

; 38   :   { }

	mov	ecx, DWORD PTR _rng$[esp-4]
	mov	DWORD PTR [eax], ecx
	ret	4
??0?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAE@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@123@@Z ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z
_TEXT	SEGMENT
??0?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>, COMDAT
; _this$ = eax
; _rng$ = ecx

; 38   :   { }

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ?init@?$uniform_int@H@boost@@AAEXXZ
_TEXT	SEGMENT
?init@?$uniform_int@H@boost@@AAEXXZ PROC		; boost::uniform_int<int>::init, COMDAT
; _this$ = ecx

; 253  :     _range = random::detail::subtract<result_type>()(_max, _min);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, edx
	mov	DWORD PTR [ecx+8], eax

; 254  :   }

	ret	0
?init@?$uniform_int@H@boost@@AAEXXZ ENDP		; boost::uniform_int<int>::init
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\mersenne_twister.hpp
_TEXT	ENDS
;	COMDAT ?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z
_TEXT	SEGMENT
?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z PROC ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::seed, COMDAT
; _this$ = eax
; _value$ = ecx

; 72   :     // New seeding algorithm from 
; 73   :     // http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html
; 74   :     // In the previous versions, MSBs of the seed affected only MSBs of the
; 75   :     // state x[].
; 76   :     const UIntType mask = ~0u;
; 77   :     x[0] = value & mask;

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 78   :     for (i = 1; i < n; i++) {

	mov	DWORD PTR [eax+4992], 1
	push	ebx
	npad	1
$LL3@seed:

; 79   :       // See Knuth "The Art of Computer Programming" Vol. 2, 3rd ed., page 106
; 80   :       x[i] = (1812433253UL * (x[i-1] ^ (x[i-1] >> (w-2))) + i) & mask;

	mov	ecx, DWORD PTR [eax+4992]
	mov	edx, DWORD PTR [eax+ecx*4-4]
	mov	ebx, edx
	shr	ebx, 30					; 0000001eH
	xor	ebx, edx
	imul	ebx, 1812433253				; 6c078965H
	add	ebx, ecx
	mov	DWORD PTR [eax+ecx*4], ebx
	inc	DWORD PTR [eax+4992]
	cmp	DWORD PTR [eax+4992], 624		; 00000270H
	jl	SHORT $LL3@seed
	pop	ebx

; 81   :     }
; 82   :   }

	ret	0
?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z ENDP ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::seed
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?empty@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::empty, COMDAT
; _this$ = eax

; 210  :     bool empty() const { return list().empty(); }

	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	DWORD PTR [ecx+24], eax
	sete	al
	ret	0
?empty@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::empty
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??0?$fpos@H@std@@QAE@J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx

; 54   : 		{	// construct with stream offset

	mov	eax, ecx
	mov	ecx, DWORD PTR __Off$[esp-4]
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx

; 55   : 		}

	ret	4
??0?$fpos@H@std@@QAE@J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ?release@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ
_TEXT	SEGMENT
?release@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ PROC ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::release, COMDAT
; _this$ = ecx

; 72   :                 if( px_ )

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN1@release

; 73   :                     px_->release();

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	jmp	edx
$LN1@release:

; 74   :                 }

	ret	0
?release@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ ENDP ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?adopt@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEXPAUerror_info_container@23@@Z
_TEXT	SEGMENT
_px$ = 8						; size = 4
?adopt@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEXPAUerror_info_container@23@@Z PROC ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt, COMDAT
; _this$ = ecx

; 46   :                 {

	push	esi
	mov	esi, ecx

; 47   :                 release();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN3@adopt
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN3@adopt:

; 48   :                 px_=px;

	mov	ecx, DWORD PTR _px$[esp]
	mov	DWORD PTR [esi], ecx
	pop	esi

; 49   :                 add_ref();

	test	ecx, ecx
	je	SHORT $LN6@adopt
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
$LN6@adopt:

; 50   :                 }

	ret	4
?adopt@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEXPAUerror_info_container@23@@Z ENDP ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::adopt
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pbump, COMDAT
; _this$ = ecx

; 251  : 		*_IPcount -= _Off;

	mov	eax, DWORD PTR [ecx+52]
	mov	edx, DWORD PTR __Off$[esp-4]
	sub	DWORD PTR [eax], edx

; 252  : 		*_IPnext += _Off;

	mov	ecx, DWORD PTR [ecx+36]
	add	DWORD PTR [ecx], edx

; 253  : 		}

	ret	4
?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pbump
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEHXZ
_TEXT	SEGMENT
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail, COMDAT
; _this$ = ecx

; 246  : 		return (*_IGnext != 0 ? *_IGcount : 0);

	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Gnavail
	mov	ecx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [ecx]

; 247  : 		}

	ret	0
$LN3@Gnavail:

; 246  : 		return (*_IGnext != 0 ? *_IGcount : 0);

	xor	eax, eax

; 247  : 		}

	ret	0
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc, COMDAT
; _this$ = eax

; 240  : 		--*_IGcount;

	mov	ecx, DWORD PTR [eax+48]
	dec	DWORD PTR [ecx]

; 241  : 		return (++(*_IGnext));

	mov	ecx, DWORD PTR [eax+32]
	inc	DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [eax]

; 242  : 		}

	ret	0
?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gnpreinc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc, COMDAT
; _this$ = ecx

; 234  : 		--*_IGcount;

	mov	eax, DWORD PTR [ecx+48]
	dec	DWORD PTR [eax]

; 235  : 		return ((*_IGnext)++);

	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx

; 236  : 		}

	ret	0
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Gninc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::gbump, COMDAT
; _this$ = ecx

; 210  : 		*_IGcount -= _Off;

	mov	eax, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR __Off$[esp-4]
	sub	DWORD PTR [eax], edx

; 211  : 		*_IGnext += _Off;

	mov	ecx, DWORD PTR [ecx+32]
	add	DWORD PTR [ecx], edx

; 212  : 		}

	ret	4
?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::gbump
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pptr, COMDAT
; _this$ = ecx

; 200  : 		return (*_IPnext);

	mov	eax, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]

; 201  : 		}

	ret	0
?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::gptr, COMDAT
; _this$ = ecx

; 190  : 		return (*_IGnext);

	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]

; 191  : 		}

	ret	0
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::gptr
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@I@Z
_TEXT	SEGMENT
??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@I@Z PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator[], COMDAT
; _this$ = esi
; __Pos$ = edi

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	edi, eax
	jb	SHORT $LN1@operator@20
	call	__invalid_parameter_noinfo
$LN1@operator@20:

; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, edi
	imul	eax, 456				; 000001c8H
	add	eax, DWORD PTR [esi+12]

; 771  : 		}

	ret	0
??A?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@I@Z ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\variate_generator.hpp
_TEXT	ENDS
;	COMDAT ??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_int@H@1@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 12
??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_int@H@1@@Z PROC ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >, COMDAT
; _this$ = eax
; _e$ = ecx

; 98   :     : _eng(decorated_engine(e)), _dist(d) { }

	movq	xmm0, QWORD PTR _d$[esp-4]
	mov	edx, DWORD PTR _d$[esp+4]
	movq	QWORD PTR [eax+4], xmm0
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+12], edx
	ret	12					; 0000000cH
??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_int@H@1@@Z ENDP ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\normal_distribution.hpp
_TEXT	ENDS
;	COMDAT ??0?$normal_distribution@N@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$normal_distribution@N@boost@@QAE@ABV01@@Z PROC	; boost::normal_distribution<double>::normal_distribution<double>, COMDAT
; _this$ = eax
; _other$ = ecx

; 50   :   {

	fld	QWORD PTR [ecx]
	fstp	QWORD PTR [eax]
	fld	QWORD PTR [ecx+8]
	mov	BYTE PTR [eax+40], 0
	fstp	QWORD PTR [eax+8]

; 51   :   }

	ret	0
??0?$normal_distribution@N@boost@@QAE@ABV01@@Z ENDP	; boost::normal_distribution<double>::normal_distribution<double>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$normal_distribution@N@boost@@QAE@ABN0@Z
_TEXT	SEGMENT
_sigma_arg$ = 8						; size = 4
??0?$normal_distribution@N@boost@@QAE@ABN0@Z PROC	; boost::normal_distribution<double>::normal_distribution<double>, COMDAT
; _this$ = eax
; _mean_arg$ = ecx

; 43   :   {

	fld	QWORD PTR [ecx]
	mov	edx, DWORD PTR _sigma_arg$[esp-4]
	fstp	QWORD PTR [eax]
	fld	QWORD PTR [edx]
	mov	BYTE PTR [eax+40], 0
	fstp	QWORD PTR [eax+8]

; 44   :     assert(_sigma >= result_type(0));
; 45   :   }

	ret	4
??0?$normal_distribution@N@boost@@QAE@ABN0@Z ENDP	; boost::normal_distribution<double>::normal_distribution<double>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ??0?$uniform_int@H@boost@@QAE@HH@Z
_TEXT	SEGMENT
??0?$uniform_int@H@boost@@QAE@HH@Z PROC			; boost::uniform_int<int>::uniform_int<int>, COMDAT
; _this$ = eax
; _max_arg$ = ecx

; 43   :   {

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], ecx

; 44   : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 45   :     // MSVC fails BOOST_STATIC_ASSERT with std::numeric_limits at class scope
; 46   :     BOOST_STATIC_ASSERT(std::numeric_limits<IntType>::is_integer);
; 47   : #endif
; 48   :     assert(min_arg <= max_arg);
; 49   :     init();

	mov	DWORD PTR [eax+8], ecx

; 50   :   }

	ret	0
??0?$uniform_int@H@boost@@QAE@HH@Z ENDP			; boost::uniform_int<int>::uniform_int<int>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_real.hpp
_TEXT	ENDS
;	COMDAT ??0?$uniform_real@N@boost@@QAE@NN@Z
_TEXT	SEGMENT
_max_arg$ = 8						; size = 8
??0?$uniform_real@N@boost@@QAE@NN@Z PROC		; boost::uniform_real<double>::uniform_real<double>, COMDAT
; _this$ = eax
; _min_arg$ = xmm0l

; 40   :   {

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR _max_arg$[esp-4]
	movsd	QWORD PTR [eax+8], xmm0

; 41   : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 42   :     BOOST_STATIC_ASSERT(!std::numeric_limits<RealType>::is_integer);
; 43   : #endif
; 44   :     assert(min_arg <= max_arg);
; 45   :   }

	ret	8
??0?$uniform_real@N@boost@@QAE@NN@Z ENDP		; boost::uniform_real<double>::uniform_real<double>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\mersenne_twister.hpp
_TEXT	ENDS
;	COMDAT ??0?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAE@ABK@Z
_TEXT	SEGMENT
??0?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAE@ABK@Z PROC ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>, COMDAT
; _this$ = esi
; _value$ = ecx

; 59   :   BOOST_RANDOM_DETAIL_ARITHMETIC_CONSTRUCTOR(mersenne_twister, UIntType, value)

	mov	eax, esi
	call	?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::seed

; 60   :   { seed(value); }

	mov	eax, esi
	ret	0
??0?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAE@ABK@Z ENDP ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?notify@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@MAEXXZ
_TEXT	SEGMENT
?notify@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@MAEXXZ PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::notify, COMDAT
; _this$ = ecx

; 498  :     virtual void notify() { }

	ret	0
?notify@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@MAEXXZ ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::notify
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::~chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 441  :     virtual ~chain_client() { }

	mov	DWORD PTR [ecx], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	ret	0
??1?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::~chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ??B?$fpos@H@std@@QBEJXZ
_TEXT	SEGMENT
??B?$fpos@H@std@@QBEJXZ PROC				; std::fpos<int>::operator long, COMDAT
; _this$ = ecx

; 79   : 		return ((streamoff)(_Myoff + _FPOSOFF(_Fpos)));

	mov	eax, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [ecx]

; 80   : 		}

	ret	0
??B?$fpos@H@std@@QBEJXZ ENDP				; std::fpos<int>::operator long
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekpos@?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
?seekpos@?$fpos@H@std@@QBE_JXZ PROC			; std::fpos<int>::seekpos, COMDAT
; _this$ = ecx

; 74   : 		return (_Fpos);

	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]

; 75   : 		}

	ret	0
?seekpos@?$fpos@H@std@@QBE_JXZ ENDP			; std::fpos<int>::seekpos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@H_J@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Fileposition$ = 12					; size = 8
??0?$fpos@H@std@@QAE@H_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx

; 59   : 		{	// construct with conversion state and C file position

	mov	edx, DWORD PTR __Fileposition$[esp]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Fileposition$[esp-4]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR __State$[esp-4]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx

; 60   : 		}

	ret	12					; 0000000cH
??0?$fpos@H@std@@QAE@H_J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ?string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::string, COMDAT
; _this$ = ecx

; 236  :       const string_type & string() const         { return m_path; }

	mov	eax, ecx
	ret	0
?string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::string
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ??4?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??4?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEAAV012@ABV012@@Z PROC ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::operator=, COMDAT
; _this$ = ecx

; 40   :                 adopt(x.px_);

	mov	eax, DWORD PTR _x$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@operator@21
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN5@operator@21:
	mov	DWORD PTR [esi], edi
	test	edi, edi
	je	SHORT $LN11@operator@21
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, edi
	call	eax
$LN11@operator@21:
	pop	edi

; 41   :                 return *this;

	mov	eax, esi
	pop	esi

; 42   :                 }

	ret	4
??4?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEAAV012@ABV012@@Z ENDP ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::operator=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ PROC ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr<boost::exception_detail::error_info_container>, COMDAT
; _this$ = ecx

; 28   :                 release();

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN3@refcount_p
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	jmp	edx
$LN3@refcount_p:

; 29   :                 }

	ret	0
??1?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ ENDP ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::~refcount_ptr<boost::exception_detail::error_info_container>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ PROC ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::refcount_ptr<boost::exception_detail::error_info_container>, COMDAT
; _this$ = ecx

; 23   :                 {

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 24   :                 }

	ret	0
??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ ENDP ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::refcount_ptr<boost::exception_detail::error_info_container>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx

; 414  : 		}

	ret	4
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::imbue
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx

; 409  : 		return (0);

	xor	eax, eax

; 410  : 		}

	ret	0
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sync
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx

; 403  : 		{	// offer buffer to external agent (do nothing)

	mov	eax, ecx

; 404  : 		return (this);
; 405  : 		}

	ret	8
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx

; 399  : 		return (streampos(_BADOFF));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx

; 400  : 		}

	ret	32					; 00000020H
?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::seekpos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx

; 393  : 		return (streampos(_BADOFF));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx

; 394  : 		}

	ret	16					; 00000010H
?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::seekoff
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn, COMDAT
; _this$ = ecx

; 326  : 		// assume the destination buffer is large enough
; 327  : 		return _Xsgetn_s(_Ptr, (size_t)-1, _Count);

	mov	edx, DWORD PTR __Count$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+28]
	push	edx
	mov	edx, DWORD PTR __Ptr$[esp]
	push	-1
	push	edx
	call	eax

; 328  : 		}

	ret	8
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc, COMDAT
; _this$ = ecx

; 308  : 		return (0);

	xor	eax, eax

; 309  : 		}

	ret	0
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = eax

; 81   : 			return (_Ok);

	mov	al, BYTE PTR [eax+4]

; 82   : 			}

	ret	0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
_TEXT	SEGMENT
__Pfn$ = 8						; size = 4
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z PROC ; std::basic_istream<char,std::char_traits<char> >::operator>>, COMDAT
; _this$ = esi

; 170  : 		_DEBUG_POINTER(_Pfn);
; 171  : 		(*_Pfn)(*(ios_base *)this);

	test	esi, esi
	jne	SHORT $LN3@operator@22
	xor	eax, eax
	push	eax
	call	DWORD PTR __Pfn$[esp]
	add	esp, 4

; 172  : 		return (*this);

	mov	eax, esi

; 173  : 		}

	ret	4
$LN3@operator@22:

; 170  : 		_DEBUG_POINTER(_Pfn);
; 171  : 		(*_Pfn)(*(ios_base *)this);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	add	eax, esi
	push	eax
	call	DWORD PTR __Pfn$[esp]
	add	esp, 4

; 172  : 		return (*this);

	mov	eax, esi

; 173  : 		}

	ret	4
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 42   : 		{	// destroy the object

	mov	eax, DWORD PTR [ecx-8]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-8], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@

; 43   : 		}

	ret	0
??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT
; _this$ = ecx

; 1705 : 		return (_Mysize == 0);

	xor	eax, eax
	cmp	DWORD PTR [ecx+20], eax
	sete	al

; 1706 : 		}

	ret	0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT
; _this$ = ecx

; 1661 : 		return (_Mysize);

	mov	eax, DWORD PTR [ecx+20]

; 1662 : 		}

	ret	0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@ABV01@@Z PROC ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >, COMDAT
; _this$ = esi
; ___that$ = edi
	push	5008					; 00001390H
	push	edi
	push	esi
	call	_memcpy
	fld	QWORD PTR [edi+5008]
	fstp	QWORD PTR [esi+5008]
	add	esp, 12					; 0000000cH
	fld	QWORD PTR [edi+5016]
	mov	BYTE PTR [esi+5048], 0
	fstp	QWORD PTR [esi+5016]
	mov	eax, esi
	ret	0
??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@ABV01@@Z ENDP ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\rank.h
_TEXT	ENDS
;	COMDAT ?getLastBankID@Rank@DRAMsimII@@QBEIXZ
_TEXT	SEGMENT
?getLastBankID@Rank@DRAMsimII@@QBEIXZ PROC		; DRAMsimII::Rank::getLastBankID, COMDAT
; _this$ = eax

; 111  : 		unsigned getLastBankID() const { return lastBankID; }

	mov	eax, DWORD PTR [eax+140]
	ret	0
?getLastBankID@Rank@DRAMsimII@@QBEIXZ ENDP		; DRAMsimII::Rank::getLastBankID
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\bank.h
_TEXT	ENDS
;	COMDAT ?getOpenRowID@Bank@DRAMsimII@@QBEIXZ
_TEXT	SEGMENT
?getOpenRowID@Bank@DRAMsimII@@QBEIXZ PROC		; DRAMsimII::Bank::getOpenRowID, COMDAT
; _this$ = eax

; 94   : 		unsigned getOpenRowID() const { return openRowID; }

	mov	eax, DWORD PTR [eax+128]
	ret	0
?getOpenRowID@Bank@DRAMsimII@@QBEIXZ ENDP		; DRAMsimII::Bank::getOpenRowID
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\systemconfiguration.h
_TEXT	ENDS
;	COMDAT ?Frequency@SystemConfiguration@DRAMsimII@@QBENXZ
_TEXT	SEGMENT
?Frequency@SystemConfiguration@DRAMsimII@@QBENXZ PROC	; DRAMsimII::SystemConfiguration::Frequency, COMDAT
; _this$ = eax

; 111  : 		double Frequency() const { return datarate; }

	movsd	xmm0, QWORD PTR [eax+336]
	ret	0
?Frequency@SystemConfiguration@DRAMsimII@@QBENXZ ENDP	; DRAMsimII::SystemConfiguration::Frequency
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\positioning.hpp
_TEXT	ENDS
;	COMDAT ?streampos_to_fpos_t@iostreams@boost@@YA_JV?$fpos@H@std@@@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 24
?streampos_to_fpos_t@iostreams@boost@@YA_JV?$fpos@H@std@@@Z PROC ; boost::iostreams::streampos_to_fpos_t, COMDAT

; 95   : #  if defined (_CPPLIB_VER) || defined(__IBMCPP__)
; 96   :     return pos.seekpos();

	mov	eax, DWORD PTR _pos$[esp+4]
	mov	edx, DWORD PTR _pos$[esp+8]

; 97   : #  else
; 98   :     return pos.get_fpos_t();
; 99   : #  endif
; 100  : }

	ret	0
?streampos_to_fpos_t@iostreams@boost@@YA_JV?$fpos@H@std@@@Z ENDP ; boost::iostreams::streampos_to_fpos_t
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?fpos_t_to_offset@iostreams@boost@@YA_J_J@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 8
?fpos_t_to_offset@iostreams@boost@@YA_J_J@Z PROC	; boost::iostreams::fpos_t_to_offset, COMDAT

; 85   : #  if defined(_POSIX_) || (_INTEGRAL_MAX_BITS >= 64) || defined(__IBMCPP__)
; 86   :     return pos;

	mov	eax, DWORD PTR _pos$[esp-4]
	mov	edx, DWORD PTR _pos$[esp]

; 87   : #  else
; 88   :     return _FPOSOFF(pos);
; 89   : #  endif
; 90   : }

	ret	0
?fpos_t_to_offset@iostreams@boost@@YA_J_J@Z ENDP	; boost::iostreams::fpos_t_to_offset
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?offset_to_position@iostreams@boost@@YA?AV?$fpos@H@std@@_J@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
?offset_to_position@iostreams@boost@@YA?AV?$fpos@H@std@@_J@Z PROC ; boost::iostreams::offset_to_position, COMDAT
; ___$ReturnUdt$ = eax

; 52   : { return std::streampos(std::mbstate_t(), off); }

	mov	ecx, DWORD PTR _off$[esp-4]
	mov	edx, DWORD PTR _off$[esp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], 0
	ret	0
?offset_to_position@iostreams@boost@@YA?AV?$fpos@H@std@@_J@Z ENDP ; boost::iostreams::offset_to_position
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\operations.hpp
_TEXT	ENDS
;	COMDAT ?type@file_status@filesystem@boost@@QBE?AW4file_type@23@XZ
_TEXT	SEGMENT
?type@file_status@filesystem@boost@@QBE?AW4file_type@23@XZ PROC ; boost::filesystem::file_status::type, COMDAT
; _this$ = ecx

; 96   :       file_type type() const    { return m_value; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?type@file_status@filesystem@boost@@QBE?AW4file_type@23@XZ ENDP ; boost::filesystem::file_status::type
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\time.inl
_TEXT	ENDS
_TEXT	SEGMENT
_time	PROC

; 135  :     return _time64(_Time);

	push	0
	call	__time64
	add	esp, 4

; 136  : }

	ret	0
_time	ENDP
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ?sp_enable_shared_from_this@detail@boost@@YAXZZ
_TEXT	SEGMENT
?sp_enable_shared_from_this@detail@boost@@YAXZZ PROC	; boost::detail::sp_enable_shared_from_this, COMDAT

; 138  : }

	ret	0
?sp_enable_shared_from_this@detail@boost@@YAXZZ ENDP	; boost::detail::sp_enable_shared_from_this
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\shared_count.hpp
_TEXT	ENDS
;	COMDAT ?swap@shared_count@detail@boost@@QAEXAAV123@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
?swap@shared_count@detail@boost@@QAEXAAV123@@Z PROC	; boost::detail::shared_count::swap, COMDAT
; _this$ = ecx

; 262  :         sp_counted_base * tmp = r.pi_;

	mov	eax, DWORD PTR _r$[esp-4]
	mov	edx, DWORD PTR [eax]
	push	esi

; 263  :         r.pi_ = pi_;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi

; 264  :         pi_ = tmp;

	mov	DWORD PTR [ecx], edx
	pop	esi

; 265  :     }

	ret	4
?swap@shared_count@detail@boost@@QAEXAAV123@@Z ENDP	; boost::detail::shared_count::swap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0shared_count@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??0shared_count@detail@boost@@QAE@XZ PROC		; boost::detail::shared_count::shared_count, COMDAT
; _this$ = ecx

; 75   :     {

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 76   :     }

	ret	0
??0shared_count@detail@boost@@QAE@XZ ENDP		; boost::detail::shared_count::shared_count
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_base_w32.hpp
_TEXT	ENDS
;	COMDAT ?weak_release@sp_counted_base@detail@boost@@QAEXXZ
_TEXT	SEGMENT
?weak_release@sp_counted_base@detail@boost@@QAEXXZ PROC	; boost::detail::sp_counted_base::weak_release, COMDAT
; _this$ = ecx

; 114  :         if( BOOST_INTERLOCKED_DECREMENT( &weak_count_ ) == 0 )

	lea	eax, DWORD PTR [ecx+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [eax], edx
	jne	SHORT $LN1@weak_relea

; 115  :         {
; 116  :             destroy();

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	jmp	edx
$LN1@weak_relea:

; 117  :         }
; 118  :     }

	ret	0
?weak_release@sp_counted_base@detail@boost@@QAEXXZ ENDP	; boost::detail::sp_counted_base::weak_release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?release@sp_counted_base@detail@boost@@QAEXXZ
_TEXT	SEGMENT
?release@sp_counted_base@detail@boost@@QAEXXZ PROC	; boost::detail::sp_counted_base::release, COMDAT
; _this$ = ecx

; 99   :     {

	push	esi
	mov	esi, ecx

; 100  :         if( BOOST_INTERLOCKED_DECREMENT( &use_count_ ) == 0 )

	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN4@release@2

; 101  :         {
; 102  :             dispose();

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax

; 103  :             weak_release();

	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN4@release@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	pop	esi
	jmp	edx
$LN4@release@2:
	pop	esi

; 104  :         }
; 105  :     }

	ret	0
?release@sp_counted_base@detail@boost@@QAEXXZ ENDP	; boost::detail::sp_counted_base::release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?add_ref_copy@sp_counted_base@detail@boost@@QAEXXZ
_TEXT	SEGMENT
?add_ref_copy@sp_counted_base@detail@boost@@QAEXXZ PROC	; boost::detail::sp_counted_base::add_ref_copy, COMDAT
; _this$ = ecx

; 73   :         BOOST_INTERLOCKED_INCREMENT( &use_count_ );

	add	ecx, 4
	mov	eax, 1
	lock	 xadd	 DWORD PTR [ecx], eax

; 74   :     }

	ret	0
?add_ref_copy@sp_counted_base@detail@boost@@QAEXXZ ENDP	; boost::detail::sp_counted_base::add_ref_copy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?destroy@sp_counted_base@detail@boost@@UAEXXZ
_TEXT	SEGMENT
?destroy@sp_counted_base@detail@boost@@UAEXXZ PROC	; boost::detail::sp_counted_base::destroy, COMDAT
; _this$ = ecx

; 66   :         delete this;

	test	ecx, ecx
	je	SHORT $LN3@destroy
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN3@destroy:

; 67   :     }

	ret	0
?destroy@sp_counted_base@detail@boost@@UAEXXZ ENDP	; boost::detail::sp_counted_base::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1sp_counted_base@detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1sp_counted_base@detail@boost@@UAE@XZ PROC		; boost::detail::sp_counted_base::~sp_counted_base, COMDAT
; _this$ = ecx

; 54   :     {

	mov	DWORD PTR [ecx], OFFSET ??_7sp_counted_base@detail@boost@@6B@

; 55   :     }

	ret	0
??1sp_counted_base@detail@boost@@UAE@XZ ENDP		; boost::detail::sp_counted_base::~sp_counted_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0sp_counted_base@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??0sp_counted_base@detail@boost@@QAE@XZ PROC		; boost::detail::sp_counted_base::sp_counted_base, COMDAT
; _this$ = ecx

; 50   :     {

	mov	eax, ecx
	mov	ecx, 1
	mov	DWORD PTR [eax], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx

; 51   :     }

	ret	0
??0sp_counted_base@detail@boost@@QAE@XZ ENDP		; boost::detail::sp_counted_base::sp_counted_base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\throw_exception.hpp
_TEXT	ENDS
;	COMDAT ?throw_exception_assert_compatibility@boost@@YAXABVexception@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?throw_exception_assert_compatibility@boost@@YAXABVexception@std@@@Z PROC ; boost::throw_exception_assert_compatibility, COMDAT

; 55   : inline void throw_exception_assert_compatibility( std::exception const & ) { }

	ret	0
?throw_exception_assert_compatibility@boost@@YAXABVexception@std@@@Z ENDP ; boost::throw_exception_assert_compatibility
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4exception@boost@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4exception@boost@@QAEAAV01@ABV01@@Z PROC		; boost::exception::operator=, COMDAT
; _this$ = ecx
	push	ebx
	mov	ebx, DWORD PTR ___that$[esp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR [ebx+4]
	test	ecx, ecx
	je	SHORT $LN7@operator@23
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN7@operator@23:
	mov	DWORD PTR [esi+4], edi
	test	edi, edi
	je	SHORT $LN10@operator@23
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+12]
	mov	ecx, edi
	call	edx
$LN10@operator@23:
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR [esi+8], eax
	mov	ecx, DWORD PTR [ebx+12]
	mov	DWORD PTR [esi+12], ecx
	mov	edx, DWORD PTR [ebx+16]
	pop	edi
	mov	DWORD PTR [esi+16], edx
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??4exception@boost@@QAEAAV01@ABV01@@Z ENDP		; boost::exception::operator=
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ?copy_boost_exception@exception_detail@boost@@YAXPAVexception@2@PBV32@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?copy_boost_exception@exception_detail@boost@@YAXPAVexception@2@PBV32@@Z PROC ; boost::exception_detail::copy_boost_exception, COMDAT

; 342  :             {

	push	ebx

; 343  :             *a = *b;

	mov	ebx, DWORD PTR _b$[esp]
	push	esi
	mov	esi, DWORD PTR _a$[esp+4]
	mov	ecx, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR [ebx+4]
	test	ecx, ecx
	je	SHORT $LN9@copy_boost@8
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN9@copy_boost@8:
	mov	DWORD PTR [esi+4], edi
	test	edi, edi
	je	SHORT $LN12@copy_boost@8
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+12]
	mov	ecx, edi
	call	edx
$LN12@copy_boost@8:
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR [esi+8], eax
	mov	ecx, DWORD PTR [ebx+12]
	mov	DWORD PTR [esi+12], ecx
	mov	edx, DWORD PTR [ebx+16]
	pop	edi
	mov	DWORD PTR [esi+16], edx
	pop	esi
	pop	ebx

; 344  :             }

	ret	0
?copy_boost_exception@exception_detail@boost@@YAXPAVexception@2@PBV32@@Z ENDP ; boost::exception_detail::copy_boost_exception
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1clone_base@exception_detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1clone_base@exception_detail@boost@@UAE@XZ PROC	; boost::exception_detail::clone_base::~clone_base, COMDAT
; _this$ = ecx

; 335  :                 {

	mov	DWORD PTR [ecx], OFFSET ??_7clone_base@exception_detail@boost@@6B@

; 336  :                 }

	ret	0
??1clone_base@exception_detail@boost@@UAE@XZ ENDP	; boost::exception_detail::clone_base::~clone_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1exception@boost@@MAE@XZ
_TEXT	SEGMENT
??1exception@boost@@MAE@XZ PROC				; boost::exception::~exception, COMDAT
; _this$ = ecx

; 254  :         {

	mov	DWORD PTR [ecx], OFFSET ??_7exception@boost@@6B@

; 255  :         }

	mov	ecx, DWORD PTR [ecx+4]
	test	ecx, ecx
	je	SHORT $LN5@exception
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	jmp	edx
$LN5@exception:
	ret	0
??1exception@boost@@MAE@XZ ENDP				; boost::exception::~exception
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0exception@boost@@IAE@XZ
_TEXT	SEGMENT
??0exception@boost@@IAE@XZ PROC				; boost::exception::exception, COMDAT
; _this$ = ecx

; 184  :             {

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7exception@boost@@6B@
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], -1

; 185  :             }

	ret	0
??0exception@boost@@IAE@XZ ENDP				; boost::exception::exception
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\system\error_code.hpp
_TEXT	ENDS
;	COMDAT ?unspecified_bool_true@error_code@system@boost@@SAXXZ
_TEXT	SEGMENT
?unspecified_bool_true@error_code@system@boost@@SAXXZ PROC ; boost::system::error_code::unspecified_bool_true, COMDAT

; 350  :       static void unspecified_bool_true() {}

	ret	0
?unspecified_bool_true@error_code@system@boost@@SAXXZ ENDP ; boost::system::error_code::unspecified_bool_true
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?value@error_code@system@boost@@QBEHXZ
_TEXT	SEGMENT
?value@error_code@system@boost@@QBEHXZ PROC		; boost::system::error_code::value, COMDAT
; _this$ = ecx

; 344  :       int                     value() const    { return m_val; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?value@error_code@system@boost@@QBEHXZ ENDP		; boost::system::error_code::value
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0error_code@system@boost@@QAE@XZ
_TEXT	SEGMENT
??0error_code@system@boost@@QAE@XZ PROC			; boost::system::error_code::error_code, COMDAT
; _this$ = ecx

; 312  :       error_code() : m_val(0), m_cat(&get_system_category()) {}

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	call	?get_system_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_system_category
	mov	DWORD PTR [esi+4], eax
	mov	eax, esi
	pop	esi
	ret	0
??0error_code@system@boost@@QAE@XZ ENDP			; boost::system::error_code::error_code
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\limits
_TEXT	ENDS
;	COMDAT ?max@?$numeric_limits@K@std@@SAKXZ
_TEXT	SEGMENT
?max@?$numeric_limits@K@std@@SAKXZ PROC			; std::numeric_limits<unsigned long>::max, COMDAT

; 786  : 		{	// return maximum value
; 787  : 		return (ULONG_MAX);

	or	eax, -1

; 788  : 		}

	ret	0
?max@?$numeric_limits@K@std@@SAKXZ ENDP			; std::numeric_limits<unsigned long>::max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max@?$numeric_limits@I@std@@SAIXZ
_TEXT	SEGMENT
?max@?$numeric_limits@I@std@@SAIXZ PROC			; std::numeric_limits<unsigned int>::max, COMDAT

; 672  : 		{	// return maximum value
; 673  : 		return (UINT_MAX);

	or	eax, -1

; 674  : 		}

	ret	0
?max@?$numeric_limits@I@std@@SAIXZ ENDP			; std::numeric_limits<unsigned int>::max
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
_TEXT	ENDS
;	COMDAT ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT

; 85   : 	return (ungetc((unsigned char)_Byte, _File) != EOF);

	mov	ecx, DWORD PTR __Byte$[esp-4]
	mov	eax, DWORD PTR __File$[esp-4]
	movzx	edx, BYTE PTR [ecx]
	push	eax
	push	edx
	call	_ungetc
	xor	ecx, ecx
	add	esp, 8
	cmp	eax, -1
	setne	cl
	mov	al, cl

; 86   : 	}

	ret	0
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
__File$ = 12						; size = 4
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT

; 67   : 	return (fputc(_Byte, _File) != EOF);

	mov	eax, DWORD PTR __File$[esp-4]
	movsx	ecx, BYTE PTR __Byte$[esp-4]
	push	eax
	push	ecx
	call	_fputc
	xor	edx, edx
	add	esp, 8
	cmp	eax, -1
	setne	dl
	mov	al, dl

; 68   : 	}

	ret	0
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ENDP		; std::_Fputc<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT

; 35   : 	int _Meta;
; 36   : 	if ((_Meta = fgetc(_File)) == EOF)

	mov	eax, DWORD PTR __File$[esp-4]
	push	eax
	call	_fgetc
	add	esp, 4
	cmp	eax, -1
	jne	SHORT $LN2@Fgetc

; 37   : 		return (false);

	xor	al, al

; 42   : 		}
; 43   : 	}

	ret	0
$LN2@Fgetc:

; 38   : 	else
; 39   : 		{	// got one, convert to char
; 40   : 		_Byte = (char)_Meta;

	mov	ecx, DWORD PTR __Byte$[esp-4]
	mov	BYTE PTR [ecx], al

; 41   : 		return (true);

	mov	al, 1

; 42   : 		}
; 43   : 	}

	ret	0
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
PUBLIC	__mask@@AbsDouble@
;	COMDAT __mask@@AbsDouble@
; File c:\program files\microsoft visual studio 9.0\vc\include\math.h
CONST	SEGMENT
__mask@@AbsDouble@ DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?abs@@YANN@Z
_TEXT	SEGMENT
?abs@@YANN@Z PROC					; abs, COMDAT
; __X$ = xmm0l

; 488  :         {return (fabs(_X)); }

	movsd	xmm1, QWORD PTR __mask@@AbsDouble@
	andpd	xmm0, xmm1
	ret	0
?abs@@YANN@Z ENDP					; abs
_TEXT	ENDS
EXTRN	__CIlog:PROC
; Function compile flags: /Ogtpy
;	COMDAT _logf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_logf	PROC						; COMDAT

; 409  :         {return ((float)log((double)_X)); }

	fld	DWORD PTR __X$[esp-4]
	call	__CIlog
	fstp	DWORD PTR tv69[esp-4]
	fld	DWORD PTR tv69[esp-4]
	ret	0
_logf	ENDP
_TEXT	ENDS
PUBLIC	__real@4330000000000000
PUBLIC	__real@8000000000000000
;	COMDAT __real@4330000000000000
CONST	SEGMENT
__real@4330000000000000 DQ 04330000000000000r	; 4.5036e+015
CONST	ENDS
;	COMDAT __real@8000000000000000
CONST	SEGMENT
__real@8000000000000000 DQ 08000000000000000r	; -0
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _floorf
_TEXT	SEGMENT
_floorf	PROC						; COMDAT
; __X$ = xmm0s

; 405  :         {return ((float)floor((double)_X)); }

	movsd	xmm1, QWORD PTR __real@8000000000000000
	movsd	xmm2, QWORD PTR __real@4330000000000000
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	cvtss2sd xmm3, xmm0
	andpd	xmm1, xmm3
	orpd	xmm2, xmm1
	movapd	xmm0, xmm3
	addsd	xmm0, xmm2
	subsd	xmm0, xmm2
	movapd	xmm2, xmm0
	subsd	xmm2, xmm3
	cmpnlesd xmm2, xmm1
	andpd	xmm2, xmm4
	subsd	xmm0, xmm2
	cvtsd2ss xmm0, xmm0
	ret	0
_floorf	ENDP
_TEXT	ENDS
EXTRN	__CIexp:PROC
; Function compile flags: /Ogtpy
;	COMDAT _expf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_expf	PROC						; COMDAT

; 403  :         {return ((float)exp((double)_X)); }

	fld	DWORD PTR __X$[esp-4]
	call	__CIexp
	fstp	DWORD PTR tv69[esp-4]
	fld	DWORD PTR tv69[esp-4]
	ret	0
_expf	ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT
_fabsf	PROC						; COMDAT
; __X$ = xmm0s

; 384  :         {return ((float)fabs((double)_X)); }

	movsd	xmm1, QWORD PTR __mask@@AbsDouble@
	cvtss2sd xmm0, xmm0
	andpd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	ret	0
_fabsf	ENDP
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
_TEXT	ENDS
;	COMDAT ??0ios_base@std@@IAE@XZ
_TEXT	SEGMENT
??0ios_base@std@@IAE@XZ PROC				; std::ios_base::ios_base, COMDAT
; _this$ = ecx

; 510  : 	__CLR_OR_THIS_CALL ios_base()

	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@

; 511  : 		{	// default constructor
; 512  : 		}

	ret	0
??0ios_base@std@@IAE@XZ ENDP				; std::ios_base::ios_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1ios_base@std@@UAE@XZ
_TEXT	SEGMENT
??1ios_base@std@@UAE@XZ PROC				; std::ios_base::~ios_base, COMDAT
; _this$ = ecx

; 494  :         _Ios_base_dtor(this);

	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx

; 495  :         }

	ret	0
??1ios_base@std@@UAE@XZ ENDP				; std::ios_base::~ios_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ?_Do_narrow_s@?$ctype@D@std@@MBEPBDPBD0DPADI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
__Dest$ = 20						; size = 4
__Dest_size$ = 24					; size = 4
?_Do_narrow_s@?$ctype@D@std@@MBEPBDPBD0DPADI@Z PROC	; std::ctype<char>::_Do_narrow_s, COMDAT
; _this$ = ecx

; 1887 : 		{	// narrow elements in [_First, _Last) to chars

	push	ebx

; 1888 : 		_DEBUG_RANGE(_First, _Last);
; 1889 : 		_DEBUG_POINTER(_Dest);
; 1890 : 		_SCL_SECURE_ALWAYS_VALIDATE_RANGE(_Dest_size >= (size_t)(_Last - _First));

	mov	ebx, DWORD PTR __First$[esp]
	push	ebp
	mov	ebp, DWORD PTR __Dest_size$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Last$[esp+12]
	mov	esi, edi
	sub	esi, ebx
	cmp	ebp, esi
	jae	SHORT $LN1@Do_narrow_
	call	__invalid_parameter_noinfo
$LN1@Do_narrow_:

; 1891 : 		_CRT_SECURE_MEMCPY(_Dest, _Dest_size, _First, _Last - _First);

	mov	eax, DWORD PTR __Dest$[esp+12]
	push	esi
	push	ebx
	push	ebp
	push	eax
	call	_memcpy_s
	add	esp, 16					; 00000010H

; 1892 : 		return (_Last);

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1893 : 		}

	ret	20					; 00000014H
?_Do_narrow_s@?$ctype@D@std@@MBEPBDPBD0DPADI@Z ENDP	; std::ctype<char>::_Do_narrow_s
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dflt$ = 16						; size = 1
__Dest$ = 20						; size = 4
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z PROC		; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx

; 1880 : 		// assume there is enough space in _Dest
; 1881 : 		return _Do_narrow_s(_First, _Last, _Dflt, _Dest, _Last - _First);

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	edi
	mov	edi, eax
	sub	edi, edx
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
	push	edi
	mov	edi, DWORD PTR __Dflt$[esp+12]
	push	edi
	push	eax
	mov	eax, DWORD PTR [esi+40]
	push	edx
	call	eax
	pop	edi
	pop	esi

; 1882 : 		}

	ret	16					; 00000010H
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z ENDP		; std::ctype<char>::do_narrow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEDDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
___formal$ = 12						; size = 1
?do_narrow@?$ctype@D@std@@MBEDDD@Z PROC			; std::ctype<char>::do_narrow, COMDAT
; _this$ = ecx

; 1872 : 		return (_Ch);

	mov	al, BYTE PTR __Ch$[esp-4]

; 1873 : 		}

	ret	8
?do_narrow@?$ctype@D@std@@MBEDDD@Z ENDP			; std::ctype<char>::do_narrow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Do_widen_s@?$ctype@D@std@@MBEPBDPBD0PADI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Dest_size$ = 20					; size = 4
?_Do_widen_s@?$ctype@D@std@@MBEPBDPBD0PADI@Z PROC	; std::ctype<char>::_Do_widen_s, COMDAT
; _this$ = ecx

; 1862 : 		{	// widen chars in [_First, _Last)

	push	ebx

; 1863 : 		_DEBUG_RANGE(_First, _Last);
; 1864 : 		_DEBUG_POINTER(_Dest);
; 1865 : 		_SCL_SECURE_ALWAYS_VALIDATE_RANGE(_Dest_size >= (size_t)(_Last - _First));

	mov	ebx, DWORD PTR __First$[esp]
	push	ebp
	mov	ebp, DWORD PTR __Dest_size$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Last$[esp+12]
	mov	esi, edi
	sub	esi, ebx
	cmp	ebp, esi
	jae	SHORT $LN1@Do_widen_s
	call	__invalid_parameter_noinfo
$LN1@Do_widen_s:

; 1866 : 		_CRT_SECURE_MEMCPY(_Dest, _Dest_size, _First, _Last - _First);

	mov	eax, DWORD PTR __Dest$[esp+12]
	push	esi
	push	ebx
	push	ebp
	push	eax
	call	_memcpy_s
	add	esp, 16					; 00000010H

; 1867 : 		return (_Last);

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1868 : 		}

	ret	16					; 00000010H
?_Do_widen_s@?$ctype@D@std@@MBEPBDPBD0PADI@Z ENDP	; std::ctype<char>::_Do_widen_s
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z PROC		; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx

; 1856 : 		// assume there is enough space in _Dest
; 1857 : 		return _Do_widen_s(_First, _Last, _Dest, _Last - _First);

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	edi
	mov	edi, eax
	sub	edi, edx
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
	push	edi
	push	eax
	mov	eax, DWORD PTR [esi+28]
	push	edx
	call	eax
	pop	edi
	pop	esi

; 1858 : 		}

	ret	12					; 0000000cH
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z ENDP		; std::ctype<char>::do_widen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
?do_widen@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_widen, COMDAT
; _this$ = ecx

; 1849 : 		return (_Byte);

	mov	al, BYTE PTR __Byte$[esp-4]

; 1850 : 		}

	ret	4
?do_widen@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_widen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx

; 1840 : 		{	// convert [_First, _Last) in place to upper case

	push	ebx

; 1841 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 1842 : 		for (; _First != _Last; ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN8@do_toupper
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_toupper:

; 1843 : 			*_First = (_Elem)_Toupper((unsigned char)*_First, &_Ctype);

	movzx	eax, BYTE PTR [esi]
	push	edi
	push	eax
	call	__Toupper
	mov	BYTE PTR [esi], al
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_toupper
	pop	edi
$LN8@do_toupper:

; 1844 : 		return ((const _Elem *)_First);

	mov	eax, esi
	pop	esi
	pop	ebx

; 1845 : 		}

	ret	8
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_toupper
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_toupper@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_toupper, COMDAT
; _this$ = ecx

; 1835 : 		return ((_Elem)_Toupper((unsigned char)_Ch, &_Ctype));

	movzx	eax, BYTE PTR __Ch$[esp-4]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Toupper
	add	esp, 8

; 1836 : 		}

	ret	4
?do_toupper@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_toupper
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z PROC		; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx

; 1826 : 		{	// convert [_First, _Last) in place to lower case

	push	ebx

; 1827 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 1828 : 		for (; _First != _Last; ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN8@do_tolower
	push	edi
	lea	edi, DWORD PTR [ecx+8]
$LL3@do_tolower:

; 1829 : 			*_First = (_Elem)_Tolower((unsigned char)*_First, &_Ctype);

	movzx	eax, BYTE PTR [esi]
	push	edi
	push	eax
	call	__Tolower
	mov	BYTE PTR [esi], al
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jne	SHORT $LL3@do_tolower
	pop	edi
$LN8@do_tolower:

; 1830 : 		return ((const _Elem *)_First);

	mov	eax, esi
	pop	esi
	pop	ebx

; 1831 : 		}

	ret	8
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z ENDP		; std::ctype<char>::do_tolower
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
?do_tolower@?$ctype@D@std@@MBEDD@Z PROC			; std::ctype<char>::do_tolower, COMDAT
; _this$ = ecx

; 1821 : 		return ((_Elem)_Tolower((unsigned char)_Ch, &_Ctype));

	movzx	eax, BYTE PTR __Ch$[esp-4]
	add	ecx, 8
	push	ecx
	push	eax
	call	__Tolower
	add	esp, 8

; 1822 : 		}

	ret	4
?do_tolower@?$ctype@D@std@@MBEDD@Z ENDP			; std::ctype<char>::do_tolower
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Tidy@?$ctype@D@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$ctype@D@std@@IAEXXZ PROC			; std::ctype<char>::_Tidy, COMDAT
; _this$ = ecx

; 1813 : 		if (0 < _Ctype._Delfl)

	mov	eax, DWORD PTR [ecx+20]
	test	eax, eax
	jle	SHORT $LN6@Tidy@5

; 1814 : 			free((void *)_Ctype._Table);

	mov	eax, DWORD PTR [ecx+16]
	push	eax
	call	_free
	add	esp, 4

; 1817 : 		}

	ret	0
$LN6@Tidy@5:

; 1815 : 		else if (_Ctype._Delfl < 0)

	jge	SHORT $LN1@Tidy@5

; 1816 : 			delete[] (void *)_Ctype._Table;

	mov	ecx, DWORD PTR [ecx+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
$LN1@Tidy@5:

; 1817 : 		}

	ret	0
?_Tidy@?$ctype@D@std@@IAEXXZ ENDP			; std::ctype<char>::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?widen@?$ctype@D@std@@QBEDD@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
?widen@?$ctype@D@std@@QBEDD@Z PROC			; std::ctype<char>::widen, COMDAT
; _this$ = ecx

; 1716 : 		return (do_widen(_Byte));

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	jmp	eax
?widen@?$ctype@D@std@@QBEDD@Z ENDP			; std::ctype<char>::widen
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?tolower@?$ctype@D@std@@QBEDD@Z
_TEXT	SEGMENT
?tolower@?$ctype@D@std@@QBEDD@Z PROC			; std::ctype<char>::tolower, COMDAT
; _this$ = ecx
; __Ch$ = edx

; 1696 : 		return (do_tolower(_Ch));

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+8]
	push	edx
	call	eax

; 1697 : 		}

	ret	0
?tolower@?$ctype@D@std@@QBEDD@Z ENDP			; std::ctype<char>::tolower
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?is@?$ctype@D@std@@QBE_NFD@Z
_TEXT	SEGMENT
__Maskval$ = 8						; size = 2
?is@?$ctype@D@std@@QBE_NFD@Z PROC			; std::ctype<char>::is, COMDAT
; _this$ = ecx
; __Ch$ = eax

; 1663 : 		return ((_Ctype._Table[(unsigned char)_Ch] & _Maskval) != 0);

	mov	edx, DWORD PTR [ecx+16]
	mov	cx, WORD PTR __Maskval$[esp-4]
	movzx	eax, al
	test	WORD PTR [edx+eax*2], cx
	mov	eax, 0
	setne	al

; 1664 : 		}

	ret	4
?is@?$ctype@D@std@@QBE_NFD@Z ENDP			; std::ctype<char>::is
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_encoding@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT
?do_encoding@codecvt_base@std@@MBEHXZ PROC		; std::codecvt_base::do_encoding, COMDAT
; _this$ = ecx

; 720  : 		return (1);	// -1 ==> state dependent, 0 ==> varying length

	mov	eax, 1

; 721  : 		}

	ret	0
?do_encoding@codecvt_base@std@@MBEHXZ ENDP		; std::codecvt_base::do_encoding
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_max_length@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT
?do_max_length@codecvt_base@std@@MBEHXZ PROC		; std::codecvt_base::do_max_length, COMDAT
; _this$ = ecx

; 715  : 		return (1);

	mov	eax, 1

; 716  : 		}

	ret	0
?do_max_length@codecvt_base@std@@MBEHXZ ENDP		; std::codecvt_base::do_max_length
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?do_always_noconv@codecvt_base@std@@MBE_NXZ
_TEXT	SEGMENT
?do_always_noconv@codecvt_base@std@@MBE_NXZ PROC	; std::codecvt_base::do_always_noconv, COMDAT
; _this$ = ecx

; 710  : 		return (true);

	mov	al, 1

; 711  : 		}

	ret	0
?do_always_noconv@codecvt_base@std@@MBE_NXZ ENDP	; std::codecvt_base::do_always_noconv
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?always_noconv@codecvt_base@std@@QBE_NXZ
_TEXT	SEGMENT
?always_noconv@codecvt_base@std@@QBE_NXZ PROC		; std::codecvt_base::always_noconv, COMDAT
; _this$ = ecx

; 690  : 		return (do_always_noconv());

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	jmp	edx
?always_noconv@codecvt_base@std@@QBE_NXZ ENDP		; std::codecvt_base::always_noconv
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocinfo
_TEXT	ENDS
;	COMDAT ?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T324077 = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT
; _this$ = ecx

; 123  : 		{	// return ctype stuff

	sub	esp, 16					; 00000010H

; 124  : 		return (::_Getctype());

	lea	eax, DWORD PTR $T324077[esp+16]
	push	eax
	call	__Getctype
	mov	ecx, DWORD PTR ___$ReturnUdt$[esp+16]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	movq	QWORD PTR [ecx+8], xmm0
	mov	eax, ecx

; 125  : 		}

	add	esp, 20					; 00000014H
	ret	4
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ?_Has_container@_Iterator_base_secure@std@@QBE_NXZ
_TEXT	SEGMENT
?_Has_container@_Iterator_base_secure@std@@QBE_NXZ PROC	; std::_Iterator_base_secure::_Has_container, COMDAT
; _this$ = ecx

; 582  : 		return _Mycont != 0;

	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	setne	al

; 583  : 		}

	ret	0
?_Has_container@_Iterator_base_secure@std@@QBE_NXZ ENDP	; std::_Iterator_base_secure::_Has_container
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Iterator_base_secure@std@@QAE@XZ
_TEXT	SEGMENT
??0_Iterator_base_secure@std@@QAE@XZ PROC		; std::_Iterator_base_secure::_Iterator_base_secure, COMDAT
; _this$ = ecx

; 567  : 		{

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 568  : 		}

	ret	0
??0_Iterator_base_secure@std@@QAE@XZ ENDP		; std::_Iterator_base_secure::_Iterator_base_secure
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT

; 501  : 		return ((_Elem)_Meta);

	mov	eax, DWORD PTR __Meta$[esp-4]
	mov	al, BYTE PTR [eax]

; 502  : 		}

	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?find@?$char_traits@D@std@@SAPBDPBDIABD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 4
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z PROC		; std::char_traits<char>::find, COMDAT

; 472  : //		_DEBUG_POINTER(_First);
; 473  : 		return ((const _Elem *)::memchr(_First, _Ch, _Count));

	mov	ecx, DWORD PTR __Ch$[esp-4]
	mov	eax, DWORD PTR __Count$[esp-4]
	movsx	edx, BYTE PTR [ecx]
	push	eax
	mov	eax, DWORD PTR __First$[esp]
	push	edx
	push	eax
	call	_memchr
	add	esp, 12					; 0000000cH

; 474  : 		}

	ret	0
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ENDP		; std::char_traits<char>::find
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT

; 441  : //		_DEBUG_POINTER(_First1);
; 442  : //		_DEBUG_POINTER(_First2);
; 443  : 		return (::memcmp(_First1, _First2, _Count));

	mov	ecx, DWORD PTR __First2$[esp-4]
	mov	edx, DWORD PTR __First1$[esp-4]
	push	esi
	mov	esi, DWORD PTR __Count$[esp]
	push	edi
	cmp	esi, 4
	jb	SHORT $LN11@compare
$LL4@compare:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN5@compare
	sub	esi, 4
	add	ecx, 4
	add	edx, 4
	cmp	esi, 4
	jae	SHORT $LL4@compare
$LN11@compare:
	test	esi, esi
	je	SHORT $LN6@compare
$LN5@compare:
	movzx	eax, BYTE PTR [edx]
	movzx	edi, BYTE PTR [ecx]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 1
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+1]
	movzx	edi, BYTE PTR [ecx+1]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 2
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+2]
	movzx	edi, BYTE PTR [ecx+2]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 3
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@compare:
	sar	eax, 31					; 0000001fH
	pop	edi
	or	eax, 1
	pop	esi

; 444  : 		}

	ret	0
$LN6@compare:
	pop	edi

; 441  : //		_DEBUG_POINTER(_First1);
; 442  : //		_DEBUG_POINTER(_First2);
; 443  : 		return (::memcmp(_First1, _First2, _Count));

	xor	eax, eax
	pop	esi

; 444  : 		}

	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\seek.hpp
;	COMDAT ??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z
_TEXT	SEGMENT
$T345632 = -28						; size = 24
_off$ = 8						; size = 8
??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z PROC ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >, COMDAT
; ___$ReturnUdt$ = esi
; _t$ = ecx
; _way$ = edi

; 108  :                                 BOOST_IOS::seekdir way,
; 109  :                                 BOOST_IOS::openmode which )
; 110  :     {
; 111  :         if ( way == BOOST_IOS::beg &&
; 112  :              ( off < integer_traits<std::streamoff>::const_min ||
; 113  :                off > integer_traits<std::streamoff>::const_max ) )

	mov	eax, DWORD PTR _off$[esp-4]
	sub	esp, 28					; 0000001cH
	test	edi, edi
	jne	SHORT $LN3@seek
	mov	edx, DWORD PTR _off$[esp+28]
	cmp	edx, -1
	jl	SHORT $LN15@seek
	jg	SHORT $LN14@seek
	cmp	eax, -2147483648			; 80000000H
	jb	SHORT $LN15@seek
$LN14@seek:
	test	edx, edx
	jl	SHORT $LN3@seek
	jg	SHORT $LN15@seek
	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN3@seek
$LN15@seek:

; 114  :         {
; 115  :             return t.BOOST_IOSTREAMS_PUBSEEKPOS(offset_to_position(off));

	push	3
	mov	DWORD PTR $T345632[esp+40], eax
	sub	esp, 24					; 00000018H
	mov	eax, esp
	mov	DWORD PTR $T345632[esp+56], 0
	movq	xmm0, QWORD PTR $T345632[esp+56]
	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR $T345632[esp+68], edx
	movq	xmm0, QWORD PTR $T345632[esp+64]
	mov	edx, DWORD PTR [ecx]
	movq	QWORD PTR [eax+8], xmm0
	mov	DWORD PTR $T345632[esp+72], 0
	movq	xmm0, QWORD PTR $T345632[esp+72]
	movq	QWORD PTR [eax+16], xmm0
	mov	eax, DWORD PTR [edx+40]
	push	esi
	call	eax

; 116  :         } else {
; 117  :             return t.BOOST_IOSTREAMS_PUBSEEKOFF(off, way, which);

	mov	eax, esi

; 118  :         }
; 119  :     }

	add	esp, 28					; 0000001cH
	ret	0
$LN3@seek:

; 116  :         } else {
; 117  :             return t.BOOST_IOSTREAMS_PUBSEEKOFF(off, way, which);

	mov	edx, DWORD PTR [ecx]
	push	3
	push	edi
	push	eax
	mov	eax, DWORD PTR [edx+36]
	push	esi
	call	eax
	mov	eax, esi

; 118  :         }
; 119  :     }

	add	esp, 28					; 0000001cH
	ret	0
??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ENDP ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@3@_JHH@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_off$ = 12						; size = 8
??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@3@_JHH@Z PROC ; boost::iostreams::seek<std::basic_filebuf<char,std::char_traits<char> > >, COMDAT
; ___$ReturnUdt$ = eax
; _way$ = edi

; 45   : { 

	push	ecx

; 46   :     using namespace detail;
; 47   :     return seek_device_impl<T>::seek(detail::unwrap(t), off, way, which); 

	mov	ecx, DWORD PTR _off$[esp]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR _off$[esp+8]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _t$[esp+12]
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8
	mov	eax, esi

; 48   : }

	pop	esi
	pop	ecx
	ret	0
??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@3@_JHH@Z ENDP ; boost::iostreams::seek<std::basic_filebuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
_TEXT	ENDS
;	COMDAT ?seek@?$basic_file@D@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHH@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
?seek@?$basic_file@D@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHH@Z PROC ; boost::iostreams::basic_file<char>::seek, COMDAT
; _this$ = edx
; ___$ReturnUdt$ = eax
; _way$ = edi

; 161  : { return iostreams::seek(pimpl_->file_, off, way); }

	mov	ecx, DWORD PTR _off$[esp-4]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR _off$[esp+4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8
	mov	eax, esi
	pop	esi
	ret	8
?seek@?$basic_file@D@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHH@Z ENDP ; boost::iostreams::basic_file<char>::seek
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\seek.hpp
_TEXT	ENDS
;	COMDAT ??$seek@U?$basic_file_source@D@iostreams@boost@@@?$seek_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHH@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
??$seek@U?$basic_file_source@D@iostreams@boost@@@?$seek_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHH@Z PROC ; boost::iostreams::detail::seek_device_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char> >, COMDAT
; ___$ReturnUdt$ = eax
; _t$ = edx
; _way$ = edi

; 134  :     static std::streampos seek( T& t, stream_offset off,

	mov	ecx, DWORD PTR _off$[esp-4]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR _off$[esp+4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8
	mov	eax, esi

; 135  :                                 BOOST_IOS::seekdir way,
; 136  :                                 BOOST_IOS::openmode )
; 137  :     { return t.seek(off, way); }

	pop	esi
	ret	0
??$seek@U?$basic_file_source@D@iostreams@boost@@@?$seek_device_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHH@Z ENDP ; boost::iostreams::detail::seek_device_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$seek@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAU?$basic_file_source@D@01@_JHH@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
??$seek@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAU?$basic_file_source@D@01@_JHH@Z PROC ; boost::iostreams::seek<boost::iostreams::basic_file_source<char> >, COMDAT
; ___$ReturnUdt$ = eax
; _t$ = edx
; _way$ = edi

; 46   :     using namespace detail;
; 47   :     return seek_device_impl<T>::seek(detail::unwrap(t), off, way, which); 

	mov	ecx, DWORD PTR _off$[esp-4]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR _off$[esp+4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8
	mov	eax, esi

; 48   : }

	pop	esi
	ret	0
??$seek@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YA?AV?$fpos@H@std@@AAU?$basic_file_source@D@01@_JHH@Z ENDP ; boost::iostreams::seek<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$seek@U?$basic_file_source@D@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHHUrandom_access@123@@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
___formal$ = 16						; size = 4
??$seek@U?$basic_file_source@D@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHHUrandom_access@123@@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char> >, COMDAT
; ___$ReturnUdt$ = eax
; _dev$ = edx
; _way$ = edi

; 144  :     static std::streampos 

	push	ecx

; 145  :     seek( Device& dev, stream_offset off, 
; 146  :           BOOST_IOS::seekdir way, BOOST_IOS::openmode which, 
; 147  :           random_access )
; 148  :     { 
; 149  :         return iostreams::seek(dev, off, way, which); 

	mov	ecx, DWORD PTR _off$[esp]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR _off$[esp+8]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8
	mov	eax, esi

; 150  :     }

	pop	esi
	pop	ecx
	ret	0
??$seek@U?$basic_file_source@D@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@_JHHUrandom_access@123@@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0input_seekable@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0input_seekable@iostreams@boost@@QAE@XZ PROC		; boost::iostreams::input_seekable::input_seekable, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_8input_seekable@iostreams@boost@@7B012@@
	mov	DWORD PTR [eax+4], OFFSET ??_8input_seekable@iostreams@boost@@7Binput@12@@
	mov	DWORD PTR [eax+8], OFFSET ??_8input_seekable@iostreams@boost@@7Brandom_access@detail@12@@
	ret	0
??0input_seekable@iostreams@boost@@QAE@XZ ENDP		; boost::iostreams::input_seekable::input_seekable
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0category@?$basic_file_source@D@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0category@?$basic_file_source@D@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::basic_file_source<char>::category::category, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_8category@?$basic_file_source@D@iostreams@boost@@7Binput_seekable@23@@
	mov	DWORD PTR [eax+4], OFFSET ??_8category@?$basic_file_source@D@iostreams@boost@@7Bdevice_tag@23@@
	mov	DWORD PTR [eax+8], OFFSET ??_8category@?$basic_file_source@D@iostreams@boost@@7Bclosable_tag@23@@
	mov	DWORD PTR [eax+12], OFFSET ??_8category@?$basic_file_source@D@iostreams@boost@@7Binput@23@@
	mov	DWORD PTR [eax+16], OFFSET ??_8category@?$basic_file_source@D@iostreams@boost@@7Brandom_access@detail@23@@
	ret	0
??0category@?$basic_file_source@D@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::basic_file_source<char>::category::category
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$seek@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
??$seek@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; ___$ReturnUdt$ = eax
; _dev$ = edx
; _way$ = edi

; 128  :     seek( Device& dev, Dummy*, stream_offset off, 
; 129  :           BOOST_IOS::seekdir way, BOOST_IOS::openmode which )
; 130  :     { 
; 131  :         typedef typename category_of<Device>::type category;
; 132  :         return seek(dev, off, way, which, category()); 

	mov	ecx, DWORD PTR _off$[esp-4]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR _off$[esp+4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8
	mov	eax, esi

; 133  :     }

	pop	esi
	ret	0
??$seek@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
_TEXT	ENDS
;	COMDAT ??R?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ
_TEXT	SEGMENT
??R?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ PROC ; boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >::operator(), COMDAT
; _this$ = ecx

; 116  :     void operator()() const { t_.close(which_); }

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	cmp	eax, 1
	jne	SHORT $LN4@operator@95
	mov	eax, DWORD PTR [ecx+60]
	test	al, 2
	jne	SHORT $LN3@operator@95
	or	eax, 2
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	1
	call	edx
	ret	0
$LN4@operator@95:
	cmp	eax, 2
	jne	SHORT $LN3@operator@95
	mov	eax, DWORD PTR [ecx+60]
	test	al, 4
	jne	SHORT $LN3@operator@95
	or	eax, 4
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	2
	call	edx
$LN3@operator@95:
	ret	0
??R?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ENDP ; boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
_TEXT	ENDS
;	COMDAT ??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@H@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_which$ = 12						; size = 4
??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@H@Z PROC ; boost::iostreams::close<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 99   : #ifdef BOOST_IOSTREAMS_STRICT
; 100  :     assert(which == BOOST_IOS::in || which == BOOST_IOS::out);
; 101  : #else
; 102  :     if (which == (BOOST_IOS::in | BOOST_IOS::out)) {
; 103  :         detail::close_all(t);
; 104  :         return;
; 105  :     }
; 106  : #endif
; 107  :     detail::close_impl<T>::close(detail::unwrap(t), which); 
; 108  : }

	ret	0
??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@01@H@Z ENDP ; boost::iostreams::close<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::seek<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _this$ = edx
; ___$ReturnUdt$ = eax
; _way$ = edi

; 92   :     std::streampos seek( stream_offset off, BOOST_IOS::seekdir way,

	mov	ecx, DWORD PTR _off$[esp-4]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR _off$[esp+4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8
	mov	eax, esi

; 93   :                          BOOST_IOS::openmode which, Device* dev )
; 94   :     { return any_impl::seek(t_, dev, off, way, which); }

	pop	esi
	ret	8
??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::seek<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
_TEXT	ENDS
;	COMDAT ??R?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ
_TEXT	SEGMENT
??R?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ PROC ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >::operator(), COMDAT
; _this$ = eax

; 134  :     void operator()() const { t_.reset(); }

	mov	eax, DWORD PTR [eax]
	cmp	BYTE PTR [eax+1], 0
	je	SHORT $LN3@operator@96
	mov	BYTE PTR [eax+1], 0
$LN3@operator@96:
	ret	0
??R?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ENDP ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z
_TEXT	SEGMENT
_which$ = 8						; size = 4
??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::close<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _dev$ = eax

; 153  :     static void close(Device& dev, Dummy*, BOOST_IOS::openmode which)

	cmp	DWORD PTR _which$[esp-4], 3
	jne	SHORT $LN3@close@11
	mov	DWORD PTR _which$[esp-4], eax
	jmp	??$close_all@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
$LN3@close@11:

; 154  :     { iostreams::close(dev, which); }

	ret	0
??$close@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::close<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?seek_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z
_TEXT	SEGMENT
$T346277 = -24						; size = 24
_this$ = 8						; size = 4
_off$ = 12						; size = 8
_way$ = 20						; size = 4
_which$ = 24						; size = 4
?seek_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl, COMDAT
; ___$ReturnUdt$ = eax

; 345  : {

	sub	esp, 24					; 00000018H
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+24]
	push	ebp

; 346  :     if ( gptr() != 0 && way == BOOST_IOS::cur && which == BOOST_IOS::in && 
; 347  :          eback() - gptr() <= off && off <= egptr() - gptr() ) 

	mov	ebp, DWORD PTR _off$[esp+28]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR [ebx+32]
	mov	ecx, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR _off$[esp+40]
	test	ecx, ecx
	je	SHORT $LN3@seek_impl
	mov	eax, 1
	cmp	DWORD PTR _way$[esp+36], eax
	jne	SHORT $LN3@seek_impl
	cmp	DWORD PTR _which$[esp+36], eax
	jne	SHORT $LN3@seek_impl
	mov	edx, DWORD PTR [ebx+16]
	mov	eax, DWORD PTR [edx]
	sub	eax, ecx
	cdq
	cmp	edx, edi
	jg	SHORT $LN3@seek_impl
	jl	SHORT $LN163@seek_impl
	cmp	eax, ebp
	ja	SHORT $LN3@seek_impl
$LN163@seek_impl:
	mov	eax, DWORD PTR [ebx+48]
	mov	eax, DWORD PTR [eax]
	cdq
	cmp	edi, edx
	jg	SHORT $LN3@seek_impl
	jl	SHORT $LN164@seek_impl
	cmp	ebp, eax
	ja	SHORT $LN3@seek_impl
$LN164@seek_impl:

; 348  :     {   // Small seek optimization
; 349  :         gbump(off);

	mov	eax, DWORD PTR [ebx+48]
	sub	DWORD PTR [eax], ebp
	mov	eax, DWORD PTR [ebx+32]
	add	DWORD PTR [eax], ebp

; 350  :         return obj().seek(0, BOOST_IOS::cur, BOOST_IOS::in, next_) -
; 351  :                static_cast<off_type>(egptr() - gptr());

	mov	ecx, DWORD PTR [ebx+32]
	mov	ebp, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ebx+48]
	mov	edi, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ebx+64]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+36]
	push	3
	push	1
	push	0
	lea	edx, DWORD PTR $T346277[esp+52]
	push	edx
	add	edi, ebp
	call	eax
	sub	edi, ebp
	push	edi
	mov	eax, esi
	lea	ecx, DWORD PTR $T346277[esp+44]
	call	??G?$fpos@H@std@@QBE?AV01@J@Z		; std::fpos<int>::operator-

; 359  :     return obj().seek(off, way, which, next_);

	mov	eax, esi

; 360  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
$LN3@seek_impl:

; 352  :     }
; 353  :     if (pptr() != 0) 

	mov	ecx, DWORD PTR [ebx+36]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN94@seek_impl

; 354  :         this->BOOST_IOSTREAMS_PUBSYNC(); // sync() confuses VisualAge 6.

	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, ebx
	call	eax
$LN94@seek_impl:

; 355  :     if (way == BOOST_IOS::cur && gptr())

	cmp	DWORD PTR _way$[esp+36], 1
	jne	SHORT $LN1@seek_impl
	mov	ecx, DWORD PTR [ebx+32]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@seek_impl

; 356  :         off -= static_cast<off_type>(egptr() - gptr());

	mov	edx, DWORD PTR [ebx+48]
	mov	eax, DWORD PTR [edx]
	cdq
	sub	ebp, eax
	sbb	edi, edx
$LN1@seek_impl:

; 357  :     setg(0, 0, 0);

	mov	eax, DWORD PTR [ebx+16]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [ebx+32]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [ebx+48]
	mov	DWORD PTR [edx], 0

; 358  :     setp(0, 0);

	mov	eax, DWORD PTR [ebx+20]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [ebx+36]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [ebx+52]

; 359  :     return obj().seek(off, way, which, next_);

	push	edi
	mov	edi, DWORD PTR _way$[esp+40]
	mov	DWORD PTR [edx], 0
	mov	ecx, DWORD PTR [ebx+64]
	push	ebp
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8

; 360  : }

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	20					; 00000014H
?seek_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAE@XZ PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::~sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	ret	0
??1?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAE@XZ ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::~sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAE@XZ PROC ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::~sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	ret	0
??1?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAE@XZ ENDP ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::~sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXI@Z PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	je	SHORT $LN8@scalar@12
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@12:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEPAXI@Z ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXI@Z PROC ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	je	SHORT $LN8@scalar@13
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@13:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEPAXI@Z ENDP ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_impl.hpp
_TEXT	ENDS
;	COMDAT ??0?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z
_TEXT	SEGMENT
_px$ = 8						; size = 4
??0?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = eax

; 67   :     {

	mov	ecx, 1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _px$[esp-4]
	mov	DWORD PTR [eax], OFFSET ??_7?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@
	mov	DWORD PTR [eax+12], ecx

; 68   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 69   :         boost::sp_scalar_constructor_hook( px, sizeof(X), this );
; 70   : #endif
; 71   :     }

	ret	4
??0?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z
_TEXT	SEGMENT
_px$ = 8						; size = 4
??0?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z PROC ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx

; 67   :     {

	mov	eax, ecx
	mov	ecx, 1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _px$[esp-4]
	mov	DWORD PTR [eax], OFFSET ??_7?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@
	mov	DWORD PTR [eax+12], ecx

; 68   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 69   :         boost::sp_scalar_constructor_hook( px, sizeof(X), this );
; 70   : #endif
; 71   :     }

	ret	4
??0?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ENDP ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ?flush@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
?flush@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::flush, COMDAT
; _sb$ = ecx

; 105  :     { 

	push	ebx

; 106  :         bool result = any_impl::flush(t_, sb);

	mov	bl, 1

; 107  :         if (sb && sb->BOOST_IOSTREAMS_PUBSYNC() == -1)

	test	ecx, ecx
	je	SHORT $LN15@flush@5
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	eax, -1
	jne	SHORT $LN15@flush@5

; 108  :             result = false;

	xor	al, al
	pop	ebx

; 110  :     }

	ret	0
$LN15@flush@5:

; 109  :         return result;

	mov	al, bl
	pop	ebx

; 110  :     }

	ret	0
?flush@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::flush
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?out@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ
_TEXT	SEGMENT
?out@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::out, COMDAT
; _this$ = eax

; 107  :     buffer_type& out() { return buffer_.second(); }

	add	eax, 80					; 00000050H
	ret	0
?out@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::out
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?in@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ
_TEXT	SEGMENT
?in@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::in, COMDAT
; _this$ = eax

; 106  :     buffer_type& in() { return buffer_.first(); }

	add	eax, 80					; 00000050H
	ret	0
?in@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEAAV?$basic_buffer@DV?$allocator@D@std@@@234@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::in
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Construct@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAV1234@@std@@YAXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV1234@@Z
_TEXT	SEGMENT
??$_Construct@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAV1234@@std@@YAXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV1234@@Z PROC ; std::_Construct<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@17
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@17:

; 53   : 	}

	ret	0
??$_Construct@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@PAV1234@@std@@YAXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV1234@@Z ENDP ; std::_Construct<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
_which$ = 8						; size = 4
??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _this$ = eax

; 100  :     void close(BOOST_IOS::openmode which, Device* dev)

	cmp	DWORD PTR _which$[esp-4], 3
	jne	SHORT $LN5@close@12
	push	eax
	call	??$close_all@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
	pop	ecx
$LN5@close@12:

; 101  :     { any_impl::close(t_, dev, which); }

	ret	4
??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?init_put_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
_TEXT	SEGMENT
?init_put_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_put_area, COMDAT
; _this$ = ecx

; 415  :     using namespace std;
; 416  :     if (shared_buffer() && gptr() != 0)
; 417  :         setg(0, 0, 0);
; 418  :     if (output_buffered())

	mov	eax, DWORD PTR [ecx+92]
	shr	eax, 1
	test	al, 1
	je	SHORT $LN2@init_put_a@5

; 419  :         setp(out().begin(), out().end());

	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [ecx+84]
	push	esi
	mov	esi, DWORD PTR [ecx+20]
	mov	DWORD PTR [esi], edx
	mov	esi, DWORD PTR [ecx+36]
	mov	DWORD PTR [esi], edx
	mov	ecx, DWORD PTR [ecx+52]
	add	eax, edx
	sub	eax, edx
	mov	DWORD PTR [ecx], eax
	pop	esi

; 422  : }

	ret	0
$LN2@init_put_a@5:

; 420  :     else
; 421  :         setp(0, 0);

	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [ecx+52]
	mov	DWORD PTR [ecx], 0

; 422  : }

	ret	0
?init_put_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_put_area
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekoff@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_off$ = 12						; size = 4
_way$ = 16						; size = 4
_which$ = 20						; size = 4
?seekoff@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekoff, COMDAT
; _this$ = ecx

; 331  : { return seek_impl(off, way, which); }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	mov	eax, DWORD PTR _which$[ebp]
	mov	edx, DWORD PTR _way$[ebp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	eax, DWORD PTR _off$[ebp]
	push	edx
	cdq
	push	edx
	push	eax
	push	ecx
	mov	eax, esi
	call	?seek_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?seekoff@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekoff
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAEXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV3456@@Z
_TEXT	SEGMENT
?construct@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAEXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV3456@@Z PROC ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@17
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@17:

; 156  : 		}

	ret	0
?construct@?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@QAEXPAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@ABQAV3456@@Z ENDP ; std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *>::construct
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@H@Z
_TEXT	SEGMENT
?close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@H@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close, COMDAT
; _b$ = ecx
; _m$ = eax

; 274  :         if (m == BOOST_IOS::out && is_convertible<Mode, output>::value)
; 275  :             b->BOOST_IOSTREAMS_PUBSYNC();
; 276  :         b->close(m);

	cmp	eax, 1
	jne	SHORT $LN7@close@13
	mov	eax, DWORD PTR [ecx+60]
	test	al, 2
	jne	SHORT $LN6@close@13
	or	eax, 2
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	1
	call	edx

; 277  :     }

	ret	0

; 274  :         if (m == BOOST_IOS::out && is_convertible<Mode, output>::value)
; 275  :             b->BOOST_IOSTREAMS_PUBSYNC();
; 276  :         b->close(m);

$LN7@close@13:
	cmp	eax, 2
	jne	SHORT $LN6@close@13
	mov	eax, DWORD PTR [ecx+60]
	test	al, 4
	jne	SHORT $LN6@close@13
	or	eax, 4
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	2
	call	edx
$LN6@close@13:

; 277  :     }

	ret	0
?close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@CAXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@H@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Rcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z
_TEXT	SEGMENT
??Rcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer::operator(), COMDAT
; _this$ = eax
; _b$ = ecx

; 289  :             close(b, mode_);

	mov	eax, DWORD PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@operator@97
	mov	eax, DWORD PTR [ecx+60]
	test	al, 2
	jne	SHORT $LN8@operator@97
	mov	edx, DWORD PTR [ecx]
	or	eax, 2
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [edx+60]
	push	1
	call	eax

; 290  :         }

	ret	0

; 289  :             close(b, mode_);

$LN9@operator@97:
	cmp	eax, 2
	jne	SHORT $LN8@operator@97
	mov	eax, DWORD PTR [ecx+60]
	test	al, 4
	jne	SHORT $LN8@operator@97
	mov	edx, DWORD PTR [ecx]
	or	eax, 4
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [edx+60]
	push	2
	call	eax
$LN8@operator@97:

; 290  :         }

	ret	0
??Rcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXPAV?$linked_streambuf@DU?$char_traits@D@std@@@234@@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ?flush@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
?flush@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::flush, COMDAT
; _sb$ = ecx

; 105  :     { 

	push	ebx

; 106  :         bool result = any_impl::flush(t_, sb);

	mov	bl, 1

; 107  :         if (sb && sb->BOOST_IOSTREAMS_PUBSYNC() == -1)

	test	ecx, ecx
	je	SHORT $LN15@flush@6
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	eax, -1
	jne	SHORT $LN15@flush@6

; 108  :             result = false;

	xor	al, al
	pop	ebx

; 110  :     }

	ret	0
$LN15@flush@6:

; 109  :         return result;

	mov	al, bl
	pop	ebx

; 110  :     }

	ret	0
?flush@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE_NPAV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::flush
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@@Z
_TEXT	SEGMENT
?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@@Z PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::reset, COMDAT
; _this$ = eax
; _t$ = ecx

; 99   :         reset();

	cmp	BYTE PTR [eax+1], 0
	je	SHORT $LN5@reset@8
	mov	BYTE PTR [eax+1], 0
$LN5@reset@8:

; 100  :         new (address()) T(t); 

	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 101  :         initialized_ = true;

	mov	BYTE PTR [eax+1], 1

; 102  :     }

	ret	0
?reset@?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@234@@Z ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > >::reset
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?notify@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ
_TEXT	SEGMENT
?notify@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::notify, COMDAT
; _this$ = eax

; 268  :     void notify() { if (pimpl_->client_) pimpl_->client_->notify(); }

	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+28]
	test	ecx, ecx
	je	SHORT $LN1@notify@2
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	jmp	eax
$LN1@notify@2:
	ret	0
?notify@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::notify
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?init_put_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
_TEXT	SEGMENT
?init_put_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_put_area, COMDAT
; _this$ = ecx

; 415  :     using namespace std;
; 416  :     if (shared_buffer() && gptr() != 0)
; 417  :         setg(0, 0, 0);
; 418  :     if (output_buffered())

	mov	eax, DWORD PTR [ecx+84]
	shr	eax, 1
	test	al, 1
	je	SHORT $LN2@init_put_a@6

; 419  :         setp(out().begin(), out().end());

	mov	edx, DWORD PTR [ecx+72]
	mov	eax, DWORD PTR [ecx+76]
	push	esi
	mov	esi, DWORD PTR [ecx+20]
	mov	DWORD PTR [esi], edx
	mov	esi, DWORD PTR [ecx+36]
	mov	DWORD PTR [esi], edx
	mov	ecx, DWORD PTR [ecx+52]
	add	eax, edx
	sub	eax, edx
	mov	DWORD PTR [ecx], eax
	pop	esi

; 422  : }

	ret	0
$LN2@init_put_a@6:

; 420  :     else
; 421  :         setp(0, 0);

	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [ecx+52]
	mov	DWORD PTR [ecx], 0

; 422  : }

	ret	0
?init_put_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_put_area
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?close_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z
_TEXT	SEGMENT
_which$ = 8						; size = 4
?close_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close_impl, COMDAT
; _this$ = ecx

; 371  :     if (which == BOOST_IOS::in && is_convertible<Mode, input>::value) {

	mov	eax, DWORD PTR _which$[esp-4]
	cmp	eax, 1
	jne	SHORT $LN6@close_impl@4

; 372  :         setg(0, 0, 0);

	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], 0

; 382  :     }
; 383  : }

	ret	4

; 372  :         setg(0, 0, 0);

$LN6@close_impl@4:

; 373  :     }
; 374  :     if (which == BOOST_IOS::out && is_convertible<Mode, output>::value) {
; 375  :         sync();
; 376  :         setp(0, 0);
; 377  :     }
; 378  :     if ( !is_convertible<category, dual_use>::value ||
; 379  :          is_convertible<Mode, input>::value == (which == BOOST_IOS::in) )
; 380  :     {
; 381  :         obj().close(which, next_);

	cmp	eax, 3
	jne	SHORT $LN20@close_impl@4
	add	ecx, 64					; 00000040H
	push	ecx
	call	??$close_all@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
	pop	ecx
$LN20@close_impl@4:

; 382  :     }
; 383  : }

	ret	4
?close_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close_impl
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\buffer.hpp
_TEXT	ENDS
;	COMDAT ??1?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::~basic_buffer<char,std::allocator<char> >, COMDAT
; _this$ = eax

; 156  : { if (buf_) allocator_type().deallocate(buf_, size_); }

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN6@basic_buff
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
$LN6@basic_buff:
	ret	0
??1?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::~basic_buffer<char,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ
_TEXT	SEGMENT
?auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close, COMDAT
; _this$ = eax

; 537  :     return (pimpl_->flags_ & f_auto_close) != 0;

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+44]
	shr	eax, 2
	and	eax, 1

; 538  : }

	ret	0
?auto_close@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::auto_close
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??8?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
??8?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator==, COMDAT
; _this$ = edi
; __Right$ = esi

; 291  : 
; 292  :  #if _HAS_ITERATOR_DEBUGGING
; 293  : 			_Compat(_Right);
; 294  :  #else
; 295  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN1@operator@98
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN2@operator@98
$LN1@operator@98:
	call	__invalid_parameter_noinfo
$LN2@operator@98:

; 296  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 297  : 
; 298  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	sete	cl
	mov	al, cl

; 299  : 			}

	ret	0
??8?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
??9?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = edi
; __Right$ = esi

; 303  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@operator@99
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN4@operator@99
$LN3@operator@99:
	call	__invalid_parameter_noinfo
$LN4@operator@99:
	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	setne	cl
	mov	al, cl

; 304  : 			}

	ret	0
??9?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::~single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN8@single_obj
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
$LN8@single_obj:
	ret	0
??1?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::~single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >::~double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN10@double_obj
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
$LN10@double_obj:
	ret	0
??1?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >::~double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ?swap@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXAAV12@@Z
_TEXT	SEGMENT
?swap@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXAAV12@@Z PROC ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::swap, COMDAT
; _this$ = ecx
; _other$ = eax

; 441  :     {

	push	esi

; 442  :         std::swap(px, other.px);

	cmp	ecx, eax
	je	SHORT $LN3@swap@12
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [eax], edx
$LN3@swap@12:

; 443  :         pn.swap(other.pn);

	mov	esi, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [ecx+4], edx
	pop	esi

; 444  :     }

	ret	0
?swap@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXAAV12@@Z ENDP ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::swap
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 169  : 		{	// increment by integer

	push	esi
	mov	esi, ecx

; 170  : 		if (this->_Mycont != _IGNORE_MYCONT)

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Off$[esp+4]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN2@operator@100

; 171  : 		{
; 172  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	test	eax, eax
	jne	SHORT $LN3@operator@100
	call	__invalid_parameter_noinfo
$LN3@operator@100:

; 173  : 			_SCL_SECURE_VALIDATE_RANGE(

	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN11@operator@100
	mov	edx, DWORD PTR [eax+4]
	jmp	SHORT $LN12@operator@100
$LN11@operator@100:
	lea	edx, DWORD PTR [eax+4]
$LN12@operator@100:
	mov	ecx, DWORD PTR [esi+4]
	push	ebp
	mov	ebp, DWORD PTR [eax+20]
	add	ebp, edx
	add	ecx, edi
	cmp	ecx, ebp
	pop	ebp
	ja	SHORT $LN1@operator@100
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN15@operator@100
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN16@operator@100
$LN15@operator@100:
	add	eax, 4
$LN16@operator@100:
	cmp	ecx, eax
	jae	SHORT $LN2@operator@100
$LN1@operator@100:

; 174  : 				_Myptr + _Off <= (((_Mystring *)this->_Mycont)->_Myptr() + ((_Mystring *)this->_Mycont)->_Mysize) &&
; 175  : 				_Myptr + _Off >= ((_Mystring *)this->_Mycont)->_Myptr());

	call	__invalid_parameter_noinfo
$LN2@operator@100:

; 176  : 		}
; 177  : 		_Myptr += _Off;

	add	DWORD PTR [esi+4], edi
	pop	edi

; 178  : 		return (*this);

	mov	eax, esi
	pop	esi

; 179  : 		}

	ret	4
??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Ranit_base@DHPBDABDV_Iterator_base_secure@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Ranit_base@DHPBDABDV_Iterator_base_secure@std@@@std@@QAE@XZ PROC ; std::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure>::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Ranit_base@DHPBDABDV_Iterator_base_secure@std@@@std@@QAE@XZ ENDP ; std::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure>::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 405  : 		(*(_Mybase *)this) += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 406  : 		return (*this);

	mov	eax, esi
	pop	esi

; 407  : 		}

	ret	4
??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBV_Container_base_secure@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBV_Container_base_secure@1@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 83   : 		__CLR_OR_THIS_CALL _String_const_iterator(pointer _Ptr, const _Container_base_secure *_Pstring)

	push	ebx

; 84   : 			{	// construct with pointer _Ptr
; 85   : 			_SCL_SECURE_VALIDATE(

	mov	ebx, DWORD PTR __Ptr$[esp]
	push	esi
	mov	esi, DWORD PTR __Pstring$[esp+4]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN1@String_con
	test	ebx, ebx
	je	SHORT $LN1@String_con
	mov	edx, DWORD PTR [esi+24]
	lea	eax, DWORD PTR [esi+4]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN11@String_con
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN12@String_con
$LN11@String_con:
	mov	ecx, eax
$LN12@String_con:
	cmp	ecx, ebx
	ja	SHORT $LN1@String_con
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN15@String_con
	mov	eax, DWORD PTR [eax]
$LN15@String_con:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	ebx, ecx
	jbe	SHORT $LN2@String_con
$LN1@String_con:

; 86   : 				_Pstring != NULL && 
; 87   : 				_Ptr != NULL && 
; 88   : 				((_Mystring *)_Pstring)->_Myptr() <= _Ptr && _Ptr <= (((_Mystring *)_Pstring)->_Myptr() + ((_Mystring *)_Pstring)->_Mysize));

	call	__invalid_parameter_noinfo
$LN2@String_con:

; 89   : 			this->_Mycont = _Pstring;

	mov	DWORD PTR [edi], esi

; 90   : 			_Myptr = _Ptr;

	mov	DWORD PTR [edi+4], ebx

; 91   : 			}

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	ret	8
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBV_Container_base_secure@1@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx

; 282  : 		_IGfirst = &_Gfirst, _IPfirst = &_Pfirst;
; 283  : 		_IGnext = &_Gnext, _IPnext = &_Pnext;

	lea	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [ecx+32], edx
	lea	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [ecx+36], edx
	lea	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+16], eax

; 284  : 		_IGcount = &_Gcount, _IPcount = &_Pcount;

	lea	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [ecx+48], edx
	lea	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [ecx+20], eax
	lea	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [ecx+52], edx

; 285  : 		setp(0, 0), setg(0, 0, 0);

	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], 0

; 286  : 		}

	ret	0
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
_TEXT	ENDS
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAV?$codecvt@DDH@2@@Z
_TEXT	SEGMENT
__Newpcvt$ = 8						; size = 4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAV?$codecvt@DDH@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT
; _this$ = ecx

; 531  : 		{	// initialize codecvt pointer

	push	esi
	push	edi

; 532  : 		if (_Newpcvt->always_noconv())

	mov	edi, DWORD PTR __Newpcvt$[esp+4]
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+4]
	mov	esi, ecx
	mov	ecx, edi
	call	edx
	test	al, al
	je	SHORT $LN2@Initcvt
	pop	edi

; 533  : 			_Pcvt = 0;	// nothing to do

	mov	DWORD PTR [esi+60], 0
	pop	esi

; 538  : 			}
; 539  : 		}

	ret	4
$LN2@Initcvt:

; 534  : 		else
; 535  : 			{	// set up for nontrivial codecvt facet
; 536  : 			_Pcvt = _Newpcvt;
; 537  : 			_Mysb::_Init();	// reset any buffering

	mov	ecx, esi
	mov	DWORD PTR [esi+60], edi
	call	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Init
	pop	edi
	pop	esi

; 538  : 			}
; 539  : 		}

	ret	4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAV?$codecvt@DDH@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
__File$ = 8						; size = 4
__Which$ = 12						; size = 4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx

; 460  : 		__PURE_APPDOMAIN_GLOBAL static _Myst _Stinit;	// initial state
; 461  : 		_Closef = _Which == _Openfl;

	cmp	DWORD PTR __Which$[esp-4], 1

; 462  : 		_Wrotesome = false;
; 463  : 
; 464  : 		_Mysb::_Init();	// initialize stream buffer base object

	lea	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+16], edx
	lea	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [ecx+32], edx
	lea	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [ecx+36], edx
	sete	al
	mov	BYTE PTR [ecx+72], al
	lea	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [ecx+48], edx
	mov	BYTE PTR [ecx+65], 0
	lea	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [ecx+20], eax
	lea	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [ecx+52], edx
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], 0
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], 0

; 465  : 
; 466  :  #ifndef _IORCNT
; 467  :   #define _IORCNT	_IOCNT	/* read and write counts are the same */
; 468  :   #define _IOWCNT _IOCNT
; 469  :  #endif /* _IORCNT */
; 470  : 
; 471  : #pragma warning(push)
; 472  : #pragma warning(disable: 6240)
; 473  : 		/* prefast noise VSW 489858 */
; 474  : 		if (_File != 0 && sizeof (_Elem) == 1)

	mov	eax, DWORD PTR __File$[esp-4]
	test	eax, eax
	je	SHORT $LN10@Init

; 475  : #pragma warning(pop)
; 476  : 			{	// point inside C stream with [first, first + count) buffer
; 477  : 			_Elem **_Pb = (_Elem **)&_File->_IOBASE;

	lea	edx, DWORD PTR [eax+8]

; 478  : 			_Elem **_Pn = (_Elem **)&_File->_IOPTR;
; 479  : 			int *_Nr = (int *)&_File->_IORCNT;
; 480  : 			int *_Nw = (int *)&_File->_IOWCNT;
; 481  : 			_Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);

	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+20], edx
	lea	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+32], eax
	mov	DWORD PTR [ecx+36], eax
	mov	DWORD PTR [ecx+48], edx
	mov	DWORD PTR [ecx+52], edx
$LN10@Init:

; 482  : 			}
; 483  : 
; 484  : 		_Myfile = _File;

	mov	DWORD PTR [ecx+76], eax

; 485  : 		_State = _Stinit;

	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	DWORD PTR [ecx+68], edx

; 486  : 		_Pcvt = 0;	// pointer to codecvt facet

	mov	DWORD PTR [ecx+60], 0

; 487  : 		}

	ret	8
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??Z?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Z?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-=, COMDAT
; _this$ = ecx

; 417  : 		return (*this += -_Off);

	mov	eax, DWORD PTR __Off$[esp-4]
	push	esi
	neg	eax
	push	eax
	mov	esi, ecx
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	eax, esi
	pop	esi

; 418  : 		}

	ret	4
??Z?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBV_Container_base_secure@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBV_Container_base_secure@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 341  : 			{	// construct with pointer _Ptr

	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp]
	push	esi
	mov	esi, DWORD PTR __Pstring$[esp+4]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN3@String_ite
	test	ebx, ebx
	je	SHORT $LN3@String_ite
	mov	edx, DWORD PTR [esi+24]
	lea	eax, DWORD PTR [esi+4]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN13@String_ite
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN14@String_ite
$LN13@String_ite:
	mov	ecx, eax
$LN14@String_ite:
	cmp	ecx, ebx
	ja	SHORT $LN3@String_ite
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN17@String_ite
	mov	eax, DWORD PTR [eax]
$LN17@String_ite:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	ebx, ecx
	jbe	SHORT $LN4@String_ite
$LN3@String_ite:
	call	__invalid_parameter_noinfo
$LN4@String_ite:
	mov	DWORD PTR [edi], esi
	mov	DWORD PTR [edi+4], ebx

; 342  : 			}

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	ret	8
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBV_Container_base_secure@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ?swap@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXAAV12@@Z
_TEXT	SEGMENT
_other$ = 8						; size = 4
?swap@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXAAV12@@Z PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::swap, COMDAT
; _this$ = ecx

; 442  :         std::swap(px, other.px);

	mov	eax, DWORD PTR _other$[esp-4]
	push	esi
	cmp	ecx, eax
	je	SHORT $LN3@swap@13
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [eax], edx
$LN3@swap@13:

; 443  :         pn.swap(other.pn);

	mov	esi, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [ecx+4], edx
	pop	esi

; 444  :     }

	ret	4
?swap@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXAAV12@@Z ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::swap
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ
_TEXT	SEGMENT
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = ecx

; 104  : 		{	// return designated object

	push	esi
	mov	esi, ecx

; 105  : 
; 106  :  #if _HAS_ITERATOR_DEBUGGING
; 107  : 		if (this->_Mycont == 0 || _Myptr == 0
; 108  : 			|| _Myptr < ((_Mystring *)this->_Mycont)->_Myptr()
; 109  : 			|| ((_Mystring *)this->_Mycont)->_Myptr()
; 110  : 				+ ((_Mystring *)this->_Mycont)->_Mysize <= _Myptr)
; 111  : 			{
; 112  : 			_DEBUG_ERROR("string iterator not dereferencable");
; 113  : 			_SCL_SECURE_OUT_OF_RANGE;
; 114  : 			}
; 115  : 		__analysis_assume(_Myptr != 0);
; 116  :  #else
; 117  : 		if (this->_Mycont != _IGNORE_MYCONT)

	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN13@operator@101

; 118  : 		{
; 119  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	test	eax, eax
	jne	SHORT $LN2@operator@101
	call	__invalid_parameter_noinfo
$LN2@operator@101:

; 120  : 			_SCL_SECURE_VALIDATE_RANGE(_Myptr < (((_Mystring *)this->_Mycont)->_Myptr() + ((_Mystring *)(this->_Mycont))->_Mysize));

	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN10@operator@101
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN11@operator@101
$LN10@operator@101:
	lea	ecx, DWORD PTR [eax+4]
$LN11@operator@101:
	mov	eax, DWORD PTR [eax+20]
	add	eax, ecx
	cmp	DWORD PTR [esi+4], eax
	jb	SHORT $LN13@operator@101
	call	__invalid_parameter_noinfo
$LN13@operator@101:

; 121  : 		}
; 122  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 123  : 
; 124  : 		return (*_Myptr);

	mov	eax, DWORD PTR [esi+4]
	pop	esi

; 125  : 		}

	ret	0
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
tv206 = 12						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx

; 1770 : 		{	// look for [_Ptr, _Ptr + _Count) beginnng at or after _Off

	push	ecx

; 1771 : 
; 1772 :  #if _HAS_ITERATOR_DEBUGGING
; 1773 : 		if (_Count != 0)
; 1774 : 			_DEBUG_POINTER(_Ptr);
; 1775 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1776 : 
; 1777 : 		if (_Count == 0 && _Off <= _Mysize)

	mov	edx, DWORD PTR __Count$[esp]
	mov	eax, DWORD PTR __Off$[esp]
	mov	DWORD PTR _this$[esp+4], ecx
	test	edx, edx
	jne	SHORT $LN6@find
	cmp	eax, DWORD PTR [ecx+20]

; 1778 : 			return (_Off);	// null string always matches (if inside string)

	jbe	$LN7@find
$LN6@find:
	push	ebx
	push	ebp
	push	esi
	push	edi

; 1779 : 
; 1780 : 		size_type _Nm;
; 1781 : 		if (_Off < _Mysize && _Count <= (_Nm = _Mysize - _Off))

	mov	edi, DWORD PTR [ecx+20]
	cmp	eax, edi
	jae	SHORT $LN2@find
	sub	edi, eax
	cmp	edx, edi
	ja	SHORT $LN2@find

; 1782 : 			{	// room for match, look for it
; 1783 : 			const _Elem *_Uptr, *_Vptr;
; 1784 : 			for (_Nm -= _Count - 1, _Vptr = _Myptr() + _Off;

	mov	esi, 1
	sub	esi, edx
	add	edi, esi
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN11@find
	add	ecx, 4
	mov	DWORD PTR tv206[esp+16], ecx
	mov	ecx, DWORD PTR [ecx]
	jmp	SHORT $LN12@find
$LN11@find:
	add	ecx, 4
	mov	DWORD PTR tv206[esp+16], ecx
$LN12@find:

; 1785 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1786 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)

	mov	ebp, DWORD PTR __Ptr$[esp+16]
	lea	ebx, DWORD PTR [ecx+eax]
	movsx	eax, BYTE PTR [ebp]
	push	edi
	push	eax
	push	ebx
	call	_memchr
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN2@find
$LL4@find:

; 1787 : 				if (_Traits::compare(_Uptr, _Ptr, _Count) == 0)

	mov	ecx, DWORD PTR __Count$[esp+16]
	push	ecx
	push	ebp
	push	esi
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN20@find
	movsx	edx, BYTE PTR [ebp]
	sub	ebx, esi
	lea	edi, DWORD PTR [edi+ebx-1]
	push	edi
	push	edx
	lea	ebx, DWORD PTR [esi+1]
	push	ebx
	call	_memchr
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LL4@find
$LN2@find:
	pop	edi
	pop	esi
	pop	ebp

; 1789 : 			}
; 1790 : 
; 1791 : 		return (npos);	// no match

	or	eax, -1
	pop	ebx
$LN7@find:

; 1792 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN20@find:

; 1788 : 					return (_Uptr - _Myptr());	// found a match

	mov	eax, DWORD PTR _this$[esp+20]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	mov	ecx, DWORD PTR tv206[esp+16]
	jb	SHORT $LN18@find
	mov	ecx, DWORD PTR [ecx]
$LN18@find:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	sub	eax, ecx
	pop	ebx

; 1792 : 		}

	pop	ecx
	ret	12					; 0000000cH
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx

; 1501 : 		{	// return iterator for beginning of mutable sequence

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1502 : 		return (_STRING_ITERATOR(_Myptr()));

	mov	edx, DWORD PTR [edi+24]
	lea	eax, DWORD PTR [edi+4]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN5@begin@17
	mov	esi, DWORD PTR [eax]
	jmp	SHORT $LN6@begin@17
$LN5@begin@17:
	mov	esi, eax
$LN6@begin@17:
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [ebx], 0
	test	esi, esi
	je	SHORT $LN9@begin@17
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN19@begin@17
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN20@begin@17
$LN19@begin@17:
	mov	ecx, eax
$LN20@begin@17:
	cmp	ecx, esi
	ja	SHORT $LN9@begin@17
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN23@begin@17
	mov	eax, DWORD PTR [eax]
$LN23@begin@17:
	mov	ecx, DWORD PTR [edi+20]
	add	ecx, eax
	cmp	esi, ecx
	jbe	SHORT $LN10@begin@17
$LN9@begin@17:
	call	__invalid_parameter_noinfo
$LN10@begin@17:
	mov	DWORD PTR [ebx], edi
	pop	edi
	mov	DWORD PTR [ebx+4], esi
	pop	esi
	mov	eax, ebx
	pop	ebx

; 1503 : 		}

	ret	4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAE@XZ PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::~sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	ret	0
??1?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAE@XZ ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::~sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXI@Z PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	je	SHORT $LN8@scalar@14
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@14:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEPAXI@Z ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_impl.hpp
_TEXT	ENDS
;	COMDAT ??0?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z
_TEXT	SEGMENT
_px$ = 8						; size = 4
??0?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>, COMDAT
; _this$ = eax

; 67   :     {

	mov	ecx, 1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _px$[esp-4]
	mov	DWORD PTR [eax], OFFSET ??_7?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@
	mov	DWORD PTR [eax+12], ecx

; 68   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 69   :         boost::sp_scalar_constructor_hook( px, sizeof(X), this );
; 70   : #endif
; 71   :     }

	ret	4
??0?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
_TEXT	ENDS
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx

; 447  : 		{	// synchronize C stream with external file

	push	esi
	mov	esi, ecx

; 448  : 		return (_Myfile == 0
; 449  : 			|| _Traits::eq_int_type(_Traits::eof(), overflow())
; 450  : 			|| 0 <= fflush(_Myfile) ? 0 : -1);

	cmp	DWORD PTR [esi+76], 0
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	push	-1
	call	edx
	cmp	eax, -1
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi+76]
	push	eax
	call	_fflush
	add	esp, 4
	test	eax, eax
	jge	SHORT $LN3@sync
	or	eax, -1
	pop	esi

; 451  : 		}

	ret	0
$LN3@sync:

; 448  : 		return (_Myfile == 0
; 449  : 			|| _Traits::eq_int_type(_Traits::eof(), overflow())
; 450  : 			|| 0 <= fflush(_Myfile) ? 0 : -1);

	xor	eax, eax
	pop	esi

; 451  : 		}

	ret	0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PADH@Z
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 4
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PADH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx

; 434  : 		{	// offer _Buffer to C stream

	push	edi
	mov	edi, ecx

; 435  : 		if (_Myfile == 0 || setvbuf(_Myfile, (char *)_Buffer,
; 436  : 			_Buffer == 0 && _Count == 0 ? _IONBF : _IOFBF,
; 437  : 			_Count * sizeof (_Elem)) != 0)

	mov	ecx, DWORD PTR [edi+76]
	test	ecx, ecx
	je	SHORT $LN2@setbuf
	mov	edx, DWORD PTR __Buffer$[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	test	edx, edx
	jne	SHORT $LN6@setbuf
	test	esi, esi
	jne	SHORT $LN6@setbuf
	lea	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN7@setbuf
$LN6@setbuf:
	xor	eax, eax
$LN7@setbuf:
	push	esi
	push	eax
	push	edx
	push	ecx
	call	_setvbuf
	add	esp, 16					; 00000010H
	pop	esi
	test	eax, eax
	jne	SHORT $LN2@setbuf

; 439  : 		else
; 440  : 			{	// new buffer, reinitialize pointers
; 441  : 			_Init(_Myfile, _Openfl);

	mov	eax, DWORD PTR [edi+76]
	push	1
	push	eax
	mov	ecx, edi
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 442  : 			return (this);

	mov	eax, edi
	pop	edi

; 443  : 			}
; 444  : 		}

	ret	8
$LN2@setbuf:

; 438  : 			return (0);	// failed

	xor	eax, eax
	pop	edi

; 443  : 			}
; 444  : 		}

	ret	8
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PADH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx

; 310  : 		{	// get an element from stream, but don't point past it

	push	esi
	mov	esi, ecx

; 311  : 		int_type _Meta;
; 312  : 		if (_Mysb::gptr() != 0
; 313  : 			&& _Mysb::gptr() < _Mysb::egptr())

	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@underflow@2
	mov	edx, eax
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edx]
	add	edx, eax
	cmp	eax, edx
	jae	SHORT $LN4@underflow@2

; 314  : 			return (_Traits::to_int_type(*_Mysb::gptr()));	// return buffered

	movzx	eax, BYTE PTR [ecx]
	pop	esi

; 321  : 			}
; 322  : 		}

	ret	0
$LN4@underflow@2:

; 315  : 		else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow()))

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+20]
	push	edi
	mov	ecx, esi
	call	edx
	mov	edi, eax
	cmp	edi, -1
	jne	SHORT $LN2@underflow@2
	pop	edi

; 316  : 			return (_Meta);	// uflow failed, return EOF

	or	eax, eax
	pop	esi

; 321  : 			}
; 322  : 		}

	ret	0
$LN2@underflow@2:

; 317  : 		else
; 318  : 			{	// get a char, don't point past it
; 319  : 			pbackfail(_Meta);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	push	edi
	mov	ecx, esi
	call	edx

; 320  : 			return (_Meta);

	mov	eax, edi
	pop	edi
	pop	esi

; 321  : 			}
; 322  : 		}

	ret	0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -12						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-, COMDAT
; _this$ = ecx

; 421  : 		{	// return this - integer

	sub	esp, 12					; 0000000cH

; 422  : 		_Myt _Tmp = *this;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]

; 423  : 		return (_Tmp -= _Off);

	mov	edx, DWORD PTR __Off$[esp+8]
	neg	edx
	mov	DWORD PTR __Tmp$[esp+16], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$[esp+16]
	mov	DWORD PTR __Tmp$[esp+16], eax
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	ecx, DWORD PTR __Tmp$[esp+12]
	mov	edx, DWORD PTR __Tmp$[esp+16]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 424  : 		}

	add	esp, 12					; 0000000cH
	ret	8
??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ
_TEXT	SEGMENT
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = ecx

; 368  : 		{	// return designated object

	push	esi
	mov	esi, ecx

; 369  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN15@operator@102
	test	eax, eax
	jne	SHORT $LN4@operator@102
	call	__invalid_parameter_noinfo
$LN4@operator@102:
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN12@operator@102
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN13@operator@102
$LN12@operator@102:
	lea	ecx, DWORD PTR [eax+4]
$LN13@operator@102:
	mov	eax, DWORD PTR [eax+20]
	add	eax, ecx
	cmp	DWORD PTR [esi+4], eax
	jb	SHORT $LN15@operator@102
	call	__invalid_parameter_noinfo
$LN15@operator@102:
	mov	eax, DWORD PTR [esi+4]
	pop	esi

; 370  : 		}

	ret	0
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
__Off$ = 12						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx

; 1802 : 		return (find((const _Elem *)&_Ch, _Off, 1));

	mov	eax, DWORD PTR __Off$[esp-4]
	push	1
	push	eax
	lea	edx, DWORD PTR __Ch$[esp+4]
	push	edx
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find

; 1803 : 		}

	ret	8
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT
; _this$ = ecx

; 1511 : 		{	// return iterator for end of mutable sequence

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 1512 : 		return (_STRING_ITERATOR(_Myptr() + _Mysize));

	mov	ebp, DWORD PTR [edi+24]
	lea	eax, DWORD PTR [edi+4]
	cmp	ebp, 16					; 00000010H
	jb	SHORT $LN5@end@15
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN6@end@15
$LN5@end@15:
	mov	ecx, eax
$LN6@end@15:
	mov	edx, DWORD PTR [edi+20]
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+12]
	lea	esi, DWORD PTR [edx+ecx]
	mov	DWORD PTR [ebx], 0
	test	esi, esi
	je	SHORT $LN9@end@15
	cmp	ebp, 16					; 00000010H
	jb	SHORT $LN19@end@15
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN20@end@15
$LN19@end@15:
	mov	ecx, eax
$LN20@end@15:
	cmp	ecx, esi
	ja	SHORT $LN9@end@15
	cmp	ebp, 16					; 00000010H
	jb	SHORT $LN23@end@15
	mov	eax, DWORD PTR [eax]
$LN23@end@15:
	add	edx, eax
	cmp	esi, edx
	jbe	SHORT $LN10@end@15
$LN9@end@15:
	call	__invalid_parameter_noinfo
$LN10@end@15:
	mov	DWORD PTR [ebx], edi
	pop	edi
	mov	DWORD PTR [ebx+4], esi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx

; 1513 : 		}

	ret	4
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ
_TEXT	SEGMENT
?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::base, COMDAT
; _this$ = eax

; 42   :   base_type& base() { return helper_type::ref(_rng); }

	mov	eax, DWORD PTR [eax]
	ret	0
?base@?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEAAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@34@XZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
_TEXT	ENDS
;	COMDAT ?_Init@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
?_Init@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Init, COMDAT
; _this$ = esi

; 254  : 		_Cvt = _Lobj._Getcvt();

	call	__Getcvt
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], edx

; 255  : 		}

	ret	0
?_Init@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEXABV_Locinfo@2@@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Init
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ??R?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ
_TEXT	SEGMENT
??R?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::operator(), COMDAT
; _this$ = eax

; 45   :   result_type operator()() { return base()(); }

	push	esi
	mov	esi, DWORD PTR [eax]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
	pop	esi
	ret	0
??R?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
_TEXT	ENDS
;	COMDAT ??0?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
??0?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >, COMDAT
; _this$ = esi

; 270  : 		{	// construct from specified locale

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@

; 271  : 		_Init(_Lobj);

	call	__Getcvt
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], edx

; 272  : 		}

	mov	eax, esi
	ret	0
??0?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QAE@ABV_Locinfo@1@I@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\detail\pass_through_engine.hpp
_TEXT	ENDS
;	COMDAT ??R?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ
_TEXT	SEGMENT
??R?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ PROC ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::operator(), COMDAT
; _this$ = eax

; 45   :   result_type operator()() { return base()(); }

	push	esi
	mov	esi, DWORD PTR [eax]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
	pop	esi
	ret	0
??R?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@QAEKXZ ENDP ; boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> >::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_01.hpp
_TEXT	ENDS
;	COMDAT ??R?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ
_TEXT	SEGMENT
tv189 = -12						; size = 4
_result$159460 = -12					; size = 8
??R?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ PROC ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::operator(), COMDAT
; _this$ = esi

; 101  :   result_type operator()() {

	sub	esp, 12					; 0000000cH
$LL3@operator@103:

; 102  :     for (;;) {
; 103  :       result_type result = result_type(_rng() - (_rng.min)()) * _factor;

	mov	eax, DWORD PTR [esi+4992]
	cmp	eax, 624				; 00000270H
	jne	SHORT $LN20@operator@103
	xor	eax, eax
	jmp	SHORT $LN41@operator@103
$LN20@operator@103:
	cmp	eax, 1248				; 000004e0H
	jl	SHORT $LN18@operator@103
	mov	eax, 1
$LN41@operator@103:
	mov	edx, esi
	call	?twist@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@AAEXH@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::twist
$LN18@operator@103:
	mov	ecx, DWORD PTR [esi+4992]
	mov	eax, DWORD PTR [esi+ecx*4]
	inc	ecx
	mov	DWORD PTR [esi+4992], ecx
	mov	ecx, eax
	shr	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	edx, eax
	and	edx, -12953427				; ff3a58adH
	shl	edx, 7
	xor	eax, edx
	mov	ecx, eax
	and	ecx, -8308				; ffffdf8cH
	shl	ecx, 15					; 0000000fH
	xor	eax, ecx
	mov	edx, eax
	shr	edx, 18					; 00000012H
	xor	edx, eax
	mov	DWORD PTR tv189[esp+12], edx
	fild	DWORD PTR tv189[esp+12]
	test	edx, edx
	jge	SHORT $LN40@operator@103
	fadd	QWORD PTR __real@41f0000000000000
$LN40@operator@103:
	fmul	QWORD PTR [esi+5000]
	fst	QWORD PTR _result$159460[esp+12]

; 104  :       if (result < result_type(1))

	fld1
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LL3@operator@103

; 105  :         return result;

	movsd	xmm0, QWORD PTR _result$159460[esp+12]

; 106  :     }
; 107  :   }

	add	esp, 12					; 0000000cH
	ret	0
??R?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ENDP ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ
_TEXT	SEGMENT
tv193 = -12						; size = 4
_result$159453 = -12					; size = 8
??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ PROC ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator(), COMDAT
; _this$ = edi

; 101  :   result_type operator()() {

	sub	esp, 16					; 00000010H
	push	esi
	npad	12
$LL3@operator@104:

; 102  :     for (;;) {
; 103  :       result_type result = result_type(_rng() - (_rng.min)()) * _factor;

	mov	esi, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi+4992]
	cmp	eax, 624				; 00000270H
	jne	SHORT $LN20@operator@104
	xor	eax, eax
	jmp	SHORT $LN41@operator@104
$LN20@operator@104:
	cmp	eax, 1248				; 000004e0H
	jl	SHORT $LN18@operator@104
	mov	eax, 1
$LN41@operator@104:
	mov	edx, esi
	call	?twist@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@AAEXH@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::twist
$LN18@operator@104:
	mov	ecx, DWORD PTR [esi+4992]
	mov	eax, DWORD PTR [esi+ecx*4]
	inc	ecx
	mov	DWORD PTR [esi+4992], ecx
	mov	ecx, eax
	shr	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	edx, eax
	and	edx, -12953427				; ff3a58adH
	shl	edx, 7
	xor	eax, edx
	mov	ecx, eax
	and	ecx, -8308				; ffffdf8cH
	shl	ecx, 15					; 0000000fH
	xor	eax, ecx
	mov	edx, eax
	shr	edx, 18					; 00000012H
	xor	edx, eax
	mov	DWORD PTR tv193[esp+20], edx
	fild	DWORD PTR tv193[esp+20]
	test	edx, edx
	jge	SHORT $LN40@operator@104
	fadd	QWORD PTR __real@41f0000000000000
$LN40@operator@104:
	fmul	QWORD PTR [edi+8]
	fst	QWORD PTR _result$159453[esp+20]

; 104  :       if (result < result_type(1))

	fld1
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LL3@operator@104

; 105  :         return result;

	movsd	xmm0, QWORD PTR _result$159453[esp+20]

; 106  :     }
; 107  :   }

	pop	esi
	add	esp, 16					; 00000010H
	ret	0
??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ENDP ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z PROC ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::refcount_ptr<boost::exception_detail::error_info_container>, COMDAT
; _this$ = ecx

; 33   :                 {

	mov	eax, DWORD PTR _x$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx

; 34   :                 add_ref();

	test	ecx, ecx
	je	SHORT $LN6@refcount_p@2
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN6@refcount_p@2:

; 35   :                 }

	mov	eax, esi
	pop	esi
	ret	4
??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z ENDP ; boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container>::refcount_ptr<boost::exception_detail::error_info_container>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0exception@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0exception@boost@@QAE@ABV01@@Z PROC			; boost::exception::exception, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@boost@@6B@
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	test	ecx, ecx
	je	SHORT $LN6@exception@2
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
$LN6@exception@2:
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax
	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], ecx
	mov	edx, DWORD PTR [edi+16]
	pop	edi
	mov	DWORD PTR [esi+16], edx
	mov	eax, esi
	pop	esi
	ret	4
??0exception@boost@@QAE@ABV01@@Z ENDP			; boost::exception::exception
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
??$_Construct@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *,std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	eax, eax
	je	SHORT $LN3@Construct@18
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@18:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *,std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T348338 = -16						; size = 4
$T348330 = -12						; size = 12
??$_Allocate@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	sub	esp, 16					; 00000010H
	cmp	eax, 12					; 0000000cH
	jae	SHORT $LN1@Allocate@25

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T348338[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T348330[esp+20]
	mov	DWORD PTR $T348338[esp+20], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T348330[esp+20]
	push	ecx
	mov	DWORD PTR $T348330[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@Allocate@25:
$LN1@Allocate@25:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*2]
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 16					; 00000010H
	ret	0
$LN12@Allocate@25:
??$_Allocate@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>
_TEXT	ENDS
PUBLIC	__real@401921fb54442d18
PUBLIC	__real@c000000000000000
EXTRN	__CIsin:PROC
EXTRN	__CIcos:PROC
EXTRN	__CIsqrt:PROC
;	COMDAT __real@401921fb54442d18
; File c:\program files\boost\boost_1_40\boost\random\normal_distribution.hpp
CONST	SEGMENT
__real@401921fb54442d18 DQ 0401921fb54442d18r	; 6.28319
CONST	ENDS
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??$?RV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$normal_distribution@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z
_TEXT	SEGMENT
tv137 = -12						; size = 8
tv80 = -12						; size = 8
??$?RV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$normal_distribution@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z PROC ; boost::normal_distribution<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double> >, COMDAT
; _this$ = edi
; _eng$ = eax

; 61   :   result_type operator()(Engine& eng)

	sub	esp, 16					; 00000010H

; 62   :   {
; 63   : #ifndef BOOST_NO_STDC_NAMESPACE
; 64   :     // allow for Koenig lookup
; 65   :     using std::sqrt; using std::log; using std::sin; using std::cos;
; 66   : #endif
; 67   :     if(!_valid) {

	cmp	BYTE PTR [edi+40], 0
	push	esi
	mov	esi, eax
	jne	SHORT $LN2@operator@105

; 68   :       _r1 = eng();

	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::operator()
	movsd	QWORD PTR [edi+16], xmm0

; 69   :       _r2 = eng();

	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::operator()

; 70   :       _cached_rho = sqrt(-result_type(2) * log(result_type(1)-_r2));

	fld1
	movsd	QWORD PTR tv80[esp+20], xmm0
	fsub	QWORD PTR tv80[esp+20]
	movsd	QWORD PTR [edi+24], xmm0
	call	__CIlog
	fmul	QWORD PTR __real@c000000000000000
	call	__CIsqrt
	fstp	QWORD PTR [edi+32]

; 71   :       _valid = true;

	mov	BYTE PTR [edi+40], 1

; 72   :     } else {

	jmp	SHORT $LN1@operator@105
$LN2@operator@105:

; 73   :       _valid = false;

	mov	BYTE PTR [edi+40], 0
$LN1@operator@105:

; 74   :     }
; 75   :     // Can we have a boost::mathconst please?
; 76   :     const result_type pi = result_type(3.14159265358979323846);
; 77   :     
; 78   :     return _cached_rho * (_valid ?
; 79   :                           cos(result_type(2)*pi*_r1) :
; 80   :                           sin(result_type(2)*pi*_r1))
; 81   :       * _sigma + _mean;

	cmp	BYTE PTR [edi+40], 0
	fld	QWORD PTR [edi+16]
	fmul	QWORD PTR __real@401921fb54442d18
	je	SHORT $LN5@operator@105
	call	__CIcos
	jmp	SHORT $LN7@operator@105
$LN5@operator@105:
	call	__CIsin
$LN7@operator@105:
	movsd	xmm0, QWORD PTR [edi+32]
	fstp	QWORD PTR tv137[esp+20]
	mulsd	xmm0, QWORD PTR tv137[esp+20]
	mulsd	xmm0, QWORD PTR [edi+8]
	addsd	xmm0, QWORD PTR [edi]

; 82   :   }

	pop	esi
	add	esp, 16					; 00000010H
	ret	0
??$?RV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$normal_distribution@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z ENDP ; boost::normal_distribution<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_real.hpp
_TEXT	ENDS
;	COMDAT ??$?RV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$uniform_real@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z
_TEXT	SEGMENT
tv167 = -12						; size = 8
??$?RV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$uniform_real@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z PROC ; boost::uniform_real<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double> >, COMDAT
; _this$ = esi
; _eng$ = edi

; 54   :   result_type operator()(Engine& eng) {

	sub	esp, 12					; 0000000cH

; 55   :     return static_cast<result_type>(eng() - eng.min BOOST_PREVENT_MACRO_SUBSTITUTION())
; 56   :            / static_cast<result_type>(eng.max BOOST_PREVENT_MACRO_SUBSTITUTION() - eng.min BOOST_PREVENT_MACRO_SUBSTITUTION())
; 57   :            * (_max - _min) + _min;

	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR tv167[esp+12], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	xorps	xmm1, xmm1
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm2, xmm1
	movsd	xmm1, QWORD PTR tv167[esp+12]
	divsd	xmm0, xmm2
	movsd	xmm2, QWORD PTR [esi+8]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1

; 58   :   }

	add	esp, 12					; 0000000cH
	ret	0
??$?RV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$uniform_real@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z ENDP ; boost::uniform_real<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?is_complete@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ
_TEXT	SEGMENT
?is_complete@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_complete, COMDAT
; _this$ = eax

; 531  :     return (pimpl_->flags_ & f_complete) != 0;

	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+44]
	and	eax, 1

; 532  : }

	ret	0
?is_complete@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QBE_NXZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::is_complete
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
?construct@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::construct, COMDAT
; __Ptr$ = eax
; __Val$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	test	eax, eax
	je	SHORT $LN5@construct@18
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@18:

; 156  : 		}

	ret	0
?construct@?$allocator@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node *>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 146  : 		}

	ret	0
?allocate@?$allocator@U_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Node>::allocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::clear, COMDAT
; _this$ = esi

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	ecx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [ecx]

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	DWORD PTR [ecx], ecx

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx+4], ecx

; 835  : 		_Mysize = 0;

	mov	DWORD PTR [esi+24], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	cmp	eax, DWORD PTR [esi+20]
	je	SHORT $LN1@clear@11
	push	edi
	npad	6
$LL3@clear@11:

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	edi, DWORD PTR [eax]

; 840  : 			this->_Alnod.destroy(_Pnode);
; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
	cmp	edi, DWORD PTR [esi+20]
	jne	SHORT $LL3@clear@11
	pop	edi
$LN1@clear@11:

; 842  : 			}
; 843  : 		}

	ret	0
?clear@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::clear
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = eax

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXXZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Tidy, COMDAT
; _this$ = esi

; 1213 : 		clear();

	mov	ecx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], ecx
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx+4], ecx
	mov	DWORD PTR [esi+24], 0
	cmp	eax, DWORD PTR [esi+20]
	je	SHORT $LN3@Tidy@17
	push	edi
	npad	6
$LL5@Tidy@17:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
	cmp	edi, DWORD PTR [esi+20]
	jne	SHORT $LL5@Tidy@17
	pop	edi
$LN3@Tidy@17:

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));
; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	eax, DWORD PTR [esi+20]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	DWORD PTR [esi+20], 0

; 1218 : 		}

	ret	0
?_Tidy@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXXZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode, COMDAT

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1173 : 		int _Linkcnt = 0;
; 1174 : 
; 1175 : 		_TRY_BEGIN
; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	test	eax, eax
	je	SHORT $LN26@Buynode@12
	mov	DWORD PTR [eax], eax
$LN26@Buynode@12:

; 1177 : 		++_Linkcnt;
; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN36@Buynode@12
	mov	DWORD PTR [ecx], eax
$LN36@Buynode@12:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);
; 1183 : 		_RERAISE;
; 1184 : 		_CATCH_END
; 1185 : 		return (_Pnode);
; 1186 : 		}

	ret	0
?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV3456@ABQAV3456@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV3456@ABQAV3456@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &,std::_Iterator_base_aux>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV3456@ABQAV3456@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ PROC ; std::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ENDP ; std::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Bidit@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV1234@ABQAV1234@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Bidit@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV1234@ABQAV1234@@std@@QAE@XZ PROC ; std::_Bidit<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &>::_Bidit<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Bidit@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPBQAV1234@ABQAV1234@@std@@QAE@XZ ENDP ; std::_Bidit<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &>::_Bidit<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * const &>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ PROC ; std::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
??0?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = esi
; __Pnode$ = eax
; __Plist$ = edi

; 176  : 			{	// construct with node pointer _Pnode

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax

; 177  : 			_SCL_SECURE_TRAITS_VALIDATE(_Plist != NULL);

	test	edi, edi
	jne	SHORT $LN1@Const_iter@4
	call	__invalid_parameter_noinfo
$LN1@Const_iter@4:

; 178  : 			this->_Set_container(_Plist);

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx

; 179  : 			}

	mov	eax, esi
	ret	0
??0?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = eax

; 520  : 		{	// destroy the object

	push	esi
	mov	esi, eax

; 521  : 		_Tidy();

	call	?_Tidy@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXXZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Tidy

; 522  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	ret	0
??1?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
??0?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = esi
; __Pnode$ = eax
; __Plist$ = edi

; 361  : 			{	// construct with node pointer _Pnode

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN3@Iterator@2
	call	__invalid_parameter_noinfo
$LN3@Iterator@2:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx

; 362  : 			}

	mov	eax, esi
	ret	0
??0?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PBV12@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::_Iterator<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
?begin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 534  : 		return (iterator(_Nextnode(_Myhead), this));

	mov	edx, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 535  : 		}

	ret	0
?begin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::begin
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\access_control.hpp
_TEXT	ENDS
;	COMDAT ??0?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = eax

; 42   :         pub_() { }

	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], OFFSET ??_7?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@6B@
	ret	0
??0?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &,std::_Iterator_base_aux>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@HPBU12@ABU12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@HPBU12@ABU12@@std@@QAE@XZ PROC ; std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &>::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@HPBU12@ABU12@@std@@QAE@XZ ENDP ; std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &>::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = esi
; __Pnode$ = eax
; __Plist$ = edi

; 234  : 			{	// construct with node pointer _Pnode

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax

; 235  : 			_SCL_SECURE_VALIDATE(_Plist != NULL);

	test	edi, edi
	jne	SHORT $LN1@const_iter@4
	call	__invalid_parameter_noinfo
$LN1@const_iter@4:

; 236  : 			this->_Set_container(_Plist);

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx

; 237  : 			}

	mov	eax, esi
	ret	0
??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Root, COMDAT
; _this$ = eax

; 1325 : 		return (_Parent(_Myhead));

	mov	eax, DWORD PTR [eax+24]
	add	eax, 4

; 1326 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Root
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_01.hpp
_TEXT	ENDS
;	COMDAT ??0?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z
_TEXT	SEGMENT
tv154 = -4						; size = 4
??0?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z PROC ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>, COMDAT
; _this$ = eax
; _rng$ = ecx

; 91   :   {

	push	ecx
	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	DWORD PTR [eax], edx
	xor	edx, edx
	mov	ecx, 1
	mov	esi, 32					; 00000020H
$LL19@backward_c@2:
	or	edx, ecx
	rol	ecx, 1
	sub	esi, 1
	jne	SHORT $LL19@backward_c@2
	mov	DWORD PTR tv154[esp+8], edx
	fild	DWORD PTR tv154[esp+8]
	test	edx, edx
	jge	SHORT $LN38@backward_c@2
	fadd	QWORD PTR __real@41f0000000000000
$LN38@backward_c@2:
	fld1
	pop	esi
	fadd	ST(1), ST(0)
	fdivrp	ST(1), ST(0)
	fstp	QWORD PTR [eax+8]

; 92   :   }

	pop	ecx
	ret	0
??0?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z ENDP ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@VChannel@DRAMsimII@@HPBV34@ABV34@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@VChannel@DRAMsimII@@HPBV34@ABV34@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::random_access_iterator_tag,DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &,std::_Iterator_base_aux>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@VChannel@DRAMsimII@@HPBV34@ABV34@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::random_access_iterator_tag,DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Ranit@VChannel@DRAMsimII@@HPBV12@ABV12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Ranit@VChannel@DRAMsimII@@HPBV12@ABV12@@std@@QAE@XZ PROC ; std::_Ranit<DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &>::_Ranit<DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &>, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Ranit@VChannel@DRAMsimII@@HPBV12@ABV12@@std@@QAE@XZ ENDP ; std::_Ranit<DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &>::_Ranit<DRAMsimII::Channel,int,DRAMsimII::Channel const *,DRAMsimII::Channel const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
_TEXT	ENDS
;	COMDAT ??1?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ
_TEXT	SEGMENT
??1?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::~num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >, COMDAT
; _this$ = ecx

; 249  : 		}

	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAE@XZ ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::~num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??8?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator==, COMDAT
; _this$ = edi
; __Right$ = esi

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN1@operator@106
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN2@operator@106
$LN1@operator@106:
	call	__invalid_parameter_noinfo
$LN2@operator@106:

; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	0
??8?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >, COMDAT
; _this$ = edi
; __Pvector$ = esi

; 76   : 	_Vector_const_iterator(_Tptr _Ptr, const _Container_base *_Pvector)

	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp]
	mov	DWORD PTR [edi], 0

; 77   : 		{	// construct with pointer _Ptr
; 78   : 		_SCL_SECURE_VALIDATE(_Pvector != NULL && ((_Myvec *)_Pvector)->_Myfirst <= _Ptr && _Ptr <= ((_Myvec *)_Pvector)->_Mylast);

	test	esi, esi
	je	SHORT $LN1@Vector_con@15
	cmp	DWORD PTR [esi+12], ebx
	ja	SHORT $LN1@Vector_con@15
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN2@Vector_con@15
$LN1@Vector_con@15:
	call	__invalid_parameter_noinfo
$LN2@Vector_con@15:

; 79   : 		this->_Set_container(_Pvector);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax

; 80   : 		_Myptr = _Ptr;

	mov	DWORD PTR [edi+4], ebx

; 81   : 		}

	mov	eax, edi
	pop	ebx
	ret	4
??0?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE@PAVChannel@DRAMsimII@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator==, COMDAT
; _this$ = edi
; __Right$ = esi

; 300  : 
; 301  :  #if _HAS_ITERATOR_DEBUGGING
; 302  : 			if (this->_Mycont == 0 || this->_Mycont != _Right._Mycont)
; 303  : 				{
; 304  : 				_DEBUG_ERROR("map/set iterators incompatible");
; 305  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 306  : 				}
; 307  :  #else
; 308  : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN1@operator@107
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN2@operator@107
$LN1@operator@107:
	call	__invalid_parameter_noinfo
$LN2@operator@107:

; 309  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 310  : 
; 311  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	sete	cl
	mov	al, cl

; 312  : 			}

	ret	0
??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::iterator, COMDAT
; _this$ = esi
; __Pnode$ = eax
; __Plist$ = edi

; 451  : 			{	// construct with node pointer _Pnode

	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN3@iterator@3
	call	__invalid_parameter_noinfo
$LN3@iterator@3:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx

; 452  : 			}

	mov	eax, esi
	ret	0
??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::iterator
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_01.hpp
_TEXT	ENDS
;	COMDAT ??0?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z
_TEXT	SEGMENT
tv185 = -4						; size = 4
??0?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z PROC ; boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>, COMDAT
; _this$ = eax
; _rng$ = ecx

; 196  :   {

	push	ecx
	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	DWORD PTR [eax], edx
	xor	edx, edx
	mov	ecx, 1
	mov	esi, 32					; 00000020H
$LL21@uniform_01:
	or	edx, ecx
	rol	ecx, 1
	sub	esi, 1
	jne	SHORT $LL21@uniform_01
	mov	DWORD PTR tv185[esp+8], edx
	fild	DWORD PTR tv185[esp+8]
	test	edx, edx
	jge	SHORT $LN40@uniform_01
	fadd	QWORD PTR __real@41f0000000000000
$LN40@uniform_01:
	fld1
	pop	esi
	fadd	ST(1), ST(0)
	fdivrp	ST(1), ST(0)
	fstp	QWORD PTR [eax+8]

; 197  :   }

	pop	ecx
	ret	0
??0?$uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@QAE@ABV?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@1@@Z ENDP ; boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc, COMDAT
; _this$ = ecx

; 105  : 		return (0 < _Gnavail()
; 106  : 			? _Traits::to_int_type(*_Gninc()) : uflow());

	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sbumpc
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@sbumpc
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]

; 107  : 		}

	ret	0
$LN3@sbumpc:

; 105  : 		return (0 < _Gnavail()
; 106  : 			? _Traits::to_int_type(*_Gninc()) : uflow());

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	jmp	edx
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sbumpc
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = esi
; __Istr$ = eax

; 55   : 			{	// lock the stream buffer, if there

	mov	DWORD PTR [esi], eax

; 56   : 			if (_Myistr.rdbuf() != 0)

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN10@Sentry_bas

; 57   : 				_Myistr.rdbuf()->_Lock();

	lea	ecx, DWORD PTR [eax+4]
	call	?_Lock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Lock
$LN10@Sentry_bas:

; 58   : 			}

	mov	eax, esi
	ret	0
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
_TEXT	ENDS
;	COMDAT ??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ PROC	; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 146  : 	__CLR_OR_THIS_CALL basic_ios()

	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@

; 147  : 		{	// default constructor, do nothing
; 148  : 		}

	ret	0
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ ENDP	; std::basic_ios<char,std::char_traits<char> >::basic_ios<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 2038 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)

	push	ebx
	push	ebp

; 2039 : 
; 2040 :  #if _HAS_ITERATOR_DEBUGGING
; 2041 : 		if (_Count != 0)
; 2042 : 			_DEBUG_POINTER(_Ptr);
; 2043 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2044 : 
; 2045 : 		if (_Mysize < _Off)

	mov	ebp, DWORD PTR __Off$[esp+4]
	push	esi
	push	edi
	mov	edi, ecx
	cmp	DWORD PTR [edi+20], ebp
	jae	SHORT $LN2@compare@2

; 2046 : 			_String_base::_Xran();	// _Off off end

	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN2@compare@2:

; 2047 : 		if (_Mysize - _Off < _N0)

	mov	eax, DWORD PTR [edi+20]
	mov	esi, DWORD PTR __N0$[esp+12]

; 2048 : 			_N0 = _Mysize - _Off;	// trim _N0 to size
; 2049 : 
; 2050 : 		size_type _Ans = _Traits::compare(_Myptr() + _Off, _Ptr,
; 2051 : 			_N0 < _Count ? _N0 : _Count);

	mov	ebx, DWORD PTR __Count$[esp+12]
	sub	eax, ebp
	cmp	eax, esi
	cmovb	esi, eax
	mov	eax, esi
	cmp	esi, ebx
	jb	SHORT $LN6@compare@2
	mov	eax, ebx
$LN6@compare@2:
	cmp	DWORD PTR [edi+24], 16			; 00000010H
	jb	SHORT $LN13@compare@2
	mov	edi, DWORD PTR [edi+4]
	jmp	SHORT $LN14@compare@2
$LN13@compare@2:
	add	edi, 4
$LN14@compare@2:
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+16]
	push	eax
	add	edi, ebp
	push	edi
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH

; 2052 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 2053 : 			: _N0 == _Count ? 0 : +1);

	test	eax, eax
	jne	SHORT $LN8@compare@2
	cmp	esi, ebx
	jae	SHORT $LN7@compare@2
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx

; 2054 : 		}

	ret	16					; 00000010H
$LN7@compare@2:

; 2052 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 2053 : 			: _N0 == _Count ? 0 : +1);

	xor	eax, eax
	cmp	esi, ebx
	setne	al
$LN8@compare@2:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2054 : 		}

	ret	16					; 00000010H
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::~pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	ret	0
??1?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::~pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::~access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = eax
	mov	DWORD PTR [eax], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	ret	0
??1?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::~access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	je	SHORT $LN6@scalar@15
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@15:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??9?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator!=, COMDAT
; _this$ = edi
; __Right$ = esi

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@operator@108
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN4@operator@108
$LN3@operator@108:
	call	__invalid_parameter_noinfo
$LN4@operator@108:
	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	0
??9?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ
_TEXT	SEGMENT
?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::end, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 655  : 		{	// return iterator for end of nonmutable sequence

	push	ebx

; 656  : 		return (const_iterator(_Mylast, this));

	mov	ebx, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], 0
	cmp	DWORD PTR [edi+12], ebx
	jbe	SHORT $LN4@end@16
	call	__invalid_parameter_noinfo
$LN4@end@16:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 657  : 		}

	ret	0
?end@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ
_TEXT	SEGMENT
?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ PROC ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::begin, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 645  : 		{	// return iterator for beginning of nonmutable sequence

	push	ebx

; 646  : 		return (const_iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [edi+12]
	mov	DWORD PTR [esi], 0
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN4@begin@18
	call	__invalid_parameter_noinfo
$LN4@begin@18:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	eax, esi
	pop	ebx

; 647  : 		}

	ret	0
?begin@?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@2@XZ ENDP ; std::vector<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = edi
; __Right$ = esi

; 316  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@operator@109
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN4@operator@109
$LN3@operator@109:
	call	__invalid_parameter_noinfo
$LN4@operator@109:
	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+4]
	setne	cl
	mov	al, cl

; 317  : 			}

	ret	0
??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 566  : 		return (_TREE_ITERATOR(_Myhead));

	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 567  : 		}

	ret	0
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::end
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\variate_generator.hpp
_TEXT	ENDS
;	COMDAT ??R?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAENXZ
_TEXT	SEGMENT
??R?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAENXZ PROC ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::operator(), COMDAT
; _this$ = eax

; 100  :   result_type operator()() { return _dist(_eng); }

	push	edi
	lea	edi, DWORD PTR [eax+5008]
	call	??$?RV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$normal_distribution@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z ; boost::normal_distribution<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double> >
	pop	edi
	ret	0
??R?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAENXZ ENDP ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$normal_distribution@N@1@@Z
_TEXT	SEGMENT
$T349509 = -4996					; size = 4996
_this$ = 8						; size = 4
_e$ = 12						; size = 4996
_d$ = 5008						; size = 48
??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$normal_distribution@N@1@@Z PROC ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >, COMDAT

; 98   :     : _eng(decorated_engine(e)), _dist(d) { }

	mov	eax, 4996				; 00001384H
	call	__chkstk
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+4996]
	push	esi
	push	edi
	mov	eax, 4996				; 00001384H
	lea	esi, DWORD PTR _e$[esp+5004]
	call	__chkstk
	mov	edi, esp
	mov	ecx, 1249				; 000004e1H
	rep movsd
	lea	esi, DWORD PTR $T349509[esp+10004]
	call	??0?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@23@@Z ; boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >
	push	ebx
	mov	edx, eax
	call	??0?$backward_compatible_uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAE@ABV?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@1random@2@@Z ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double>
	movsd	xmm0, QWORD PTR _d$[esp+5004]
	pop	edi
	movsd	QWORD PTR [ebx+5008], xmm0
	movsd	xmm0, QWORD PTR _d$[esp+5008]
	pop	esi
	movsd	QWORD PTR [ebx+5016], xmm0
	mov	BYTE PTR [ebx+5048], 0
	mov	eax, ebx
	pop	ebx
	add	esp, 4996				; 00001384H
	ret	5048					; 000013b8H
??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$normal_distribution@N@1@@Z ENDP ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAENXZ
_TEXT	SEGMENT
tv168 = -12						; size = 8
??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAENXZ PROC ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::operator(), COMDAT
; _this$ = eax

; 100  :   result_type operator()() { return _dist(_eng); }

	sub	esp, 16					; 00000010H
	push	edi
	mov	edi, eax
	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv168[esp+20], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	xorps	xmm1, xmm1
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm2, xmm1
	movsd	xmm1, QWORD PTR tv168[esp+20]
	divsd	xmm0, xmm2
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	pop	edi
	add	esp, 16					; 00000010H
	ret	0
??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAENXZ ENDP ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_real@N@1@@Z
_TEXT	SEGMENT
tv187 = -4						; size = 4
_d$ = 8							; size = 16
??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_real@N@1@@Z PROC ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >, COMDAT
; _this$ = eax
; _e$ = ecx

; 98   :     : _eng(decorated_engine(e)), _dist(d) { }

	push	ecx
	push	esi
	mov	DWORD PTR [eax], ecx
	xor	edx, edx
	mov	ecx, 1
	mov	esi, 32					; 00000020H
$LL25@variate_ge:
	or	edx, ecx
	rol	ecx, 1
	sub	esi, 1
	jne	SHORT $LL25@variate_ge
	mov	DWORD PTR tv187[esp+8], edx
	fild	DWORD PTR tv187[esp+8]
	test	edx, edx
	jge	SHORT $LN44@variate_ge
	fadd	QWORD PTR __real@41f0000000000000
$LN44@variate_ge:
	fld1
	movq	xmm0, QWORD PTR _d$[esp+4]
	fadd	ST(1), ST(0)
	movq	QWORD PTR [eax+16], xmm0
	movq	xmm0, QWORD PTR _d$[esp+12]
	movq	QWORD PTR [eax+24], xmm0
	pop	esi
	fdivrp	ST(1), ST(0)
	fstp	QWORD PTR [eax+8]
	pop	ecx
	ret	16					; 00000010H
??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_real@N@1@@Z ENDP ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?is_complete@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QBE_NXZ
_TEXT	SEGMENT
?is_complete@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QBE_NXZ PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::is_complete, COMDAT
; _this$ = eax

; 466  :     bool is_complete() const { return chain_->is_complete(); }

	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	and	eax, 1
	ret	0
?is_complete@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QBE_NXZ ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::is_complete
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ?empty@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE_NXZ PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::empty, COMDAT
; _this$ = ecx

; 259  :       bool empty() const               { return m_path.empty(); } // name consistent with std containers

	xor	eax, eax
	cmp	DWORD PTR [ecx+20], eax
	sete	al
	ret	0
?empty@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE_NXZ ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::empty
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx

; 317  : 		{	// get a character from stream, point past it

	push	esi
	mov	esi, ecx

; 318  : 		return (_Traits::eq_int_type(_Traits::eof(), underflow())
; 319  : 			? _Traits::eof() : _Traits::to_int_type(*_Gninc()));

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	eax, -1
	jne	SHORT $LN3@uflow
	or	eax, eax
	pop	esi

; 320  : 		}

	ret	0
$LN3@uflow:

; 318  : 		return (_Traits::eq_int_type(_Traits::eof(), underflow())
; 319  : 			? _Traits::eof() : _Traits::to_int_type(*_Gninc()));

	mov	eax, DWORD PTR [esi+48]
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	movzx	eax, BYTE PTR [ecx]
	pop	esi

; 320  : 		}

	ret	0
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::uflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx

; 313  : 		return (_Traits::eof());

	or	eax, -1

; 314  : 		}

	ret	0
?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::underflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx

; 303  : 		return (_Traits::eof());

	or	eax, -1

; 304  : 		}

	ret	4
?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pbackfail
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx

; 298  : 		return (_Traits::eof());

	or	eax, -1

; 299  : 		}

	ret	4
?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::overflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::sgetc, COMDAT
; _this$ = ecx

; 111  : 		return (0 < _Gnavail()
; 112  : 			? _Traits::to_int_type(*gptr()) : underflow());

	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@sgetc
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@sgetc
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]

; 113  : 		}

	ret	0
$LN3@sgetc:

; 111  : 		return (0 < _Gnavail()
; 112  : 			? _Traits::to_int_type(*gptr()) : underflow());

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	jmp	eax
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sgetc
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = eax

; 62   : 			if (_Myistr.rdbuf() != 0)

	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN8@Sentry_bas@2

; 63   : 				_Myistr.rdbuf()->_Unlock();

	lea	ecx, DWORD PTR [eax+4]
	jmp	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
$LN8@Sentry_bas@2:

; 64   : 			}

	ret	0
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ PROC	; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 39   : 		}

	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP	; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 2025 : 		{	// compare [0, _Mysize) with [_Ptr, <null>)

	push	esi

; 2026 : 		_DEBUG_POINTER(_Ptr);
; 2027 : 		return (compare(0, _Mysize, _Ptr, _Traits::length(_Ptr)));

	mov	esi, DWORD PTR __Ptr$[esp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	5
$LL5@compare@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@compare@3
	sub	eax, edi
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	push	esi
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	pop	edi
	pop	esi

; 2028 : 		}

	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 2004 : 		return (compare(0, _Mysize, _Right._Myptr(), _Right.size()));

	mov	eax, DWORD PTR __Right$[esp-4]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	mov	edx, DWORD PTR [eax+20]
	jb	SHORT $LN7@compare@4
	mov	eax, DWORD PTR [eax+4]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare

; 2005 : 		}

	ret	4

; 2004 : 		return (compare(0, _Mysize, _Right._Myptr(), _Right.size()));

$LN7@compare@4:
	push	edx
	add	eax, 4
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare

; 2005 : 		}

	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT
; _this$ = ecx

; 1577 : 		{	// subscript nonmutable sequence

	push	esi
	push	edi

; 1578 : 
; 1579 :  #if _HAS_ITERATOR_DEBUGGING
; 1580 : 		// skip debug checks if the container is initizialed with _IGNORE_MYITERLIST
; 1581 : 		if (this->_Myfirstiter != _IGNORE_MYITERLIST)
; 1582 : 			{
; 1583 : 			if (_Mysize < _Off)	// sic
; 1584 : 				{
; 1585 : 				_DEBUG_ERROR("string subscript out of range");
; 1586 : 				_SCL_SECURE_OUT_OF_RANGE;
; 1587 : 				}
; 1588 : 			}
; 1589 :  #else
; 1590 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= _Mysize);

	mov	edi, DWORD PTR __Off$[esp+4]
	mov	esi, ecx
	cmp	edi, DWORD PTR [esi+20]
	jbe	SHORT $LN1@operator@110
	call	__invalid_parameter_noinfo
$LN1@operator@110:

; 1591 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1592 : 
; 1593 : 		return (_Myptr()[_Off]);

	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN6@operator@110
	mov	esi, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [esi+edi]
	pop	edi
	pop	esi

; 1594 : 		}

	ret	4

; 1591 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1592 : 
; 1593 : 		return (_Myptr()[_Off]);

$LN6@operator@110:
	lea	eax, DWORD PTR [esi+edi+4]
	pop	edi
	pop	esi

; 1594 : 		}

	ret	4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z
_TEXT	SEGMENT
?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at, COMDAT
; _this$ = eax
; __Off$ = edi

; 1548 : 		{	// subscript nonmutable sequence with checking

	push	esi
	mov	esi, eax

; 1549 : 		if (_Mysize <= _Off)

	cmp	DWORD PTR [esi+20], edi
	ja	SHORT $LN1@at

; 1550 : 			_String_base::_Xran();	// _Off off end

	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN1@at:

; 1551 : 		return (_Myptr()[_Off]);

	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN6@at
	mov	esi, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [esi+edi]
	pop	esi

; 1552 : 		}

	ret	0

; 1551 : 		return (_Myptr()[_Off]);

$LN6@at:
	lea	eax, DWORD PTR [esi+edi+4]
	pop	esi

; 1552 : 		}

	ret	0
?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\channel.h
_TEXT	ENDS
;	COMDAT ?getLastRankID@Channel@DRAMsimII@@QBEIXZ
_TEXT	SEGMENT
?getLastRankID@Channel@DRAMsimII@@QBEIXZ PROC		; DRAMsimII::Channel::getLastRankID, COMDAT
; _this$ = ecx

; 117  : 		unsigned getLastRankID() const { return lastCommand ? lastCommand->getAddress().getRank() : systemConfig.getRankCount() - 1; }///< get the last rank id a command was issued to

	mov	eax, DWORD PTR [ecx+24]
	test	eax, eax
	je	SHORT $LN3@getLastRan
	mov	eax, DWORD PTR [eax+60]
	ret	0
$LN3@getLastRan:
	mov	eax, DWORD PTR [ecx+176]
	mov	eax, DWORD PTR [eax+360]
	dec	eax
	ret	0
?getLastRankID@Channel@DRAMsimII@@QBEIXZ ENDP		; DRAMsimII::Channel::getLastRankID
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\positioning.hpp
_TEXT	ENDS
;	COMDAT ?position_to_offset@iostreams@boost@@YA_JV?$fpos@H@std@@@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 24
?position_to_offset@iostreams@boost@@YA_JV?$fpos@H@std@@@Z PROC ; boost::iostreams::position_to_offset, COMDAT

; 104  :     return fpos_t_to_offset(streampos_to_fpos_t(pos)) +
; 105  :            static_cast<stream_offset>(static_cast<std::streamoff>(pos)) -
; 106  :            static_cast<stream_offset>(_FPOSOFF(streampos_to_fpos_t(pos)));

	mov	ecx, DWORD PTR _pos$[esp+4]
	mov	eax, DWORD PTR _pos$[esp-4]
	add	eax, ecx
	cdq
	push	esi
	push	edi
	mov	esi, eax
	mov	edi, edx
	mov	eax, ecx
	cdq
	sub	esi, eax
	sbb	edi, edx
	add	esi, ecx
	adc	edi, DWORD PTR _pos$[esp+16]
	mov	eax, esi
	mov	edx, edi

; 107  : }

	pop	edi
	pop	esi
	ret	0
?position_to_offset@iostreams@boost@@YA_JV?$fpos@H@std@@@Z ENDP ; boost::iostreams::position_to_offset
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\operations.hpp
_TEXT	ENDS
;	COMDAT ?is_regular@filesystem@boost@@YA_NVfile_status@12@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?is_regular@filesystem@boost@@YA_NVfile_status@12@@Z PROC ; boost::filesystem::is_regular, COMDAT

; 114  :     inline bool is_regular( file_status f )   { return f.type() == regular_file; }

	xor	eax, eax
	cmp	DWORD PTR _f$[esp-4], 2
	sete	al
	ret	0
?is_regular@filesystem@boost@@YA_NVfile_status@12@@Z ENDP ; boost::filesystem::is_regular
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?exists@filesystem@boost@@YA_NVfile_status@12@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?exists@filesystem@boost@@YA_NVfile_status@12@@Z PROC	; boost::filesystem::exists, COMDAT

; 107  :     inline bool exists( file_status f )       { return f.type() != status_unknown && f.type() != file_not_found; }

	mov	eax, DWORD PTR _f$[esp-4]
	test	eax, eax
	je	SHORT $LN3@exists
	cmp	eax, 1
	je	SHORT $LN3@exists
	mov	eax, 1
	ret	0
$LN3@exists:
	xor	eax, eax
	ret	0
?exists@filesystem@boost@@YA_NVfile_status@12@@Z ENDP	; boost::filesystem::exists
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\shared_count.hpp
_TEXT	ENDS
;	COMDAT ??0shared_count@detail@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
??0shared_count@detail@boost@@QAE@ABV012@@Z PROC	; boost::detail::shared_count::shared_count, COMDAT
; _this$ = ecx

; 227  :     {

	mov	eax, ecx
	mov	ecx, DWORD PTR _r$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 228  :         if( pi_ != 0 ) pi_->add_ref_copy();

	test	edx, edx
	je	SHORT $LN4@shared_cou
	add	edx, 4
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [edx], ecx
$LN4@shared_cou:

; 229  :     }

	ret	4
??0shared_count@detail@boost@@QAE@ABV012@@Z ENDP	; boost::detail::shared_count::shared_count
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1shared_count@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1shared_count@detail@boost@@QAE@XZ PROC		; boost::detail::shared_count::~shared_count, COMDAT
; _this$ = ecx

; 216  :     {

	push	esi

; 217  :         if( pi_ != 0 ) pi_->release();

	mov	esi, DWORD PTR [ecx]
	test	esi, esi
	je	SHORT $LN7@shared_cou@2
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN7@shared_cou@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN7@shared_cou@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	pop	esi
	jmp	edx
$LN7@shared_cou@2:
	pop	esi

; 218  : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 219  :         id_ = 0;
; 220  : #endif
; 221  :     }

	ret	0
??1shared_count@detail@boost@@QAE@XZ ENDP		; boost::detail::shared_count::~shared_count
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gsp_counted_base@detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gsp_counted_base@detail@boost@@UAEPAXI@Z PROC	; boost::detail::sp_counted_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7sp_counted_base@detail@boost@@6B@
	je	SHORT $LN6@scalar@16
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@16:
	mov	eax, esi
	pop	esi
	ret	4
??_Gsp_counted_base@detail@boost@@UAEPAXI@Z ENDP	; boost::detail::sp_counted_base::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gclone_base@exception_detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gclone_base@exception_detail@boost@@UAEPAXI@Z PROC	; boost::exception_detail::clone_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	je	SHORT $LN6@scalar@17
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@17:
	mov	eax, esi
	pop	esi
	ret	4
??_Gclone_base@exception_detail@boost@@UAEPAXI@Z ENDP	; boost::exception_detail::clone_base::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\system\error_code.hpp
_TEXT	ENDS
;	COMDAT ??Berror_code@system@boost@@QBEP6AXXZXZ
_TEXT	SEGMENT
??Berror_code@system@boost@@QBEP6AXXZXZ PROC		; boost::system::error_code::operator void (__cdecl*)(void), COMDAT
; _this$ = ecx

; 354  :         return m_val == 0 ? 0 : unspecified_bool_true;

	mov	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	and	eax, OFFSET ?unspecified_bool_true@error_code@system@boost@@SAXXZ ; boost::system::error_code::unspecified_bool_true

; 355  :       }

	ret	0
??Berror_code@system@boost@@QBEP6AXXZXZ ENDP		; boost::system::error_code::operator void (__cdecl*)(void)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\math.h
_TEXT	ENDS
;	COMDAT ?log@@YAMM@Z
_TEXT	SEGMENT
tv73 = 8						; size = 4
__X$ = 8						; size = 4
?log@@YAMM@Z PROC					; log, COMDAT

; 520  :         {return (logf(_X)); }

	fld	DWORD PTR __X$[esp-4]
	call	__CIlog
	fstp	DWORD PTR tv73[esp-4]
	fld	DWORD PTR tv73[esp-4]
	ret	0
?log@@YAMM@Z ENDP					; log
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?floor@@YAMM@Z
_TEXT	SEGMENT
?floor@@YAMM@Z PROC					; floor, COMDAT
; __X$ = xmm0s

; 512  :         {return (floorf(_X)); }

	movsd	xmm1, QWORD PTR __real@8000000000000000
	movsd	xmm2, QWORD PTR __real@4330000000000000
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	cvtss2sd xmm3, xmm0
	andpd	xmm1, xmm3
	orpd	xmm2, xmm1
	movapd	xmm0, xmm3
	addsd	xmm0, xmm2
	subsd	xmm0, xmm2
	movapd	xmm2, xmm0
	subsd	xmm2, xmm3
	cmpnlesd xmm2, xmm1
	andpd	xmm2, xmm4
	subsd	xmm0, xmm2
	cvtsd2ss xmm0, xmm0
	ret	0
?floor@@YAMM@Z ENDP					; floor
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
?fabs@@YAMM@Z PROC					; fabs, COMDAT
; __X$ = xmm0s

; 510  :         {return (fabsf(_X)); }

	movsd	xmm1, QWORD PTR __mask@@AbsDouble@
	cvtss2sd xmm0, xmm0
	andpd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	ret	0
?fabs@@YAMM@Z ENDP					; fabs
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?exp@@YAMM@Z
_TEXT	SEGMENT
tv73 = 8						; size = 4
__X$ = 8						; size = 4
?exp@@YAMM@Z PROC					; exp, COMDAT

; 508  :         {return (expf(_X)); }

	fld	DWORD PTR __X$[esp-4]
	call	__CIexp
	fstp	DWORD PTR tv73[esp-4]
	fld	DWORD PTR tv73[esp-4]
	ret	0
?exp@@YAMM@Z ENDP					; exp
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?abs@@YAMM@Z
_TEXT	SEGMENT
?abs@@YAMM@Z PROC					; abs, COMDAT
; __X$ = xmm0s

; 492  :         {return (fabsf(_X)); }

	movsd	xmm1, QWORD PTR __mask@@AbsDouble@
	cvtss2sd xmm0, xmm0
	andpd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	ret	0
?abs@@YAMM@Z ENDP					; abs
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN11@sentry
	lea	ecx, DWORD PTR [eax+4]
	jmp	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
$LN11@sentry:
	ret	0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gios_base@std@@UAEPAXI@Z PROC			; std::ios_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@18
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@18:
	mov	eax, esi
	pop	esi
	ret	4
??_Gios_base@std@@UAEPAXI@Z ENDP			; std::ios_base::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT
$T350054 = -16						; size = 16
__Lobj$ = 8						; size = 4
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z PROC		; std::ctype<char>::_Init, COMDAT
; _this$ = ecx

; 1807 : 		{	// initialize from _Lobj

	sub	esp, 20					; 00000014H
	push	esi

; 1808 : 		_Ctype = _Lobj._Getctype();

	lea	eax, DWORD PTR $T350054[esp+24]
	push	eax
	mov	esi, ecx
	call	__Getctype
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [esi+8], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	add	esp, 4
	movq	QWORD PTR [esi+16], xmm0

; 1809 : 		}

	pop	esi
	add	esp, 20					; 00000014H
	ret	4
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z ENDP		; std::ctype<char>::_Init
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1ctype_base@std@@UAE@XZ
_TEXT	SEGMENT
??1ctype_base@std@@UAE@XZ PROC				; std::ctype_base::~ctype_base, COMDAT
; _this$ = ecx

; 1363 : 		}

	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1ctype_base@std@@UAE@XZ ENDP				; std::ctype_base::~ctype_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0ctype_base@std@@QAE@I@Z
_TEXT	SEGMENT
__Refs$ = 8						; size = 4
??0ctype_base@std@@QAE@I@Z PROC				; std::ctype_base::ctype_base, COMDAT
; _this$ = ecx

; 1358 : 		{	// default constructor

	mov	eax, ecx
	mov	ecx, DWORD PTR __Refs$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7ctype_base@std@@6B@

; 1359 : 		}

	ret	4
??0ctype_base@std@@QAE@I@Z ENDP				; std::ctype_base::ctype_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1codecvt_base@std@@UAE@XZ
_TEXT	SEGMENT
??1codecvt_base@std@@UAE@XZ PROC			; std::codecvt_base::~codecvt_base, COMDAT
; _this$ = ecx

; 705  : 		}

	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1codecvt_base@std@@UAE@XZ ENDP			; std::codecvt_base::~codecvt_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0codecvt_base@std@@QAE@I@Z
_TEXT	SEGMENT
__Refs$ = 8						; size = 4
??0codecvt_base@std@@QAE@I@Z PROC			; std::codecvt_base::codecvt_base, COMDAT
; _this$ = ecx

; 685  : 		{	// default constructor

	mov	eax, ecx
	mov	ecx, DWORD PTR __Refs$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7codecvt_base@std@@6B@

; 686  : 		}

	ret	4
??0codecvt_base@std@@QAE@I@Z ENDP			; std::codecvt_base::codecvt_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4locale@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Lock$350096 = 12					; size = 4
__Lock$350089 = 12					; size = 4
__Right$ = 12						; size = 4
??4locale@std@@QAEAAV01@ABV01@@Z PROC			; std::locale::operator=, COMDAT

; 396  : 		{	// assign a locale

	push	ebx
	mov	ebx, DWORD PTR _this$[esp]
	push	ebp
	mov	ebp, DWORD PTR __Right$[esp+4]
	push	edi

; 397  : 		if (_Ptr != _Right._Ptr)

	mov	edi, DWORD PTR [ebx]
	cmp	edi, DWORD PTR [ebp]
	je	SHORT $LN12@operator@111

; 398  : 			{	// different implementation, point at new one
; 399  : 			_DELETE_CRT(_Ptr->_Decref());

	push	0
	lea	ecx, DWORD PTR __Lock$350089[esp+12]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN6@operator@111
	cmp	eax, -1
	jae	SHORT $LN6@operator@111
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN6@operator@111:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$350089[esp+12]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN4@operator@111
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN4@operator@111:

; 400  : 			_Ptr = _Right._Ptr;

	mov	esi, DWORD PTR [ebp]

; 401  : 			_Ptr->_Incref();

	push	0
	lea	ecx, DWORD PTR __Lock$350096[esp+16]
	mov	DWORD PTR [ebx], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN9@operator@111
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN9@operator@111:
	lea	ecx, DWORD PTR __Lock$350096[esp+12]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	pop	esi
$LN12@operator@111:
	pop	edi
	pop	ebp

; 402  : 			}
; 403  : 		return (*this);

	mov	eax, ebx
	pop	ebx

; 404  : 		}

	ret	8
??4locale@std@@QAEAAV01@ABV01@@Z ENDP			; std::locale::operator=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$350106 = -4					; size = 4
??0locale@std@@QAE@XZ PROC				; std::locale::locale, COMDAT
; _this$ = ecx

; 324  : 		{	// construct from current locale

	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [edi], eax

; 325  : 		_Getgloballocale()->_Incref();

	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	0
	lea	ecx, DWORD PTR __Lock$350106[esp+16]
	mov	esi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN3@locale
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN3@locale:
	lea	ecx, DWORD PTR __Lock$350106[esp+12]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 326  : 		}

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ecx
	ret	0
??0locale@std@@QAE@XZ ENDP				; std::locale::locale
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT

; 522  : 		return (_Meta != eof() ? _Meta : !eof());

	mov	eax, DWORD PTR __Meta$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, ecx
	inc	eax
	neg	eax
	sbb	eax, eax
	and	eax, ecx

; 523  : 		}

	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; __First1$ = esi
; __First2$ = ecx
; __Count$ = eax

; 480  : 		// assume there is enough space in the destination buffer
; 481  : 		return _Move_s(_First1, _Count, _First2, _Count);

	push	eax
	push	ecx
	push	eax
	push	esi
	call	_memmove_s
	add	esp, 16					; 00000010H
	mov	eax, esi

; 482  : 		}

	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\execute.hpp
;	COMDAT ??$execute@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@?$execute_traits_impl@X@detail@iostreams@boost@@SAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@123@@Z
_TEXT	SEGMENT
_op$ = 8						; size = 8
??$execute@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@?$execute_traits_impl@X@detail@iostreams@boost@@SAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@123@@Z PROC ; boost::iostreams::detail::execute_traits_impl<void>::execute<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >, COMDAT

; 62   :     static int execute(Op op) { op(); return 0; }

	mov	eax, DWORD PTR _op$[esp]
	mov	ecx, DWORD PTR _op$[esp-4]
	cmp	eax, 1
	jne	SHORT $LN6@execute
	mov	eax, DWORD PTR [ecx+60]
	test	al, 2
	jne	SHORT $LN11@execute
	or	eax, 2
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	1
	call	edx
	xor	eax, eax
	ret	0
$LN6@execute:
	cmp	eax, 2
	jne	SHORT $LN11@execute
	mov	eax, DWORD PTR [ecx+60]
	test	al, 4
	jne	SHORT $LN11@execute
	or	eax, 4
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	2
	call	edx
$LN11@execute:
	xor	eax, eax
	ret	0
??$execute@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@?$execute_traits_impl@X@detail@iostreams@boost@@SAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@123@@Z ENDP ; boost::iostreams::detail::execute_traits_impl<void>::execute<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
_TEXT	ENDS
;	COMDAT ??$close_all@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@12@@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
??$close_all@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@12@@Z PROC ; boost::iostreams::detail::close_all<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 51   :     try {
; 52   :         boost::iostreams::close(t, BOOST_IOS::in);
; 53   :     } catch (...) {
; 54   :         try {
; 55   :             boost::iostreams::close(t, BOOST_IOS::out);
; 56   :         } catch (...) { }
; 57   :         throw;
; 58   :     }
; 59   :     boost::iostreams::close(t, BOOST_IOS::out);
; 60   : }

	ret	0
??$close_all@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@YAXAAV?$basic_null_device@DUinput@iostreams@boost@@@12@@Z ENDP ; boost::iostreams::detail::close_all<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\execute.hpp
_TEXT	ENDS
;	COMDAT ??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@@Z
_TEXT	SEGMENT
_op$ = 8						; size = 8
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@@Z PROC ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >, COMDAT

; 85   :     return execute_traits<Op>::execute(op);

	mov	eax, DWORD PTR _op$[esp]
	mov	ecx, DWORD PTR _op$[esp-4]
	cmp	eax, 1
	jne	SHORT $LN8@execute_al
	mov	eax, DWORD PTR [ecx+60]
	test	al, 2
	jne	SHORT $LN13@execute_al
	or	eax, 2
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	1
	call	edx
	xor	eax, eax

; 86   : }

	ret	0

; 85   :     return execute_traits<Op>::execute(op);

$LN8@execute_al:
	cmp	eax, 2
	jne	SHORT $LN13@execute_al
	mov	eax, DWORD PTR [ecx+60]
	test	al, 4
	jne	SHORT $LN13@execute_al
	or	eax, 4
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	push	2
	call	edx
$LN13@execute_al:
	xor	eax, eax

; 86   : }

	ret	0
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@@Z ENDP ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
_TEXT	ENDS
;	COMDAT ??$range_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$range_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::range_detail::range_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = esi
; _c$ = ecx

; 45   :             //
; 46   :             // If you get a compile-error here, it is most likely because
; 47   :             // you have not implemented range_begin() properly in
; 48   :             // the namespace of C
; 49   :             //
; 50   :             return c.end();

	push	esi
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	eax, esi

; 51   :         }

	ret	0
??$range_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::range_detail::range_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$range_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$range_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::range_detail::range_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = esi
; _c$ = ecx

; 44   :         //
; 45   :         // If you get a compile-error here, it is most likely because
; 46   :         // you have not implemented range_begin() properly in
; 47   :         // the namespace of C
; 48   :         //
; 49   :         return c.begin();

	push	esi
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	eax, esi

; 50   :     }

	ret	0
??$range_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::range_detail::range_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\linked_streambuf.hpp
xdata$x	SEGMENT
__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$1
__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$0
__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$5
__ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z
	DD	02H
	DD	FLAT:__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\preprocessor\iteration\detail\local.hpp
xdata$x	ENDS
;	COMDAT ??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_op$ = 8						; size = 8
_c0$ = 16						; size = 8
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z PROC ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >, COMDAT

; 37   :         BOOST_PP_LOCAL_MACRO(1)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _op$[ebp+4]
	mov	esi, DWORD PTR _op$[ebp]
	mov	edi, eax
	cmp	eax, 1
	jne	SHORT $LN20@execute_al@2
	mov	eax, DWORD PTR [esi+60]
	test	al, 2
	jne	SHORT $LN20@execute_al@2
	or	eax, 2
	mov	DWORD PTR [esi+60], eax
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+60]
	push	edi
	mov	ecx, esi
	call	edx
$LN20@execute_al@2:
	cmp	edi, 2
	jne	SHORT $LN19@execute_al@2
	mov	eax, DWORD PTR [esi+60]
	test	al, 4
	jne	SHORT $LN19@execute_al@2
	or	eax, 4
	mov	DWORD PTR [esi+60], eax
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+60]
	push	edi
	mov	ecx, esi
	call	edx
$LN19@execute_al@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _c0$[ebp+4]
	mov	ecx, DWORD PTR _c0$[ebp]
	cmp	eax, 1
	jne	SHORT $LN26@execute_al@2
	mov	eax, DWORD PTR [ecx+60]
	test	al, 2
	jne	SHORT $LN25@execute_al@2
	or	eax, 2
	push	1
	jmp	SHORT $LN34@execute_al@2
__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$0:
	lea	ecx, DWORD PTR _c0$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??R?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ; boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >::operator()
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN10@execute_al@2:
	push	0
	push	0
	call	__CxxThrowException@8
$LN35@execute_al@2:
__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN10@execute_al@2
	ret	0
$LN26@execute_al@2:
	cmp	eax, 2
	jne	SHORT $LN25@execute_al@2
	mov	eax, DWORD PTR [ecx+60]
	test	al, 4
	jne	SHORT $LN25@execute_al@2
	or	eax, 4
	push	2
$LN34@execute_al@2:
	mov	DWORD PTR [ecx+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	call	edx
$LN25@execute_al@2:
	xor	eax, eax
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN33@execute_al@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z ENDP ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
;	COMDAT ??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; boost::end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = esi
; _r$ = ecx

; 94   : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 95   :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 96   :     /**/
; 97   :     using namespace range_detail;
; 98   : #endif
; 99   :     return range_end( r );

	push	esi
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	eax, esi

; 100  : }

	ret	0
??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; boost::end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; boost::begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = esi
; _r$ = ecx

; 98   : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 99   :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 100  :     /**/
; 101  :     using namespace range_detail;
; 102  : #endif
; 103  :     return range_begin( r );

	push	esi
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	eax, esi

; 104  : }

	ret	0
??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; boost::begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT
?allocate@?$allocator@D@std@@QAEPADIPBX@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; __Count$ = eax

; 150  : 		return (allocate(_Count));

	push	eax
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 151  : 		}

	ret	0
?allocate@?$allocator@D@std@@QAEPADIPBX@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Equal@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??$_Equal@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE_NABV01@@Z PROC ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::_Equal<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >, COMDAT
; _this$ = esi
; __Right$ = eax

; 1973 : 		{	// test for iterator equality
; 1974 : 		return (current == _Right.base());

	mov	ecx, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN5@Equal@6
	cmp	eax, ecx
	je	SHORT $LN6@Equal@6
$LN5@Equal@6:
	call	__invalid_parameter_noinfo
$LN6@Equal@6:
	xor	eax, eax
	cmp	DWORD PTR [esi+4], edi
	pop	edi
	sete	al

; 1975 : 		}

	ret	0
??$_Equal@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBE_NABV01@@Z ENDP ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::_Equal<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
xdata$x	SEGMENT
__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$0
__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$4
__ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\preprocessor\iteration\detail\local.hpp
xdata$x	ENDS
;	COMDAT ??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_c1$ = 8						; size = 4
_op$ = 12						; size = 8
_c0$ = 20						; size = 8
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z PROC ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > > >, COMDAT

; 40   :         BOOST_PP_LOCAL_MACRO(2)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	eax, DWORD PTR _c0$[ebp+4]
	mov	ecx, DWORD PTR _c0$[ebp]
	mov	edx, DWORD PTR _op$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _op$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
	mov	ecx, DWORD PTR _c1$[ebp]
	add	esp, 16					; 00000010H
	cmp	BYTE PTR [ecx+1], bl
	je	SHORT $LN3@execute_al@3
	mov	BYTE PTR [ecx+1], bl
$LN3@execute_al@3:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$0:
	mov	eax, DWORD PTR _c1$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	BYTE PTR [eax+1], bl
	je	SHORT $LN15@execute_al@3
	mov	BYTE PTR [eax+1], bl
$LN15@execute_al@3:
	push	ebx
	push	ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	call	__CxxThrowException@8
$LN30@execute_al@3:
$LN29@execute_al@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ENDP ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\buffer.hpp
;	COMDAT ??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@H@Z
_TEXT	SEGMENT
$T403304 = -16						; size = 4
$T403336 = -12						; size = 12
??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@H@Z PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::basic_buffer<char,std::allocator<char> >, COMDAT
; _this$ = edi
; _buffer_size$ = esi

; 152  :     { }

	sub	esp, 16					; 00000010H
	mov	ecx, esi
	test	esi, esi
	ja	SHORT $LN11@basic_buff@2
	xor	ecx, ecx
$LN9@basic_buff@2:
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	DWORD PTR [edi], eax
	add	esp, 4
	mov	DWORD PTR [edi+4], esi
	mov	eax, edi
	add	esp, 16					; 00000010H
	ret	0
$LN11@basic_buff@2:
	or	eax, -1
	xor	edx, edx
	div	esi
	cmp	eax, 1
	jae	SHORT $LN9@basic_buff@2
	lea	eax, DWORD PTR $T403304[esp+16]
	push	eax
	lea	ecx, DWORD PTR $T403336[esp+20]
	mov	DWORD PTR $T403304[esp+20], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T403336[esp+20]
	push	ecx
	mov	DWORD PTR $T403336[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN20@basic_buff@2:
$LN19@basic_buff@2:
	int	3
??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@H@Z ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::basic_buffer<char,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ??$adl_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
_TEXT	SEGMENT
$T403347 = -8						; size = 8
??$adl_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z PROC ; boost::iterator_range_detail::iterator_range_impl<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::adl_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = esi
; _r$ = ecx

; 73   :             static IteratorT adl_end( ForwardRange& r )

	sub	esp, 8

; 74   :             {
; 75   :                 return IteratorT( boost::end( r ) );

	lea	eax, DWORD PTR $T403347[esp+8]
	push	eax
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	ecx, DWORD PTR $T403347[esp+8]
	mov	edx, DWORD PTR $T403347[esp+12]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+4], edx
	mov	eax, esi

; 76   :             }

	add	esp, 8
	ret	0
??$adl_end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ENDP ; boost::iterator_range_detail::iterator_range_impl<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::adl_end<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$adl_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??$adl_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z PROC ; boost::iterator_range_detail::iterator_range_impl<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::adl_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _r$ = edi

; 68   :             {
; 69   :                 return IteratorT( boost::begin( r ) );

	mov	edx, DWORD PTR [edi+24]
	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp]
	push	esi
	lea	eax, DWORD PTR [edi+4]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN11@adl_begin
	mov	esi, DWORD PTR [eax]
	jmp	SHORT $LN12@adl_begin
$LN11@adl_begin:
	mov	esi, eax
$LN12@adl_begin:
	test	esi, esi
	je	SHORT $LN15@adl_begin
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN25@adl_begin
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN26@adl_begin
$LN25@adl_begin:
	mov	ecx, eax
$LN26@adl_begin:
	cmp	ecx, esi
	ja	SHORT $LN15@adl_begin
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN29@adl_begin
	mov	eax, DWORD PTR [eax]
$LN29@adl_begin:
	mov	ecx, DWORD PTR [edi+20]
	add	ecx, eax
	cmp	esi, ecx
	jbe	SHORT $LN16@adl_begin
$LN15@adl_begin:
	call	__invalid_parameter_noinfo
$LN16@adl_begin:
	mov	DWORD PTR [ebx+4], esi
	pop	esi
	mov	DWORD PTR [ebx], edi
	mov	eax, ebx
	pop	ebx

; 70   :             }

	ret	0
??$adl_begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range_impl@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@iterator_range_detail@boost@@SA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ENDP ; boost::iterator_range_detail::iterator_range_impl<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::adl_begin<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@ABV01@@Z PROC ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = eax
; ___that$ = ecx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	test	ecx, ecx
	je	SHORT $LN6@shared_ptr@5
	add	ecx, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
$LN6@shared_ptr@5:
	ret	0
??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@ABV01@@Z ENDP ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$?8V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@V012@@std@@YA_NABV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
??$?8V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@V012@@std@@YA_NABV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >, COMDAT
; __Left$ = esi
; __Right$ = eax

; 2249 : 	return (_Left._Equal(_Right));

	mov	ecx, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN7@operator@221
	cmp	eax, ecx
	je	SHORT $LN8@operator@221
$LN7@operator@221:
	call	__invalid_parameter_noinfo
$LN8@operator@221:
	xor	eax, eax
	cmp	DWORD PTR [esi+4], edi
	pop	edi
	sete	al

; 2250 : 	}

	ret	0
??$?8V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@V012@@std@@YA_NABV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
xdata$x	SEGMENT
__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$0
__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$4
__ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\preprocessor\iteration\detail\local.hpp
xdata$x	ENDS
;	COMDAT ??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_c1$ = 8						; size = 4
_c2$ = 12						; size = 4
_op$ = 16						; size = 8
_c0$ = 24						; size = 8
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z PROC ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >,boost::iostreams::detail::clear_flags_operation<int> >, COMDAT

; 43   :         BOOST_PP_LOCAL_MACRO(3)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _c0$[ebp+4]
	mov	ecx, DWORD PTR _c0$[ebp]
	mov	edx, DWORD PTR _op$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _op$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _c1$[ebp]
	push	edx
	push	eax
	push	ecx
	call	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > > >
	mov	edx, DWORD PTR _c2$[ebp]
	add	esp, 20					; 00000014H
	mov	DWORD PTR [edx], 0
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$0:
	mov	eax, DWORD PTR _c2$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	0
	push	0
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	call	__CxxThrowException@8
$LN20@execute_al@4:
$LN19@execute_al@4:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z ENDP ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >,boost::iostreams::detail::clear_flags_operation<int> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\buffer.hpp
;	COMDAT ?resize@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAEXH@Z
_TEXT	SEGMENT
_temp$187484 = -8					; size = 8
_this$ = 8						; size = 4
?resize@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAEXH@Z PROC ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::resize, COMDAT
; _buffer_size$ = eax

; 160  : {

	sub	esp, 8
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+12]
	push	esi
	mov	esi, eax

; 161  :     if (size_ != buffer_size) {

	lea	ebx, DWORD PTR [ebp+4]
	push	edi
	cmp	DWORD PTR [ebx], esi
	je	SHORT $LN16@resize

; 162  :         basic_buffer<Ch, Alloc> temp(buffer_size);

	lea	edi, DWORD PTR _temp$187484[esp+24]
	call	??0?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAE@H@Z ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::basic_buffer<char,std::allocator<char> >

; 163  :         std::swap(size_, temp.size_);

	lea	eax, DWORD PTR _temp$187484[esp+28]
	cmp	ebx, eax
	je	SHORT $LN5@resize
	mov	ecx, DWORD PTR _temp$187484[esp+28]
	mov	DWORD PTR [ebx], ecx
$LN5@resize:

; 164  :         std::swap(buf_, temp.buf_);

	lea	edx, DWORD PTR _temp$187484[esp+24]
	cmp	ebp, edx
	je	SHORT $LN18@resize
	mov	ecx, DWORD PTR _temp$187484[esp+24]
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR [ebp], ecx
	jmp	SHORT $LN8@resize
$LN18@resize:
	mov	eax, DWORD PTR _temp$187484[esp+24]
$LN8@resize:

; 165  :     }

	test	eax, eax
	je	SHORT $LN16@resize
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@resize:

; 166  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	4
?resize@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAEXH@Z ENDP ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::resize
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?seekpos@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_sp$ = 12						; size = 24
_which$ = 36						; size = 4
?seekpos@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekpos, COMDAT
; _this$ = ecx

; 337  : { 

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx

; 338  :     return seek_impl(position_to_offset(sp), BOOST_IOS::beg, which); 

	mov	eax, DWORD PTR _sp$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _sp$[ebp+8]
	add	eax, ecx
	cdq
	push	edi
	mov	edi, eax
	mov	eax, ecx
	mov	ebx, edx
	cdq
	sub	edi, eax
	sbb	ebx, edx
	add	edi, ecx
	mov	ecx, DWORD PTR [esi+36]
	adc	ebx, DWORD PTR _sp$[ebp+12]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN110@seekpos@3
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+48]
	mov	ecx, esi
	call	eax
$LN110@seekpos@3:
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+36]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+52]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+64]
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	ebx
	push	edi
	xor	edi, edi
	call	??$seek@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@?$seek_device_impl@Ustreambuf_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_filebuf@DU?$char_traits@D@std@@@5@_JHH@Z ; boost::iostreams::detail::seek_device_impl<boost::iostreams::streambuf_tag>::seek<std::basic_filebuf<char,std::char_traits<char> > >
	add	esp, 8

; 339  : }

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekpos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?underflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
_TEXT	SEGMENT
$T404569 = -4						; size = 4
?underflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::underflow, COMDAT
; _this$ = ecx

; 235  : {

	push	ecx
	push	esi
	mov	esi, ecx

; 236  :     using namespace std;
; 237  :     if (!gptr()) init_get_area();

	mov	eax, DWORD PTR [esi+32]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@underflow@3
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+84]
	call	eax
$LN4@underflow@3:

; 238  :     buffer_type& buf = in();
; 239  :     if (gptr() < egptr()) return traits_type::to_int_type(*gptr());

	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edx]
	add	edx, ecx
	mov	eax, ecx
	cmp	ecx, edx
	jae	SHORT $LN3@underflow@3
	movzx	eax, BYTE PTR [eax]
	pop	esi

; 265  : }

	pop	ecx
	ret	0
$LN3@underflow@3:

; 240  : 
; 241  :     // Fill putback buffer.
; 242  :     std::streamsize keep = 
; 243  :         (std::min)( static_cast<std::streamsize>(gptr() - eback()),
; 244  :                     pback_size_ );

	mov	edx, DWORD PTR [esi+16]
	sub	eax, DWORD PTR [edx]
	push	edi
	cmp	DWORD PTR [esi+88], eax
	lea	edi, DWORD PTR [esi+88]
	mov	DWORD PTR $T404569[esp+12], eax
	mov	eax, edi
	jl	SHORT $LN30@underflow@3
	lea	eax, DWORD PTR $T404569[esp+12]
$LN30@underflow@3:
	push	ebx
	mov	ebx, DWORD PTR [eax]

; 245  :     if (keep)

	test	ebx, ebx
	je	SHORT $LN37@underflow@3

; 246  :         traits_type::move( buf.data() + (pback_size_ - keep),
; 247  :                            gptr() - keep, keep );

	mov	eax, DWORD PTR [edi]
	push	ebx
	sub	ecx, ebx
	push	ecx
	sub	eax, ebx
	add	eax, DWORD PTR [esi+80]
	push	ebx
	push	eax
	call	_memmove_s
	add	esp, 16					; 00000010H
$LN37@underflow@3:

; 248  : 
; 249  :     // Set pointers to reasonable values in case read throws.
; 250  :     setg( buf.data() + pback_size_ - keep,
; 251  :           buf.data() + pback_size_,
; 252  :           buf.data() + pback_size_ );

	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [esi+80]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [esi+16]
	mov	ecx, eax
	sub	ecx, ebx
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, eax
	sub	edx, eax
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], edx

; 253  : 
; 254  :     // Read from source.
; 255  :     std::streamsize chars =
; 256  :         obj().read(buf.data() + pback_size_, buf.size() - pback_size_, next_);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi+84]
	mov	edx, DWORD PTR [esi+80]
	add	edx, ecx
	sub	eax, ecx
	mov	ecx, DWORD PTR [esi+64]
	mov	ebx, DWORD PTR [ecx]
	push	eax
	push	edx
	mov	edx, DWORD PTR [ebx+24]
	call	edx
	pop	ebx
	test	eax, eax
	je	SHORT $LN91@underflow@3
	mov	ecx, eax

; 257  :     if (chars == -1) {

	cmp	eax, -1
	jne	SHORT $LN1@underflow@3
$LN91@underflow@3:

; 258  :         this->set_true_eof(true);

	or	DWORD PTR [esi+60], 1

; 259  :         chars = 0;

	xor	ecx, ecx
$LN1@underflow@3:

; 260  :     }
; 261  :     setg(eback(), gptr(), buf.data() + pback_size_ + chars);

	mov	eax, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edi]
	add	eax, DWORD PTR [esi+80]
	pop	edi
	add	eax, ecx
	sub	eax, edx
	mov	edx, DWORD PTR [esi+48]
	mov	DWORD PTR [edx], eax

; 262  :     return chars != 0 ?
; 263  :         traits_type::to_int_type(*gptr()) :
; 264  :         traits_type::eof();

	test	ecx, ecx
	je	SHORT $LN7@underflow@3
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	movzx	eax, BYTE PTR [ecx]
	pop	esi

; 265  : }

	pop	ecx
	ret	0
$LN7@underflow@3:

; 262  :     return chars != 0 ?
; 263  :         traits_type::to_int_type(*gptr()) :
; 264  :         traits_type::eof();

	or	eax, -1
	pop	esi

; 265  : }

	pop	ecx
	ret	0
?underflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::underflow
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Urange_tag@iterator_range_detail@1@@Z
_TEXT	SEGMENT
$T404989 = -8						; size = 8
_this$ = 8						; size = 4
___formal$ = 12						; size = 1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Urange_tag@iterator_range_detail@1@@Z PROC ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _r$ = esi

; 225  :             {}

	mov	edx, DWORD PTR [esi+24]
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+8]
	push	edi
	lea	eax, DWORD PTR [esi+4]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN13@allocator
	mov	edi, DWORD PTR [eax]
	jmp	SHORT $LN14@allocator
$LN13@allocator:
	mov	edi, eax
$LN14@allocator:
	test	edi, edi
	je	SHORT $LN17@allocator
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN27@allocator
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN28@allocator
$LN27@allocator:
	mov	ecx, eax
$LN28@allocator:
	cmp	ecx, edi
	ja	SHORT $LN17@allocator
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN31@allocator
	mov	eax, DWORD PTR [eax]
$LN31@allocator:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	edi, ecx
	jbe	SHORT $LN18@allocator
$LN17@allocator:
	call	__invalid_parameter_noinfo
$LN18@allocator:
	lea	edx, DWORD PTR $T404989[esp+16]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR [ebx], esi
	mov	DWORD PTR [ebx+4], edi
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	eax, DWORD PTR $T404989[esp+16]
	mov	ecx, DWORD PTR $T404989[esp+20]
	mov	DWORD PTR [ebx+8], eax
	pop	edi
	mov	DWORD PTR [ebx+12], ecx
	mov	eax, ebx
	pop	ebx
	add	esp, 8
	ret	8
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Urange_tag@iterator_range_detail@1@@Z ENDP ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@0ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@0ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode, COMDAT

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1192 : 		int _Linkcnt = 0;
; 1193 : 
; 1194 : 		_TRY_BEGIN
; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	test	eax, eax
	je	SHORT $LN27@Buynode@15
	mov	ecx, DWORD PTR __Next$[esp-4]
	mov	DWORD PTR [eax], ecx
$LN27@Buynode@15:

; 1196 : 		++_Linkcnt;
; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN37@Buynode@15
	mov	edx, DWORD PTR __Prev$[esp-4]
	mov	DWORD PTR [ecx], edx
$LN37@Buynode@15:

; 1198 : 		++_Linkcnt;
; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	lea	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN47@Buynode@15
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx
$LN47@Buynode@15:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);
; 1206 : 		_RERAISE;
; 1207 : 		_CATCH_END
; 1208 : 		return (_Pnode);
; 1209 : 		}

	ret	12					; 0000000cH
?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@0ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\double_object.hpp
_TEXT	ENDS
;	COMDAT ??0?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >, COMDAT
; _this$ = eax

; 43   :     single_object_holder() { }

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	ret	0
??0?$single_object_holder@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >::single_object_holder<boost::iostreams::detail::basic_buffer<char,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >, COMDAT
; _this$ = eax

; 106  :     double_object() : base_type() {}

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	ret	0
??0?$double_object@V?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@U?$is_convertible@Uinput@iostreams@boost@@Utwo_sequence@detail@23@@4@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >::double_object<boost::iostreams::detail::basic_buffer<char,std::allocator<char> >,boost::is_convertible<boost::iostreams::input,boost::iostreams::detail::two_sequence> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 8
__Off$ = 8						; size = 4
??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi

; 410  : 		{	// return this + integer

	sub	esp, 8

; 411  : 		_Myt _Tmp = *this;

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 412  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR __Off$[esp+4]
	mov	DWORD PTR __Tmp$[esp+8], ecx
	push	eax
	lea	ecx, DWORD PTR __Tmp$[esp+12]
	mov	DWORD PTR __Tmp$[esp+16], edx
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	ecx, DWORD PTR __Tmp$[esp+8]
	mov	edx, DWORD PTR __Tmp$[esp+12]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+4], edx
	mov	eax, esi

; 413  : 		}

	add	esp, 8
	ret	4
??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z$0
__ehfuncinfo$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	ENDS
;	COMDAT ?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
_TEXT	SEGMENT
__Lock$405172 = -20					; size = 4
$T405159 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Newlocale$ = 12					; size = 4
?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue, COMDAT
; _this$ = edi

; 80   : 		{	// set locale to argument

	push	-1
	push	__ehhandler$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+28]
	mov	DWORD PTR __$EHRec$[esp+40], 0
	mov	DWORD PTR $T405159[esp+32], 0

; 81   : 		locale _Oldlocale = *_Plocale;

	mov	eax, DWORD PTR [edi+56]
	mov	esi, DWORD PTR [eax]
	push	0
	lea	ecx, DWORD PTR __Lock$405172[esp+36]
	mov	DWORD PTR [ebx], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN7@pubimbue
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN7@pubimbue:
	lea	ecx, DWORD PTR __Lock$405172[esp+32]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 82   : 		imbue(_Newlocale);
; 83   : 		*_Plocale = _Newlocale;
; 84   : 		return (_Oldlocale);

	mov	esi, DWORD PTR __Newlocale$[esp+28]
	mov	DWORD PTR __$EHRec$[esp+40], 0
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+52]
	push	esi
	mov	ecx, edi
	mov	DWORD PTR $T405159[esp+36], 1
	call	edx
	mov	eax, DWORD PTR [edi+56]
	push	esi
	push	eax
	call	??4locale@std@@QAEAAV01@ABV01@@Z	; std::locale::operator=
	mov	eax, ebx

; 85   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z$0:
	mov	eax, DWORD PTR $T405159[ebp]
	and	eax, 1
	je	$LN4@pubimbue
	and	DWORD PTR $T405159[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
$LN4@pubimbue:
	ret	0
__ehhandler$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
;	COMDAT ?imbue@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z
_TEXT	SEGMENT
$T405185 = 8						; size = 4
_loc$ = 8						; size = 4
?imbue@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::imbue, COMDAT
; _this$ = ecx

; 224  :     if (is_open()) {

	test	BYTE PTR [ecx+84], 1
	je	SHORT $LN1@imbue@2
	push	edi

; 225  :         obj().imbue(loc);
; 226  :         if (next_)

	mov	edi, DWORD PTR [ecx+68]
	test	edi, edi
	je	SHORT $LN14@imbue@2

; 227  :             next_->pubimbue(loc);

	mov	eax, DWORD PTR _loc$[esp]
	push	eax
	lea	ecx, DWORD PTR $T405185[esp+4]
	push	ecx
	call	?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue
	lea	ecx, DWORD PTR $T405185[esp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
$LN14@imbue@2:
	pop	edi
$LN1@imbue@2:

; 228  :     }
; 229  : }

	ret	4
?imbue@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::imbue
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?underflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
_TEXT	SEGMENT
$T405209 = -4						; size = 4
?underflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::underflow, COMDAT
; _this$ = ecx

; 235  : {

	push	ecx
	push	esi
	mov	esi, ecx

; 236  :     using namespace std;
; 237  :     if (!gptr()) init_get_area();

	mov	eax, DWORD PTR [esi+32]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@underflow@4
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+84]
	call	eax
$LN4@underflow@4:

; 238  :     buffer_type& buf = in();
; 239  :     if (gptr() < egptr()) return traits_type::to_int_type(*gptr());

	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edx]
	add	edx, ecx
	mov	eax, ecx
	cmp	ecx, edx
	jae	SHORT $LN3@underflow@4
	movzx	eax, BYTE PTR [eax]
	pop	esi

; 265  : }

	pop	ecx
	ret	0
$LN3@underflow@4:

; 240  : 
; 241  :     // Fill putback buffer.
; 242  :     std::streamsize keep = 
; 243  :         (std::min)( static_cast<std::streamsize>(gptr() - eback()),
; 244  :                     pback_size_ );

	mov	edx, DWORD PTR [esi+16]
	sub	eax, DWORD PTR [edx]
	push	ebx
	cmp	DWORD PTR [esi+80], eax
	lea	ebx, DWORD PTR [esi+80]
	mov	DWORD PTR $T405209[esp+12], eax
	push	edi
	mov	eax, ebx
	jl	SHORT $LN30@underflow@4
	lea	eax, DWORD PTR $T405209[esp+16]
$LN30@underflow@4:
	mov	edi, DWORD PTR [eax]

; 245  :     if (keep)

	test	edi, edi
	je	SHORT $LN37@underflow@4

; 246  :         traits_type::move( buf.data() + (pback_size_ - keep),
; 247  :                            gptr() - keep, keep );

	mov	eax, DWORD PTR [ebx]
	push	edi
	sub	ecx, edi
	push	ecx
	sub	eax, edi
	add	eax, DWORD PTR [esi+72]
	push	edi
	push	eax
	call	_memmove_s
	add	esp, 16					; 00000010H
$LN37@underflow@4:

; 248  : 
; 249  :     // Set pointers to reasonable values in case read throws.
; 250  :     setg( buf.data() + pback_size_ - keep,
; 251  :           buf.data() + pback_size_,
; 252  :           buf.data() + pback_size_ );

	mov	ecx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [esi+72]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [esi+16]
	mov	ecx, eax
	sub	ecx, edi
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, eax
	sub	edx, eax
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], edx

; 253  : 
; 254  :     // Read from source.
; 255  :     std::streamsize chars =
; 256  :         obj().read(buf.data() + pback_size_, buf.size() - pback_size_, next_);
; 257  :     if (chars == -1) {
; 258  :         this->set_true_eof(true);
; 259  :         chars = 0;
; 260  :     }
; 261  :     setg(eback(), gptr(), buf.data() + pback_size_ + chars);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [esi+32]
	add	eax, DWORD PTR [esi+72]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [esi+48]
	pop	edi
	sub	eax, ecx
	pop	ebx
	mov	DWORD PTR [edx], eax

; 262  :     return chars != 0 ?
; 263  :         traits_type::to_int_type(*gptr()) :
; 264  :         traits_type::eof();

	or	eax, -1
	pop	esi

; 265  : }

	pop	ecx
	ret	0
?underflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::underflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
?close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close, COMDAT
; _this$ = eax

; 199  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	esi
	push	edi

; 200  :     using namespace std;
; 201  :     base_type* self = this;
; 202  :     detail::execute_all(
; 203  :         detail::call_member_close(*self, BOOST_IOS::in),
; 204  :         detail::call_member_close(*self, BOOST_IOS::out),
; 205  :         detail::call_reset(storage_),
; 206  :         detail::clear_flags(flags_)
; 207  :     );

	mov	ecx, 2
	push	ecx
	push	eax
	lea	edx, DWORD PTR [ecx-1]
	push	edx
	push	eax
	lea	esi, DWORD PTR [eax+84]
	lea	edi, DWORD PTR [eax+64]
	push	esi
	push	edi
	call	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> > > >,boost::iostreams::detail::clear_flags_operation<int> >
	add	esp, 24					; 00000018H

; 208  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@34@HH@Z
_TEXT	SEGMENT
$T405435 = -1						; size = 1
?open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@34@HH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open, COMDAT
; _this$ = esi

; 155  : {

	push	ecx

; 156  :     using namespace std;
; 157  : 
; 158  :     // Normalize buffer sizes.
; 159  :     buffer_size =
; 160  :         (buffer_size != -1) ?
; 161  :         buffer_size :
; 162  :         iostreams::optimal_buffer_size(t);
; 163  :     pback_size =
; 164  :         (pback_size != -1) ?
; 165  :         pback_size :
; 166  :         default_pback_buffer_size;
; 167  : 
; 168  :     // Construct input buffer.
; 169  :     if (can_read()) {
; 170  :         pback_size_ = (std::max)(2, pback_size); // STLPort needs 2.
; 171  :         std::streamsize size =
; 172  :             pback_size_ +
; 173  :             ( buffer_size ? buffer_size: 1 );
; 174  :         in().resize(size);

	lea	eax, DWORD PTR [esi+72]
	push	eax
	mov	eax, 4100				; 00001004H
	mov	DWORD PTR [esi+80], 4
	call	?resize@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAEXH@Z ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::resize

; 175  :         if (!shared_buffer())
; 176  :             init_get_area();

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, esi
	call	eax

; 177  :     }
; 178  : 
; 179  :     // Construct output buffer.
; 180  :     if (can_write() && !shared_buffer()) {
; 181  :         if (buffer_size != 0)
; 182  :             out().resize(buffer_size);
; 183  :         init_put_area();
; 184  :     }
; 185  : 
; 186  :     storage_.reset(wrapper(t));

	cmp	BYTE PTR [esi+65], 0
	je	SHORT $LN46@open
	mov	BYTE PTR [esi+65], 0
$LN46@open:
	mov	cl, BYTE PTR $T405435[esp+4]
	mov	eax, 1
	mov	BYTE PTR [esi+64], cl
	mov	BYTE PTR [esi+65], al

; 187  :     flags_ |= f_open;

	or	DWORD PTR [esi+84], eax

; 188  :     if (can_write() && buffer_size > 1)
; 189  :         flags_ |= f_output_buffered;
; 190  :     this->set_true_eof(false);

	and	DWORD PTR [esi+60], -2			; fffffffeH

; 191  : }

	pop	ecx
	ret	0
?open@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@34@HH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@CAIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@III@Z
_TEXT	SEGMENT
_res$405680 = -4					; size = 4
_eng$ = 8						; size = 4
_min_value$ = 12					; size = 4
_max_value$ = 16					; size = 4
_limit$179674 = 20					; size = 4
_range$ = 20						; size = 4
??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@CAIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@III@Z PROC ; boost::uniform_int<unsigned int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >, COMDAT

; 97   :   static result_type generate(Engine& eng, result_type min_value, result_type max_value, range_type range)

	push	ecx
	push	ebx
	push	esi

; 98   :   {
; 99   :     typedef typename Engine::result_type base_result;
; 100  :     // ranges are always unsigned
; 101  :     typedef typename make_unsigned<base_result>::type base_unsigned;
; 102  :     const base_result bmin = (eng.min)();
; 103  :     const base_unsigned brange =
; 104  :       random::detail::subtract<base_result>()((eng.max)(), (eng.min)());

	xor	esi, esi
	mov	eax, 1
	mov	ecx, 32					; 00000020H
	npad	1
$LL68@generate:
	or	esi, eax
	rol	eax, 1
	sub	ecx, 1
	jne	SHORT $LL68@generate

; 105  : 
; 106  :     if(range == 0) {

	mov	ebx, DWORD PTR _range$[esp+8]
	mov	DWORD PTR _res$405680[esp+12], esi
	test	ebx, ebx
	jne	SHORT $LN23@generate

; 107  :       return min_value;    

	mov	eax, DWORD PTR _min_value$[esp+8]
	pop	esi
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	pop	ecx
	ret	0
$LN23@generate:

; 108  :     } else if(brange == range) {

	cmp	esi, ebx
	jne	SHORT $LN21@generate

; 109  :       // this will probably never happen in real life
; 110  :       // basically nothing to do; just take care we don't overflow / underflow
; 111  :       base_unsigned v = random::detail::subtract<base_result>()(eng(), bmin);

	mov	eax, DWORD PTR _eng$[esp+8]
	mov	esi, DWORD PTR [eax]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()

; 112  :       return random::detail::add<base_unsigned, result_type>()(v, min_value);

	add	eax, DWORD PTR _min_value$[esp+8]
	pop	esi
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	pop	ecx
	ret	0
$LN21@generate:
	push	ebp
	push	edi

; 113  :     } else if(brange < range) {

	cmp	esi, ebx
	jae	$LN19@generate
	npad	2
$LL18@generate:

; 114  :       // use rejection method to handle things like 0..3 --> 0..4
; 115  :       for(;;) {
; 116  :         // concatenate several invocations of the base RNG
; 117  :         // take extra care to avoid overflows
; 118  : 
; 119  :         //  limit == floor((range+1)/(brange+1))
; 120  :         //  Therefore limit*(brange+1) <= range+1
; 121  :         range_type limit;
; 122  :         if(range == (std::numeric_limits<range_type>::max)()) {
; 123  :           limit = range/(range_type(brange)+1);

	xor	edx, edx
	lea	ecx, DWORD PTR [esi+1]
	cmp	ebx, -1
	jne	SHORT $LN16@generate
	or	eax, ebx
	div	ecx
	mov	DWORD PTR _limit$179674[esp+16], eax

; 124  :           if(range % (range_type(brange)+1) == range_type(brange))

	cmp	edx, esi
	jne	SHORT $LN14@generate

; 125  :             ++limit;

	inc	DWORD PTR _limit$179674[esp+16]

; 126  :         } else {

	jmp	SHORT $LN14@generate
$LN16@generate:

; 127  :           limit = (range+1)/(range_type(brange)+1);

	lea	eax, DWORD PTR [ebx+1]
	div	ecx
	mov	DWORD PTR _limit$179674[esp+16], eax
$LN14@generate:

; 128  :         }
; 129  : 
; 130  :         // We consider "result" as expressed to base (brange+1):
; 131  :         // For every power of (brange+1), we determine a random factor
; 132  :         range_type result = range_type(0);
; 133  :         range_type mult = range_type(1);

	mov	edi, 1
	xor	ebp, ebp

; 134  : 
; 135  :         // loop invariants:
; 136  :         //  result < mult
; 137  :         //  mult <= range
; 138  :         while(mult <= limit) {

	cmp	DWORD PTR _limit$179674[esp+16], edi
	jb	SHORT $LN12@generate
$LL13@generate:

; 139  :           // Postcondition: result <= range, thus no overflow
; 140  :           //
; 141  :           // limit*(brange+1)<=range+1                   def. of limit       (1)
; 142  :           // eng()-bmin<=brange                          eng() post.         (2)
; 143  :           // and mult<=limit.                            loop condition      (3)
; 144  :           // Therefore mult*(eng()-bmin+1)<=range+1      by (1),(2),(3)      (4)
; 145  :           // Therefore mult*(eng()-bmin)+mult<=range+1   rearranging (4)     (5)
; 146  :           // result<mult                                 loop invariant      (6)
; 147  :           // Therefore result+mult*(eng()-bmin)<range+1  by (5), (6)         (7)
; 148  :           //
; 149  :           // Postcondition: result < mult*(brange+1)
; 150  :           //
; 151  :           // result<mult                                 loop invariant      (1)
; 152  :           // eng()-bmin<=brange                          eng() post.         (2)
; 153  :           // Therefore result+mult*(eng()-bmin) <
; 154  :           //           mult+mult*(eng()-bmin)            by (1)              (3)
; 155  :           // Therefore result+(eng()-bmin)*mult <
; 156  :           //           mult+mult*brange                  by (2), (3)         (4)
; 157  :           // Therefore result+(eng()-bmin)*mult <
; 158  :           //           mult*(brange+1)                   by (4)
; 159  :           result += random::detail::subtract<base_result>()(eng(), bmin) * mult;

	mov	ecx, DWORD PTR _eng$[esp+16]
	mov	esi, DWORD PTR [ecx]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
	imul	eax, edi
	add	ebp, eax

; 160  : 
; 161  :           // equivalent to (mult * (brange+1)) == range+1, but avoids overflow.
; 162  :           if(mult * range_type(brange) == range - mult + 1) {

	mov	eax, DWORD PTR _res$405680[esp+20]
	mov	ecx, eax
	imul	ecx, edi
	mov	edx, ebx
	sub	edx, edi
	inc	edx
	cmp	ecx, edx
	je	SHORT $LN142@generate

; 166  :           }
; 167  : 
; 168  :           // Postcondition: mult <= range
; 169  :           // 
; 170  :           // limit*(brange+1)<=range+1                   def. of limit       (1)
; 171  :           // mult<=limit                                 loop condition      (2)
; 172  :           // Therefore mult*(brange+1)<=range+1          by (1), (2)         (3)
; 173  :           // mult*(brange+1)!=range+1                    preceding if        (4)
; 174  :           // Therefore mult*(brange+1)<range+1           by (3), (4)         (5)
; 175  :           // 
; 176  :           // Postcondition: result < mult
; 177  :           //
; 178  :           // See the second postcondition on the change to result. 
; 179  :           mult *= range_type(brange)+range_type(1);

	inc	eax
	imul	edi, eax
	cmp	edi, DWORD PTR _limit$179674[esp+16]
	jbe	SHORT $LL13@generate

; 134  : 
; 135  :         // loop invariants:
; 136  :         //  result < mult
; 137  :         //  mult <= range
; 138  :         while(mult <= limit) {

	mov	esi, DWORD PTR _res$405680[esp+20]
$LN12@generate:

; 180  :         }
; 181  :         // loop postcondition: range/mult < brange+1
; 182  :         //
; 183  :         // mult > limit                                  loop condition      (1)
; 184  :         // Suppose range/mult >= brange+1                Assumption          (2)
; 185  :         // range >= mult*(brange+1)                      by (2)              (3)
; 186  :         // range+1 > mult*(brange+1)                     by (3)              (4)
; 187  :         // range+1 > (limit+1)*(brange+1)                by (1), (4)         (5)
; 188  :         // (range+1)/(brange+1) > limit+1                by (5)              (6)
; 189  :         // limit < floor((range+1)/(brange+1))           by (6)              (7)
; 190  :         // limit==floor((range+1)/(brange+1))            def. of limit       (8)
; 191  :         // not (2)                                       reductio            (9)
; 192  :         //
; 193  :         // loop postcondition: (range/mult)*mult+(mult-1) >= range
; 194  :         //
; 195  :         // (range/mult)*mult + range%mult == range       identity            (1)
; 196  :         // range%mult < mult                             def. of %           (2)
; 197  :         // (range/mult)*mult+mult > range                by (1), (2)         (3)
; 198  :         // (range/mult)*mult+(mult-1) >= range           by (3)              (4)
; 199  :         //
; 200  :         // Note that the maximum value of result at this point is (mult-1),
; 201  :         // so after this final step, we generate numbers that can be
; 202  :         // at least as large as range.  We have to really careful to avoid
; 203  :         // overflow in this final addition and in the rejection.  Anything
; 204  :         // that overflows is larger than range and can thus be rejected.
; 205  : 
; 206  :         // range/mult < brange+1  -> no endless loop
; 207  :         range_type result_increment = uniform_int<range_type>(0, range/mult)(eng);

	xor	edx, edx
	mov	eax, ebx
	div	edi
	mov	edx, DWORD PTR _eng$[esp+16]
	push	eax
	push	eax
	push	0
	push	edx
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@CAIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@III@Z ; boost::uniform_int<unsigned int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	ecx, eax

; 208  :         if((std::numeric_limits<range_type>::max)() / mult < result_increment) {

	or	eax, -1
	xor	edx, edx
	div	edi
	add	esp, 16					; 00000010H
	cmp	eax, ecx
	jb	$LL18@generate

; 209  :           // The multiplcation would overflow.  Reject immediately.
; 210  :           continue;
; 211  :         }
; 212  :         result_increment *= mult;

	imul	ecx, edi

; 213  :         // unsigned integers are guaranteed to wrap on overflow.
; 214  :         result += result_increment;

	add	ebp, ecx

; 215  :         if(result < result_increment) {

	cmp	ebp, ecx
	jb	$LL18@generate

; 216  :           // The addition overflowed.  Reject.
; 217  :           continue;
; 218  :         }
; 219  :         if(result > range) {

	cmp	ebp, ebx
	ja	$LL18@generate

; 220  :           // Too big.  Reject.
; 221  :           continue;
; 222  :         }
; 223  :         return random::detail::add<range_type, result_type>()(result, min_value);

	mov	eax, DWORD PTR _min_value$[esp+16]
	pop	edi
	add	eax, ebp
	pop	ebp
	pop	esi
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	pop	ecx
	ret	0
$LN142@generate:
	pop	edi

; 163  :               // The destination range is an integer power of
; 164  :               // the generator's range.
; 165  :               return(result);

	mov	eax, ebp
	pop	ebp
	pop	esi
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	pop	ecx
	ret	0
$LN19@generate:

; 224  :       }
; 225  :     } else {                   // brange > range
; 226  :       base_unsigned bucket_size;
; 227  :       // it's safe to add 1 to range, as long as we cast it first,
; 228  :       // because we know that it is less than brange.  However,
; 229  :       // we do need to be careful not to cause overflow by adding 1
; 230  :       // to brange.
; 231  :       if(brange == (std::numeric_limits<base_unsigned>::max)()) {
; 232  :         bucket_size = brange / (static_cast<base_unsigned>(range)+1);

	xor	edx, edx
	lea	ecx, DWORD PTR [ebx+1]
	cmp	esi, -1
	jne	SHORT $LN6@generate
	or	eax, esi
	div	ecx
	mov	edi, eax

; 233  :         if(brange % (static_cast<base_unsigned>(range)+1) == static_cast<base_unsigned>(range)) {

	cmp	edx, ebx
	jne	SHORT $LN147@generate

; 234  :           ++bucket_size;

	inc	edi

; 235  :         }
; 236  :       } else {

	jmp	SHORT $LN147@generate
$LN6@generate:

; 237  :         bucket_size = (brange+1) / (static_cast<base_unsigned>(range)+1);

	lea	eax, DWORD PTR [esi+1]
	div	ecx
	mov	edi, eax
$LN147@generate:
	mov	ebp, DWORD PTR _eng$[esp+16]
$LL3@generate:

; 238  :       }
; 239  :       for(;;) {
; 240  :         base_unsigned result =
; 241  :           random::detail::subtract<base_result>()(eng(), bmin);

	mov	esi, DWORD PTR [ebp]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()

; 242  :         result /= bucket_size;

	xor	edx, edx
	div	edi

; 243  :         // result and range are non-negative, and result is possibly larger
; 244  :         // than range, so the cast is safe
; 245  :         if(result <= static_cast<base_unsigned>(range))

	cmp	eax, ebx
	ja	SHORT $LL3@generate

; 246  :           return random::detail::add<base_unsigned, result_type>()(result, min_value);

	mov	edx, DWORD PTR _min_value$[esp+16]
	pop	edi
	pop	ebp
	pop	esi
	add	eax, edx
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	pop	ecx
	ret	0
??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@CAIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@III@Z ENDP ; boost::uniform_int<unsigned int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ??$make_iterator_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T405873 = -4						; size = 1
??$make_iterator_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::make_iterator_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = edi
; _r$ = esi

; 561  :         {   

	push	ecx

; 562  :            return iterator_range< BOOST_DEDUCED_TYPENAME range_iterator<ForwardRange>::type >
; 563  :                 ( r, iterator_range_detail::range_tag() );

	mov	BYTE PTR $T405873[esp+4], 0
	mov	eax, DWORD PTR $T405873[esp+4]
	push	eax
	push	edi
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Urange_tag@iterator_range_detail@1@@Z ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, edi

; 564  :         }

	pop	ecx
	ret	0
??$make_iterator_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::make_iterator_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator++, COMDAT
; _this$ = esi

; 236  : 
; 237  :  #if _HAS_ITERATOR_DEBUGGING
; 238  : 			if (this->_Mycont == 0
; 239  : 				|| _Ptr == 0
; 240  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 241  : 				{
; 242  : 				_DEBUG_ERROR("list iterator not incrementable");
; 243  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 244  : 				}
; 245  :  #else
; 246  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN17@operator@222
	call	__invalid_parameter_noinfo

; 247  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@222
$LN17@operator@222:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@222
$LN11@operator@222:
	xor	eax, eax
$LN12@operator@222:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN1@operator@222
	call	__invalid_parameter_noinfo
$LN1@operator@222:

; 248  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 249  : 
; 250  : 			_Ptr = _Nextnode(_Ptr);

	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+4], eax

; 251  : 			return (*this);

	mov	eax, esi

; 252  : 			}

	ret	0
??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??F?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator--, COMDAT
; _this$ = esi

; 263  : 
; 264  :  #if _HAS_ITERATOR_DEBUGGING
; 265  : 			if (this->_Mycont == 0
; 266  : 				|| _Ptr == 0
; 267  : 				|| (_Ptr = _Prevnode(_Ptr))
; 268  : 					== ((_Myt *)this->_Mycont)->_Myhead)
; 269  : 				{
; 270  : 				_DEBUG_ERROR("list iterator not decrementable");
; 271  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 272  : 				}
; 273  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 274  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN3@operator@223
	call	__invalid_parameter_noinfo
$LN3@operator@223:

; 275  : 			_Ptr = _Prevnode(_Ptr);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]

; 276  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], ecx
	test	eax, eax
	je	SHORT $LN13@operator@223
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@223
$LN13@operator@223:
	xor	eax, eax
$LN14@operator@223:
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN17@operator@223
	call	__invalid_parameter_noinfo
$LN17@operator@223:

; 277  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 278  : 
; 279  : 			return (*this);

	mov	eax, esi

; 280  : 			}

	ret	0
??F?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV012@H@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator++, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = edi

; 256  : 			_Myt_iter _Tmp = *this;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ecx

; 257  : 			++*this;

	test	eax, eax
	jne	SHORT $LN19@operator@224
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@224
$LN19@operator@224:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@224
$LN13@operator@224:
	xor	eax, eax
$LN14@operator@224:
	mov	edx, DWORD PTR [esi+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN3@operator@224
	call	__invalid_parameter_noinfo
$LN3@operator@224:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], ecx

; 258  : 			return (_Tmp);

	mov	eax, edi

; 259  : 			}

	ret	0
??E?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator++, COMDAT
; _this$ = esi

; 404  : 			++(*(_Mybase_iter *)this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN19@operator@225
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@225
$LN19@operator@225:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@225
$LN13@operator@225:
	xor	eax, eax
$LN14@operator@225:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN3@operator@225
	call	__invalid_parameter_noinfo
$LN3@operator@225:
	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+4], eax

; 405  : 			return (*this);

	mov	eax, esi

; 406  : 			}

	ret	0
??E?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 8
?_Make_iter@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Make_iter, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 554  : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR __Where$[esp]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN5@Make_iter@13
	call	__invalid_parameter_noinfo
$LN5@Make_iter@13:
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx
	mov	eax, esi

; 555  : 		}

	ret	8
?_Make_iter@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
__Lobj$ = 8						; size = 4
__Refs$ = 12						; size = 4
??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z PROC	; std::codecvt<char,char,int>::codecvt<char,char,int>, COMDAT
; _this$ = ecx

; 777  : 		{	// construct from specified locale

	mov	eax, ecx
	mov	ecx, DWORD PTR __Refs$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7?$codecvt@DDH@std@@6B@

; 778  : 		_Init(_Lobj);
; 779  : 		}

	ret	8
??0?$codecvt@DDH@std@@QAE@ABV_Locinfo@1@I@Z ENDP	; std::codecvt<char,char,int>::codecvt<char,char,int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??F?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator--, COMDAT
; _this$ = esi

; 417  : 			--(*(_Mybase_iter *)this);

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN5@operator@226
	call	__invalid_parameter_noinfo
$LN5@operator@226:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], ecx
	test	eax, eax
	je	SHORT $LN15@operator@226
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@operator@226
$LN15@operator@226:
	xor	eax, eax
$LN16@operator@226:
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN19@operator@226
	call	__invalid_parameter_noinfo
$LN19@operator@226:

; 418  : 			return (*this);

	mov	eax, esi

; 419  : 			}

	ret	0
??F?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator--
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator+=, COMDAT
; _this$ = edi

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	jne	SHORT $LN20@operator@227
	call	__invalid_parameter_noinfo

; 161  : 		_SCL_SECURE_VALIDATE_RANGE(

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN10@operator@227
$LN20@operator@227:
	mov	edx, DWORD PTR [eax]
	jmp	SHORT $LN11@operator@227
$LN10@operator@227:
	xor	edx, edx
$LN11@operator@227:
	mov	ecx, DWORD PTR [edi+4]
	push	esi
	mov	esi, DWORD PTR __Off$[esp]
	imul	esi, 456				; 000001c8H
	add	ecx, esi
	cmp	ecx, DWORD PTR [edx+16]
	ja	SHORT $LN1@operator@227
	test	eax, eax
	je	SHORT $LN16@operator@227
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN17@operator@227
$LN16@operator@227:
	xor	eax, eax
$LN17@operator@227:
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN21@operator@227
$LN1@operator@227:

; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);

	call	__invalid_parameter_noinfo
$LN21@operator@227:

; 164  : 		_Myptr += _Off;

	add	DWORD PTR [edi+4], esi

; 165  : 		return (*this);

	mov	eax, edi
	pop	esi

; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z
_TEXT	SEGMENT
$T406150 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::erase, COMDAT
; _this$ = edi

; 786  : 		{	// erase element at _Where

	sub	esp, 8

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	eax, DWORD PTR __Where$[esp+4]
	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+8]
	push	esi
	mov	esi, DWORD PTR __Where$[esp+16]
	mov	DWORD PTR $T406150[esp+16], eax
	test	eax, eax
	jne	SHORT $LN54@erase@6
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+12]
	test	eax, eax
	je	SHORT $LN16@erase@6
$LN54@erase@6:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN17@erase@6
$LN16@erase@6:
	xor	eax, eax
$LN17@erase@6:
	mov	ecx, DWORD PTR __Where$[esp+16]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN6@erase@6
	call	__invalid_parameter_noinfo
$LN6@erase@6:
	mov	edx, DWORD PTR __Where$[esp+16]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Where$[esp+16], eax

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	cmp	esi, DWORD PTR [edi+20]
	je	SHORT $LN1@erase@6

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [ecx], edx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]

; 802  : 			this->_Alnod.destroy(_Pnode);
; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	mov	DWORD PTR [eax+4], ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 804  : 			--_Mysize;

	dec	DWORD PTR [edi+24]
$LN1@erase@6:

; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR __Where$[esp+16]
	mov	DWORD PTR [ebx], eax

; 807  : 		}

	pop	esi
	mov	DWORD PTR [ebx+4], edx
	mov	eax, ebx
	pop	ebx
	add	esp, 8
	ret	12					; 0000000cH
?erase@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?rend@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?rend@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rend, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 595  : 		{	// return iterator for end of reversed mutable sequence

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 596  : 		return (reverse_iterator(begin()));

	mov	edx, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 597  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?rend@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rend
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
?end@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 544  : 		return (iterator(_Myhead, this));

	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 545  : 		}

	ret	0
?end@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::end
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??H?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??H?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator+, COMDAT
; _this$ = eax
; __Off$ = ecx

; 169  : 		{	// return this + integer

	push	ebx

; 170  : 		_Myt _Tmp = *this;

	mov	ebx, DWORD PTR [eax+4]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+4]
	push	esi
	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, ecx

; 171  : 		return (_Tmp += _Off);

	test	esi, esi
	jne	SHORT $LN22@operator@228
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN13@operator@228:
	imul	edi, 456				; 000001c8H
	add	edi, ebx
	cmp	edi, DWORD PTR [eax+16]
	ja	SHORT $LN3@operator@228
	test	esi, esi
	je	SHORT $LN18@operator@228
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN19@operator@228
$LN22@operator@228:
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN13@operator@228
$LN18@operator@228:
	xor	eax, eax
$LN19@operator@228:
	cmp	edi, DWORD PTR [eax+12]
	jae	SHORT $LN4@operator@228
$LN3@operator@228:
	call	__invalid_parameter_noinfo
$LN4@operator@228:
	mov	DWORD PTR [ebp+4], edi
	pop	edi
	mov	DWORD PTR [ebp], esi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx

; 172  : 		}

	ret	4
??H?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator+
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?pop_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T406488 = -12						; size = 8
?pop_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::pop_back, COMDAT
; _this$ = eax

; 674  : 		{	// erase element at end

	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	edi, eax

; 675  : 		erase(--end());

	mov	esi, DWORD PTR [edi]
	mov	ebx, DWORD PTR [edi+20]
	test	esi, esi
	jne	SHORT $LN23@pop_back@2
	call	__invalid_parameter_noinfo
$LN23@pop_back@2:
	mov	ebx, DWORD PTR [ebx+4]
	test	esi, esi
	je	SHORT $LN33@pop_back@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN34@pop_back@2
$LN33@pop_back@2:
	xor	eax, eax
$LN34@pop_back@2:
	cmp	ebx, DWORD PTR [eax+20]
	jne	SHORT $LN21@pop_back@2
	call	__invalid_parameter_noinfo
$LN21@pop_back@2:
	push	ebx
	push	esi
	lea	eax, DWORD PTR $T406488[esp+36]
	push	eax
	call	?erase@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::erase

; 676  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
?pop_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXXZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::pop_back
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@QAEIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z
_TEXT	SEGMENT
_eng$ = 8						; size = 4
??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@QAEIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z PROC ; boost::uniform_int<unsigned int>::operator()<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >, COMDAT
; _this$ = eax

; 59   :   {
; 60   :       return generate(eng, _min, _max, _range);

	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _eng$[esp]
	push	edx
	push	eax
	push	ecx
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@CAIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@III@Z ; boost::uniform_int<unsigned int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	add	esp, 16					; 00000010H

; 61   :   }

	ret	4
??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@QAEIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z ENDP ; boost::uniform_int<unsigned int>::operator()<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\as_literal.hpp
_TEXT	ENDS
;	COMDAT ??$make_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z
_TEXT	SEGMENT
$T406617 = -4						; size = 1
??$make_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z PROC ; boost::range_detail::make_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = edi
; _r$ = esi

; 92   :         {

	push	ecx

; 93   :             return boost::make_iterator_range( r );

	mov	BYTE PTR $T406617[esp+4], 0
	mov	eax, DWORD PTR $T406617[esp+4]
	push	eax
	push	edi
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Urange_tag@iterator_range_detail@1@@Z ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, edi

; 94   :         }

	pop	ecx
	ret	0
??$make_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z ENDP ; boost::range_detail::make_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$is_char_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YAJV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 28
??$is_char_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YAJV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::range_detail::is_char_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 79   :             return 0L;

	cmp	DWORD PTR ___formal$[esp+20], 16	; 00000010H
	jb	SHORT $LN29@is_char_pt
	mov	eax, DWORD PTR ___formal$[esp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN29@is_char_pt:
	xor	eax, eax

; 80   :         }

	ret	0
??$is_char_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@YAJV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::range_detail::is_char_ptr<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT
__Lock$406747 = -4					; size = 4
?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::getloc, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi

; 88   : 		{	// get locale

	push	ecx

; 89   : 		return (*_Plocale);

	mov	ecx, DWORD PTR [eax+56]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	0
	lea	ecx, DWORD PTR __Lock$406747[esp+12]
	mov	DWORD PTR [edi], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN5@getloc
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN5@getloc:
	lea	ecx, DWORD PTR __Lock$406747[esp+8]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	esi

; 90   : 		}

	pop	ecx
	ret	0
?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::getloc
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ$0
__ehfuncinfo$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
_TEXT	SEGMENT
__Lock$406769 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 28   : 		{	// construct with no buffers

	push	-1
	push	__ehhandler$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+36], esi
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	call	??0_Mutex@std@@QAE@XZ			; std::_Mutex::_Mutex
	push	4
	mov	DWORD PTR __$EHRec$[esp+48], 0
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $LN3@basic_stre
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [edi], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	0
	lea	ecx, DWORD PTR __Lock$406769[esp+40]
	mov	ebx, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, -1
	jae	SHORT $LN8@basic_stre
	inc	eax
	mov	DWORD PTR [ebx+4], eax
$LN8@basic_stre:
	lea	ecx, DWORD PTR __Lock$406769[esp+36]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	jmp	SHORT $LN4@basic_stre
$LN3@basic_stre:
	xor	edi, edi
$LN4@basic_stre:

; 29   : 		_Init();

	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	mov	DWORD PTR [esi+56], edi
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], ecx
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], 0

; 30   : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
__ehhandler$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
;	COMDAT ??1?$codecvt@DDH@std@@MAE@XZ
_TEXT	SEGMENT
??1?$codecvt@DDH@std@@MAE@XZ PROC			; std::codecvt<char,char,int>::~codecvt<char,char,int>, COMDAT
; _this$ = ecx

; 793  : 		}

	mov	DWORD PTR [ecx], OFFSET ??_7facet@locale@std@@6B@
	ret	0
??1?$codecvt@DDH@std@@MAE@XZ ENDP			; std::codecvt<char,char,int>::~codecvt<char,char,int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx

; 282  : 		if (_Mysb::gptr() != 0
; 283  : 			&& _Mysb::eback() < _Mysb::gptr()
; 284  : 			&& (_Traits::eq_int_type(_Traits::eof(), _Meta)
; 285  : 			|| _Traits::eq_int_type(_Traits::to_int_type(_Mysb::gptr()[-1]),
; 286  : 				_Meta)))

	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
	push	ebx
	mov	ebx, DWORD PTR __Meta$[esp]
	test	eax, eax
	je	SHORT $LN10@pbackfail@2
	mov	edx, DWORD PTR [ecx+16]
	cmp	DWORD PTR [edx], eax
	jae	SHORT $LN10@pbackfail@2
	cmp	ebx, -1
	je	SHORT $LN9@pbackfail@2
	movzx	eax, BYTE PTR [eax-1]
	cmp	eax, ebx
	jne	SHORT $LN10@pbackfail@2
$LN9@pbackfail@2:

; 287  : 			{	// just back up position
; 288  : 			_Mysb::_Gndec();

	mov	eax, DWORD PTR [ecx+48]
	inc	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	dec	DWORD PTR [ecx]

; 289  : 			return (_Traits::not_eof(_Meta));

	mov	eax, ebx
	inc	eax
	neg	eax
	sbb	eax, eax
	and	eax, ebx
	pop	ebx

; 295  : #pragma warning(push)
; 296  : #pragma warning(disable: 6237 6239)
; 297  : 		/* prefast noise VSW 489858 */
; 298  : 		else if (1 < sizeof (_Elem) && _Mysb::gptr() != &_Mychar)
; 299  : #pragma warning(pop)
; 300  : 			{	// putback to _Mychar
; 301  : 			_Mychar = _Traits::to_char_type(_Meta);
; 302  : 			_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);
; 303  : 			return (_Meta);
; 304  : 			}
; 305  : 		else
; 306  : 			return (_Traits::eof());	// nowhere to put back
; 307  : 		}

	ret	4
$LN10@pbackfail@2:

; 290  : 			}
; 291  : 		else if (_Myfile == 0 || _Traits::eq_int_type(_Traits::eof(), _Meta))

	mov	eax, DWORD PTR [ecx+76]
	test	eax, eax
	je	SHORT $LN6@pbackfail@2
	cmp	ebx, -1
	je	SHORT $LN6@pbackfail@2

; 293  : 		else if (_Pcvt == 0 && _Ungetc(_Traits::to_char_type(_Meta), _Myfile))

	cmp	DWORD PTR [ecx+60], 0
	jne	SHORT $LN6@pbackfail@2
	movzx	ecx, bl
	push	eax
	push	ecx
	call	_ungetc
	add	esp, 8
	cmp	eax, -1
	je	SHORT $LN6@pbackfail@2

; 294  : 			return (_Meta);	// no facet and unget succeeded, return

	mov	eax, ebx
	pop	ebx

; 295  : #pragma warning(push)
; 296  : #pragma warning(disable: 6237 6239)
; 297  : 		/* prefast noise VSW 489858 */
; 298  : 		else if (1 < sizeof (_Elem) && _Mysb::gptr() != &_Mychar)
; 299  : #pragma warning(pop)
; 300  : 			{	// putback to _Mychar
; 301  : 			_Mychar = _Traits::to_char_type(_Meta);
; 302  : 			_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);
; 303  : 			return (_Meta);
; 304  : 			}
; 305  : 		else
; 306  : 			return (_Traits::eof());	// nowhere to put back
; 307  : 		}

	ret	4
$LN6@pbackfail@2:

; 292  : 			return (_Traits::eof());	// no open C stream or EOF, fail

	or	eax, -1
	pop	ebx

; 295  : #pragma warning(push)
; 296  : #pragma warning(disable: 6237 6239)
; 297  : 		/* prefast noise VSW 489858 */
; 298  : 		else if (1 < sizeof (_Elem) && _Mysb::gptr() != &_Mychar)
; 299  : #pragma warning(pop)
; 300  : 			{	// putback to _Mychar
; 301  : 			_Mychar = _Traits::to_char_type(_Meta);
; 302  : 			_Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);
; 303  : 			return (_Meta);
; 304  : 			}
; 305  : 		else
; 306  : 			return (_Traits::eof());	// nowhere to put back
; 307  : 		}

	ret	4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx

; 183  :     {

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 184  :     }

	ret	0
??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@ABV01@@Z PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	test	ecx, ecx
	je	SHORT $LN6@shared_ptr@6
	add	ecx, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
$LN6@shared_ptr@6:
	ret	4
??0?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@ABV01@@Z ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z
_TEXT	SEGMENT
_res$407056 = -16					; size = 4
$T406912 = -12						; size = 12
_eng$ = 8						; size = 4
_min_value$ = 12					; size = 4
_limit$169673 = 16					; size = 4
_range$ = 16						; size = 4
??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z PROC ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >, COMDAT

; 97   :   static result_type generate(Engine& eng, result_type min_value, result_type max_value, range_type range)

	sub	esp, 16					; 00000010H
	push	ebx
	mov	ebx, DWORD PTR _range$[esp+16]
	push	esi

; 98   :   {
; 99   :     typedef typename Engine::result_type base_result;
; 100  :     // ranges are always unsigned
; 101  :     typedef typename make_unsigned<base_result>::type base_unsigned;
; 102  :     const base_result bmin = (eng.min)();
; 103  :     const base_unsigned brange =
; 104  :       random::detail::subtract<base_result>()((eng.max)(), (eng.min)());

	xor	esi, esi
	mov	eax, 1
	mov	ecx, 32					; 00000020H
$LL68@generate@2:
	or	esi, eax
	rol	eax, 1
	sub	ecx, 1
	jne	SHORT $LL68@generate@2
	mov	DWORD PTR _res$407056[esp+24], esi

; 105  : 
; 106  :     if(range == 0) {

	test	ebx, ebx
	jne	SHORT $LN23@generate@2

; 107  :       return min_value;    

	mov	eax, DWORD PTR _min_value$[esp+20]
	pop	esi
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	add	esp, 16					; 00000010H
	ret	0
$LN23@generate@2:

; 108  :     } else if(brange == range) {

	cmp	esi, ebx
	jne	SHORT $LN21@generate@2

; 109  :       // this will probably never happen in real life
; 110  :       // basically nothing to do; just take care we don't overflow / underflow
; 111  :       base_unsigned v = random::detail::subtract<base_result>()(eng(), bmin);

	mov	eax, DWORD PTR _eng$[esp+20]
	mov	esi, DWORD PTR [eax]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()

; 112  :       return random::detail::add<base_unsigned, result_type>()(v, min_value);

	mov	ecx, DWORD PTR _min_value$[esp+20]
	test	ecx, ecx
	jge	SHORT $LN87@generate@2
	or	edx, -1
	sub	edx, ecx
$LN87@generate@2:
	pop	esi
	add	eax, ecx
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	add	esp, 16					; 00000010H
	ret	0
$LN21@generate@2:
	push	edi

; 113  :     } else if(brange < range) {

	cmp	esi, ebx
	jae	$LN19@generate@2
	push	ebp
	npad	2
$LL18@generate@2:

; 114  :       // use rejection method to handle things like 0..3 --> 0..4
; 115  :       for(;;) {
; 116  :         // concatenate several invocations of the base RNG
; 117  :         // take extra care to avoid overflows
; 118  : 
; 119  :         //  limit == floor((range+1)/(brange+1))
; 120  :         //  Therefore limit*(brange+1) <= range+1
; 121  :         range_type limit;
; 122  :         if(range == (std::numeric_limits<range_type>::max)()) {
; 123  :           limit = range/(range_type(brange)+1);

	xor	edx, edx
	lea	ecx, DWORD PTR [esi+1]
	cmp	ebx, -1
	jne	SHORT $LN16@generate@2
	or	eax, ebx
	div	ecx
	mov	DWORD PTR _limit$169673[esp+28], eax

; 124  :           if(range % (range_type(brange)+1) == range_type(brange))

	cmp	edx, esi
	jne	SHORT $LN14@generate@2

; 125  :             ++limit;

	inc	DWORD PTR _limit$169673[esp+28]

; 126  :         } else {

	jmp	SHORT $LN14@generate@2
$LN16@generate@2:

; 127  :           limit = (range+1)/(range_type(brange)+1);

	lea	eax, DWORD PTR [ebx+1]
	div	ecx
	mov	DWORD PTR _limit$169673[esp+28], eax
$LN14@generate@2:

; 128  :         }
; 129  : 
; 130  :         // We consider "result" as expressed to base (brange+1):
; 131  :         // For every power of (brange+1), we determine a random factor
; 132  :         range_type result = range_type(0);
; 133  :         range_type mult = range_type(1);

	mov	edi, 1
	xor	ebp, ebp

; 134  : 
; 135  :         // loop invariants:
; 136  :         //  result < mult
; 137  :         //  mult <= range
; 138  :         while(mult <= limit) {

	cmp	DWORD PTR _limit$169673[esp+28], edi
	jb	SHORT $LN12@generate@2
$LL13@generate@2:

; 139  :           // Postcondition: result <= range, thus no overflow
; 140  :           //
; 141  :           // limit*(brange+1)<=range+1                   def. of limit       (1)
; 142  :           // eng()-bmin<=brange                          eng() post.         (2)
; 143  :           // and mult<=limit.                            loop condition      (3)
; 144  :           // Therefore mult*(eng()-bmin+1)<=range+1      by (1),(2),(3)      (4)
; 145  :           // Therefore mult*(eng()-bmin)+mult<=range+1   rearranging (4)     (5)
; 146  :           // result<mult                                 loop invariant      (6)
; 147  :           // Therefore result+mult*(eng()-bmin)<range+1  by (5), (6)         (7)
; 148  :           //
; 149  :           // Postcondition: result < mult*(brange+1)
; 150  :           //
; 151  :           // result<mult                                 loop invariant      (1)
; 152  :           // eng()-bmin<=brange                          eng() post.         (2)
; 153  :           // Therefore result+mult*(eng()-bmin) <
; 154  :           //           mult+mult*(eng()-bmin)            by (1)              (3)
; 155  :           // Therefore result+(eng()-bmin)*mult <
; 156  :           //           mult+mult*brange                  by (2), (3)         (4)
; 157  :           // Therefore result+(eng()-bmin)*mult <
; 158  :           //           mult*(brange+1)                   by (4)
; 159  :           result += random::detail::subtract<base_result>()(eng(), bmin) * mult;

	mov	eax, DWORD PTR _eng$[esp+28]
	mov	esi, DWORD PTR [eax]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()
	imul	eax, edi
	add	ebp, eax

; 160  : 
; 161  :           // equivalent to (mult * (brange+1)) == range+1, but avoids overflow.
; 162  :           if(mult * range_type(brange) == range - mult + 1) {

	mov	eax, DWORD PTR _res$407056[esp+32]
	mov	edx, eax
	imul	edx, edi
	mov	ecx, ebx
	sub	ecx, edi
	inc	ecx
	cmp	edx, ecx
	je	SHORT $LN146@generate@2

; 163  :               // The destination range is an integer power of
; 164  :               // the generator's range.
; 165  :               return(result);
; 166  :           }
; 167  : 
; 168  :           // Postcondition: mult <= range
; 169  :           // 
; 170  :           // limit*(brange+1)<=range+1                   def. of limit       (1)
; 171  :           // mult<=limit                                 loop condition      (2)
; 172  :           // Therefore mult*(brange+1)<=range+1          by (1), (2)         (3)
; 173  :           // mult*(brange+1)!=range+1                    preceding if        (4)
; 174  :           // Therefore mult*(brange+1)<range+1           by (3), (4)         (5)
; 175  :           // 
; 176  :           // Postcondition: result < mult
; 177  :           //
; 178  :           // See the second postcondition on the change to result. 
; 179  :           mult *= range_type(brange)+range_type(1);

	inc	eax
	imul	edi, eax
	cmp	edi, DWORD PTR _limit$169673[esp+28]
	jbe	SHORT $LL13@generate@2

; 134  : 
; 135  :         // loop invariants:
; 136  :         //  result < mult
; 137  :         //  mult <= range
; 138  :         while(mult <= limit) {

	mov	esi, DWORD PTR _res$407056[esp+32]
$LN12@generate@2:

; 180  :         }
; 181  :         // loop postcondition: range/mult < brange+1
; 182  :         //
; 183  :         // mult > limit                                  loop condition      (1)
; 184  :         // Suppose range/mult >= brange+1                Assumption          (2)
; 185  :         // range >= mult*(brange+1)                      by (2)              (3)
; 186  :         // range+1 > mult*(brange+1)                     by (3)              (4)
; 187  :         // range+1 > (limit+1)*(brange+1)                by (1), (4)         (5)
; 188  :         // (range+1)/(brange+1) > limit+1                by (5)              (6)
; 189  :         // limit < floor((range+1)/(brange+1))           by (6)              (7)
; 190  :         // limit==floor((range+1)/(brange+1))            def. of limit       (8)
; 191  :         // not (2)                                       reductio            (9)
; 192  :         //
; 193  :         // loop postcondition: (range/mult)*mult+(mult-1) >= range
; 194  :         //
; 195  :         // (range/mult)*mult + range%mult == range       identity            (1)
; 196  :         // range%mult < mult                             def. of %           (2)
; 197  :         // (range/mult)*mult+mult > range                by (1), (2)         (3)
; 198  :         // (range/mult)*mult+(mult-1) >= range           by (3)              (4)
; 199  :         //
; 200  :         // Note that the maximum value of result at this point is (mult-1),
; 201  :         // so after this final step, we generate numbers that can be
; 202  :         // at least as large as range.  We have to really careful to avoid
; 203  :         // overflow in this final addition and in the rejection.  Anything
; 204  :         // that overflows is larger than range and can thus be rejected.
; 205  : 
; 206  :         // range/mult < brange+1  -> no endless loop
; 207  :         range_type result_increment = uniform_int<range_type>(0, range/mult)(eng);

	xor	edx, edx
	mov	eax, ebx
	div	edi
	mov	DWORD PTR $T406912[esp+32], 0
	mov	DWORD PTR $T406912[esp+36], eax
	mov	DWORD PTR $T406912[esp+40], eax
	mov	eax, DWORD PTR _eng$[esp+28]
	push	eax
	lea	eax, DWORD PTR $T406912[esp+36]
	call	??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@I@boost@@QAEIAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z ; boost::uniform_int<unsigned int>::operator()<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	ecx, eax

; 208  :         if((std::numeric_limits<range_type>::max)() / mult < result_increment) {

	or	eax, -1
	xor	edx, edx
	div	edi
	cmp	eax, ecx
	jb	$LL18@generate@2

; 209  :           // The multiplcation would overflow.  Reject immediately.
; 210  :           continue;
; 211  :         }
; 212  :         result_increment *= mult;

	imul	ecx, edi

; 213  :         // unsigned integers are guaranteed to wrap on overflow.
; 214  :         result += result_increment;

	add	ebp, ecx

; 215  :         if(result < result_increment) {

	cmp	ebp, ecx
	jb	$LL18@generate@2

; 216  :           // The addition overflowed.  Reject.
; 217  :           continue;
; 218  :         }
; 219  :         if(result > range) {

	cmp	ebp, ebx
	ja	$LL18@generate@2

; 220  :           // Too big.  Reject.
; 221  :           continue;
; 222  :         }
; 223  :         return random::detail::add<range_type, result_type>()(result, min_value);

	mov	eax, DWORD PTR _min_value$[esp+28]
	test	eax, eax
	jge	SHORT $LN115@generate@2
	or	ecx, -1
	sub	ecx, eax
$LN115@generate@2:
	add	ebp, eax
$LN146@generate@2:
	mov	eax, ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	add	esp, 16					; 00000010H
	ret	0
$LN19@generate@2:

; 224  :       }
; 225  :     } else {                   // brange > range
; 226  :       base_unsigned bucket_size;
; 227  :       // it's safe to add 1 to range, as long as we cast it first,
; 228  :       // because we know that it is less than brange.  However,
; 229  :       // we do need to be careful not to cause overflow by adding 1
; 230  :       // to brange.
; 231  :       if(brange == (std::numeric_limits<base_unsigned>::max)()) {
; 232  :         bucket_size = brange / (static_cast<base_unsigned>(range)+1);

	xor	edx, edx
	lea	ecx, DWORD PTR [ebx+1]
	cmp	esi, -1
	jne	SHORT $LN6@generate@2
	or	eax, esi
	div	ecx
	mov	edi, eax

; 233  :         if(brange % (static_cast<base_unsigned>(range)+1) == static_cast<base_unsigned>(range)) {

	cmp	edx, ebx
	jne	SHORT $LL3@generate@2

; 234  :           ++bucket_size;

	inc	edi

; 235  :         }
; 236  :       } else {

	jmp	SHORT $LL3@generate@2
$LN6@generate@2:

; 237  :         bucket_size = (brange+1) / (static_cast<base_unsigned>(range)+1);

	lea	eax, DWORD PTR [esi+1]
	div	ecx
	mov	edi, eax
$LL3@generate@2:

; 238  :       }
; 239  :       for(;;) {
; 240  :         base_unsigned result =
; 241  :           random::detail::subtract<base_result>()(eng(), bmin);

	mov	edx, DWORD PTR _eng$[esp+24]
	mov	esi, DWORD PTR [edx]
	call	??R?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEKXZ ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::operator()

; 242  :         result /= bucket_size;

	xor	edx, edx
	div	edi

; 243  :         // result and range are non-negative, and result is possibly larger
; 244  :         // than range, so the cast is safe
; 245  :         if(result <= static_cast<base_unsigned>(range))

	cmp	eax, ebx
	ja	SHORT $LL3@generate@2

; 246  :           return random::detail::add<base_unsigned, result_type>()(result, min_value);

	mov	ecx, DWORD PTR _min_value$[esp+24]
	test	ecx, ecx
	jge	SHORT $LN135@generate@2
	or	edx, -1
	sub	edx, ecx
$LN135@generate@2:
	pop	edi
	pop	esi
	add	eax, ecx
	pop	ebx

; 247  :       }
; 248  :     }
; 249  :   }

	add	esp, 16					; 00000010H
	ret	0
??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ENDP ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ??$root_directory_start@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@detail@filesystem@boost@@YAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
$T407350 = 12						; size = 1
_size$ = 12						; size = 4
??$root_directory_start@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@detail@filesystem@boost@@YAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; boost::filesystem::detail::root_directory_start<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT

; 864  :       {

	push	ebx
	push	ebp

; 865  :         typedef typename boost::BOOST_FILESYSTEM_NAMESPACE::basic_path<String, Traits> path_type;
; 866  : 
; 867  : #     ifdef BOOST_WINDOWS_PATH
; 868  :         // case "c:/"
; 869  :         if ( size > 2
; 870  :           && s[1] == colon<path_type>::value
; 871  :           && s[2] == slash<path_type>::value ) return 2;

	mov	ebp, DWORD PTR _size$[esp+4]
	push	esi
	mov	esi, DWORD PTR _s$[esp+8]
	push	edi
	mov	ebx, 16					; 00000010H
	cmp	ebp, 2
	jbe	SHORT $LN62@root_direc
	cmp	DWORD PTR [esi+20], 1
	jae	SHORT $LN9@root_direc
	call	__invalid_parameter_noinfo
$LN9@root_direc:
	lea	edi, DWORD PTR [esi+4]
	cmp	DWORD PTR [esi+24], ebx
	jb	SHORT $LN14@root_direc
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN15@root_direc
$LN14@root_direc:
	mov	eax, edi
$LN15@root_direc:
	cmp	BYTE PTR [eax+1], 58			; 0000003aH
	jne	SHORT $LN61@root_direc
	cmp	DWORD PTR [esi+20], 2
	jae	SHORT $LN16@root_direc
	call	__invalid_parameter_noinfo
$LN16@root_direc:
	cmp	DWORD PTR [esi+24], ebx
	jb	SHORT $LN21@root_direc
	mov	edi, DWORD PTR [edi]
$LN21@root_direc:
	cmp	BYTE PTR [edi+2], 47			; 0000002fH
	jne	SHORT $LN61@root_direc
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 2
	pop	ebx

; 894  :       }

	ret	0
$LN61@root_direc:

; 872  : #     endif
; 873  : 
; 874  :         // case "//"
; 875  :         if ( size == 2
; 876  :           && s[0] == slash<path_type>::value
; 877  :           && s[1] == slash<path_type>::value ) return String::npos;

	cmp	ebp, 2
$LN62@root_direc:
	jne	SHORT $LN3@root_direc
	lea	edi, DWORD PTR [esi+4]
	cmp	DWORD PTR [esi+24], ebx
	jb	SHORT $LN28@root_direc
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN29@root_direc
$LN28@root_direc:
	mov	eax, edi
$LN29@root_direc:
	cmp	BYTE PTR [eax], 47			; 0000002fH
	jne	$LN60@root_direc
	cmp	DWORD PTR [esi+20], 1
	jae	SHORT $LN30@root_direc
	call	__invalid_parameter_noinfo
$LN30@root_direc:
	cmp	DWORD PTR [esi+24], ebx
	jb	SHORT $LN35@root_direc
	mov	edi, DWORD PTR [edi]
$LN35@root_direc:
	cmp	BYTE PTR [edi+1], 47			; 0000002fH
	jne	SHORT $LN60@root_direc
$LN1@root_direc:

; 892  : 
; 893  :         return String::npos;

	or	eax, -1
$LN5@root_direc:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 894  :       }

	ret	0
$LN3@root_direc:

; 878  : 
; 879  :         // case "//net {/}"
; 880  :         if ( size > 3
; 881  :           && s[0] == slash<path_type>::value
; 882  :           && s[1] == slash<path_type>::value
; 883  :           && s[2] != slash<path_type>::value )

	cmp	ebp, 3
	jbe	SHORT $LN2@root_direc
	lea	edi, DWORD PTR [esi+4]
	cmp	DWORD PTR [esi+24], ebx
	jb	SHORT $LN42@root_direc
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN43@root_direc
$LN42@root_direc:
	mov	eax, edi
$LN43@root_direc:
	cmp	BYTE PTR [eax], 47			; 0000002fH
	jne	SHORT $LN2@root_direc
	cmp	DWORD PTR [esi+20], 1
	jae	SHORT $LN44@root_direc
	call	__invalid_parameter_noinfo
$LN44@root_direc:
	cmp	DWORD PTR [esi+24], ebx
	jb	SHORT $LN49@root_direc
	mov	edi, DWORD PTR [edi]
$LN49@root_direc:
	cmp	BYTE PTR [edi+1], 47			; 0000002fH
	jne	SHORT $LN2@root_direc
	push	2
	mov	ecx, esi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	cmp	BYTE PTR [eax], 47			; 0000002fH
	je	SHORT $LN2@root_direc

; 884  :         {
; 885  :           typename String::size_type pos(
; 886  :             s.find( slash<path_type>::value, 2 ) );

	push	1
	push	2
	lea	eax, DWORD PTR $T407350[esp+20]
	push	eax
	mov	ecx, esi
	mov	BYTE PTR $T407350[esp+24], 47		; 0000002fH
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find

; 887  :           return pos < size ? pos : String::npos;

	cmp	eax, ebp
	jb	SHORT $LN5@root_direc
	pop	edi
	pop	esi
	pop	ebp

; 892  : 
; 893  :         return String::npos;

	or	eax, -1
	pop	ebx

; 894  :       }

	ret	0
$LN2@root_direc:

; 888  :         }
; 889  :         
; 890  :         // case "/"
; 891  :         if ( size > 0 && s[0] == slash<path_type>::value ) return 0;

	test	ebp, ebp
	jbe	SHORT $LN1@root_direc
$LN60@root_direc:
	cmp	DWORD PTR [esi+24], ebx
	jb	SHORT $LN58@root_direc
	mov	esi, DWORD PTR [esi+4]
	jmp	SHORT $LN59@root_direc
$LN58@root_direc:
	add	esi, 4
$LN59@root_direc:
	cmp	BYTE PTR [esi], 47			; 0000002fH
	jne	SHORT $LN1@root_direc
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 894  :       }

	ret	0
??$root_directory_start@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@detail@filesystem@boost@@YAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; boost::filesystem::detail::root_directory_start<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::~shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	test	esi, esi
	je	SHORT $LN10@shared_ptr@7
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN10@shared_ptr@7
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN10@shared_ptr@7
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	pop	esi
	jmp	edx
$LN10@shared_ptr@7:
	pop	esi
	ret	0
??1?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::~shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = eax

; 183  :     {

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 184  :     }

	ret	0
??0?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT
; _this$ = ecx

; 165  :       basic_path() {}

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+24], 15			; 0000000fH
	mov	DWORD PTR [eax+20], ecx
	mov	BYTE PTR [eax+4], cl
	ret	0
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string
_TEXT	ENDS
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 134  : 	return (_Left.compare(_Right) < 0);

	mov	eax, DWORD PTR __Right$[esp-4]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	mov	ecx, DWORD PTR [eax+20]
	jb	SHORT $LN9@operator@229
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN10@operator@229
$LN9@operator@229:
	add	eax, 4
$LN10@operator@229:
	push	ecx
	mov	ecx, DWORD PTR __Left$[esp]
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	xor	ecx, ecx
	test	eax, eax
	setl	cl
	mov	al, cl

; 135  : 	}

	ret	0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\uniform_int.hpp
_TEXT	ENDS
;	COMDAT ??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@QAEHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z
_TEXT	SEGMENT
_eng$ = 8						; size = 4
??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@QAEHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z PROC ; boost::uniform_int<int>::operator()<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >, COMDAT
; _this$ = eax

; 59   :   {
; 60   :       return generate(eng, _min, _max, _range);

	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _eng$[esp-4]
	push	ecx
	push	edx
	push	eax
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	add	esp, 12					; 0000000cH

; 61   :   }

	ret	4
??$?RV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@QAEHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@@Z ENDP ; boost::uniform_int<int>::operator()<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string
_TEXT	ENDS
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 94   : 	return (_Left.compare(_Right) == 0);

	mov	edx, DWORD PTR __Right$[esp-4]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	6
$LL7@operator@230:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL7@operator@230
	mov	ecx, DWORD PTR __Left$[esp]
	sub	eax, esi
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	push	edx
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	inc	eax
	pop	esi

; 95   : 	}

	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\globals.h
_TEXT	ENDS
;	COMDAT ??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z
_TEXT	SEGMENT
??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z PROC		; DRAMsimII::AlmostEqual<float>, COMDAT
; _nVal1$ = xmm0s
; _nVal2$ = xmm2s

; 114  : 		return std::abs(nVal1 - nVal2) <= EPSILON * std::fabs(nVal1);

	cvtss2sd xmm1, xmm0
	cvtss2sd xmm2, xmm2
	subsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm0, xmm0
	cvtss2sd xmm2, xmm1
	movsd	xmm1, QWORD PTR __mask@@AbsDouble@
	andpd	xmm0, xmm1
	andpd	xmm2, xmm1
	cvtsd2ss xmm0, xmm0
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@3ee4f8b588e368f1
	cvtss2sd xmm2, xmm2
	comisd	xmm0, xmm2
	jb	SHORT $LN3@AlmostEqua@2
	mov	eax, 1

; 115  : 		// see Knuth section 4.2.2 pages 217-218
; 116  : 	}

	ret	0
$LN3@AlmostEqua@2:

; 114  : 		return std::abs(nVal1 - nVal2) <= EPSILON * std::fabs(nVal1);

	xor	eax, eax

; 115  : 		// see Knuth section 4.2.2 pages 217-218
; 116  : 	}

	ret	0
??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z ENDP		; DRAMsimII::AlmostEqual<float>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@26
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
$LN3@Container_@26:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Container_base_aux_alloc_real<std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z PROC ; std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = esi

; 47   : 		{	// construct allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@List_nod@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 48   : 		}

	mov	eax, esi
	ret	4

; 47   : 		{	// construct allocator from _Al

$LN8@List_nod@4:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 48   : 		}

	mov	eax, esi
	ret	4
??0?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ENDP ; std::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_nod<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z PROC ; std::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = esi

; 67   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@List_ptr@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 68   : 		}

	mov	eax, esi
	ret	4

; 67   : 		{	// construct base, and allocator from _Al

$LN13@List_ptr@4:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 68   : 		}

	mov	eax, esi
	ret	4
??0?$_List_ptr@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ENDP ; std::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_ptr<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z PROC ; std::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT
; _this$ = esi

; 85   : 		{	// construct base, and allocator from _Al

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@List_val@4
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 86   : 		}

	mov	eax, esi
	ret	4

; 85   : 		{	// construct base, and allocator from _Al

$LN18@List_val@4:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 86   : 		}

	mov	eax, esi
	ret	4
??0?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@1@@Z ENDP ; std::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_List_val<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >, COMDAT

; 436  : 		{	// construct empty list

	push	-1
	push	__ehhandler$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+16]
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN23@list@4
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN24@list@4
$LN23@list@4:
	xor	eax, eax
$LN24@list@4:
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 0

; 437  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$_List_val@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
__ehhandler$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ
_TEXT	SEGMENT
??D?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator*, COMDAT
; _this$ = esi

; 212  : 
; 213  :  #if _HAS_ITERATOR_DEBUGGING
; 214  : 			if (this->_Mycont == 0
; 215  : 				|| _Ptr == 0
; 216  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 217  : 				{
; 218  : 				_DEBUG_ERROR("list iterator not dereferencable");
; 219  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 220  : 				}
; 221  :  #else
; 222  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN17@operator@231
	call	__invalid_parameter_noinfo

; 223  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@231
$LN17@operator@231:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@231
$LN11@operator@231:
	xor	eax, eax
$LN12@operator@231:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN1@operator@231
	call	__invalid_parameter_noinfo
$LN1@operator@231:

; 224  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 225  : 
; 226  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [esi+4]
	add	eax, 8

; 227  : 			}

	ret	0
??D?$_Const_iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Const_iterator<1>::operator*
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ??0chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::chain_impl, COMDAT
; _this$ = esi

; 307  :             { }

	push	esi
	call	??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
	mov	eax, 4
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [esi+32], 4096		; 00001000H
	mov	DWORD PTR [esi+36], 128			; 00000080H
	mov	eax, esi
	ret	0
??0chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::chain_impl
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT
?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ PROC ; std::istreambuf_iterator<char,std::char_traits<char> >::_Peek, COMDAT
; _this$ = esi

; 529  : 		int_type _Meta;
; 530  : 		if (_Strbuf == 0
; 531  : 			|| traits_type::eq_int_type(traits_type::eof(),
; 532  : 				_Meta = _Strbuf->sgetc()))

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Peek
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@Peek
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN8@Peek
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN9@Peek
$LN8@Peek:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN9@Peek:
	cmp	eax, -1
	je	SHORT $LN2@Peek

; 533  : 			_Strbuf = 0;
; 534  : 		else
; 535  : 			_Val = traits_type::to_char_type(_Meta);

	mov	BYTE PTR [esi+5], al

; 536  : 		_Got = true;

	mov	BYTE PTR [esi+4], 1

; 538  : 		}

	ret	0
$LN2@Peek:

; 537  : 		return (_Val);

	mov	al, BYTE PTR [esi+5]
	mov	DWORD PTR [esi], 0
	mov	BYTE PTR [esi+4], 1

; 538  : 		}

	ret	0
?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ ENDP ; std::istreambuf_iterator<char,std::char_traits<char> >::_Peek
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::istreambuf_iterator<char,std::char_traits<char> >::_Inc, COMDAT
; _this$ = esi

; 519  : 		if (_Strbuf == 0
; 520  : 			|| traits_type::eq_int_type(traits_type::eof(),
; 521  : 				_Strbuf->sbumpc()))

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN2@Inc@6
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@Inc@6
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN8@Inc@6
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN9@Inc@6
$LN8@Inc@6:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN9@Inc@6:
	cmp	eax, -1
	je	SHORT $LN2@Inc@6

; 523  : 		else
; 524  : 			_Got = false;

	mov	BYTE PTR [esi+4], 0

; 525  : 		}

	ret	0
$LN2@Inc@6:

; 522  : 			_Strbuf = 0, _Got = true;

	mov	DWORD PTR [esi], 0
	mov	BYTE PTR [esi+4], 1

; 525  : 		}

	ret	0
?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::istreambuf_iterator<char,std::char_traits<char> >::_Inc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	je	SHORT $LN8@scalar@42
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@42:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??D?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ
_TEXT	SEGMENT
??D?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator*, COMDAT
; _this$ = esi

; 394  : 			return ((reference)**(_Mybase_iter *)this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN19@operator@232
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@232
$LN19@operator@232:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@232
$LN13@operator@232:
	xor	eax, eax
$LN14@operator@232:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN3@operator@232
	call	__invalid_parameter_noinfo
$LN3@operator@232:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 8

; 395  : 			}

	ret	0
??D?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ PROC ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++, COMDAT
; _this$ = esi

; 487  : 
; 488  :  #if _HAS_ITERATOR_DEBUGGING
; 489  : 		if (_Strbuf == 0)
; 490  : 			_DEBUG_ERROR("istreambuf_iterator is not incrementable");
; 491  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 492  : 
; 493  : 		_Inc();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN4@operator@233
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN10@operator@233
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN10@operator@233
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN11@operator@233
$LN10@operator@233:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN11@operator@233:
	cmp	eax, -1
	je	SHORT $LN4@operator@233
	mov	BYTE PTR [esi+4], 0

; 494  : 		return (*this);

	mov	eax, esi

; 495  : 		}

	ret	0

; 487  : 
; 488  :  #if _HAS_ITERATOR_DEBUGGING
; 489  : 		if (_Strbuf == 0)
; 490  : 			_DEBUG_ERROR("istreambuf_iterator is not incrementable");
; 491  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 492  : 
; 493  : 		_Inc();

$LN4@operator@233:
	mov	DWORD PTR [esi], 0
	mov	BYTE PTR [esi+4], 1

; 494  : 		return (*this);

	mov	eax, esi

; 495  : 		}

	ret	0
??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ENDP ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ
_TEXT	SEGMENT
??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ PROC ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*, COMDAT
; _this$ = esi

; 474  : 		if (!_Got)

	cmp	BYTE PTR [esi+4], 0
	jne	SHORT $LN27@operator@234

; 475  : 			((_Myt *)this)->_Peek();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@operator@234
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN11@operator@234
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN11@operator@234
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN12@operator@234
$LN11@operator@234:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN12@operator@234:
	cmp	eax, -1
	je	SHORT $LN5@operator@234
	mov	BYTE PTR [esi+5], al
	mov	BYTE PTR [esi+4], 1

; 483  : 		}

	ret	0

; 475  : 			((_Myt *)this)->_Peek();

$LN5@operator@234:
	mov	DWORD PTR [esi], 0
	mov	BYTE PTR [esi+4], 1
$LN27@operator@234:

; 476  : 
; 477  :  #if _HAS_ITERATOR_DEBUGGING
; 478  : 		if (_Strbuf == 0)
; 479  : 			_DEBUG_ERROR("istreambuf_iterator is not dereferencable");
; 480  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 481  : 
; 482  : 		return (_Val);

	mov	al, BYTE PTR [esi+5]

; 483  : 		}

	ret	0
??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ENDP ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	je	SHORT $LN10@scalar@43
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@43:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator*, COMDAT
; _this$ = esi

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN15@operator@235
	call	__invalid_parameter_noinfo

; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN9@operator@235
$LN15@operator@235:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN10@operator@235
$LN9@operator@235:
	xor	eax, eax
$LN10@operator@235:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN1@operator@235
	call	__invalid_parameter_noinfo
$LN1@operator@235:

; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH

; 265  : 			}

	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::const_iterator::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?front@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ
_TEXT	SEGMENT
?front@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::front, COMDAT
; _this$ = eax

; 640  : 		return (*begin());

	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN39@front@2
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN34@front@2:
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN40@front@2
	call	__invalid_parameter_noinfo
$LN40@front@2:
	lea	eax, DWORD PTR [esi+8]

; 641  : 		}

	pop	esi
	ret	0
$LN39@front@2:

; 640  : 		return (*begin());

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN34@front@2
?front@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::front
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\access_control.hpp
_TEXT	ENDS
;	COMDAT ??0?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = eax

; 79   :     access_control() { }

	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], OFFSET ??_7?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@
	ret	0
??0?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >::access_control<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >,boost::iostreams::public_,boost::iostreams::detail::pub_<boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@44
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@44:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MAEPAXI@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++, COMDAT
; _this$ = esi

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN13@operator@236
	call	__invalid_parameter_noinfo

; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN9@operator@236
$LN13@operator@236:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN10@operator@236
$LN9@operator@236:
	xor	eax, eax
$LN10@operator@236:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN14@operator@236
	call	__invalid_parameter_noinfo
$LN14@operator@236:

; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [esi+4], 456			; 000001c8H

; 126  : 		return (*this);

	mov	eax, esi

; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::operator*, COMDAT
; _this$ = esi

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN17@operator@237
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@237
$LN17@operator@237:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@237
$LN11@operator@237:
	xor	eax, eax
$LN12@operator@237:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN3@operator@237
	call	__invalid_parameter_noinfo
$LN3@operator@237:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH

; 466  : 			}

	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\functional
_TEXT	ENDS
;	COMDAT ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; _this$ = ecx

; 143  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Right$[esp-4]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	mov	ecx, DWORD PTR [eax+20]
	jb	SHORT $LN11@operator@238
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN12@operator@238
$LN11@operator@238:
	add	eax, 4
$LN12@operator@238:
	push	ecx
	mov	ecx, DWORD PTR __Left$[esp]
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	xor	ecx, ecx
	test	eax, eax
	setl	cl
	mov	al, cl

; 144  : 		}

	ret	8
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?front@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEAAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ
_TEXT	SEGMENT
?front@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEAAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::front, COMDAT
; _this$ = eax

; 207  :     streambuf_type& front() { return *list().front(); }

	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN45@front@3
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN40@front@3:
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN46@front@3
	call	__invalid_parameter_noinfo
$LN46@front@3:
	mov	eax, DWORD PTR [esi+8]
	pop	esi
	ret	0
$LN45@front@3:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN40@front@3
?front@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEAAV?$linked_streambuf@DU?$char_traits@D@std@@@234@XZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::front
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::~shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>, COMDAT
; _this$ = eax
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN10@shared_ptr@8
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN10@shared_ptr@8
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN10@shared_ptr@8
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN10@shared_ptr@8:
	pop	esi
	ret	0
??1?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::~shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT
; _this$ = eax
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN13@chain_base@2
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN13@chain_base@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN13@chain_base@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN13@chain_base@2:
	pop	esi
	ret	0
??1?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >::~chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = eax
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN16@chain@2
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN16@chain@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN16@chain@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN16@chain@2:
	pop	esi
	ret	0
??1?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >::~chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_istream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	lea	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [eax-8]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-8], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ$1
__ehfuncinfo$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::~filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>, COMDAT
	push	-1
	push	__ehhandler$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[esp+20]
	mov	DWORD PTR __$EHRec$[esp+32], 1
	mov	esi, DWORD PTR [edi+20]
	test	esi, esi
	je	SHORT $LN21@filtering_@3
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN21@filtering_@3
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN21@filtering_@3
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN21@filtering_@3:
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+edi+8], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR [edi], OFFSET ??_7?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@6B@
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAE@XZ
__unwindfunclet$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::~filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>
; Function compile flags: /Ogtpy
;	COMDAT ??_Glocale@std@@QAEPAXI@Z
_TEXT	SEGMENT
__Lock$409300 = -4					; size = 4
___flags$ = 8						; size = 4
??_Glocale@std@@QAEPAXI@Z PROC				; std::locale::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ecx
	push	ebx
	mov	ebx, ecx
	push	edi
	mov	edi, DWORD PTR [ebx]
	test	edi, edi
	je	SHORT $LN7@scalar@45
	push	0
	lea	ecx, DWORD PTR __Lock$409300[esp+16]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN9@scalar@45
	cmp	eax, -1
	jae	SHORT $LN9@scalar@45
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN9@scalar@45:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$409300[esp+16]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN13@scalar@45
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@scalar@45:
	pop	esi
$LN7@scalar@45:
	test	BYTE PTR ___flags$[esp+8], 1
	je	SHORT $LN12@scalar@45
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@scalar@45:
	pop	edi
	mov	eax, ebx
	pop	ebx
	pop	ecx
	ret	4
??_Glocale@std@@QAEPAXI@Z ENDP				; std::locale::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_istream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	lea	esi, DWORD PTR [ecx-8]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [edx+eax-8], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN13@scalar@46
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@scalar@46:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN9@scalar@47
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@scalar@47:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = edi

; 131  : 		_Myt _Tmp = *this;

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ecx

; 132  : 		++*this;

	test	eax, eax
	jne	SHORT $LN15@operator@239
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@operator@239
$LN15@operator@239:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN12@operator@239
$LN11@operator@239:
	xor	eax, eax
$LN12@operator@239:
	mov	edx, DWORD PTR [esi+4]
	cmp	edx, DWORD PTR [eax+16]
	jb	SHORT $LN16@operator@239
	call	__invalid_parameter_noinfo
$LN16@operator@239:
	add	DWORD PTR [esi+4], 456			; 000001c8H

; 133  : 		return (_Tmp);

	mov	eax, edi

; 134  : 		}

	ret	0
??E?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@XZ PROC ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator*, COMDAT
; _this$ = esi

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN13@operator@240
	call	__invalid_parameter_noinfo

; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN9@operator@240
$LN13@operator@240:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN10@operator@240
$LN9@operator@240:
	xor	eax, eax
$LN10@operator@240:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN14@operator@240
	call	__invalid_parameter_noinfo

; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [esi+4]

; 107  : 		}

	ret	0
$LN14@operator@240:

; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, ecx

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@QBEABVChannel@DRAMsimII@@XZ ENDP ; std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::operator->, COMDAT
; _this$ = esi

; 470  : 			return (&**this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN19@operator@241
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@241
$LN19@operator@241:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@241
$LN13@operator@241:
	xor	eax, eax
$LN14@operator@241:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN5@operator@241
	call	__invalid_parameter_noinfo
$LN5@operator@241:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH

; 471  : 			}

	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::iterator::operator->
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\random\variate_generator.hpp
_TEXT	ENDS
;	COMDAT ??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAEHXZ
_TEXT	SEGMENT
??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAEHXZ PROC ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >::operator(), COMDAT
; _this$ = eax

; 100  :   result_type operator()() { return _dist(_eng); }

	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	add	esp, 12					; 0000000cH
	ret	0
??R?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_int@H@3@@boost@@QAEHXZ ENDP ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_int<int> >::operator()
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ$0
__ehfuncinfo$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\filtering_stream.hpp
xdata$x	ENDS
;	COMDAT ??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::~filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>, COMDAT

; 152  : BOOST_IOSTREAMS_DEFINE_FILTER_STREAM(filtering_stream, boost::iostreams::chain, char)

	push	-1
	push	__ehhandler$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+16]
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], OFFSET ??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi+8], OFFSET ??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@
	mov	DWORD PTR __$EHRec$[esp+28], 0
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax]
	test	BYTE PTR [eax+44], 1
	je	SHORT $LN13@filtering_@4
	mov	edx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+esi+48]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+48]
	call	eax
$LN13@filtering_@4:
	push	esi
	mov	DWORD PTR __$EHRec$[esp+32], -1
	call	??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	push	eax
	call	??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
	ret	0
__ehhandler$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::~filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
;	COMDAT ??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT
; _this$ = ecx

; 173  :      ~basic_path() {}

	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN19@basic_path
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@basic_path:
	xor	eax, eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], eax
	mov	BYTE PTR [esi+4], al
	pop	esi
	ret	0
??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
_TEXT	SEGMENT
__Copied$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn, COMDAT
; _this$ = ecx

; 362  : 		{	// put _Count characters to stream

	push	ecx
	push	ebp

; 363  : 		streamsize _Stream_size, _Size, _Copied;
; 364  : 
; 365  : 		for (_Copied = 0; 0 < _Count; )

	mov	ebp, DWORD PTR __Count$[esp+4]
	push	esi
	xor	esi, esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR __Copied$[esp+16], esi
	test	ebp, ebp
	jle	SHORT $LN31@xsputn
	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp+16]
	npad	7
$LL7@xsputn:

; 366  : 			if (0 < (_Stream_size = _Pnavail()))

	mov	ecx, edi
	call	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
	test	eax, eax
	jle	SHORT $LN5@xsputn

; 367  : 				{	// copy to write buffer
; 368  : 				_Size = _Stream_size;

	mov	esi, eax

; 369  : 				if (_Count < _Size)

	cmp	ebp, eax

; 370  : 					_Size = _Count;

	cmovl	esi, ebp

; 371  : 				_Traits_helper::copy_s<_Traits>(pptr(), _Stream_size, _Ptr, _Size);

	push	esi
	push	ebx
	push	eax
	mov	eax, DWORD PTR [edi+36]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy_s

; 372  : 				_Ptr += _Size;
; 373  : 				_Copied += _Size;
; 374  : 				_Count -= _Size;
; 375  : 				pbump((int)_Size);

	mov	eax, DWORD PTR [edi+52]
	sub	DWORD PTR [eax], esi
	add	DWORD PTR __Copied$[esp+36], esi
	mov	eax, DWORD PTR [edi+36]
	add	ebx, esi
	sub	ebp, esi
	add	esp, 16					; 00000010H
	add	DWORD PTR [eax], esi

; 376  : 				}
; 377  : 			else if (_Traits::eq_int_type(_Traits::eof(),

	mov	esi, DWORD PTR __Copied$[esp+20]
	jmp	SHORT $LN1@xsputn
$LN5@xsputn:

; 378  : 				overflow(_Traits::to_int_type(*_Ptr))))

	movzx	eax, BYTE PTR [ebx]
	mov	edx, DWORD PTR [edi]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, edi
	call	eax
	cmp	eax, -1
	je	SHORT $LN30@xsputn

; 379  : 				break;	// single character put failed, quit
; 380  : 			else
; 381  : 				{	// count character successfully put
; 382  : 				++_Ptr;
; 383  : 				++_Copied;

	inc	esi
	inc	ebx
	mov	DWORD PTR __Copied$[esp+20], esi

; 384  : 				--_Count;

	dec	ebp
$LN1@xsputn:

; 363  : 		streamsize _Stream_size, _Size, _Copied;
; 364  : 
; 365  : 		for (_Copied = 0; 0 < _Count; )

	test	ebp, ebp
	jg	SHORT $LL7@xsputn
$LN30@xsputn:
	pop	ebx
	pop	edi

; 385  : 				}
; 386  : 
; 387  : 		return (_Copied);

	mov	eax, esi
	pop	esi
	pop	ebp

; 388  : 		}

	pop	ecx
	ret	8
$LN31@xsputn:
	pop	edi

; 385  : 				}
; 386  : 
; 387  : 		return (_Copied);

	mov	eax, esi
	pop	esi
	pop	ebp

; 388  : 		}

	pop	ecx
	ret	8
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
_TEXT	SEGMENT
__Copied$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Ptr_size$ = 12					; size = 4
__Count$ = 16						; size = 4
?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Xsgetn_s, COMDAT
; _this$ = ecx

; 332  : 		{	// get _Count characters from stream

	push	ecx
	push	ebp

; 333  : 		int_type _Meta;
; 334  : 		streamsize _Stream_size, _Size, _Copied;
; 335  : 
; 336  : 		for (_Copied = 0; 0 < _Count; )

	mov	ebp, DWORD PTR __Count$[esp+4]
	push	esi
	xor	esi, esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR __Copied$[esp+16], esi
	test	ebp, ebp
	jle	SHORT $LN31@Xsgetn_s
	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp+16]
	npad	7
$LL7@Xsgetn_s:

; 337  : 			if (0 < (_Stream_size = _Gnavail()))

	mov	ecx, edi
	call	?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Gnavail
	test	eax, eax
	jle	SHORT $LN5@Xsgetn_s

; 338  : 				{	// copy from read buffer
; 339  : 				_Size = _Stream_size;
; 340  : 				if (_Count < _Size)
; 341  : 					_Size = _Count;
; 342  : 				_Traits_helper::copy_s<_Traits>(_Ptr, _Ptr_size, gptr(), _Size);

	mov	edx, DWORD PTR __Ptr_size$[esp+16]
	mov	esi, eax
	cmp	ebp, eax
	mov	eax, DWORD PTR [edi+32]
	mov	ecx, DWORD PTR [eax]
	cmovl	esi, ebp
	push	esi
	push	ecx
	push	edx
	push	ebx
	call	_memcpy_s

; 343  : 				_Ptr += _Size;
; 344  : 				_Copied += _Size;
; 345  : 				_Count -= _Size;
; 346  : 				gbump((int)_Size);

	mov	eax, DWORD PTR [edi+48]
	sub	DWORD PTR [eax], esi
	add	DWORD PTR __Copied$[esp+36], esi
	mov	eax, DWORD PTR [edi+32]
	add	ebx, esi
	sub	ebp, esi
	add	esp, 16					; 00000010H
	add	DWORD PTR [eax], esi
	mov	esi, DWORD PTR __Copied$[esp+20]
	jmp	SHORT $LN1@Xsgetn_s
$LN5@Xsgetn_s:

; 347  : 				}
; 348  : 			else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow()))

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+20]
	mov	ecx, edi
	call	edx
	cmp	eax, -1
	je	SHORT $LN30@Xsgetn_s

; 349  : 				break;	// end of file, quit
; 350  : 			else
; 351  : 				{	// get a single character
; 352  : 				*_Ptr++ = _Traits::to_char_type(_Meta);
; 353  : 				++_Copied;

	inc	esi
	mov	BYTE PTR [ebx], al
	inc	ebx
	mov	DWORD PTR __Copied$[esp+20], esi

; 354  : 				--_Count;

	dec	ebp
$LN1@Xsgetn_s:

; 333  : 		int_type _Meta;
; 334  : 		streamsize _Stream_size, _Size, _Copied;
; 335  : 
; 336  : 		for (_Copied = 0; 0 < _Count; )

	test	ebp, ebp
	jg	SHORT $LL7@Xsgetn_s
$LN30@Xsgetn_s:
	pop	ebx
	pop	edi

; 355  : 				}
; 356  : 
; 357  : 		return (_Copied);

	mov	eax, esi
	pop	esi
	pop	ebp

; 358  : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN31@Xsgetn_s:
	pop	edi

; 355  : 				}
; 356  : 
; 357  : 		return (_Copied);

	mov	eax, esi
	pop	esi
	pop	ebp

; 358  : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Xsgetn_s
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::snextc, COMDAT
; _this$ = esi

; 131  : 		return (1 < _Gnavail()
; 132  : 			? _Traits::to_int_type(*_Gnpreinc())
; 133  : 			: _Traits::eq_int_type(_Traits::eof(), sbumpc())
; 134  : 				? _Traits::eof() : sgetc());

	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN17@snextc
	mov	ecx, DWORD PTR [esi+48]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, 1
	jle	SHORT $LN5@snextc
	mov	eax, DWORD PTR [esi+48]
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+32]
	inc	DWORD PTR [eax]
	mov	edx, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [edx]
	movzx	eax, BYTE PTR [eax]

; 135  : 		}

	ret	0
$LN5@snextc:

; 131  : 		return (1 < _Gnavail()
; 132  : 			? _Traits::to_int_type(*_Gnpreinc())
; 133  : 			: _Traits::eq_int_type(_Traits::eof(), sbumpc())
; 134  : 				? _Traits::eof() : sgetc());

	test	eax, eax
	je	SHORT $LN17@snextc
	mov	ecx, DWORD PTR [esi+48]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN17@snextc
	mov	eax, ecx
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	movzx	eax, BYTE PTR [ecx]
	jmp	SHORT $LN18@snextc
$LN17@snextc:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+20]
	mov	ecx, esi
	call	edx
$LN18@snextc:
	cmp	eax, -1
	jne	SHORT $LN3@snextc
	or	eax, eax

; 135  : 		}

	ret	0
$LN3@snextc:

; 131  : 		return (1 < _Gnavail()
; 132  : 			? _Traits::to_int_type(*_Gnpreinc())
; 133  : 			: _Traits::eq_int_type(_Traits::eof(), sbumpc())
; 134  : 				? _Traits::eof() : sgetc());

	mov	eax, DWORD PTR [esi+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN35@snextc
	mov	ecx, DWORD PTR [esi+48]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN35@snextc
	mov	edx, DWORD PTR [eax]
	movzx	eax, BYTE PTR [edx]

; 135  : 		}

	ret	0

; 131  : 		return (1 < _Gnavail()
; 132  : 			? _Traits::to_int_type(*_Gnpreinc())
; 133  : 			: _Traits::eq_int_type(_Traits::eof(), sbumpc())
; 134  : 				? _Traits::eof() : sgetc());

$LN35@snextc:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	mov	ecx, esi
	jmp	edx
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::snextc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
__Lock$409849 = -4					; size = 4
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 42   : 		{	// destroy the object

	push	ecx
	push	ebx
	push	ebp
	mov	ebp, ecx

; 43   : 		_DELETE_CRT(_Plocale);

	mov	ebx, DWORD PTR [ebp+56]
	mov	DWORD PTR [ebp], OFFSET ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
	test	ebx, ebx
	je	SHORT $LN3@basic_stre@2
	push	edi
	mov	edi, DWORD PTR [ebx]
	test	edi, edi
	je	SHORT $LN12@basic_stre@2
	push	0
	lea	ecx, DWORD PTR __Lock$409849[esp+20]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN14@basic_stre@2
	cmp	eax, -1
	jae	SHORT $LN14@basic_stre@2
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN14@basic_stre@2:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$409849[esp+20]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN18@basic_stre@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN18@basic_stre@2:
	pop	esi
$LN12@basic_stre@2:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
$LN3@basic_stre@2:

; 44   : 		}

	lea	ecx, DWORD PTR [ebp+4]
	pop	ebp
	pop	ebx
	add	esp, 4
	jmp	??1_Mutex@std@@QAE@XZ			; std::_Mutex::~_Mutex
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
_TEXT	ENDS
PUBLIC	?toInputToken@InputStream@DRAMsimII@@QBE?AW4InputType@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::InputStream::toInputToken
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
?toInputToken@InputStream@DRAMsimII@@QBE?AW4InputType@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; DRAMsimII::InputStream::toInputToken
; _input$ = esi

; 360  : 	if (input == "k6" || input == "K6")

	mov	eax, DWORD PTR [esi+20]
	push	2
	push	OFFSET ??_C@_02MNCAJDFJ@k6?$AA@
	push	eax
	push	0
	mov	ecx, esi
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	je	$LN14@toInputTok
	mov	ecx, DWORD PTR [esi+20]
	push	2
	push	OFFSET ??_C@_02PFGNNFLJ@K6?$AA@
	push	ecx
	push	0
	mov	ecx, esi
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	je	$LN14@toInputTok

; 362  : 	else if (input == "mase" || input == "MASE" || input == "Mase")

	mov	edx, DWORD PTR [esi+20]
	push	4
	push	OFFSET ??_C@_04JFNIGCJD@mase?$AA@
	push	edx
	push	0
	mov	ecx, esi
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	je	$LN11@toInputTok
	push	OFFSET ??_C@_04FJOCIAOL@MASE?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	$LN11@toInputTok
	push	OFFSET ??_C@_04FEBJENJH@Mase?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	$LN11@toInputTok

; 364  : 	else if (input == "random" || input == "RANDOM" || input == "Random")

	push	OFFSET ??_C@_06NLFCANPD@random?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	$LN8@toInputTok
	push	OFFSET ??_C@_06NPHJNDCB@RANDOM?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	$LN8@toInputTok
	push	OFFSET ??_C@_06BEOPDEGP@Random?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	$LN8@toInputTok

; 366  : 	else if (input == "mapped" || input == "Mapped" || input == "MAPPED")

	push	OFFSET ??_C@_06JGDKDGGA@mapped?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	SHORT $LN5@toInputTok
	push	OFFSET ??_C@_06FJIHAPPM@Mapped?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	SHORT $LN5@toInputTok
	push	OFFSET ??_C@_06JCBBOILC@MAPPED?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	SHORT $LN5@toInputTok

; 368  : 	else if (input == "ds" || input == "ds2" || input == "dramsim" || input == "dramsim2")

	push	OFFSET ??_C@_02ELHCGPCE@ds?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	SHORT $LN2@toInputTok
	push	OFFSET ??_C@_03NBDIMCMP@ds2?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	SHORT $LN2@toInputTok
	push	OFFSET ??_C@_07PJFOMKOB@dramsim?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	jne	SHORT $LN2@toInputTok
	push	OFFSET ??_C@_08DKIENIFF@dramsim2?$AA@
	push	esi
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al

; 370  : 	else
; 371  : 		return MAPPED;

	je	SHORT $LN5@toInputTok
$LN2@toInputTok:

; 369  : 		return DRAMSIM;

	mov	eax, 6

; 372  : }

	ret	0
$LN5@toInputTok:

; 367  : 		return MAPPED;

	mov	eax, 3

; 372  : }

	ret	0
$LN8@toInputTok:

; 365  : 		return RANDOM;

	mov	eax, 2

; 372  : }

	ret	0
$LN11@toInputTok:

; 363  : 		return MASE_TRACE;

	mov	eax, 1

; 372  : }

	ret	0
$LN14@toInputTok:

; 361  : 		return K6_TRACE;

	xor	eax, eax

; 372  : }

	ret	0
?toInputToken@InputStream@DRAMsimII@@QBE?AW4InputType@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; DRAMsimII::InputStream::toInputToken
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	__real@4000000000000000
PUBLIC	__real@0000000000000000
PUBLIC	?boxMuller@InputStream@DRAMsimII@@QBEMMM@Z	; DRAMsimII::InputStream::boxMuller
;	COMDAT ?y2@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4MA
; File c:\program files\microsoft visual studio 9.0\vc\include\math.h
_BSS	SEGMENT
?y2@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4MA DD 01H DUP (?) ; `DRAMsimII::InputStream::boxMuller'::`2'::y2
_BSS	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
CONST	ENDS
_TEXT	SEGMENT
_w$ = -44						; size = 4
_x1$148135 = -40					; size = 4
tv289 = -36						; size = 4
tv260 = -36						; size = 8
_y1$ = -36						; size = 4
_x2$148136 = -24					; size = 4
tv266 = -20						; size = 8
tv282 = -12						; size = 8
_m$ = 8							; size = 4
_s$ = 12						; size = 4
?boxMuller@InputStream@DRAMsimII@@QBEMMM@Z PROC		; DRAMsimII::InputStream::boxMuller
; _this$ = eax

; 329  : {

	sub	esp, 48					; 00000030H

; 330  : 	float w, y1;
; 331  : 	static float y2;
; 332  : 	static bool use_last = false;
; 333  : 
; 334  : 	if (use_last) // use value from previous call

	cmp	BYTE PTR ?use_last@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4_NA, 0
	push	edi
	je	SHORT $LN36@boxMuller

; 335  : 	{
; 336  : 		y1 = y2;

	movss	xmm0, DWORD PTR ?y2@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4MA

; 337  : 		use_last = false;

	mov	BYTE PTR ?use_last@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4_NA, 0

; 338  : 	}
; 339  : 	else

	jmp	$LN4@boxMuller
$LN36@boxMuller:

; 340  : 	{
; 341  : 		float x1, x2;
; 342  : 		do
; 343  : 		{
; 344  : 			x1 = 2.0F * rngGenerator() - 1.0F;
; 345  : 			x2 = 2.0F * rngGenerator() - 1.0F;

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, QWORD PTR __real@0000000000000000
	mov	edi, eax
	add	edi, 5240				; 00001478H
	movsd	QWORD PTR tv260[esp+52], xmm0
	npad	1
$LL3@boxMuller:
	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv266[esp+52], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR [edi+24]
	movapd	xmm2, xmm0
	subsd	xmm2, QWORD PTR __real@0000000000000000
	divsd	xmm2, QWORD PTR tv260[esp+52]
	movsd	xmm0, QWORD PTR tv266[esp+52]
	subsd	xmm1, xmm0
	mulsd	xmm2, xmm1
	movsd	xmm1, QWORD PTR __real@4000000000000000
	mulsd	xmm0, xmm1
	mulsd	xmm2, xmm1
	addsd	xmm2, xmm0
	subsd	xmm2, QWORD PTR __real@3ff0000000000000
	cvtsd2ss xmm0, xmm2
	movss	DWORD PTR _x1$148135[esp+52], xmm0
	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv282[esp+52], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR [edi+24]
	movapd	xmm2, xmm0
	subsd	xmm2, QWORD PTR __real@0000000000000000
	divsd	xmm2, QWORD PTR tv260[esp+52]
	movsd	xmm0, QWORD PTR tv282[esp+52]
	subsd	xmm1, xmm0
	mulsd	xmm2, xmm1
	movsd	xmm1, QWORD PTR __real@4000000000000000
	mulsd	xmm2, xmm1
	mulsd	xmm0, xmm1

; 346  : 			w = x1 * x1 + x2 * x2;

	cvtss2sd xmm1, DWORD PTR _x1$148135[esp+52]
	addsd	xmm2, xmm0
	subsd	xmm2, QWORD PTR __real@3ff0000000000000
	cvtsd2ss xmm0, xmm2
	movapd	xmm2, xmm1
	movss	DWORD PTR _x2$148136[esp+52], xmm0
	cvtss2sd xmm0, xmm0
	mulsd	xmm2, xmm1
	movapd	xmm1, xmm0
	mulsd	xmm1, xmm0
	addsd	xmm2, xmm1
	cvtsd2ss xmm0, xmm2

; 347  : 		} while ( w >= 1.0);

	comiss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _w$[esp+52], xmm0
	jae	$LL3@boxMuller

; 348  : 
; 349  : 		w = sqrt( (-2.0 * log( w)) / w);

	fld	DWORD PTR _w$[esp+52]
	call	__CIlog
	fstp	DWORD PTR tv289[esp+52]
	fld	DWORD PTR tv289[esp+52]
	fmul	QWORD PTR __real@c000000000000000
	fdiv	DWORD PTR _w$[esp+52]
	call	__CIsqrt
	fstp	DWORD PTR _w$[esp+52]

; 350  : 		y1 = x1 * w;

	fld	DWORD PTR _w$[esp+52]

; 351  : 		y2 = x2 * w;
; 352  : 		use_last = true;

	mov	BYTE PTR ?use_last@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4_NA, 1
	fld	ST(0)
	fmul	DWORD PTR _x1$148135[esp+52]
	fstp	DWORD PTR _y1$[esp+52]
	movss	xmm0, DWORD PTR _y1$[esp+52]
	fmul	DWORD PTR _x2$148136[esp+52]
	fstp	DWORD PTR ?y2@?1??boxMuller@InputStream@DRAMsimII@@QBEMMM@Z@4MA
$LN4@boxMuller:

; 353  : 	}
; 354  : 
; 355  : 	return floor(m + y1 * s);

	movss	xmm1, DWORD PTR _s$[esp+48]
	movsd	xmm2, QWORD PTR __real@4330000000000000
	cvtps2pd xmm0, xmm0
	cvtps2pd xmm1, xmm1
	mulsd	xmm0, xmm1
	movss	xmm1, DWORD PTR _m$[esp+48]
	cvtps2pd xmm1, xmm1
	addsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@8000000000000000
	cvtpd2ps xmm0, xmm0
	cvtss2sd xmm3, xmm0
	andpd	xmm1, xmm3
	orpd	xmm2, xmm1
	movapd	xmm0, xmm3
	addsd	xmm0, xmm2
	subsd	xmm0, xmm2
	movapd	xmm2, xmm0
	subsd	xmm2, xmm3
	cmpnlesd xmm2, xmm1
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	andpd	xmm2, xmm1
	subsd	xmm0, xmm2
	cvtpd2ps xmm0, xmm0

; 356  : }

	pop	edi
	add	esp, 48					; 00000030H
	ret	8
?boxMuller@InputStream@DRAMsimII@@QBEMMM@Z ENDP		; DRAMsimII::InputStream::boxMuller
_TEXT	ENDS
PUBLIC	__real@40040d9320000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4016000000000000
PUBLIC	?gammaLn@InputStream@DRAMsimII@@QBEMM@Z		; DRAMsimII::InputStream::gammaLn
;	COMDAT __real@40040d9320000000
; File c:\program files\microsoft visual studio 9.0\vc\include\math.h
CONST	SEGMENT
__real@40040d9320000000 DQ 040040d9320000000r	; 2.50663
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@4016000000000000
CONST	SEGMENT
__real@4016000000000000 DQ 04016000000000000r	; 5.5
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
CONST	ENDS
_TEXT	SEGMENT
tv431 = -12						; size = 4
_tmp$ = -12						; size = 4
tv291 = -8						; size = 8
tv403 = 8						; size = 4
tv397 = 8						; size = 4
tv393 = 8						; size = 4
_ser$ = 8						; size = 4
_xx$ = 8						; size = 4
?gammaLn@InputStream@DRAMsimII@@QBEMM@Z PROC		; DRAMsimII::InputStream::gammaLn

; 311  : {

	sub	esp, 16					; 00000010H

; 312  : 	static float coefficients[6] =
; 313  : 	{76.18009172947146F, -86.50532032941677F,
; 314  : 	24.01409824083091F, -1.231739572450155F,
; 315  : 	0.1208650973866179e-2F, -0.5395239384953e-5F};
; 316  : 
; 317  : 	float y = xx;
; 318  : 	float x = xx;
; 319  : 	float tmp = x + 5.5F;

	cvtss2sd xmm0, DWORD PTR _xx$[esp+12]
	addsd	xmm0, QWORD PTR __real@4016000000000000
	cvtsd2ss xmm0, xmm0

; 320  : 	tmp -= (x+0.5F) * log(tmp);

	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv291[esp+16], xmm0
	fld	QWORD PTR tv291[esp+16]
	call	__CIlog
	fstp	DWORD PTR tv431[esp+16]

; 321  : 	float ser = 1.000000000190015F;
; 322  : 	for (unsigned j = 0; j <= 5; j++)
; 323  : 		ser += coefficients[j]/++y;

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	fld	DWORD PTR tv431[esp+16]
	cvtss2sd xmm1, DWORD PTR _xx$[esp+12]
	fld	DWORD PTR _xx$[esp+12]
	movss	xmm2, DWORD PTR ?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA
	fld	QWORD PTR __real@3fe0000000000000
	addsd	xmm1, xmm0
	fadd	ST(0), ST(1)
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm3, xmm1
	cvtss2sd xmm1, xmm1
	fmulp	ST(2), ST(0)
	addsd	xmm1, xmm0
	fld	QWORD PTR tv291[esp+16]
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm4, xmm1
	fsubrp	ST(2), ST(0)
	cvtps2pd xmm2, xmm2
	fxch	ST(1)
	divsd	xmm2, xmm3
	movss	xmm3, DWORD PTR ?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA+4
	fstp	DWORD PTR _tmp$[esp+16]
	addsd	xmm2, xmm0
	cvtps2pd xmm3, xmm3
	divsd	xmm3, xmm4
	cvtss2sd xmm1, xmm1
	addsd	xmm1, xmm0
	cvtpd2ps xmm2, xmm2
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm4, xmm1
	cvtss2sd xmm2, xmm2
	addsd	xmm3, xmm2
	cvtpd2ps xmm2, xmm3
	movss	xmm3, DWORD PTR ?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA+8
	cvtps2pd xmm3, xmm3
	divsd	xmm3, xmm4
	cvtss2sd xmm1, xmm1
	addsd	xmm1, xmm0
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm4, xmm1
	cvtss2sd xmm2, xmm2
	addsd	xmm3, xmm2
	cvtpd2ps xmm2, xmm3
	movss	xmm3, DWORD PTR ?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA+12
	cvtps2pd xmm3, xmm3
	divsd	xmm3, xmm4
	cvtss2sd xmm1, xmm1
	addsd	xmm1, xmm0
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, xmm2
	addsd	xmm3, xmm2
	cvtpd2ps xmm2, xmm3
	movss	xmm3, DWORD PTR ?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA+20
	cvtss2sd xmm4, xmm1
	addsd	xmm4, xmm0
	cvtps2pd xmm3, xmm3
	cvtsd2ss xmm0, xmm4
	cvtss2sd xmm0, xmm0
	divsd	xmm3, xmm0
	movss	xmm0, DWORD PTR ?coefficients@?1??gammaLn@InputStream@DRAMsimII@@QBEMM@Z@4PAMA+16
	cvtps2pd xmm0, xmm0
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtss2sd xmm1, xmm2
	addsd	xmm0, xmm1
	cvtpd2ps xmm0, xmm0
	cvtss2sd xmm0, xmm0
	addsd	xmm3, xmm0
	cvtpd2ps xmm0, xmm3
	movss	DWORD PTR _ser$[esp+12], xmm0

; 324  : 	return -tmp + log(2.5066282746310005F * ser/x);

	fld	DWORD PTR _ser$[esp+12]
	fmul	QWORD PTR __real@40040d9320000000
	fdivrp	ST(1), ST(0)
	fstp	DWORD PTR tv403[esp+12]
	fld	DWORD PTR tv403[esp+12]
	call	__CIlog
	fstp	DWORD PTR tv397[esp+12]
	fld	DWORD PTR tv397[esp+12]
	fsub	DWORD PTR _tmp$[esp+16]
	fstp	DWORD PTR tv393[esp+12]
	fld	DWORD PTR tv393[esp+12]

; 325  : 
; 326  : }

	add	esp, 16					; 00000010H
	ret	4
?gammaLn@InputStream@DRAMsimII@@QBEMM@Z ENDP		; DRAMsimII::InputStream::gammaLn
_TEXT	ENDS
PUBLIC	__real@3feccccccccccccd
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@41400000
PUBLIC	?Poisson@InputStream@DRAMsimII@@QBEMM@Z		; DRAMsimII::InputStream::Poisson
EXTRN	__CItan:PROC
;	COMDAT ?alxm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
; File c:\program files\boost\boost_1_40\boost\random\uniform_01.hpp
_BSS	SEGMENT
?alxm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA DD 01H DUP (?) ; `DRAMsimII::InputStream::Poisson'::`2'::alxm
_BSS	ENDS
;	COMDAT ?sq@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
_BSS	SEGMENT
?sq@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA DD 01H DUP (?) ; `DRAMsimII::InputStream::Poisson'::`2'::sq
_BSS	ENDS
;	COMDAT ?g@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
_BSS	SEGMENT
?g@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA DD 01H DUP (?) ; `DRAMsimII::InputStream::Poisson'::`2'::g
_BSS	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
CONST	ENDS
_TEXT	SEGMENT
_em$ = -52						; size = 4
tv498 = -48						; size = 8
tv479 = -48						; size = 4
_y$ = -48						; size = 4
tv488 = -40						; size = 8
tv455 = -40						; size = 8
tv377 = -40						; size = 4
tv370 = -40						; size = 4
tv187 = -40						; size = 8
$T410184 = -40						; size = 4
tv449 = -32						; size = 8
tv182 = -32						; size = 8
tv465 = -24						; size = 8
tv385 = -16						; size = 8
tv520 = -8						; size = 8
tv202 = -8						; size = 8
tv509 = 8						; size = 4
_t$ = 8							; size = 4
_xm$ = 8						; size = 4
?Poisson@InputStream@DRAMsimII@@QBEMM@Z PROC		; DRAMsimII::InputStream::Poisson
; _this$ = esi

; 266  : 	static float sq, alxm, g, oldm = -1.0F;
; 267  : 	float em, t, y;
; 268  : 
; 269  : 	if (xm < 12.0)

	movss	xmm0, DWORD PTR _xm$[esp-4]
	movss	xmm1, DWORD PTR __real@41400000

; 270  : 	{
; 271  : 		if (!AlmostEqual<float>(xm,oldm))

	movss	xmm2, DWORD PTR ?oldm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
	cvtps2pd xmm2, xmm2
	sub	esp, 52					; 00000034H
	comiss	xmm1, xmm0
	cvtps2pd xmm1, xmm0
	subsd	xmm1, xmm2
	cvtpd2ps xmm1, xmm1
	cvtss2sd xmm2, xmm1
	movsd	xmm1, QWORD PTR __mask@@AbsDouble@
	andpd	xmm2, xmm1
	cvtps2pd xmm3, xmm0
	andpd	xmm3, xmm1
	cvtsd2ss xmm1, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm1, xmm1
	mulsd	xmm1, QWORD PTR __real@3ee4f8b588e368f1
	push	edi
	cvtss2sd xmm2, xmm2
	jbe	$LN13@Poisson
	comisd	xmm1, xmm2
	jae	SHORT $LN12@Poisson

; 272  : 		{
; 273  : 			oldm = xm;
; 274  : 			g = exp(-xm);

	fld	DWORD PTR _xm$[esp+52]
	movss	DWORD PTR ?oldm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA, xmm0
	fchs
	call	__CIexp
	fstp	DWORD PTR tv509[esp+52]
	fld	DWORD PTR tv509[esp+52]
	fstp	DWORD PTR ?g@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
$LN12@Poisson:

; 275  : 		}
; 276  : 		em = -1;
; 277  : 		t = 1.0;

	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _t$[esp+52], xmm1

; 278  : 		do
; 279  : 		{
; 280  : 			++em;
; 281  : 			t *= rngGenerator();

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, QWORD PTR __real@0000000000000000
	lea	edi, DWORD PTR [esi+5240]
	movsd	QWORD PTR tv449[esp+56], xmm1
	npad	7
$LL94@Poisson:
	cvtps2pd xmm0, xmm0
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	cvtpd2ps xmm0, xmm0
	movss	DWORD PTR _em$[esp+56], xmm0
	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv455[esp+56], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm2, QWORD PTR [edi+24]
	movapd	xmm1, xmm0
	subsd	xmm1, QWORD PTR __real@0000000000000000
	divsd	xmm1, QWORD PTR tv449[esp+56]
	movsd	xmm0, QWORD PTR tv455[esp+56]
	subsd	xmm2, xmm0
	mulsd	xmm1, xmm2
	addsd	xmm1, xmm0
	cvtss2sd xmm0, DWORD PTR _t$[esp+52]
	mulsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1

; 282  : 		} while (t > g);		

	cvtss2sd xmm1, DWORD PTR ?g@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
	movss	DWORD PTR _t$[esp+52], xmm0
	cvtss2sd xmm0, xmm0
	comisd	xmm0, xmm1

; 306  : 	}
; 307  : 	return em;

	movss	xmm0, DWORD PTR _em$[esp+56]
	ja	SHORT $LL94@Poisson

; 308  : }

	pop	edi
	add	esp, 52					; 00000034H
	ret	4
$LN13@Poisson:

; 283  : 	}
; 284  : 	else
; 285  : 	{
; 286  : 		if (!AlmostEqual<float>(xm,oldm))

	comisd	xmm1, xmm2
	jae	SHORT $LN91@Poisson

; 287  : 		{
; 288  : 			oldm = xm;
; 289  : 			sq = sqrt(2.0 * xm);
; 290  : 			alxm = log(xm);

	fld	DWORD PTR _xm$[esp+52]
	movss	DWORD PTR ?oldm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA, xmm0
	cvtps2pd xmm0, xmm0
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	sqrtsd	xmm0, xmm0
	cvtpd2ps xmm0, xmm0
	movss	DWORD PTR ?sq@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA, xmm0
	call	__CIlog
	fstp	DWORD PTR tv479[esp+56]
	fld	DWORD PTR tv479[esp+56]

; 291  : 			g = xm * alxm - gammaLn(xm + 1.0);

	cvtss2sd xmm0, DWORD PTR _xm$[esp+52]
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	fstp	DWORD PTR ?alxm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
	fld	DWORD PTR ?alxm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
	push	ecx
	fmul	DWORD PTR _xm$[esp+56]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	fstp	QWORD PTR tv182[esp+60]
	call	?gammaLn@InputStream@DRAMsimII@@QBEMM@Z	; DRAMsimII::InputStream::gammaLn
	fsubr	QWORD PTR tv182[esp+56]
	fstp	DWORD PTR ?g@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
$LN91@Poisson:
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, QWORD PTR __real@0000000000000000
	lea	edi, DWORD PTR [esi+5240]
	movsd	QWORD PTR tv449[esp+56], xmm0
$LL3@Poisson:

; 292  : 		}
; 293  : 		do
; 294  : 		{
; 295  : 			do
; 296  : 			{
; 297  : 				y = tan(PI * rngGenerator());

	fld	QWORD PTR [edi+16]
	fstp	QWORD PTR tv488[esp+56]
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	QWORD PTR tv465[esp+56], xmm0
	fld	QWORD PTR tv465[esp+56]
	fsub	QWORD PTR __real@0000000000000000
	fdiv	QWORD PTR tv449[esp+56]
	fld	QWORD PTR [edi+24]
	fld	QWORD PTR tv488[esp+56]
	fsub	ST(1), ST(0)
	fxch	ST(2)
	fmulp	ST(1), ST(0)
	faddp	ST(1), ST(0)
	fmul	QWORD PTR __real@400921fb54442d18
	call	__CItan
	fstp	DWORD PTR _y$[esp+56]

; 298  : 				em = sq * y + xm;

	movss	xmm1, DWORD PTR _y$[esp+56]
	cvtss2sd xmm0, DWORD PTR ?sq@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
	cvtps2pd xmm1, xmm1
	mulsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR _xm$[esp+52]
	addsd	xmm0, xmm1

; 299  : 
; 300  : 			} while (em < 0.0);

	xorps	xmm1, xmm1
	cvtsd2ss xmm0, xmm0
	comiss	xmm1, xmm0
	ja	SHORT $LL3@Poisson

; 301  : 
; 302  : 			em = floor(em);

	movsd	xmm1, QWORD PTR __real@8000000000000000

; 303  : 			t = 0.9 * (1.0 + y*y) * exp(em * alxm - gammaLn(em+1.0) -g);

	fld	DWORD PTR ?alxm@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
	movsd	xmm2, QWORD PTR __real@4330000000000000
	cvtss2sd xmm3, xmm0
	andpd	xmm1, xmm3
	orpd	xmm2, xmm1
	movapd	xmm0, xmm3
	addsd	xmm0, xmm2
	subsd	xmm0, xmm2
	movapd	xmm2, xmm0
	subsd	xmm2, xmm3
	cmpnlesd xmm2, xmm1
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	andpd	xmm2, xmm1
	subsd	xmm0, xmm2
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _em$[esp+56], xmm0
	fmul	DWORD PTR _em$[esp+56]
	cvtss2sd xmm0, xmm0
	addsd	xmm0, xmm1
	push	ecx
	cvtsd2ss xmm0, xmm0
	fstp	QWORD PTR tv187[esp+60]
	movss	DWORD PTR [esp], xmm0
	call	?gammaLn@InputStream@DRAMsimII@@QBEMM@Z	; DRAMsimII::InputStream::gammaLn
	fsubr	QWORD PTR tv187[esp+56]
	fsub	DWORD PTR ?g@?1??Poisson@InputStream@DRAMsimII@@QBEMM@Z@4MA
	fstp	DWORD PTR $T410184[esp+56]

; 304  : 
; 305  : 		} while (rngGenerator() > t);

	fld	QWORD PTR [edi+16]
	fstp	QWORD PTR tv520[esp+56]
	fld	DWORD PTR _y$[esp+56]
	fstp	QWORD PTR tv498[esp+56]
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	QWORD PTR tv385[esp+56], xmm0
	fld	QWORD PTR tv385[esp+56]
	fsub	QWORD PTR __real@0000000000000000
	fdiv	QWORD PTR tv449[esp+56]
	fld	QWORD PTR [edi+24]
	fld	QWORD PTR tv520[esp+56]
	fsub	ST(1), ST(0)
	fxch	ST(2)
	fmulp	ST(1), ST(0)
	faddp	ST(1), ST(0)
	fstp	QWORD PTR tv202[esp+56]
	fld	DWORD PTR $T410184[esp+56]
	call	__CIexp
	fstp	DWORD PTR tv377[esp+56]
	fld	DWORD PTR tv377[esp+56]
	fld	QWORD PTR tv498[esp+56]
	fmul	ST(0), ST(0)
	fadd	QWORD PTR __real@3ff0000000000000
	fmul	QWORD PTR __real@3feccccccccccccd
	fmulp	ST(1), ST(0)
	fstp	DWORD PTR tv370[esp+56]
	fld	DWORD PTR tv370[esp+56]
	fld	QWORD PTR tv202[esp+56]
	fcomip	ST(1)
	fstp	ST(0)
	ja	$LL3@Poisson

; 306  : 	}
; 307  : 	return em;

	movss	xmm0, DWORD PTR _em$[esp+56]

; 308  : }

	pop	edi
	add	esp, 52					; 00000034H
	ret	4
?Poisson@InputStream@DRAMsimII@@QBEMM@Z ENDP		; DRAMsimII::InputStream::Poisson
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::~shared_ptr<boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = eax
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN10@shared_ptr@9
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN10@shared_ptr@9
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN10@shared_ptr@9
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN10@shared_ptr@9:
	pop	esi
	ret	0
??1?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::~shared_ptr<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$basic_file@D@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_file@D@iostreams@boost@@QAE@XZ PROC		; boost::iostreams::basic_file<char>::~basic_file<char>, COMDAT
; _this$ = eax
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN13@basic_file
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN13@basic_file
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN13@basic_file
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN13@basic_file:
	pop	esi
	ret	0
??1?$basic_file@D@iostreams@boost@@QAE@XZ ENDP		; boost::iostreams::basic_file<char>::~basic_file<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_file_source@D@iostreams@boost@@QAE@XZ PROC	; boost::iostreams::basic_file_source<char>::~basic_file_source<char>, COMDAT
; _this$ = eax
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN16@basic_file@2
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN16@basic_file@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN16@basic_file@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN16@basic_file@2:
	pop	esi
	ret	0
??1?$basic_file_source@D@iostreams@boost@@QAE@XZ ENDP	; boost::iostreams::basic_file_source<char>::~basic_file_source<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_D?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
??_D?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vbase destructor', COMDAT
; _this$ = esi
	push	esi
	call	??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::~filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
	lea	eax, DWORD PTR [esi+24]
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??_D?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`vbase destructor'
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\channel.h
_TEXT	ENDS
;	COMDAT ?getRank@Channel@DRAMsimII@@QBEABVRank@2@I@Z
_TEXT	SEGMENT
?getRank@Channel@DRAMsimII@@QBEABVRank@2@I@Z PROC	; DRAMsimII::Channel::getRank, COMDAT
; _this$ = esi
; _rankNum$ = edi

; 113  : 		const Rank& getRank(const unsigned rankNum) const { return rank[rankNum]; }					///< get a const reference to this channel's rank n

	mov	ecx, DWORD PTR [esi+416]
	sub	ecx, DWORD PTR [esi+412]
	mov	eax, 1296593901				; 4d4873edH
	imul	ecx
	sar	edx, 7
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	edi, eax
	jb	SHORT $LN3@getRank
	call	__invalid_parameter_noinfo
$LN3@getRank:
	mov	eax, edi
	imul	eax, 424				; 000001a8H
	add	eax, DWORD PTR [esi+412]
	ret	0
?getRank@Channel@DRAMsimII@@QBEABVRank@2@I@Z ENDP	; DRAMsimII::Channel::getRank
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\system\system_error.hpp
_TEXT	ENDS
;	COMDAT ??1system_error@system@boost@@UAE@XZ
_TEXT	SEGMENT
??1system_error@system@boost@@UAE@XZ PROC		; boost::system::system_error::~system_error, COMDAT
; _this$ = ecx

; 45   :       virtual ~system_error() throw() {}

	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7system_error@system@boost@@6B@
	cmp	DWORD PTR [esi+72], 16			; 00000010H
	jb	SHORT $LN19@system_err
	mov	eax, DWORD PTR [esi+52]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@system_err:
	xor	ebx, ebx
	mov	DWORD PTR [esi+72], 15			; 0000000fH
	mov	DWORD PTR [esi+68], ebx
	mov	BYTE PTR [esi+52], bl
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN47@system_err
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN47@system_err:
	mov	DWORD PTR [esi+32], ebx
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	BYTE PTR [esi+16], bl
	mov	ecx, esi
	pop	esi
	pop	ebx
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1system_error@system@boost@@UAE@XZ ENDP		; boost::system::system_error::~system_error
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\system\error_code.hpp
_TEXT	ENDS
;	COMDAT ?message@error_code@system@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T410645 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?message@error_code@system@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::system::error_code::message, COMDAT
; _this$ = ecx

; 347  :       std::string             message() const  { return m_cat->message(value()); }

	push	ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	push	eax
	push	esi
	mov	DWORD PTR $T410645[esp+16], 0
	call	edx
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	4
?message@error_code@system@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::system::error_code::message
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
_TEXT	ENDS
;	COMDAT ??1?$ctype@D@std@@MAE@XZ
_TEXT	SEGMENT
??1?$ctype@D@std@@MAE@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT
; _this$ = ecx

; 1801 : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 1802 : 		_Tidy();

	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	test	eax, eax
	jle	SHORT $LN13@ctype
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	add	esp, 4

; 1803 : 		}

	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
$LN13@ctype:

; 1802 : 		_Tidy();

	jge	SHORT $LN12@ctype
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN12@ctype:

; 1803 : 		}

	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	pop	esi
	ret	0
??1?$ctype@D@std@@MAE@XZ ENDP				; std::ctype<char>::~ctype<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z
_TEXT	SEGMENT
$T410697 = -20						; size = 16
__Lobj$ = 8						; size = 4
__Refs$ = 12						; size = 4
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z PROC		; std::ctype<char>::ctype<char>, COMDAT
; _this$ = ecx

; 1784 : 		{	// construct from current locale

	mov	eax, DWORD PTR __Refs$[esp-4]
	sub	esp, 24					; 00000018H
	push	esi
	mov	esi, ecx

; 1785 : 		_Init(_Lobj);

	lea	ecx, DWORD PTR $T410697[esp+28]
	push	ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	call	__Getctype
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [esi+8], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	add	esp, 4
	movq	QWORD PTR [esi+16], xmm0

; 1786 : 		}

	mov	eax, esi
	pop	esi
	add	esp, 24					; 00000018H
	ret	8
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z ENDP		; std::ctype<char>::ctype<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gctype_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gctype_base@std@@UAEPAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@48
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@48:
	mov	eax, esi
	pop	esi
	ret	4
??_Gctype_base@std@@UAEPAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gcodecvt_base@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gcodecvt_base@std@@UAEPAXI@Z PROC			; std::codecvt_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN8@scalar@49
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@49:
	mov	eax, esi
	pop	esi
	ret	4
??_Gcodecvt_base@std@@UAEPAXI@Z ENDP			; std::codecvt_base::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??1m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ
_TEXT	SEGMENT
??1m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::~m_imp, COMDAT
; _this$ = ecx
	push	ebx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+80], 16			; 00000010H
	jb	SHORT $LN19@m_imp
	mov	eax, DWORD PTR [esi+60]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@m_imp:
	xor	ebx, ebx
	mov	DWORD PTR [esi+80], 15			; 0000000fH
	mov	DWORD PTR [esi+76], ebx
	mov	BYTE PTR [esi+60], bl
	cmp	DWORD PTR [esi+52], 16			; 00000010H
	jb	SHORT $LN47@m_imp
	mov	ecx, DWORD PTR [esi+32]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN47@m_imp:
	mov	DWORD PTR [esi+52], 15			; 0000000fH
	mov	DWORD PTR [esi+48], ebx
	mov	BYTE PTR [esi+32], bl
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN75@m_imp
	mov	edx, DWORD PTR [esi+4]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN75@m_imp:
	mov	DWORD PTR [esi+20], ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	BYTE PTR [esi+4], bl
	pop	esi
	pop	ebx
	ret	0
??1m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::~m_imp
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAEPAXI@Z PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@62
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@62:
	mov	eax, esi
	pop	esi
	ret	4
??_Gm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAEPAXI@Z ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\checked_delete.hpp
_TEXT	ENDS
;	COMDAT ??$checked_delete@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??$checked_delete@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z PROC ; boost::checked_delete<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT

; 30   : {

	push	esi

; 31   :     // intentionally complex - simplification causes regressions
; 32   :     typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
; 33   :     (void) sizeof(type_must_be_complete);
; 34   :     delete x;

	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	je	SHORT $LN3@checked_de
	mov	ecx, esi
	call	??1m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@checked_de:
	pop	esi

; 35   : }

	ret	0
??$checked_delete@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ENDP ; boost::checked_delete<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_impl.hpp
_TEXT	ENDS
;	COMDAT ?dispose@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEXXZ
_TEXT	SEGMENT
?dispose@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEXXZ PROC ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::dispose, COMDAT
; _this$ = ecx

; 74   :     {

	push	esi

; 75   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 76   :         boost::sp_scalar_destructor_hook( px_, sizeof(X), this );
; 77   : #endif
; 78   :         boost::checked_delete( px_ );

	mov	esi, DWORD PTR [ecx+12]
	test	esi, esi
	je	SHORT $LN5@dispose
	mov	ecx, esi
	call	??1m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@dispose:
	pop	esi

; 79   :     }

	ret	0
?dispose@?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@UAEXXZ ENDP ; boost::detail::sp_counted_impl_p<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::dispose
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$basic_file@D@iostreams@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
??0?$basic_file@D@iostreams@boost@@QAE@ABV012@@Z PROC	; boost::iostreams::basic_file<char>::basic_file<char>, COMDAT
; _this$ = eax
; ___that$ = ecx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	test	ecx, ecx
	je	SHORT $LN8@basic_file@4
	add	ecx, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
$LN8@basic_file@4:
	ret	0
??0?$basic_file@D@iostreams@boost@@QAE@ABV012@@Z ENDP	; boost::iostreams::basic_file<char>::basic_file<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$basic_file_source@D@iostreams@boost@@QAE@ABU012@@Z
_TEXT	SEGMENT
??0?$basic_file_source@D@iostreams@boost@@QAE@ABU012@@Z PROC ; boost::iostreams::basic_file_source<char>::basic_file_source<char>, COMDAT
; _this$ = eax
; ___that$ = ecx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	test	ecx, ecx
	je	SHORT $LN10@basic_file@5
	add	ecx, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
$LN10@basic_file@5:
	ret	0
??0?$basic_file_source@D@iostreams@boost@@QAE@ABU012@@Z ENDP ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\wrap_unwrap.hpp
_TEXT	ENDS
;	COMDAT ??$wrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YA?AU?$basic_file_source@D@12@ABU312@PAX@Z
_TEXT	SEGMENT
??$wrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YA?AU?$basic_file_source@D@12@ABU312@PAX@Z PROC ; boost::iostreams::detail::wrap<boost::iostreams::basic_file_source<char> >, COMDAT
; ___$ReturnUdt$ = eax
; _t$ = ecx

; 53   :     { return t; }

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	test	ecx, ecx
	je	SHORT $LN12@wrap
	add	ecx, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
$LN12@wrap:
	ret	0
??$wrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YA?AU?$basic_file_source@D@12@ABU312@PAX@Z ENDP ; boost::iostreams::detail::wrap<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?imbue@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z
_TEXT	SEGMENT
$T443867 = 8						; size = 4
_loc$ = 8						; size = 4
?imbue@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::imbue, COMDAT
; _this$ = ecx

; 224  :     if (is_open()) {

	test	BYTE PTR [ecx+92], 1
	je	SHORT $LN1@imbue@9
	push	edi

; 225  :         obj().imbue(loc);
; 226  :         if (next_)

	mov	edi, DWORD PTR [ecx+76]
	test	edi, edi
	je	SHORT $LN14@imbue@9

; 227  :             next_->pubimbue(loc);

	mov	eax, DWORD PTR _loc$[esp]
	push	eax
	lea	ecx, DWORD PTR $T443867[esp+4]
	push	ecx
	call	?pubimbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE?AVlocale@2@ABV32@@Z ; std::basic_streambuf<char,std::char_traits<char> >::pubimbue
	lea	ecx, DWORD PTR $T443867[esp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
$LN14@imbue@9:
	pop	edi
$LN1@imbue@9:

; 228  :     }
; 229  : }

	ret	4
?imbue@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXABVlocale@std@@@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::imbue
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_base_w32.hpp
xdata$x	SEGMENT
__unwindtable$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z$0
__tryblocktable$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z$3
__ehfuncinfo$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\shared_count.hpp
xdata$x	ENDS
;	COMDAT ??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_p$ = 8							; size = 4
??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z PROC ; boost::detail::shared_count::shared_count<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx

; 82   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx

; 83   : #ifndef BOOST_NO_EXCEPTIONS
; 84   : 
; 85   :         try
; 86   :         {
; 87   :             pi_ = new sp_counted_impl_p<Y>( p );

	push	16					; 00000010H
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@shared_cou@6
	mov	ecx, 1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$sp_counted_impl_p@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@detail@boost@@6B@
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN5@shared_cou@6
$LN4@shared_cou@6:
	xor	eax, eax
$LN5@shared_cou@6:
	mov	DWORD PTR [esi], eax

; 93   :         }
; 94   : 
; 95   : #else
; 96   : 
; 97   :         pi_ = new sp_counted_impl_p<Y>( p );
; 98   : 
; 99   :         if( pi_ == 0 )
; 100  :         {
; 101  :             boost::checked_delete( p );
; 102  :             boost::throw_exception( std::bad_alloc() );
; 103  :         }
; 104  : 
; 105  : #endif
; 106  :     }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z$0:

; 88   :         }
; 89   :         catch(...)
; 90   :         {
; 91   :             boost::checked_delete( p );

	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	??$checked_delete@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::checked_delete<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
	add	esp, 4

; 92   :             throw;

	push	0
	push	0
	call	__CxxThrowException@8
$LN18@shared_cou@6:
$LN17@shared_cou@6:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ENDP ; boost::detail::shared_count::shared_count<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::~concept_adapter<boost::iostreams::basic_file_source<char> >, COMDAT
; _this$ = eax
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN19@concept_ad
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN19@concept_ad
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN19@concept_ad
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN19@concept_ad:
	pop	esi
	ret	0
??1?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::~concept_adapter<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::reset, COMDAT
; _this$ = edi

; 85   :         if (initialized_) { 

	cmp	BYTE PTR [edi+8], 0
	je	SHORT $LN1@reset@11
	push	esi

; 86   :         #if BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) || \
; 87   :             BOOST_WORKAROUND(__IBMCPP__, BOOST_TESTED_AT(600)) \
; 88   :             /**/
; 89   :             T* t = static_cast<T*>(address());
; 90   :             t->~T();
; 91   :         #else
; 92   :             static_cast<T*>(address())->T::~T();

	mov	esi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN24@reset@11
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN24@reset@11
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN24@reset@11
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN24@reset@11:

; 93   :         #endif
; 94   :             initialized_ = false;

	mov	BYTE PTR [edi+8], 0
	pop	esi
$LN1@reset@11:

; 95   :         }
; 96   :     }

	ret	0
?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::reset
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::~optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >, COMDAT
; _this$ = edi

; 52   :     ~optional() { reset(); }

	cmp	BYTE PTR [edi+8], 0
	je	SHORT $LN3@optional@5
	push	esi
	mov	esi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN26@optional@5
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN26@optional@5
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN26@optional@5
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN26@optional@5:
	mov	BYTE PTR [edi+8], 0
	pop	esi
$LN3@optional@5:
	ret	0
??1?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::~optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??E?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAEAAV01@XZ PROC ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::operator++, COMDAT
; _this$ = esi

; 1946 : 		--current;

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN7@operator@330
	call	__invalid_parameter_noinfo
$LN7@operator@330:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], ecx
	test	eax, eax
	je	SHORT $LN17@operator@330
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN18@operator@330
$LN17@operator@330:
	xor	eax, eax
$LN18@operator@330:
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN21@operator@330
	call	__invalid_parameter_noinfo
$LN21@operator@330:

; 1947 : 		return (*this);

	mov	eax, esi

; 1948 : 		}

	ret	0
??E?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QAEAAV01@XZ ENDP ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ
_TEXT	SEGMENT
??D?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ PROC ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::operator*, COMDAT
; _this$ = eax

; 1934 : 		{	// return designated value

	push	esi

; 1935 : 		_RanIt _Tmp = current;

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 1936 : 		return (*--_Tmp);

	test	esi, esi
	jne	SHORT $LN7@operator@331
	call	__invalid_parameter_noinfo
$LN7@operator@331:
	mov	edi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN17@operator@331
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN18@operator@331
$LN17@operator@331:
	xor	eax, eax
$LN18@operator@331:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN5@operator@331
	call	__invalid_parameter_noinfo
$LN5@operator@331:
	test	esi, esi
	jne	SHORT $LN39@operator@331
	call	__invalid_parameter_noinfo
$LN34@operator@331:
	cmp	edi, DWORD PTR [esi+20]
	jne	SHORT $LN40@operator@331
	call	__invalid_parameter_noinfo
$LN40@operator@331:
	lea	eax, DWORD PTR [edi+8]
	pop	edi
	pop	esi

; 1937 : 		}

	ret	0
$LN39@operator@331:

; 1936 : 		return (*--_Tmp);

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN34@operator@331
??D?$_Revranit@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@U?$iterator@Ubidirectional_iterator_tag@std@@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@HPAPAV3456@AAPAV3456@@3@@std@@QBEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ENDP ; std::_Revranit<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,std::iterator<std::bidirectional_iterator_tag,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,int,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * *,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > * &> >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >::operator++, COMDAT
; _this$ = esi

; 2177 : 		++*((_Mybase *)this);

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN9@operator@332
	call	__invalid_parameter_noinfo
$LN9@operator@332:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], ecx
	test	eax, eax
	je	SHORT $LN19@operator@332
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN20@operator@332
$LN19@operator@332:
	xor	eax, eax
$LN20@operator@332:
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN23@operator@332
	call	__invalid_parameter_noinfo
$LN23@operator@332:

; 2178 : 		return (*this);

	mov	eax, esi

; 2179 : 		}

	ret	0
??E?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >::operator++
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\linked_streambuf.hpp
_TEXT	ENDS
;	COMDAT ??0?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAE@XZ
_TEXT	SEGMENT
??0?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAE@XZ PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::linked_streambuf<char,std::char_traits<char> >, COMDAT
; _this$ = esi

; 43   :     linked_streambuf() : flags_(0) { }

	mov	ecx, esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	mov	DWORD PTR [esi], OFFSET ??_7?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@6B@
	mov	DWORD PTR [esi+60], 0
	mov	eax, esi
	ret	0
??0?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@IAE@XZ ENDP ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::linked_streambuf<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$1
__catchsym$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$0
__tryblocktable$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$5
__ehfuncinfo$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z
	DD	02H
	DD	FLAT:__tryblocktable$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\execute.hpp
xdata$x	ENDS
;	COMDAT ??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z
_TEXT	SEGMENT
$T444463 = -20						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_first$ = 12						; size = 8
_last$ = 20						; size = 8
_op$ = 28						; size = 4
??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z PROC ; boost::iostreams::detail::execute_foreach<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>, COMDAT

; 117  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 118  :     if (first == last)

	mov	ecx, DWORD PTR _first$[ebp]
	test	ecx, ecx
	je	SHORT $LN14@execute_fo@2
	cmp	ecx, DWORD PTR _last$[ebp]
	je	SHORT $LN15@execute_fo@2
$LN14@execute_fo@2:
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR _first$[ebp]
$LN15@execute_fo@2:
	mov	eax, DWORD PTR _first$[ebp+4]
	cmp	eax, DWORD PTR _last$[ebp+4]
	jne	SHORT $LN3@execute_fo@2

; 119  :         return op;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _op$[ebp]
	mov	DWORD PTR [eax], ecx

; 131  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@execute_fo@2:

; 120  :     try {

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 121  :         op(*first);

	test	ecx, ecx
	jne	SHORT $LN72@execute_fo@2
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR _first$[ebp]
	test	ecx, ecx
	je	SHORT $LN35@execute_fo@2
$LN72@execute_fo@2:
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN36@execute_fo@2
$LN35@execute_fo@2:
	xor	eax, eax
$LN36@execute_fo@2:
	mov	edx, DWORD PTR _first$[ebp+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN25@execute_fo@2
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR _first$[ebp]
$LN25@execute_fo@2:
	mov	edi, DWORD PTR _op$[ebp]
	mov	eax, DWORD PTR _first$[ebp+4]
	mov	esi, DWORD PTR [eax+8]
	cmp	edi, 1
	jne	SHORT $LN49@execute_fo@2
	mov	eax, DWORD PTR [esi+60]
	test	al, 2
	jne	SHORT $LN48@execute_fo@2
	mov	edx, DWORD PTR [esi]
	or	eax, 2
	mov	DWORD PTR [esi+60], eax
	mov	eax, DWORD PTR [edx+60]
	push	edi
	mov	ecx, esi
	call	eax
	mov	ecx, DWORD PTR _first$[ebp]
$LN49@execute_fo@2:
	cmp	edi, 2
	jne	SHORT $LN48@execute_fo@2
	mov	eax, DWORD PTR [esi+60]
	test	al, 4
	jne	SHORT $LN48@execute_fo@2
	mov	edx, DWORD PTR [esi]
	or	eax, 4
	mov	DWORD PTR [esi+60], eax
	mov	eax, DWORD PTR [edx+60]
	push	edi
	mov	ecx, esi
	call	eax
	mov	ecx, DWORD PTR _first$[ebp]
$LN48@execute_fo@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 128  :     }
; 129  :     ++first;

	test	ecx, ecx
	jne	SHORT $LN71@execute_fo@2
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR _first$[ebp]
	test	ecx, ecx
	je	SHORT $LN64@execute_fo@2
$LN71@execute_fo@2:
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN65@execute_fo@2
__catch$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$0:

; 122  :     } catch (...) {
; 123  :         try {
; 124  :             ++first;

	lea	esi, DWORD PTR _first$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??E?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAV012@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>::operator++

; 125  :             boost::iostreams::detail::execute_foreach(first, last, op);

	mov	ecx, DWORD PTR _op$[ebp]
	mov	edx, DWORD PTR _last$[ebp+4]
	mov	eax, DWORD PTR _last$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _first$[ebp+4]
	push	edx
	mov	edx, DWORD PTR _first$[ebp]
	push	eax
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T444463[ebp]
	push	eax
	call	??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
	add	esp, 24					; 00000018H
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN11@execute_fo@2:

; 127  :         throw;

	push	0
	push	0
	call	__CxxThrowException@8
$LN77@execute_fo@2:
__catch$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z$1:

; 126  :         } catch (...) { }

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN11@execute_fo@2
	ret	0

; 128  :     }
; 129  :     ++first;

$LN64@execute_fo@2:
	xor	eax, eax
$LN65@execute_fo@2:
	mov	edx, DWORD PTR _first$[ebp+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN54@execute_fo@2
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR _first$[ebp]
$LN54@execute_fo@2:

; 130  :     return boost::iostreams::detail::execute_foreach(first, last, op);

	mov	edx, DWORD PTR _op$[ebp]
	mov	eax, DWORD PTR _first$[ebp+4]
	mov	eax, DWORD PTR [eax]
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	edx, DWORD PTR _last$[ebp+4]
	push	edx
	mov	edx, DWORD PTR _last$[ebp]
	push	edx
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR _first$[ebp+4], eax
	call	??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
	add	esp, 24					; 00000018H
	mov	eax, esi

; 131  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN76@execute_fo@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z ENDP ; boost::iostreams::detail::execute_foreach<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$1
__catchsym$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$0
__tryblocktable$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$5
__ehfuncinfo$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z
	DD	02H
	DD	FLAT:__tryblocktable$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\execute.hpp
xdata$x	ENDS
;	COMDAT ??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z
_TEXT	SEGMENT
$T444696 = -24						; size = 8
$T444649 = -20						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_first$ = 12						; size = 8
_last$ = 20						; size = 8
_op$ = 28						; size = 4
??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z PROC ; boost::iostreams::detail::execute_foreach<std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>, COMDAT

; 117  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 118  :     if (first == last)

	mov	ecx, DWORD PTR _first$[ebp]
	mov	eax, DWORD PTR _last$[ebp]
	mov	esi, DWORD PTR _last$[ebp+4]
	mov	DWORD PTR $T444696[ebp], eax
	test	ecx, ecx
	je	SHORT $LN20@execute_fo@3
	cmp	ecx, eax
	je	SHORT $LN21@execute_fo@3
$LN20@execute_fo@3:
	call	__invalid_parameter_noinfo
$LN21@execute_fo@3:
	mov	edi, DWORD PTR _first$[ebp+4]
	cmp	edi, esi
	jne	SHORT $LN3@execute_fo@3

; 119  :         return op;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _op$[ebp]
	mov	DWORD PTR [eax], ecx

; 131  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@execute_fo@3:

; 120  :     try {

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 121  :         op(*first);

	mov	esi, DWORD PTR _first$[ebp]
	test	esi, esi
	jne	SHORT $LN35@execute_fo@3
	call	__invalid_parameter_noinfo
$LN35@execute_fo@3:
	mov	edi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN45@execute_fo@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN46@execute_fo@3
$LN45@execute_fo@3:
	xor	eax, eax
$LN46@execute_fo@3:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN33@execute_fo@3
	call	__invalid_parameter_noinfo
$LN33@execute_fo@3:
	test	esi, esi
	jne	SHORT $LN101@execute_fo@3
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN62@execute_fo@3:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN51@execute_fo@3
	call	__invalid_parameter_noinfo
$LN51@execute_fo@3:
	mov	esi, DWORD PTR [edi+8]
	mov	edi, DWORD PTR _op$[ebp]
	cmp	edi, 1
	jne	SHORT $LN75@execute_fo@3
	mov	eax, DWORD PTR [esi+60]
	test	al, 2
	jne	SHORT $LN74@execute_fo@3
	mov	edx, DWORD PTR [esi]
	or	eax, 2
	mov	DWORD PTR [esi+60], eax
	mov	eax, DWORD PTR [edx+60]
	push	edi
	mov	ecx, esi
	call	eax
$LN75@execute_fo@3:
	cmp	edi, 2
	jne	SHORT $LN74@execute_fo@3
	mov	eax, DWORD PTR [esi+60]
	test	al, 4
	jne	SHORT $LN74@execute_fo@3
	mov	edx, DWORD PTR [esi]
	or	eax, 4
	mov	DWORD PTR [esi+60], eax
	mov	eax, DWORD PTR [edx+60]
	push	edi
	mov	ecx, esi
	call	eax
$LN74@execute_fo@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 128  :     }
; 129  :     ++first;

	cmp	DWORD PTR _first$[ebp], 0
	jne	SHORT $LN86@execute_fo@3
	call	__invalid_parameter_noinfo
$LN86@execute_fo@3:
	mov	ecx, DWORD PTR _first$[ebp+4]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _first$[ebp]
	mov	DWORD PTR _first$[ebp+4], eax
	test	ecx, ecx
	je	SHORT $LN96@execute_fo@3
	mov	ecx, DWORD PTR [ecx]
	jmp	SHORT $LN97@execute_fo@3
$LN101@execute_fo@3:

; 121  :         op(*first);

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN62@execute_fo@3
__catch$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$0:

; 122  :     } catch (...) {
; 123  :         try {
; 124  :             ++first;

	lea	esi, DWORD PTR _first$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??E?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >::operator++

; 125  :             boost::iostreams::detail::execute_foreach(first, last, op);

	mov	ecx, DWORD PTR _op$[ebp]
	mov	edx, DWORD PTR _last$[ebp+4]
	mov	eax, DWORD PTR _last$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _first$[ebp+4]
	push	edx
	mov	edx, DWORD PTR _first$[ebp]
	push	eax
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T444649[ebp]
	push	eax
	call	??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
	add	esp, 24					; 00000018H
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN11@execute_fo@3:

; 127  :         throw;

	push	0
	push	0
	call	__CxxThrowException@8
$LN106@execute_fo@3:
__catch$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z$1:

; 126  :         } catch (...) { }

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN11@execute_fo@3
	ret	0

; 128  :     }
; 129  :     ++first;

$LN96@execute_fo@3:
	xor	ecx, ecx
$LN97@execute_fo@3:
	cmp	eax, DWORD PTR [ecx+20]
	jne	SHORT $LN84@execute_fo@3
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR _first$[ebp+4]
$LN84@execute_fo@3:

; 130  :     return boost::iostreams::detail::execute_foreach(first, last, op);

	mov	edx, DWORD PTR _op$[ebp]
	mov	ecx, DWORD PTR _last$[ebp+4]
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	edx, DWORD PTR _last$[ebp]
	push	ecx
	push	edx
	push	eax
	mov	eax, DWORD PTR _first$[ebp]
	push	eax
	push	esi
	call	??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
	add	esp, 24					; 00000018H
	mov	eax, esi

; 131  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN105@execute_fo@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z ENDP ; boost::iostreams::detail::execute_foreach<std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
;	COMDAT ??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp><boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx

; 188  :     {

	push	esi
	push	edi
	mov	edi, DWORD PTR _p$[esp+4]
	mov	esi, ecx
	push	edi
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], edi
	call	??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ; boost::detail::shared_count::shared_count<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>

; 189  :         boost::detail::sp_enable_shared_from_this( this, p, p );

	push	edi
	push	edi
	push	esi
	call	?sp_enable_shared_from_this@detail@boost@@YAXZZ ; boost::detail::sp_enable_shared_from_this
	add	esp, 12					; 0000000cH
	pop	edi

; 190  :     }

	mov	eax, esi
	pop	esi
	ret	4
??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp><boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::~linked_streambuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
	jmp	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
??1?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::~linked_streambuf<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi+72]
	test	eax, eax
	je	SHORT $LN15@indirect_s
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@indirect_s:
	cmp	BYTE PTR [esi+65], 0
	je	SHORT $LN19@indirect_s
	mov	BYTE PTR [esi+65], 0
$LN19@indirect_s:
	mov	ecx, esi
	jmp	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
??1?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$0
__tryblocktable$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$7
__ehfuncinfo$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\stream_buffer.hpp
xdata$x	ENDS
;	COMDAT ??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT

; 88   :     { 

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi], OFFSET ??_7?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@

; 89   :         try { 

	mov	al, 1
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	BYTE PTR __$EHRec$[ebp+12], al

; 90   :             if (this->is_open() && this->auto_close()) 

	test	BYTE PTR [esi+84], al
	je	SHORT $LN9@stream_buf
	mov	ecx, DWORD PTR [esi+84]
	shr	ecx, 2
	test	cl, al
	je	SHORT $LN9@stream_buf

; 91   :                 this->close(); 

	mov	eax, esi
	call	?close@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
	jmp	SHORT $LN9@stream_buf
__catch$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$0:

; 92   :         } catch (...) { } 

	mov	eax, $LN59@stream_buf
	ret	0
$LN59@stream_buf:
	mov	esi, DWORD PTR _this$[ebp]
$LN9@stream_buf:

; 93   :     }

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR [esi+72]
	test	eax, eax
	je	SHORT $LN46@stream_buf
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN46@stream_buf:
	cmp	BYTE PTR [esi+65], 0
	je	SHORT $LN50@stream_buf
	mov	BYTE PTR [esi+65], 0
$LN50@stream_buf:
	mov	ecx, esi
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$2:
	mov	esi, DWORD PTR _this$[ebp]
	jmp	??1?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
__ehhandler$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
;	COMDAT ?reset@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
tv386 = -8						; size = 4
_buf$176178 = -4					; size = 4
_this$ = 8						; size = 4
?reset@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::reset, COMDAT

; 340  :             {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]

; 341  :                 typedef typename list_type::iterator iterator;
; 342  :                 for ( iterator first = links_.begin(),

	mov	eax, DWORD PTR [ebx+20]
	push	esi
	mov	esi, DWORD PTR [ebx]
	push	edi
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR tv386[esp+24], eax
	npad	6

; 343  :                                last = links_.end();
; 344  :                       first != last;
; 345  :                       ++first )

$LL50@reset@12:
	test	esi, esi
	je	SHORT $LN64@reset@12
	cmp	esi, esi
	je	SHORT $LN65@reset@12
$LN64@reset@12:
	call	__invalid_parameter_noinfo
$LN65@reset@12:
	cmp	edi, DWORD PTR tv386[esp+24]
	je	$LN3@reset@12

; 346  :                 {
; 347  :                     if ( (flags_ & f_complete) == 0 ||
; 348  :                          (flags_ & f_auto_close) == 0 )

	mov	eax, DWORD PTR [ebx+44]
	test	al, 1
	je	SHORT $LN1@reset@12
	test	al, 4
	jne	SHORT $LN91@reset@12
$LN1@reset@12:

; 349  :                     {
; 350  :                         set_auto_close(*first, false);

	test	esi, esi
	jne	SHORT $LN134@reset@12
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN86@reset@12:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN75@reset@12
	call	__invalid_parameter_noinfo
$LN75@reset@12:
	mov	ecx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+68]
	push	0
	call	edx
$LN91@reset@12:

; 351  :                     }
; 352  :                     streambuf_type* buf = 0;
; 353  :                     std::swap(buf, *first);

	test	esi, esi
	jne	SHORT $LN133@reset@12
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN106@reset@12:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN95@reset@12
	call	__invalid_parameter_noinfo
$LN95@reset@12:
	lea	eax, DWORD PTR [edi+8]
	lea	ecx, DWORD PTR _buf$176178[esp+24]
	cmp	ecx, eax
	je	SHORT $LN4@reset@12
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax], 0

; 354  :                     delete buf;

	test	ecx, ecx
	je	SHORT $LN4@reset@12
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN4@reset@12:

; 343  :                                last = links_.end();
; 344  :                       first != last;
; 345  :                       ++first )

	test	esi, esi
	jne	SHORT $LN132@reset@12
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN57@reset@12:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN46@reset@12
	call	__invalid_parameter_noinfo
$LN46@reset@12:
	mov	edi, DWORD PTR [edi]
	jmp	$LL50@reset@12
$LN134@reset@12:

; 349  :                     {
; 350  :                         set_auto_close(*first, false);

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN86@reset@12
$LN133@reset@12:

; 351  :                     }
; 352  :                     streambuf_type* buf = 0;
; 353  :                     std::swap(buf, *first);

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN106@reset@12
$LN132@reset@12:

; 343  :                                last = links_.end();
; 344  :                       first != last;
; 345  :                       ++first )

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN57@reset@12
$LN3@reset@12:

; 355  :                 }
; 356  :                 links_.clear();

	mov	ecx, DWORD PTR [ebx+20]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], ecx
	mov	ecx, DWORD PTR [ebx+20]
	mov	DWORD PTR [ecx+4], ecx
	mov	DWORD PTR [ebx+24], 0
	cmp	eax, DWORD PTR [ebx+20]
	je	SHORT $LN135@reset@12
$LL116@reset@12:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	cmp	esi, DWORD PTR [ebx+20]
	jne	SHORT $LL116@reset@12
$LN135@reset@12:

; 357  :                 flags_ &= ~f_complete;
; 358  :                 flags_ &= ~f_open;

	and	DWORD PTR [ebx+44], -4			; fffffffcH

; 359  :             }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?reset@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::reset
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?rbegin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?rbegin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rbegin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 585  : 		{	// return iterator for beginning of reversed mutable sequence

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 586  : 		return (reverse_iterator(end()));

	mov	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?rbegin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rbegin
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
__ehfuncinfo$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	ENDS
;	COMDAT ?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T445710 = -164						; size = 4
$T445704 = -160						; size = 4
$T445706 = -156						; size = 28
$T445705 = -128						; size = 116
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::codecvt<char,char,int>::_Getcat, COMDAT

; 783  : 		{	// return locale category mask and construct standard facet

	push	-1
	push	__ehhandler$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, eax

; 784  : 		if (_Ppf != 0 && *_Ppf == 0)

	mov	ebp, DWORD PTR __Ppf$[esp+176]
	xor	ebx, ebx
	mov	DWORD PTR $T445710[esp+180], ebx
	test	ebp, ebp
	je	$LN50@Getcat@3
	cmp	DWORD PTR [ebp], ebx
	jne	$LN50@Getcat@3

; 785  : 			*_Ppf = _NEW_CRT codecvt<_Elem, _Byte, _Statype>(
; 786  : 				_Locinfo(_Ploc->name()));

	push	8
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T445704[esp+180], esi
	mov	DWORD PTR __$EHRec$[esp+188], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat@3
	mov	ecx, DWORD PTR __Ploc$[esp+176]
	lea	eax, DWORD PTR $T445706[esp+180]
	push	eax
	call	?name@locale@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::locale::name
	mov	BYTE PTR __$EHRec$[esp+188], 1
	push	eax
	lea	ecx, DWORD PTR $T445705[esp+184]
	mov	DWORD PTR $T445710[esp+184], 1
	call	??0_Locinfo@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Locinfo::_Locinfo
	mov	ebx, 3
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$codecvt@DDH@std@@6B@
	jmp	SHORT $LN5@Getcat@3
$LN4@Getcat@3:
	xor	esi, esi
$LN5@Getcat@3:
	mov	DWORD PTR __$EHRec$[esp+188], 2
	mov	DWORD PTR [ebp], esi
	test	bl, 2
	je	SHORT $LN11@Getcat@3
	and	ebx, -3					; fffffffdH
	lea	ecx, DWORD PTR $T445705[esp+180]
	mov	DWORD PTR $T445710[esp+180], ebx
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN11@Getcat@3:
	test	bl, 1
	je	SHORT $LN50@Getcat@3
	cmp	DWORD PTR $T445706[esp+204], 16		; 00000010H
	jb	SHORT $LN50@Getcat@3
	mov	ecx, DWORD PTR $T445706[esp+184]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN50@Getcat@3:

; 787  : 		return (_X_CTYPE);

	mov	eax, 2

; 788  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 164				; 000000a4H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T445704[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1:
	mov	eax, DWORD PTR $T445710[ebp]
	and	eax, 1
	je	$LN8@Getcat@3
	and	DWORD PTR $T445710[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T445706[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@Getcat@3:
	ret	0
__ehhandler$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-164]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::codecvt<char,char,int>::_Getcat
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ
_TEXT	SEGMENT
?back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::back, COMDAT
; _this$ = eax

; 649  : 		{	// return last element of mutable sequence

	push	esi

; 650  : 		return (*(--end()));

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+20]
	test	esi, esi
	jne	SHORT $LN23@back@5
	call	__invalid_parameter_noinfo
$LN23@back@5:
	mov	edi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN33@back@5
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN34@back@5
$LN33@back@5:
	xor	eax, eax
$LN34@back@5:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN21@back@5
	call	__invalid_parameter_noinfo
$LN21@back@5:
	test	esi, esi
	jne	SHORT $LN55@back@5
	call	__invalid_parameter_noinfo
$LN50@back@5:
	cmp	edi, DWORD PTR [esi+20]
	jne	SHORT $LN56@back@5
	call	__invalid_parameter_noinfo
$LN56@back@5:
	lea	eax, DWORD PTR [edi+8]

; 651  : 		}

	pop	edi
	pop	esi
	ret	0
$LN55@back@5:

; 650  : 		return (*(--end()));

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN50@back@5
?back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::back
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
_TEXT	SEGMENT
__Psave$172173 = -36					; size = 4
__Lock$446048 = -32					; size = 4
__Lock$172172 = -28					; size = 4
$T446040 = -24						; size = 12
__$EHRec$ = -12						; size = 12
__Lock$446070 = 8					; size = 4
__Loc$ = 8						; size = 4
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,int> >, COMDAT

; 486  : {	// get facet reference from locale

	push	-1
	push	__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax

; 487  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

	push	0
	lea	ecx, DWORD PTR __Lock$172172[esp+56]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[esp+60], 0

; 488  : 		const locale::facet *_Psave =
; 489  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet
; 490  : 
; 491  : 		size_t _Id = _Facet::id;

	cmp	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, 0 ; std::codecvt<char,char,int>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
	mov	DWORD PTR __Psave$172173[esp+52], ebx
	jne	SHORT $LN11@use_facet
	push	0
	lea	ecx, DWORD PTR __Lock$446048[esp+56]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, 0 ; std::codecvt<char,char,int>::id
	jne	SHORT $LN10@use_facet
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A, eax ; std::codecvt<char,char,int>::id
$LN10@use_facet:
	lea	ecx, DWORD PTR __Lock$446048[esp+52]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet:

; 492  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

	mov	edi, DWORD PTR __Loc$[esp+48]
	mov	esi, DWORD PTR ?id@?$codecvt@DDH@std@@2V0locale@2@A ; std::codecvt<char,char,int>::id
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet
$LN30@use_facet:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet
$LN20@use_facet:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet
$LN16@use_facet:
	mov	esi, ecx
$LN15@use_facet:

; 493  : 
; 494  : 		if (_Pf != 0)

	test	esi, esi
	jne	SHORT $LN28@use_facet
$LN31@use_facet:

; 495  : 			;	// got facet from locale
; 496  : 		else if (_Psave != 0)

	test	ebx, ebx
	je	SHORT $LN4@use_facet

; 497  : 			_Pf = _Psave;	// lazy facet already allocated

	mov	esi, ebx
	jmp	SHORT $LN28@use_facet
$LN4@use_facet:

; 498  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

	lea	eax, DWORD PTR __Psave$172173[esp+52]
	push	edi
	push	eax
	call	?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::codecvt<char,char,int>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet

; 499  : 
; 500  :  #if _HAS_EXCEPTIONS
; 501  : 		_THROW_NCEE(bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T446040[esp+56]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T446040[esp+56]
	push	ecx
	call	__CxxThrowException@8
$LN34@use_facet:
$LN2@use_facet:

; 502  : 
; 503  : 	#else /* _HAS_EXCEPTIONS */
; 504  : 			abort();	// lazy disallowed
; 505  : 	#endif /* _HAS_EXCEPTIONS */
; 506  : 
; 507  : 		else
; 508  : 			{	// queue up lazy facet for destruction
; 509  : 			_Pf = _Psave;

	mov	esi, DWORD PTR __Psave$172173[esp+52]

; 510  : 			_Facetptr<_Facet>::_Psave = _Psave;
; 511  : 
; 512  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 513  : 			_Pfmod->_Incref();

	push	0
	lea	ecx, DWORD PTR __Lock$446070[esp+52]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet:
	lea	ecx, DWORD PTR __Lock$446070[esp+48]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 514  : 			_Pfmod->_Register();

	push	esi
	call	?facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::facet_Register
	add	esp, 4
$LN28@use_facet:

; 515  : 			}
; 516  : 
; 517  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

	lea	ecx, DWORD PTR __Lock$172172[esp+52]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi

; 518  : 	_END_LOCK()
; 519  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	ret	0
$LN33@use_facet:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$172172[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,int> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
;	COMDAT ??$reset@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z
_TEXT	SEGMENT
$T446088 = -8						; size = 8
_p$ = 8							; size = 4
??$reset@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>, COMDAT
; _this$ = ecx

; 389  :     template<class Y> void reset(Y * p) // Y must be complete

	sub	esp, 8
	push	esi

; 390  :     {
; 391  :         BOOST_ASSERT(p == 0 || p != px); // catch self-reset errors
; 392  :         this_type(p).swap(*this);

	mov	esi, DWORD PTR _p$[esp+8]
	push	edi
	mov	edi, ecx
	push	esi
	lea	ecx, DWORD PTR $T446088[esp+24]
	mov	DWORD PTR $T446088[esp+20], esi
	call	??$?0Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@shared_count@detail@boost@@QAE@PAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ; boost::detail::shared_count::shared_count<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
	push	esi
	lea	eax, DWORD PTR $T446088[esp+20]
	push	esi
	push	eax
	call	?sp_enable_shared_from_this@detail@boost@@YAXZZ ; boost::detail::sp_enable_shared_from_this
	lea	ecx, DWORD PTR $T446088[esp+28]
	add	esp, 12					; 0000000cH
	cmp	ecx, edi
	je	SHORT $LN9@reset@13
	mov	eax, DWORD PTR $T446088[esp+16]
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR $T446088[esp+16], edx
	mov	DWORD PTR [edi], eax
$LN9@reset@13:
	mov	esi, DWORD PTR [edi+4]
	mov	eax, DWORD PTR $T446088[esp+20]
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR $T446088[esp+20], esi
	test	esi, esi
	je	SHORT $LN23@reset@13
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN23@reset@13
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN23@reset@13
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	call	eax
$LN23@reset@13:

; 393  :     }

	pop	edi
	pop	esi
	add	esp, 8
	ret	4
??$reset@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$codecvt@DDH@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$codecvt@DDH@std@@MAEPAXI@Z PROC			; std::codecvt<char,char,int>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN10@scalar@63
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@63:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$codecvt@DDH@std@@MAEPAXI@Z ENDP			; std::codecvt<char,char,int>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
xdata$x	ENDS
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T446174 = 8						; size = 4
__Mode$ = 8						; size = 4
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT
; _this$ = esi
; __Filename$ = ecx

; 151  : 		{	// open a C stream with specified mode

	push	-1
	push	__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax

; 152  : 		_Filet *_File;
; 153  : 		if (_Myfile != 0 || (_File = _Fiopen(_Filename, _Mode, _Prot)) == 0)

	cmp	DWORD PTR [esi+76], 0
	jne	$LN1@open@5
	mov	eax, DWORD PTR __Mode$[esp+16]
	push	64					; 00000040H
	push	eax
	push	ecx
	call	?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z	; std::_Fiopen
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN1@open@5

; 155  : 
; 156  : 		_Init(_File, _Openfl);

	push	1
	push	eax
	mov	ecx, esi
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 157  : 		_Initcvt((_Cvt *)&_USE(_Mysb::getloc(), _Cvt));

	lea	edi, DWORD PTR $T446174[esp+16]
	mov	eax, esi
	call	?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ ; std::basic_streambuf<char,std::char_traits<char> >::getloc
	push	eax
	mov	DWORD PTR __$EHRec$[esp+32], 0
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	mov	edi, eax
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	add	esp, 4
	mov	ecx, edi
	call	eax
	test	al, al
	je	SHORT $LN7@open@5
	lea	ecx, DWORD PTR $T446174[esp+16]
	mov	DWORD PTR [esi+60], 0
	call	??1locale@std@@QAE@XZ			; std::locale::~locale

; 158  : 		return (this);	// open succeeded

	mov	eax, esi

; 159  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 12					; 0000000cH
	ret	4

; 157  : 		_Initcvt((_Cvt *)&_USE(_Mysb::getloc(), _Cvt));

$LN7@open@5:
	mov	ecx, esi
	mov	DWORD PTR [esi+60], edi
	call	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Init
	lea	ecx, DWORD PTR $T446174[esp+16]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale

; 158  : 		return (this);	// open succeeded

	mov	eax, esi

; 159  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 12					; 0000000cH
	ret	4
$LN1@open@5:

; 154  : 			return (0);	// open failed

	xor	eax, eax

; 159  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0:
	lea	ecx, DWORD PTR $T446174[ebp-4]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
_TEXT	SEGMENT
__File$ = 8						; size = 4
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct from pointer to C stream

	push	esi
	mov	esi, ecx
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >

; 125  : 		_Init(_File, _Newfl);

	mov	eax, DWORD PTR __File$[esp]
	push	0
	push	eax
	mov	ecx, esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	call	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 126  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx

; 455  : 		_Initcvt((_Cvt *)&_USE(_Loc, _Cvt));

	mov	eax, DWORD PTR __Loc$[esp-4]
	push	esi
	push	edi
	push	eax
	mov	edi, ecx
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	mov	esi, eax
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	add	esp, 4
	mov	ecx, esi
	call	eax
	test	al, al
	je	SHORT $LN4@imbue@10
	mov	DWORD PTR [edi+60], 0
	pop	edi
	pop	esi

; 456  : 		}

	ret	4

; 455  : 		_Initcvt((_Cvt *)&_USE(_Loc, _Cvt));

$LN4@imbue@10:
	mov	ecx, edi
	mov	DWORD PTR [edi+60], esi
	call	?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Init
	pop	edi
	pop	esi

; 456  : 		}

	ret	4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ?reset@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXXZ
_TEXT	SEGMENT
$T446214 = -12						; size = 8
?reset@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXXZ PROC ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset, COMDAT
; _this$ = ecx

; 385  :     {

	sub	esp, 16					; 00000010H

; 386  :         this_type().swap(*this);

	lea	eax, DWORD PTR $T446214[esp+16]
	push	esi
	cmp	eax, ecx
	je	SHORT $LN10@reset@14
	mov	DWORD PTR [ecx], 0
$LN10@reset@14:
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx+4], 0
	test	esi, esi
	je	SHORT $LN24@reset@14
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN24@reset@14
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN24@reset@14
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi

; 387  :     }

	pop	esi
	add	esp, 16					; 00000010H

; 386  :         this_type().swap(*this);

	jmp	eax
$LN24@reset@14:

; 387  :     }

	pop	esi
	add	esp, 16					; 00000010H
	ret	0
?reset@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXXZ ENDP ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0system_error@system@boost@@QAE@ABV012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0system_error@system@boost@@QAE@ABV012@@Z$0
__ehfuncinfo$??0system_error@system@boost@@QAE@ABV012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0system_error@system@boost@@QAE@ABV012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0system_error@system@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0system_error@system@boost@@QAE@ABV012@@Z PROC	; boost::system::system_error::system_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0system_error@system@boost@@QAE@ABV012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	mov	edi, DWORD PTR ___that$[esp+24]
	push	edi
	call	??0runtime_error@std@@QAE@ABV01@@Z
	xor	edx, edx
	mov	DWORD PTR __$EHRec$[esp+36], edx
	mov	DWORD PTR [esi], OFFSET ??_7system_error@system@boost@@6B@
	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [esi+40], eax
	mov	ecx, DWORD PTR [edi+44]
	mov	DWORD PTR [esi+44], ecx
	push	-1
	lea	ecx, DWORD PTR [esi+48]
	lea	eax, DWORD PTR [edi+48]
	push	edx
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
	mov	DWORD PTR [ecx+20], edx
	push	eax
	mov	BYTE PTR [ecx+4], dl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0system_error@system@boost@@QAE@ABV012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1runtime_error@std@@UAE@XZ		; std::runtime_error::~runtime_error
__ehhandler$??0system_error@system@boost@@QAE@ABV012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0system_error@system@boost@@QAE@ABV012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0system_error@system@boost@@QAE@ABV012@@Z ENDP	; boost::system::system_error::system_error
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	push	edi
	mov	esi, ecx
	call	??0system_error@system@boost@@QAE@ABV012@@Z
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	eax, DWORD PTR [edi+76]
	mov	DWORD PTR [esi+76], eax
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	test	eax, eax
	je	SHORT $LN12@basic_file@6
	add	eax, 4
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx
$LN12@basic_file@6:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ
_TEXT	SEGMENT
??0m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::m_imp, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+20], ecx
	mov	edx, 15					; 0000000fH
	mov	DWORD PTR [eax+24], edx
	mov	BYTE PTR [eax+4], cl
	mov	DWORD PTR [eax+52], edx
	mov	DWORD PTR [eax+48], ecx
	mov	BYTE PTR [eax+32], cl
	mov	DWORD PTR [eax+80], edx
	mov	DWORD PTR [eax+76], ecx
	mov	BYTE PTR [eax+60], cl
	ret	0
??0m_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@XZ ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp::m_imp
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\as_literal.hpp
_TEXT	ENDS
;	COMDAT ??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T447183 = -32						; size = 1
$T447173 = -28						; size = 28
??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::as_literal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = edi
; _r$ = eax

; 101  :     {

	sub	esp, 32					; 00000020H
	push	ebx
	push	esi

; 102  :         return range_detail::make_range( r, range_detail::is_char_ptr(r) );

	xor	ebx, ebx
	push	-1
	mov	esi, eax
	push	ebx
	push	esi
	lea	ecx, DWORD PTR $T447173[esp+52]
	mov	DWORD PTR $T447173[esp+76], 15		; 0000000fH
	mov	DWORD PTR $T447173[esp+72], ebx
	mov	BYTE PTR $T447173[esp+56], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T447173[esp+64], 16		; 00000010H
	jb	SHORT $LN48@as_literal@2
	mov	eax, DWORD PTR $T447173[esp+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN48@as_literal@2:
	mov	BYTE PTR $T447183[esp+40], bl
	mov	ecx, DWORD PTR $T447183[esp+40]
	push	ecx
	push	edi
	mov	DWORD PTR $T447173[esp+72], 15		; 0000000fH
	mov	DWORD PTR $T447173[esp+68], ebx
	mov	BYTE PTR $T447173[esp+52], bl
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Urange_tag@iterator_range_detail@1@@Z ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	pop	esi
	mov	eax, edi
	pop	ebx

; 103  :     }

	add	esp, 32					; 00000020H
	ret	0
??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::as_literal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::~basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT
; _this$ = ecx

; 683  :       ~basic_filesystem_error() throw() {}

	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	esi, DWORD PTR [edi+80]
	test	esi, esi
	je	SHORT $LN11@basic_file@7
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN11@basic_file@7
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN11@basic_file@7
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN11@basic_file@7:
	mov	ecx, edi
	pop	edi
	pop	esi
	jmp	??1system_error@system@boost@@UAE@XZ	; boost::system::system_error::~system_error
??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::~basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT
?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z PROC ; std::istreambuf_iterator<char,std::char_traits<char> >::equal, COMDAT
; _this$ = esi
; __Right$ = edi

; 508  : 		if (!_Got)

	cmp	BYTE PTR [esi+4], 0
	jne	SHORT $LN12@equal@3

; 509  : 			((_Myt *)this)->_Peek();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN10@equal@3
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN16@equal@3
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN16@equal@3
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN17@equal@3
$LN16@equal@3:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN17@equal@3:
	cmp	eax, -1
	je	SHORT $LN10@equal@3
	mov	BYTE PTR [esi+5], al
	jmp	SHORT $LN9@equal@3
$LN10@equal@3:
	mov	DWORD PTR [esi], 0
$LN9@equal@3:
	mov	BYTE PTR [esi+4], 1
$LN12@equal@3:

; 510  : 		if (!_Right._Got)

	cmp	BYTE PTR [edi+4], 0
	jne	SHORT $LN35@equal@3

; 511  : 			((_Myt *)&_Right)->_Peek();

	mov	ecx, DWORD PTR [edi]
	test	ecx, ecx
	je	SHORT $LN33@equal@3
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN39@equal@3
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN39@equal@3
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN40@equal@3
$LN39@equal@3:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN40@equal@3:
	cmp	eax, -1
	je	SHORT $LN33@equal@3
	mov	BYTE PTR [edi+5], al
	jmp	SHORT $LN32@equal@3
$LN33@equal@3:
	mov	DWORD PTR [edi], 0
$LN32@equal@3:
	mov	BYTE PTR [edi+4], 1
$LN35@equal@3:

; 512  : 		return (_Strbuf == 0 && _Right._Strbuf == 0
; 513  : 			|| _Strbuf != 0 && _Right._Strbuf != 0);

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN55@equal@3
	cmp	DWORD PTR [edi], 0
	je	SHORT $LN7@equal@3
$LN6@equal@3:
	xor	eax, eax

; 514  : 		}

	ret	0
$LN55@equal@3:

; 512  : 		return (_Strbuf == 0 && _Right._Strbuf == 0
; 513  : 			|| _Strbuf != 0 && _Right._Strbuf != 0);

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN6@equal@3
$LN7@equal@3:
	mov	eax, 1

; 514  : 		}

	ret	0
?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ENDP ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
__ehfuncinfo$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T447377 = -164						; size = 4
$T447371 = -160						; size = 4
$T447373 = -156						; size = 28
$T447372 = -128						; size = 116
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getcat, COMDAT

; 237  : 		{	// return locale category mask and construct standard facet

	push	-1
	push	__ehhandler$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR __Ppf$[esp+176]
	xor	ebx, ebx

; 238  : 		if (_Ppf != 0 && *_Ppf == 0)

	mov	DWORD PTR $T447377[esp+180], ebx
	test	ebp, ebp
	je	$LN50@Getcat@4
	cmp	DWORD PTR [ebp], ebx
	jne	$LN50@Getcat@4

; 239  : 			*_Ppf = _NEW_CRT num_get<_Elem, _InIt>(
; 240  : 				_Locinfo(_Ploc->name()));

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T447371[esp+180], esi
	mov	DWORD PTR __$EHRec$[esp+188], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat@4
	mov	ecx, DWORD PTR __Ploc$[esp+176]
	lea	eax, DWORD PTR $T447373[esp+180]
	push	eax
	call	?name@locale@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::locale::name
	mov	BYTE PTR __$EHRec$[esp+188], 1
	push	eax
	lea	ecx, DWORD PTR $T447372[esp+184]
	mov	DWORD PTR $T447377[esp+184], 1
	call	??0_Locinfo@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Locinfo::_Locinfo
	mov	ebx, 3
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi], OFFSET ??_7?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
	call	__Getcvt
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], edx
	jmp	SHORT $LN5@Getcat@4
$LN4@Getcat@4:
	xor	esi, esi
$LN5@Getcat@4:
	mov	DWORD PTR __$EHRec$[esp+188], 2
	mov	DWORD PTR [ebp], esi
	test	bl, 2
	je	SHORT $LN11@Getcat@4
	and	ebx, -3					; fffffffdH
	lea	ecx, DWORD PTR $T447372[esp+180]
	mov	DWORD PTR $T447377[esp+180], ebx
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN11@Getcat@4:
	test	bl, 1
	je	SHORT $LN50@Getcat@4
	cmp	DWORD PTR $T447373[esp+204], 16		; 00000010H
	jb	SHORT $LN50@Getcat@4
	mov	ecx, DWORD PTR $T447373[esp+184]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN50@Getcat@4:

; 241  : 		return (_X_NUMERIC);

	mov	eax, 4

; 242  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 164				; 000000a4H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T447371[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1:
	mov	eax, DWORD PTR $T447377[ebp]
	and	eax, 1
	je	$LN8@Getcat@4
	and	DWORD PTR $T447377[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T447373[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@Getcat@4:
	ret	0
__ehhandler$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-164]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getcat
; Function compile flags: /Ogtpy
;	COMDAT ??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT
; _this$ = ecx
	push	esi
	xor	eax, eax
	mov	esi, ecx
	push	-1
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR ___that$[esp+8]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi
	ret	4
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV012@@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ??$?8DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT
??$?8DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z PROC ; std::operator==<char,std::char_traits<char> >, COMDAT
; __Left$ = esi
; __Right$ = edi

; 552  : 	return (_Left.equal(_Right));

	jmp	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
??$?8DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
_TEXT	SEGMENT
__Psave$158675 = -36					; size = 4
__Lock$447661 = -32					; size = 4
__Lock$447683 = -32					; size = 4
__Lock$158674 = -28					; size = 4
$T447653 = -24						; size = 12
__$EHRec$ = -12						; size = 12
??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z PROC ; std::use_facet<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >, COMDAT
; __Loc$ = edi

; 486  : {	// get facet reference from locale

	push	-1
	push	__ehhandler$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, eax

; 487  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

	push	0
	lea	ecx, DWORD PTR __Lock$158674[esp+52]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[esp+56], 0

; 488  : 		const locale::facet *_Psave =
; 489  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet
; 490  : 
; 491  : 		size_t _Id = _Facet::id;

	cmp	DWORD PTR ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, 0 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >::_Psave
	mov	DWORD PTR __Psave$158675[esp+48], ebx
	jne	SHORT $LN11@use_facet@2
	push	0
	lea	ecx, DWORD PTR __Lock$447661[esp+52]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, 0 ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
	jne	SHORT $LN10@use_facet@2
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, eax ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
$LN10@use_facet@2:
	lea	ecx, DWORD PTR __Lock$447661[esp+48]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet@2:
	mov	esi, DWORD PTR ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id

; 492  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@2
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet@2
$LN30@use_facet@2:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@2
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@2
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet@2
$LN20@use_facet@2:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet@2
$LN16@use_facet@2:
	mov	esi, ecx
$LN15@use_facet@2:

; 493  : 
; 494  : 		if (_Pf != 0)

	test	esi, esi
	jne	SHORT $LN28@use_facet@2
$LN31@use_facet@2:

; 495  : 			;	// got facet from locale
; 496  : 		else if (_Psave != 0)

	test	ebx, ebx
	je	SHORT $LN4@use_facet@2

; 497  : 			_Pf = _Psave;	// lazy facet already allocated

	mov	esi, ebx
	jmp	SHORT $LN28@use_facet@2
$LN4@use_facet@2:

; 498  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

	lea	eax, DWORD PTR __Psave$158675[esp+48]
	push	edi
	push	eax
	call	?_Getcat@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@2

; 499  : 
; 500  :  #if _HAS_EXCEPTIONS
; 501  : 		_THROW_NCEE(bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T447653[esp+52]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T447653[esp+52]
	push	ecx
	call	__CxxThrowException@8
$LN34@use_facet@2:
$LN2@use_facet@2:

; 502  : 
; 503  : 	#else /* _HAS_EXCEPTIONS */
; 504  : 			abort();	// lazy disallowed
; 505  : 	#endif /* _HAS_EXCEPTIONS */
; 506  : 
; 507  : 		else
; 508  : 			{	// queue up lazy facet for destruction
; 509  : 			_Pf = _Psave;

	mov	esi, DWORD PTR __Psave$158675[esp+48]

; 510  : 			_Facetptr<_Facet>::_Psave = _Psave;
; 511  : 
; 512  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 513  : 			_Pfmod->_Incref();

	push	0
	lea	ecx, DWORD PTR __Lock$447683[esp+52]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet@2:
	lea	ecx, DWORD PTR __Lock$447683[esp+48]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 514  : 			_Pfmod->_Register();

	push	esi
	call	?facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::facet_Register
	add	esp, 4
$LN28@use_facet@2:

; 515  : 			}
; 516  : 
; 517  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

	lea	ecx, DWORD PTR __Lock$158674[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi

; 518  : 	_END_LOCK()
; 519  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	ret	0
$LN33@use_facet@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$158674[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-32]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1089 : 		{	// assign _Count * _Ch

	push	esi
	push	edi

; 1090 : 		if (_Count == npos)

	mov	edi, DWORD PTR __Count$[esp+4]
	mov	esi, ecx
	cmp	edi, -1
	jne	SHORT $LN2@assign@2

; 1091 : 			_String_base::_Xlen();	// result too long

	call	?_Xlen@_String_base@std@@SAXXZ		; std::_String_base::_Xlen

; 1092 : 
; 1093 : 		if (_Grow(_Count))

	jmp	SHORT $LN63@assign@2
$LN2@assign@2:
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN10@assign@2
$LN63@assign@2:
	call	?_Xlen@_String_base@std@@SAXXZ		; std::_String_base::_Xlen
$LN10@assign@2:
	mov	eax, DWORD PTR [esi+24]
	cmp	eax, edi
	jae	SHORT $LN9@assign@2
	mov	eax, DWORD PTR [esi+20]
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
$LN65@assign@2:
	jbe	SHORT $LN64@assign@2

; 1094 : 			{	// make room and assign new stuff
; 1095 : 			_Chassign(0, _Count, _Ch);

	mov	ecx, DWORD PTR __Ch$[esp+4]
	push	ecx
	push	edi
	push	0
	mov	ecx, esi
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign

; 1096 : 			_Eos(_Count);

	cmp	DWORD PTR [esi+24], 16			; 00000010H
	mov	DWORD PTR [esi+20], edi
	jb	SHORT $LN59@assign@2
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+edi], 0
	pop	edi

; 1097 : 			}
; 1098 : 		return (*this);

	mov	eax, esi
	pop	esi

; 1099 : 		}

	ret	8

; 1092 : 
; 1093 : 		if (_Grow(_Count))

$LN9@assign@2:
	test	edi, edi
	jne	SHORT $LN65@assign@2
	mov	DWORD PTR [esi+20], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN51@assign@2
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax], 0
	pop	edi

; 1097 : 			}
; 1098 : 		return (*this);

	mov	eax, esi
	pop	esi

; 1099 : 		}

	ret	8

; 1092 : 
; 1093 : 		if (_Grow(_Count))

$LN51@assign@2:
	lea	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax], 0
	pop	edi

; 1097 : 			}
; 1098 : 		return (*this);

	mov	eax, esi
	pop	esi

; 1099 : 		}

	ret	8

; 1096 : 			_Eos(_Count);

$LN59@assign@2:
	lea	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+edi], 0
$LN64@assign@2:
	pop	edi

; 1097 : 			}
; 1098 : 		return (*this);

	mov	eax, esi
	pop	esi

; 1099 : 		}

	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = -8					; size = 4
tv208 = -4						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Lbound, COMDAT
; __Keyval$ = eax

; 1263 : 		{	// find leftmost node not less than _Keyval

	sub	esp, 8

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A+24
	push	esi
	mov	esi, DWORD PTR [ecx+4]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [esi+45], 0
	mov	DWORD PTR __Wherenode$[esp+12], ecx
	jne	SHORT $LN51@Lbound@5

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	ecx, DWORD PTR [eax+24]
	push	ebx
	mov	ebx, DWORD PTR [eax+20]
	push	ebp
	push	edi
	mov	DWORD PTR tv208[esp+24], ecx
	lea	ebp, DWORD PTR [eax+4]
$LL4@Lbound@5:
	cmp	DWORD PTR tv208[esp+24], 16		; 00000010H
	jb	SHORT $LN29@Lbound@5
	mov	edx, DWORD PTR [ebp]
	jmp	SHORT $LN30@Lbound@5
$LN29@Lbound@5:
	mov	edx, ebp
$LN30@Lbound@5:
	mov	edi, DWORD PTR [esi+32]
	mov	eax, edi
	cmp	eax, edi
	cmovb	edi, eax
	mov	ecx, edi
	cmp	edi, ebx
	jb	SHORT $LN36@Lbound@5
	mov	ecx, ebx
$LN36@Lbound@5:
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN43@Lbound@5
	mov	eax, DWORD PTR [esi+16]
	jmp	SHORT $LN44@Lbound@5
$LN43@Lbound@5:
	lea	eax, DWORD PTR [esi+16]
$LN44@Lbound@5:
	push	ecx
	push	edx
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN53@Lbound@5
	cmp	edi, ebx
	jb	SHORT $LN50@Lbound@5
	cmp	edi, ebx
	setne	al
	test	eax, eax
$LN53@Lbound@5:
	jge	SHORT $LN2@Lbound@5
$LN50@Lbound@5:

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	esi, DWORD PTR [esi+8]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound@5
$LN2@Lbound@5:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	DWORD PTR __Wherenode$[esp+24], esi

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	esi, DWORD PTR [esi]
$LN1@Lbound@5:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [esi+45], 0
	je	SHORT $LL4@Lbound@5

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[esp+24]
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi

; 1277 : 		}

	add	esp, 8
	ret	0
$LN51@Lbound@5:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, ecx
	pop	esi

; 1277 : 		}

	add	esp, 8
	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Lbound
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 665  : 		{	// construct from _Count * _Ch

	push	esi
	mov	esi, ecx

; 666  : 		_Tidy();
; 667  : 		assign(_Count, _Ch);

	mov	ecx, DWORD PTR __Count$[esp]
	xor	eax, eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR __Ch$[esp]
	push	eax
	push	ecx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 668  : 		}

	mov	eax, esi
	pop	esi
	ret	8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_D?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
??_D?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vbase destructor', COMDAT
; _this$ = esi
	push	esi
	call	??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
	lea	eax, DWORD PTR [esi+24]
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??_D?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`vbase destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	call	??1?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAE@XZ
	lea	eax, DWORD PTR [esi+24]
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN11@scalar@64
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@scalar@64:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::lower_bound, COMDAT
; ___$ReturnUdt$ = esi
; __Keyval$ = eax

; 1004 : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

	call	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Lbound
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A
	mov	DWORD PTR [esi], eax
	mov	eax, esi

; 1005 : 		}

	ret	0
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::lower_bound
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	call	??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::~filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
	lea	eax, DWORD PTR [esi+24]
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN11@scalar@65
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@scalar@65:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@66
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@66:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Where$ = -16						; size = 8
$T448275 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::find, COMDAT
; __Keyval$ = edi

; 977  : 		{	// find an element in mutable sequence that matches _Keyval

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+24]
	push	esi

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	eax, edi
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::_Lbound

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	ebx, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A+24
	mov	esi, eax
	mov	eax, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A
	mov	DWORD PTR __Where$[esp+36], esi
	mov	DWORD PTR __Where$[esp+32], eax
	test	eax, eax
	je	SHORT $LN35@find@4
	cmp	eax, eax
	je	SHORT $LN36@find@4
$LN35@find@4:
	call	__invalid_parameter_noinfo
$LN36@find@4:
	cmp	esi, ebx
	je	SHORT $LN3@find@4
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	mov	eax, DWORD PTR [esi+32]
	jb	SHORT $LN61@find@4
	mov	esi, DWORD PTR [esi+16]
	jmp	SHORT $LN62@find@4
$LN61@find@4:
	add	esi, 16					; 00000010H
$LN62@find@4:
	push	eax
	mov	eax, DWORD PTR [edi+20]
	push	esi
	push	eax
	push	0
	mov	ecx, edi
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jl	SHORT $LN3@find@4
	lea	eax, DWORD PTR __Where$[esp+32]
	jmp	SHORT $LN4@find@4
$LN3@find@4:
	mov	ecx, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A+24
	mov	edx, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A
	mov	DWORD PTR $T448275[esp+36], ecx
	mov	DWORD PTR $T448275[esp+32], edx
	lea	eax, DWORD PTR $T448275[esp+32]
$LN4@find@4:
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 983  : 		}

	pop	esi
	mov	DWORD PTR [ebp], ecx
	mov	DWORD PTR [ebp+4], edx
	mov	eax, ebp
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::find
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 916  : 		return (assign(_Right));

	mov	eax, DWORD PTR __Right$[esp-4]
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 917  : 		}

	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	-1
	push	0
	push	eax
	mov	esi, ecx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi
	ret	4
??4?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator=
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ?to_internal@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV45@@Z
_TEXT	SEGMENT
$T448559 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
?to_internal@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV45@@Z PROC ; boost::filesystem::path_traits::to_internal, COMDAT

; 58   :         const external_string_type & src ) { return src; }

	push	ecx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	xor	eax, eax
	push	-1
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	push	eax
	mov	DWORD PTR $T448559[esp+16], eax
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR _src$[esp+12]
	push	eax
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
?to_internal@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV45@@Z ENDP ; boost::filesystem::path_traits::to_internal
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_external@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@ABV45@@Z
_TEXT	SEGMENT
$T448675 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
_src$ = 16						; size = 4
?to_external@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@ABV45@@Z PROC ; boost::filesystem::path_traits::to_external, COMDAT

; 56   :         const internal_string_type & src ) { return src; }

	push	ecx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	xor	eax, eax
	push	-1
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	push	eax
	mov	DWORD PTR $T448675[esp+16], eax
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR _src$[esp+12]
	push	eax
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
?to_external@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@ABV45@@Z ENDP ; boost::filesystem::path_traits::to_external
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gsystem_error@system@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gsystem_error@system@boost@@UAEPAXI@Z PROC		; boost::system::system_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1system_error@system@boost@@UAE@XZ	; boost::system::system_error::~system_error
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@67
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@67:
	mov	eax, esi
	pop	esi
	ret	4
??_Gsystem_error@system@boost@@UAEPAXI@Z ENDP		; boost::system::system_error::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\system\system_error.hpp
_TEXT	ENDS
;	COMDAT ??0system_error@system@boost@@QAE@Verror_code@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_ec$ = 8						; size = 8
_what_arg$ = 16						; size = 4
??0system_error@system@boost@@QAE@Verror_code@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::system::system_error::system_error, COMDAT
; _this$ = ecx

; 28   :       system_error( error_code ec, const std::string & what_arg )

	mov	eax, DWORD PTR _what_arg$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	mov	ecx, DWORD PTR _ec$[esp]
	mov	edx, DWORD PTR _ec$[esp+4]
	mov	DWORD PTR [esi], OFFSET ??_7system_error@system@boost@@6B@
	mov	DWORD PTR [esi+40], ecx
	mov	DWORD PTR [esi+44], edx
	xor	eax, eax
	mov	DWORD PTR [esi+68], eax
	mov	DWORD PTR [esi+72], 15			; 0000000fH
	mov	BYTE PTR [esi+52], al
	mov	eax, esi
	pop	esi
	ret	12					; 0000000cH
??0system_error@system@boost@@QAE@Verror_code@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::system::system_error::system_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$ctype@D@std@@MAEPAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi], OFFSET ??_7?$ctype@D@std@@6B@
	test	eax, eax
	jle	SHORT $LN16@scalar@68
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	_free
	jmp	SHORT $LN17@scalar@68
$LN16@scalar@68:
	jge	SHORT $LN6@scalar@68
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
$LN17@scalar@68:
	add	esp, 4
$LN6@scalar@68:
	test	BYTE PTR ___flags$[esp], 1
	mov	DWORD PTR [esi], OFFSET ??_7facet@locale@std@@6B@
	je	SHORT $LN15@scalar@68
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@scalar@68:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$ctype@D@std@@MAEPAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1
__ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	ENDS
;	COMDAT ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
_TEXT	SEGMENT
$T448973 = -164						; size = 4
$T448967 = -160						; size = 4
$T448969 = -156						; size = 28
$T448968 = -128						; size = 116
__$EHRec$ = -12						; size = 12
__Ppf$ = 8						; size = 4
__Ploc$ = 12						; size = 4
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT

; 1790 : 		{	// return locale category mask and construct standard facet

	push	-1
	push	__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, eax

; 1791 : 		if (_Ppf != 0 && *_Ppf == 0)

	mov	edi, DWORD PTR __Ppf$[esp+176]
	xor	ebx, ebx
	mov	DWORD PTR $T448973[esp+180], ebx
	test	edi, edi
	je	$LN42@Getcat@5
	cmp	DWORD PTR [edi], ebx
	jne	$LN42@Getcat@5

; 1792 : 			*_Ppf = _NEW_CRT ctype<_Elem>(
; 1793 : 				_Locinfo(_Ploc->name()));

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T448967[esp+180], esi
	mov	DWORD PTR __$EHRec$[esp+188], ebx
	test	esi, esi
	je	SHORT $LN4@Getcat@5
	mov	ecx, DWORD PTR __Ploc$[esp+176]
	lea	eax, DWORD PTR $T448969[esp+180]
	push	eax
	call	?name@locale@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::locale::name
	mov	BYTE PTR __$EHRec$[esp+188], 1
	push	eax
	lea	ecx, DWORD PTR $T448968[esp+184]
	mov	DWORD PTR $T448973[esp+184], 1
	call	??0_Locinfo@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Locinfo::_Locinfo
	push	0
	push	eax
	mov	ecx, esi
	mov	ebx, 3
	call	??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z	; std::ctype<char>::ctype<char>
	jmp	SHORT $LN5@Getcat@5
$LN4@Getcat@5:
	xor	eax, eax
$LN5@Getcat@5:
	mov	DWORD PTR __$EHRec$[esp+188], 2
	mov	DWORD PTR [edi], eax
	test	bl, 2
	je	SHORT $LN11@Getcat@5
	and	ebx, -3					; fffffffdH
	lea	ecx, DWORD PTR $T448968[esp+180]
	mov	DWORD PTR $T448973[esp+180], ebx
	call	??1_Locinfo@std@@QAE@XZ			; std::_Locinfo::~_Locinfo
$LN11@Getcat@5:
	test	bl, 1
	je	SHORT $LN42@Getcat@5
	cmp	DWORD PTR $T448969[esp+204], 16		; 00000010H
	jb	SHORT $LN42@Getcat@5
	mov	ecx, DWORD PTR $T448969[esp+184]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@Getcat@5:

; 1794 : 		return (_X_CTYPE);

	mov	eax, 2

; 1795 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 164				; 000000a4H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0:
	mov	eax, DWORD PTR $T448967[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1:
	mov	eax, DWORD PTR $T448973[ebp]
	and	eax, 1
	je	$LN8@Getcat@5
	and	DWORD PTR $T448973[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T448969[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@Getcat@5:
	ret	0
__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-164]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ENDP ; std::ctype<char>::_Getcat
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
;	COMDAT ??R?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ
_TEXT	SEGMENT
??R?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ PROC ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >::operator(), COMDAT
; _this$ = eax

; 134  :     void operator()() const { t_.reset(); }

	push	edi
	mov	edi, DWORD PTR [eax]
	cmp	BYTE PTR [edi+8], 0
	je	SHORT $LN3@operator@357
	push	esi
	mov	esi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN26@operator@357
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN26@operator@357
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN26@operator@357
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	call	eax
$LN26@operator@357:
	mov	BYTE PTR [edi+8], 0
	pop	esi
$LN3@operator@357:
	pop	edi
	ret	0
??R?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ENDP ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >::operator()
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_base_w32.hpp
xdata$x	SEGMENT
__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$1
__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$9 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$0
__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$8
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$9
__ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	DD	02H
	DD	FLAT:__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\preprocessor\iteration\detail\local.hpp
xdata$x	ENDS
;	COMDAT ??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_c1$ = 8						; size = 4
_op$ = 12						; size = 8
_c0$ = 20						; size = 8
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z PROC ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > > >, COMDAT

; 40   :         BOOST_PP_LOCAL_MACRO(2)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _c0$[ebp+4]
	mov	ecx, DWORD PTR _c0$[ebp]
	mov	edx, DWORD PTR _op$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _op$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	ebx, eax
	mov	eax, DWORD PTR _c1$[ebp]
	lea	edi, DWORD PTR [eax+8]
	add	esp, 16					; 00000010H
	cmp	BYTE PTR [edi], 0
	je	SHORT $LN15@execute_al@11
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN38@execute_al@11
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN38@execute_al@11
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN38@execute_al@11
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	call	eax
$LN38@execute_al@11:
	mov	BYTE PTR [edi], 0
$LN15@execute_al@11:
	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$0:
	lea	eax, DWORD PTR _c1$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??R?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QBEXXZ ; boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >::operator()
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN10@execute_al@11:
	push	0
	push	0
	call	__CxxThrowException@8
$LN44@execute_al@11:
__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, $LN10@execute_al@11
	ret	0
$LN43@execute_al@11:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ENDP ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > > >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
xdata$x	SEGMENT
__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$0
__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$4
__ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\preprocessor\iteration\detail\local.hpp
xdata$x	ENDS
;	COMDAT ??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_c1$ = 8						; size = 4
_c2$ = 12						; size = 4
_op$ = 16						; size = 8
_c0$ = 24						; size = 8
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z PROC ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >,boost::iostreams::detail::clear_flags_operation<int> >, COMDAT

; 43   :         BOOST_PP_LOCAL_MACRO(3)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _c0$[ebp+4]
	mov	ecx, DWORD PTR _c0$[ebp]
	mov	edx, DWORD PTR _op$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _op$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _c1$[ebp]
	push	edx
	push	eax
	push	ecx
	call	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > > >
	mov	edx, DWORD PTR _c2$[ebp]
	add	esp, 20					; 00000014H
	mov	DWORD PTR [edx], 0
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z$0:
	mov	eax, DWORD PTR _c2$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	0
	push	0
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	call	__CxxThrowException@8
$LN20@execute_al@12:
$LN19@execute_al@12:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z ENDP ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >,boost::iostreams::detail::clear_flags_operation<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV0123@@Z
_TEXT	SEGMENT
??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV0123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::concept_adapter<boost::iostreams::basic_file_source<char> >, COMDAT
; _this$ = eax
; ___that$ = ecx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	test	ecx, ecx
	je	SHORT $LN12@concept_ad@3
	add	ecx, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
$LN12@concept_ad@3:
	ret	0
??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABV0123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::concept_adapter<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABU?$basic_file_source@D@23@@Z
_TEXT	SEGMENT
??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABU?$basic_file_source@D@23@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::concept_adapter<boost::iostreams::basic_file_source<char> >, COMDAT
; _this$ = eax
; _t$ = ecx

; 65   :     { BOOST_STATIC_ASSERT(!is_std_io<T>::value); }

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	test	ecx, ecx
	je	SHORT $LN12@concept_ad@4
	add	ecx, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
$LN12@concept_ad@4:
	ret	0
??0?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@ABU?$basic_file_source@D@23@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::concept_adapter<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\optional.hpp
_TEXT	ENDS
;	COMDAT ?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@@Z PROC ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::reset, COMDAT
; _this$ = esi

; 99   :         reset();

	cmp	BYTE PTR [esi+8], 0
	push	ebx
	mov	ebx, DWORD PTR _t$[esp]
	je	SHORT $LN50@reset@16
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN29@reset@16
	lea	eax, DWORD PTR [edi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN29@reset@16
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, edi
	call	eax
	lea	ecx, DWORD PTR [edi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN29@reset@16
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, edi
	call	edx
$LN29@reset@16:
	mov	BYTE PTR [esi+8], 0
	pop	edi
$LN50@reset@16:

; 100  :         new (address()) T(t); 

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [esi+4], eax
	pop	ebx
	test	eax, eax
	je	SHORT $LN49@reset@16
	add	eax, 4
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx
$LN49@reset@16:

; 101  :         initialized_ = true;

	mov	BYTE PTR [esi+8], 1

; 102  :     }

	ret	4
?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@@Z ENDP ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::reset
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
?close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close, COMDAT
; _this$ = eax

; 199  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	esi
	push	edi

; 200  :     using namespace std;
; 201  :     base_type* self = this;
; 202  :     detail::execute_all(
; 203  :         detail::call_member_close(*self, BOOST_IOS::in),
; 204  :         detail::call_member_close(*self, BOOST_IOS::out),
; 205  :         detail::call_reset(storage_),
; 206  :         detail::clear_flags(flags_)
; 207  :     );

	mov	ecx, 2
	push	ecx
	push	eax
	lea	edx, DWORD PTR [ecx-1]
	push	edx
	push	eax
	lea	esi, DWORD PTR [eax+92]
	lea	edi, DWORD PTR [eax+64]
	push	esi
	push	edi
	call	??$execute_all@V?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@detail@iostreams@boost@@V1234@V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@234@V?$clear_flags_operation@H@234@@detail@iostreams@boost@@YAHV?$member_close_operation@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@012@0V?$reset_operation@V?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@@012@V?$clear_flags_operation@H@012@@Z ; boost::iostreams::detail::execute_all<boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::member_close_operation<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >,boost::iostreams::detail::reset_operation<boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > > >,boost::iostreams::detail::clear_flags_operation<int> >
	add	esp, 24					; 00000018H

; 208  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\linked_streambuf.hpp
xdata$x	SEGMENT
__unwindtable$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z$0
__ehfuncinfo$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
xdata$x	ENDS
;	COMDAT ?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z
_TEXT	SEGMENT
$T480564 = -20						; size = 8
__$EHRec$ = -12						; size = 12
$T480561 = 8						; size = 4
_this$ = 8						; size = 4
_pback_size$ = 12					; size = 4
?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open, COMDAT
; _t$ = edx
; _buffer_size$ = ecx

; 155  : {

	push	-1
	push	__ehhandler$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _pback_size$[esp+32]
	mov	esi, edx
	mov	ebx, DWORD PTR _this$[esp+32]

; 156  :     using namespace std;
; 157  : 
; 158  :     // Normalize buffer sizes.
; 159  :     buffer_size =
; 160  :         (buffer_size != -1) ?
; 161  :         buffer_size :
; 162  :         iostreams::optimal_buffer_size(t);

	cmp	ecx, -1
	jne	SHORT $LN9@open@6
	mov	ecx, 4096				; 00001000H
$LN9@open@6:

; 163  :     pback_size =
; 164  :         (pback_size != -1) ?
; 165  :         pback_size :
; 166  :         default_pback_buffer_size;

	cmp	eax, -1
	jne	SHORT $LN11@open@6
	mov	eax, 4
	mov	DWORD PTR _pback_size$[esp+32], eax
$LN11@open@6:

; 167  : 
; 168  :     // Construct input buffer.
; 169  :     if (can_read()) {
; 170  :         pback_size_ = (std::max)(2, pback_size); // STLPort needs 2.

	cmp	eax, 2
	mov	DWORD PTR $T480561[esp+32], 2
	lea	eax, DWORD PTR _pback_size$[esp+32]
	jg	SHORT $LN26@open@6
	lea	eax, DWORD PTR $T480561[esp+32]
$LN26@open@6:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+88], eax

; 171  :         std::streamsize size =
; 172  :             pback_size_ +
; 173  :             ( buffer_size ? buffer_size: 1 );

	test	ecx, ecx
	jne	SHORT $LN13@open@6
	mov	ecx, 1
$LN13@open@6:
	add	eax, ecx

; 174  :         in().resize(size);

	lea	ecx, DWORD PTR [ebx+80]
	push	ecx
	call	?resize@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAEXH@Z ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::resize

; 175  :         if (!shared_buffer())
; 176  :             init_get_area();

	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, ebx
	call	eax

; 177  :     }
; 178  : 
; 179  :     // Construct output buffer.
; 180  :     if (can_write() && !shared_buffer()) {
; 181  :         if (buffer_size != 0)
; 182  :             out().resize(buffer_size);
; 183  :         init_put_area();
; 184  :     }
; 185  : 
; 186  :     storage_.reset(wrapper(t));

	mov	edi, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR $T480564[esp+36], ecx
	mov	DWORD PTR $T480564[esp+40], edi
	test	edi, edi
	je	SHORT $LN52@open@6
	lea	edx, DWORD PTR [edi+4]
	mov	eax, 1
	lock	 xadd	 DWORD PTR [edx], eax
$LN52@open@6:
	lea	ecx, DWORD PTR $T480564[esp+36]
	push	ecx
	lea	esi, DWORD PTR [ebx+64]
	mov	DWORD PTR __$EHRec$[esp+48], 0
	call	?reset@?$optional@V?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@@detail@iostreams@boost@@QAEXABV?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@234@@Z ; boost::iostreams::detail::optional<boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> > >::reset
	mov	DWORD PTR __$EHRec$[esp+44], -1
	test	edi, edi
	je	SHORT $LN72@open@6
	lea	edx, DWORD PTR [edi+4]
	or	eax, -1
	lock	 xadd	 DWORD PTR [edx], eax
	jne	SHORT $LN72@open@6
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, edi
	call	eax
	lea	ecx, DWORD PTR [edi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN72@open@6
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, edi
	call	edx
$LN72@open@6:

; 187  :     flags_ |= f_open;

	or	DWORD PTR [ebx+92], 1

; 188  :     if (can_write() && buffer_size > 1)
; 189  :         flags_ |= f_output_buffered;
; 190  :     this->set_true_eof(false);

	and	DWORD PTR [ebx+60], -2			; fffffffeH

; 191  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z$0:
	lea	eax, DWORD PTR $T480564[ebp]
	jmp	??1?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAE@XZ
__ehhandler$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open
; Function compile flags: /Ogtpy
;	COMDAT ??0?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT
; _this$ = esi

; 148  :     : next_(0), pback_size_(0), flags_(f_auto_close) { }

	mov	ecx, esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	xor	eax, eax
	mov	DWORD PTR [esi+60], eax
	mov	DWORD PTR [esi], OFFSET ??_7?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@
	mov	BYTE PTR [esi+72], al
	mov	DWORD PTR [esi+76], eax
	mov	DWORD PTR [esi+80], eax
	mov	DWORD PTR [esi+84], eax
	mov	DWORD PTR [esi+88], eax
	mov	DWORD PTR [esi+92], 4
	mov	eax, esi
	ret	0
??0?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$0
__ehfuncinfo$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\stream_buffer.hpp
xdata$x	ENDS
;	COMDAT ?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
_TEXT	SEGMENT
$T480804 = -84						; size = 28
$T480803 = -56						; size = 40
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
_buffer_size$ = 12					; size = 4
_pback_size$ = 16					; size = 4
?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl, COMDAT
; _this$ = esi

; 101  :         {   // Used for forwarding.

	push	-1
	push	__ehhandler$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, eax

; 102  :             if (this->is_open())

	test	BYTE PTR [esi+92], 1
	je	$LN101@open_impl@4

; 103  :                 BOOST_IOSTREAMS_FAILURE("already open");

	push	12					; 0000000cH
	xor	ebx, ebx
	push	OFFSET ??_C@_0N@DLOMBLKD@already?5open?$AA@
	lea	ecx, DWORD PTR $T480804[esp+104]
	mov	DWORD PTR $T480804[esp+128], 15		; 0000000fH
	mov	DWORD PTR $T480804[esp+124], ebx
	mov	BYTE PTR $T480804[esp+108], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T480804[esp+96]
	push	eax
	lea	ecx, DWORD PTR $T480803[esp+100]
	mov	DWORD PTR __$EHRec$[esp+108], ebx
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	cmp	DWORD PTR $T480803[esp+132], 16		; 00000010H
	mov	DWORD PTR $T480803[esp+96], OFFSET ??_7runtime_error@std@@6B@
	jb	SHORT $LN67@open_impl@4
	mov	ecx, DWORD PTR $T480803[esp+112]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN67@open_impl@4:
	lea	ecx, DWORD PTR $T480803[esp+96]
	mov	DWORD PTR $T480803[esp+132], 15		; 0000000fH
	mov	DWORD PTR $T480803[esp+128], ebx
	mov	BYTE PTR $T480803[esp+112], bl
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	DWORD PTR __$EHRec$[esp+104], -1
	cmp	DWORD PTR $T480804[esp+120], 16		; 00000010H
	jb	SHORT $LN93@open_impl@4
	mov	edx, DWORD PTR $T480804[esp+100]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN93@open_impl@4:
	mov	DWORD PTR $T480804[esp+120], 15		; 0000000fH
	mov	DWORD PTR $T480804[esp+116], ebx
	mov	BYTE PTR $T480804[esp+100], bl
$LN101@open_impl@4:

; 104  :             base_type::open(t BOOST_IOSTREAMS_PUSH_ARGS());

	mov	eax, DWORD PTR _pback_size$[esp+92]
	mov	ecx, DWORD PTR _buffer_size$[esp+92]
	mov	edx, DWORD PTR _t$[esp+92]
	push	eax
	push	esi
	call	?open@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@34@HH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open

; 105  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	add	esp, 88					; 00000058H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$0:
	lea	ecx, DWORD PTR $T480804[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-80]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ$0
__ehfuncinfo$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT
	push	-1
	push	__ehhandler$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[esp+20]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	eax, DWORD PTR [edi+80]
	test	eax, eax
	je	SHORT $LN15@indirect_s@6
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@indirect_s@6:
	cmp	BYTE PTR [edi+72], 0
	je	SHORT $LN19@indirect_s@6
	mov	esi, DWORD PTR [edi+68]
	test	esi, esi
	je	SHORT $LN42@indirect_s@6
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN42@indirect_s@6
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN42@indirect_s@6
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN42@indirect_s@6:
	mov	BYTE PTR [edi+72], 0
$LN19@indirect_s@6:
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+32], -1
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAE@XZ
__ehhandler$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN7@scalar@77
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@77:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_base_w32.hpp
xdata$x	SEGMENT
__unwindtable$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z$1
__ehfuncinfo$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\stream_buffer.hpp
xdata$x	ENDS
;	COMDAT ??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z
_TEXT	SEGMENT
$T481461 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_t$ = 12						; size = 4
_buffer_size$ = 16					; size = 4
_pback_size$ = 20					; size = 4
??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT

; 94   :     BOOST_IOSTREAMS_FORWARD( stream_buffer, open_impl, T,

	push	-1
	push	__ehhandler$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+32]
	mov	ecx, esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	xor	ebx, ebx
	mov	DWORD PTR [esi+60], ebx
	mov	BYTE PTR [esi+72], bl
	mov	DWORD PTR [esi+76], ebx
	mov	DWORD PTR [esi+80], ebx
	mov	DWORD PTR [esi+84], ebx
	mov	DWORD PTR [esi+88], ebx
	mov	DWORD PTR [esi+92], 4
	mov	ecx, DWORD PTR _t$[esp+32]
	mov	DWORD PTR __$EHRec$[esp+44], ebx
	lea	eax, DWORD PTR $T481461[esp+36]
	mov	DWORD PTR [esi], OFFSET ??_7?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@
	call	??$wrap@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YA?AU?$basic_file_source@D@12@ABU312@PAX@Z ; boost::iostreams::detail::wrap<boost::iostreams::basic_file_source<char> >
	mov	ecx, DWORD PTR _pback_size$[esp+32]
	mov	edx, DWORD PTR _buffer_size$[esp+32]
	push	ecx
	push	edx
	push	eax
	mov	BYTE PTR __$EHRec$[esp+56], 1
	call	?open_impl@?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl
	mov	BYTE PTR __$EHRec$[esp+44], bl
	mov	edi, DWORD PTR $T481461[esp+40]
	cmp	edi, ebx
	je	SHORT $LN41@stream_buf@5
	lea	eax, DWORD PTR [edi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN41@stream_buf@5
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, edi
	call	eax
	lea	ecx, DWORD PTR [edi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN41@stream_buf@5
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, edi
	call	edx
$LN41@stream_buf@5:

; 95   :                              BOOST_IOSTREAMS_PUSH_PARAMS,
; 96   :                              BOOST_IOSTREAMS_PUSH_ARGS )

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	push	eax
	call	??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
	ret	0
__unwindfunclet$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z$1:
	lea	eax, DWORD PTR $T481461[ebp]
	jmp	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
__ehhandler$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\functional.hpp
xdata$x	SEGMENT
__unwindtable$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$0
__tryblocktable$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$3
__ehfuncinfo$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\stream_buffer.hpp
xdata$x	ENDS
;	COMDAT ??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT

; 88   :     { 

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi], OFFSET ??_7?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@

; 89   :         try { 

	mov	al, 1
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	BYTE PTR __$EHRec$[ebp+12], al

; 90   :             if (this->is_open() && this->auto_close()) 

	test	BYTE PTR [esi+92], al
	je	SHORT $LN9@stream_buf@6
	mov	ecx, DWORD PTR [esi+92]
	shr	ecx, 2
	test	cl, al
	je	SHORT $LN9@stream_buf@6

; 91   :                 this->close(); 

	mov	eax, esi
	call	?close@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close
	jmp	SHORT $LN9@stream_buf@6
__catch$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$0:

; 92   :         } catch (...) { } 

	mov	eax, $LN33@stream_buf@6
	ret	0
$LN33@stream_buf@6:
	mov	esi, DWORD PTR _this$[ebp]
$LN9@stream_buf@6:

; 93   :     }

	push	esi
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ$2:
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
	ret	0
__ehhandler$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+72]
	test	eax, eax
	je	SHORT $LN18@scalar@78
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN18@scalar@78:
	cmp	BYTE PTR [esi+65], 0
	je	SHORT $LN22@scalar@78
	mov	BYTE PTR [esi+65], 0
$LN22@scalar@78:
	mov	ecx, esi
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN30@scalar@78
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@scalar@78:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ??0?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT
; _this$ = esi

; 148  :     : next_(0), pback_size_(0), flags_(f_auto_close) { }

	mov	ecx, esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	xor	eax, eax
	mov	DWORD PTR [esi+60], eax
	mov	DWORD PTR [esi], OFFSET ??_7?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@6B@
	mov	BYTE PTR [esi+65], al
	mov	DWORD PTR [esi+68], eax
	mov	DWORD PTR [esi+72], eax
	mov	DWORD PTR [esi+76], eax
	mov	DWORD PTR [esi+80], eax
	mov	DWORD PTR [esi+84], 4
	mov	eax, esi
	ret	0
??0?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\linked_streambuf.hpp
xdata$x	SEGMENT
__unwindtable$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z$0
__ehfuncinfo$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\stream_buffer.hpp
xdata$x	ENDS
;	COMDAT ?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z
_TEXT	SEGMENT
$T482338 = -85						; size = 1
$T481771 = -84						; size = 28
$T481770 = -56						; size = 40
__$EHRec$ = -12						; size = 12
?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl, COMDAT
; _this$ = esi

; 101  :         {   // Used for forwarding.

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, eax

; 102  :             if (this->is_open())

	xor	ebx, ebx
	test	BYTE PTR [esi+84], 1
	je	$LN93@open_impl@5

; 103  :                 BOOST_IOSTREAMS_FAILURE("already open");

	push	12					; 0000000cH
	push	OFFSET ??_C@_0N@DLOMBLKD@already?5open?$AA@
	lea	ecx, DWORD PTR $T481771[esp+108]
	mov	DWORD PTR $T481771[esp+132], 15		; 0000000fH
	mov	DWORD PTR $T481771[esp+128], ebx
	mov	BYTE PTR $T481771[esp+112], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T481771[esp+100]
	push	eax
	lea	ecx, DWORD PTR $T481770[esp+104]
	mov	DWORD PTR __$EHRec$[esp+112], ebx
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	cmp	DWORD PTR $T481770[esp+136], 16		; 00000010H
	mov	DWORD PTR $T481770[esp+100], OFFSET ??_7runtime_error@std@@6B@
	jb	SHORT $LN67@open_impl@5
	mov	ecx, DWORD PTR $T481770[esp+116]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN67@open_impl@5:
	lea	ecx, DWORD PTR $T481770[esp+100]
	mov	DWORD PTR $T481770[esp+136], 15		; 0000000fH
	mov	DWORD PTR $T481770[esp+132], ebx
	mov	BYTE PTR $T481770[esp+116], bl
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	DWORD PTR __$EHRec$[esp+108], -1
	cmp	DWORD PTR $T481771[esp+124], 16		; 00000010H
	jb	SHORT $LN93@open_impl@5
	mov	edx, DWORD PTR $T481771[esp+104]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN93@open_impl@5:

; 104  :             base_type::open(t BOOST_IOSTREAMS_PUSH_ARGS());

	lea	eax, DWORD PTR [esi+72]
	push	eax
	mov	eax, 4100				; 00001004H
	mov	DWORD PTR [esi+80], 4
	call	?resize@?$basic_buffer@DV?$allocator@D@std@@@detail@iostreams@boost@@QAEXH@Z ; boost::iostreams::detail::basic_buffer<char,std::allocator<char> >::resize
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, esi
	call	eax
	cmp	BYTE PTR [esi+65], bl
	je	SHORT $LN148@open_impl@5
	mov	BYTE PTR [esi+65], bl
$LN148@open_impl@5:
	mov	cl, BYTE PTR $T482338[esp+100]
	mov	BYTE PTR [esi+64], cl
	mov	BYTE PTR [esi+65], 1
	or	DWORD PTR [esi+84], 1
	and	DWORD PTR [esi+60], -2			; fffffffeH

; 105  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z$0:
	lea	ecx, DWORD PTR $T481771[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-84]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	call	??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@79
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@79:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?open@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z
_TEXT	SEGMENT
?open@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open, COMDAT
; _this$ = esi

; 96   :                              BOOST_IOSTREAMS_PUSH_ARGS )

	jmp	?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl
?open@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT
; _this$ = esi

; 86   :     stream_buffer() { }

	mov	ecx, esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	xor	eax, eax
	mov	DWORD PTR [esi+60], eax
	mov	BYTE PTR [esi+65], al
	mov	DWORD PTR [esi+68], eax
	mov	DWORD PTR [esi+72], eax
	mov	DWORD PTR [esi+76], eax
	mov	DWORD PTR [esi+80], eax
	mov	DWORD PTR [esi+84], 4
	mov	DWORD PTR [esi], OFFSET ??_7?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@
	mov	eax, esi
	ret	0
??0?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z PROC ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >, COMDAT
; _this$ = ecx

; 271  :                 {

	push	esi
	push	edi
	mov	edi, DWORD PTR _x$[esp+4]
	push	edi
	mov	esi, ecx
	call	??0system_error@system@boost@@QAE@ABV012@@Z
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	eax, DWORD PTR [edi+76]
	mov	DWORD PTR [esi+76], eax
	mov	eax, DWORD PTR [edi+80]
	xor	ecx, ecx
	mov	DWORD PTR [esi+80], eax
	cmp	eax, ecx
	je	SHORT $LN14@error_info@6
	add	eax, 4
	mov	edx, 1
	lock	 xadd	 DWORD PTR [eax], edx
$LN14@error_info@6:
	mov	DWORD PTR [esi+84], OFFSET ??_7exception@boost@@6B@
	mov	DWORD PTR [esi+88], ecx
	mov	DWORD PTR [esi+92], ecx
	mov	DWORD PTR [esi+96], ecx
	mov	DWORD PTR [esi+100], -1
	pop	edi
	mov	DWORD PTR [esi], OFFSET ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@

; 272  :                 }

	mov	eax, esi
	pop	esi
	ret	4
??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ENDP ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$4
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	02H
	DD	00H
__catchsym$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$10 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$1
__catchsym$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$11 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$0
__tryblocktable$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ DD 03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$10
	DD	01H
	DD	01H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$11
__ehfuncinfo$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
	DD	02H
	DD	FLAT:__tryblocktable$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
xdata$x	ENDS
;	COMDAT ?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
$T482498 = -140						; size = 8
$T482497 = -132						; size = 8
$T482496 = -124						; size = 4
_this$GSCopy$ = -120					; size = 4
$T482507 = -116						; size = 4
$T482503 = -116						; size = 4
$T482499 = -116						; size = 4
_null$175708 = -112					; size = 88
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::close, COMDAT
; _this$ = ecx

; 310  :             {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx

; 311  :                 if ((flags_ & f_open) != 0) {

	mov	eax, DWORD PTR [edi+44]
	mov	DWORD PTR _this$GSCopy$[ebp], edi
	test	al, 2
	je	$LN4@close@17

; 312  :                     flags_ &= ~f_open;

	and	eax, -3					; fffffffdH

; 313  :                     stream_buffer< basic_null_device<Ch, Mode> > null;

	lea	ecx, DWORD PTR _null$175708[ebp]
	mov	DWORD PTR [edi+44], eax
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	xor	ebx, ebx
	mov	DWORD PTR _null$175708[ebp+60], ebx
	mov	BYTE PTR _null$175708[ebp+65], bl
	mov	DWORD PTR _null$175708[ebp+68], ebx
	mov	DWORD PTR _null$175708[ebp+72], ebx
	mov	DWORD PTR _null$175708[ebp+76], ebx
	mov	DWORD PTR _null$175708[ebp+80], ebx
	mov	DWORD PTR _null$175708[ebp+84], 4
	mov	DWORD PTR _null$175708[ebp], OFFSET ??_7?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@6B@
	mov	DWORD PTR __$EHRec$[ebp+12], ebx

; 314  :                     if ((flags_ & f_complete) == 0) {

	test	BYTE PTR [edi+44], 1
	jne	SHORT $LN39@close@17

; 315  :                         null.open(basic_null_device<Ch, Mode>());

	lea	esi, DWORD PTR _null$175708[ebp]
	call	?open_impl@?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@AAEXABV?$basic_null_device@DUinput@iostreams@boost@@@23@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::open_impl

; 316  :                         set_next(links_.back(), &null);

	mov	eax, edi
	call	?back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::back
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+56]
	mov	edx, esi
	push	edx
	call	eax
$LN39@close@17:

; 317  :                     }
; 318  :                     links_.front()->BOOST_IOSTREAMS_PUBSYNC();

	mov	eax, DWORD PTR [edi+20]
	mov	esi, DWORD PTR [eax]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ebx
	jne	$LN202@close@17
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN74@close@17:
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN63@close@17
	call	__invalid_parameter_noinfo
$LN63@close@17:
	mov	ecx, DWORD PTR [esi+8]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+48]
	call	eax

; 319  :                     try {

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 320  :                         boost::iostreams::detail::execute_foreach(
; 321  :                             links_.rbegin(), links_.rend(), 
; 322  :                             closer(BOOST_IOS::in)
; 323  :                         );

	lea	eax, DWORD PTR $T482497[ebp]
	mov	ecx, edi
	mov	DWORD PTR $T482496[ebp], 1
	call	?rend@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rend
	mov	esi, eax
	lea	eax, DWORD PTR $T482498[ebp]
	mov	ecx, edi
	call	?rbegin@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@2@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::rbegin
	mov	ecx, DWORD PTR $T482496[ebp]
	mov	edx, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, DWORD PTR [esi]
	push	edx
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T482499[ebp]
	push	ecx
	call	??$execute_foreach@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$reverse_iterator@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::reverse_iterator<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1> >,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
	add	esp, 24					; 00000018H
	mov	DWORD PTR __$EHRec$[ebp+12], ebx

; 332  :                     }
; 333  :                     boost::iostreams::detail::execute_foreach(
; 334  :                         links_.begin(), links_.end(), 
; 335  :                         closer(BOOST_IOS::out)
; 336  :                     );

	mov	eax, DWORD PTR [edi+20]
	mov	edi, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	mov	ecx, 2
	push	ecx
	push	eax
	push	edi
	push	edx
	lea	edx, DWORD PTR $T482507[ebp]
	push	edi
	push	edx
	call	??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
	add	esp, 24					; 00000018H

; 337  :                 }

	lea	eax, DWORD PTR _null$175708[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
$LN4@close@17:

; 338  :             }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN202@close@17:

; 317  :                     }
; 318  :                     links_.front()->BOOST_IOSTREAMS_PUBSYNC();

	mov	eax, DWORD PTR [eax]
	jmp	$LN74@close@17
__catch$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$0:

; 324  :                     } catch (...) {
; 325  :                         try {
; 326  :                             boost::iostreams::detail::execute_foreach(
; 327  :                                 links_.begin(), links_.end(), 
; 328  :                                 closer(BOOST_IOS::out)
; 329  :                             );

	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	eax, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax]
	mov	edx, 2
	push	edx
	push	eax
	push	ecx
	push	esi
	push	ecx
	lea	ecx, DWORD PTR $T482503[ebp]
	push	ecx
	call	??$execute_foreach@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@Ucloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@iostreams@boost@@YA?AUcloser@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@012@V?$_Iterator@$00@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@0U34012@@Z ; boost::iostreams::detail::execute_foreach<std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Iterator<1>,boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::closer>
	add	esp, 24					; 00000018H
	mov	DWORD PTR __$EHRec$[ebp+12], 2
$LN13@close@17:

; 331  :                         throw;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN205@close@17:
__catch$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$1:

; 330  :                         } catch (...) { }

	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, $LN13@close@17
	ret	0
$LN204@close@17:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ$4:
	lea	eax, DWORD PTR _null$175708[ebp]
	push	eax
	call	??1?$stream_buffer@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
	ret	0
__ehhandler$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::close
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ$0
__tryblocktable$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ$3
__ehfuncinfo$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
xdata$x	ENDS
;	COMDAT ??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::~chain_impl, COMDAT

; 308  :         ~chain_impl() { try { close(); reset(); } catch (...) { } }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::close
	push	esi
	call	?reset@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::reset
	jmp	SHORT $LN8@chain_impl@2
__catch$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ$0:
	mov	eax, $LN24@chain_impl@2
	ret	0
$LN24@chain_impl@2:
	mov	esi, DWORD PTR _this$[ebp]
$LN8@chain_impl@2:
	call	?_Tidy@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXXZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Tidy
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ$2:
	mov	eax, DWORD PTR _this$[ebp]
	jmp	??1?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::~list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
__ehhandler$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::~chain_impl
; Function compile flags: /Ogtpy
;	COMDAT ??_Gchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAXI@Z
_TEXT	SEGMENT
??_Gchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAXI@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::`scalar deleting destructor', COMDAT
; _this$ = esi
	push	ecx
	push	esi
	call	??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::~chain_impl
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	pop	ecx
	ret	0
??_Gchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEPAXI@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\checked_delete.hpp
_TEXT	ENDS
;	COMDAT ??$checked_delete@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@YAXPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@0@@Z
_TEXT	SEGMENT
??$checked_delete@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@YAXPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@0@@Z PROC ; boost::checked_delete<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>, COMDAT
; _x$ = esi

; 30   : {

	push	ecx

; 31   :     // intentionally complex - simplification causes regressions
; 32   :     typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
; 33   :     (void) sizeof(type_must_be_complete);
; 34   :     delete x;

	test	esi, esi
	je	SHORT $LN3@checked_de@3
	push	esi
	call	??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::~chain_impl
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@checked_de@3:
	pop	ecx

; 35   : }

	ret	0
??$checked_delete@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@YAXPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@0@@Z ENDP ; boost::checked_delete<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?pop@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
$T483696 = -8						; size = 8
_buf$ = 8						; size = 4
_this$ = 8						; size = 4
?pop@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pop, COMDAT

; 566  : {

	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+8]

; 567  :     assert(!empty());
; 568  :     if (auto_close())

	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [ecx+44]
	push	ebp
	shr	eax, 2
	push	esi
	push	edi
	test	al, 1
	je	SHORT $LN3@pop@6

; 569  :         pimpl_->close();

	call	?close@chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::close
$LN3@pop@6:

; 570  :     streambuf_type* buf = 0;
; 571  :     std::swap(buf, list().back());

	mov	eax, DWORD PTR [ebx]
	mov	edi, DWORD PTR [eax]
	mov	ebp, DWORD PTR [eax+20]
	xor	esi, esi
	test	edi, edi
	jne	SHORT $LN40@pop@6
	call	__invalid_parameter_noinfo
$LN40@pop@6:
	mov	ebp, DWORD PTR [ebp+4]
	test	edi, edi
	je	SHORT $LN50@pop@6
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN51@pop@6
$LN50@pop@6:
	xor	eax, eax
$LN51@pop@6:
	cmp	ebp, DWORD PTR [eax+20]
	jne	SHORT $LN38@pop@6
	call	__invalid_parameter_noinfo
$LN38@pop@6:
	test	edi, edi
	jne	SHORT $LN129@pop@6
	call	__invalid_parameter_noinfo
$LN67@pop@6:
	cmp	ebp, DWORD PTR [edi+20]
	jne	SHORT $LN56@pop@6
	call	__invalid_parameter_noinfo
$LN56@pop@6:
	lea	eax, DWORD PTR [ebp+8]
	lea	ecx, DWORD PTR _buf$[esp+20]
	cmp	ecx, eax
	je	SHORT $LN72@pop@6
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], 0
$LN72@pop@6:

; 572  :     buf->set_auto_close(false);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+68]
	push	0
	mov	ecx, esi
	call	eax

; 573  :     buf->set_next(0);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+56]
	push	0
	mov	ecx, esi
	call	eax

; 574  :     delete buf;

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax

; 575  :     list().pop_back();

	mov	edi, DWORD PTR [ebx]
	mov	esi, DWORD PTR [edi]
	mov	ebp, DWORD PTR [edi+20]
	test	esi, esi
	jne	SHORT $LN101@pop@6
	call	__invalid_parameter_noinfo
$LN101@pop@6:
	mov	ebp, DWORD PTR [ebp+4]
	test	esi, esi
	je	SHORT $LN111@pop@6
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN112@pop@6
$LN129@pop@6:

; 570  :     streambuf_type* buf = 0;
; 571  :     std::swap(buf, list().back());

	mov	edi, DWORD PTR [edi]
	jmp	SHORT $LN67@pop@6

; 575  :     list().pop_back();

$LN111@pop@6:
	xor	eax, eax
$LN112@pop@6:
	cmp	ebp, DWORD PTR [eax+20]
	jne	SHORT $LN99@pop@6
	call	__invalid_parameter_noinfo
$LN99@pop@6:
	push	ebp
	push	esi
	lea	ecx, DWORD PTR $T483696[esp+32]
	push	ecx
	call	?erase@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::erase

; 576  :     pimpl_->flags_ &= ~f_complete;

	mov	eax, DWORD PTR [ebx]
	and	DWORD PTR [eax+44], -2			; fffffffeH

; 577  :     if (auto_close() || list().empty())

	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+44]
	shr	edx, 2
	test	dl, 1
	jne	SHORT $LN1@pop@6
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN2@pop@6
$LN1@pop@6:

; 578  :         pimpl_->flags_ &= ~f_open;

	and	DWORD PTR [eax+44], -3			; fffffffdH
$LN2@pop@6:

; 579  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	4
?pop@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pop
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0
__ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
xdata$x	ENDS
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
$T484398 = -68						; size = 4
_this$GSCopy$ = -64					; size = 4
__Dest$171216 = -60					; size = 4
$T483771 = -56						; size = 8
__Str$171220 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT
; _this$ = ecx

; 490  : 		{	// put shift to initial conversion state, as needed

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+68], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, eax

; 491  : 		if (_Pcvt == 0 || !_Wrotesome)

	cmp	DWORD PTR [ecx+60], 0

; 517  : 						_Str.append(_STRING_INC, '\0');	// try with more space

	mov	DWORD PTR _this$GSCopy$[esp+84], ecx
	je	$LN14@Endwrite

; 491  : 		if (_Pcvt == 0 || !_Wrotesome)

	cmp	BYTE PTR [ecx+65], 0
	je	$LN14@Endwrite

; 493  : 		else
; 494  : 			{	// may have to put
; 495  : 			const int _STRING_INC = 8;
; 496  : 			char *_Dest;
; 497  : 			if (_Traits::eq_int_type(_Traits::eof(), overflow()))

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	push	-1
	call	edx
	cmp	eax, -1

; 498  : 				return (false);

	je	$LN275@Endwrite

; 499  : 
; 500  : 			string _Str(_STRING_INC, '\0');

	mov	eax, 15					; 0000000fH
	mov	BYTE PTR __Str$171220[esp+88], 0
	pxor	xmm0, xmm0
	mov	DWORD PTR __Str$171220[esp+108], eax
	movq	QWORD PTR __Str$171220[esp+88], xmm0
	cmp	eax, 16					; 00000010H
	mov	eax, DWORD PTR __Str$171220[esp+88]
	mov	DWORD PTR __Str$171220[esp+104], 8
	jae	SHORT $LN132@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN132@Endwrite:
	mov	BYTE PTR [eax+8], 0
	mov	DWORD PTR __$EHRec$[esp+92], 0
$LN274@Endwrite:
	mov	ecx, DWORD PTR __Str$171220[esp+88]
	mov	edx, DWORD PTR __Str$171220[esp+108]
$LN11@Endwrite:

; 501  : 			for (; ; )
; 502  : 				switch (_Pcvt->unshift(_State,
; 503  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))

	cmp	edx, 16					; 00000010H
	jb	$LN139@Endwrite
	mov	ebx, ecx
	mov	DWORD PTR $T484398[esp+84], ebx
	test	ecx, ecx
	je	SHORT $LN143@Endwrite
$LN266@Endwrite:
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN154@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN154@Endwrite:
	cmp	eax, ebx
	ja	SHORT $LN143@Endwrite
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN158@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN158@Endwrite:
	mov	esi, DWORD PTR __Str$171220[esp+104]
	add	eax, esi
	cmp	ebx, eax
	jbe	SHORT $LN144@Endwrite
$LN143@Endwrite:
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$171220[esp+108]
	mov	ecx, DWORD PTR __Str$171220[esp+88]
$LN144@Endwrite:
	lea	eax, DWORD PTR __Str$171220[esp+84]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN161@Endwrite
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN171@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN171@Endwrite:
	mov	esi, DWORD PTR __Str$171220[esp+104]
	add	eax, esi
	cmp	ebx, eax
	jb	SHORT $LN161@Endwrite
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$171220[esp+108]
	mov	ecx, DWORD PTR __Str$171220[esp+88]
$LN161@Endwrite:
	mov	edi, DWORD PTR __Str$171220[esp+104]
	cmp	edx, 16					; 00000010H
	jb	$LN178@Endwrite
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN182@Endwrite
$LN267@Endwrite:
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN193@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN193@Endwrite:
	cmp	eax, esi
	ja	SHORT $LN182@Endwrite
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN197@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN197@Endwrite:
	mov	ebx, DWORD PTR __Str$171220[esp+104]
	add	eax, ebx
	mov	ebx, DWORD PTR $T484398[esp+84]
	cmp	esi, eax
	jbe	SHORT $LN183@Endwrite
$LN182@Endwrite:
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$171220[esp+108]
	mov	ecx, DWORD PTR __Str$171220[esp+88]
$LN183@Endwrite:
	lea	eax, DWORD PTR __Str$171220[esp+84]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN200@Endwrite
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN210@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN210@Endwrite:
	mov	ecx, DWORD PTR __Str$171220[esp+104]
	add	eax, ecx
	cmp	esi, eax
	jb	SHORT $LN200@Endwrite
	call	__invalid_parameter_noinfo
$LN200@Endwrite:
	mov	edx, DWORD PTR _this$GSCopy$[esp+84]
	mov	ecx, DWORD PTR [edx+60]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+24]
	lea	eax, DWORD PTR __Dest$171216[esp+84]
	push	eax
	add	ebx, edi
	push	ebx
	mov	ebx, DWORD PTR _this$GSCopy$[esp+92]
	push	esi
	lea	eax, DWORD PTR [ebx+68]
	push	eax
	call	edx
	sub	eax, 0
	je	SHORT $LN7@Endwrite
	sub	eax, 1
	je	SHORT $LN6@Endwrite
	sub	eax, 2

; 523  : 
; 524  : 				default:
; 525  : 					return (false);	// conversion failed

	lea	ecx, DWORD PTR __Str$171220[esp+84]
	jne	$LN276@Endwrite

; 518  : 					break;
; 519  : 					}
; 520  : 
; 521  : 				case codecvt_base::noconv:
; 522  : 					return (true);	// nothing to do

	jmp	$LN277@Endwrite

; 501  : 			for (; ; )
; 502  : 				switch (_Pcvt->unshift(_State,
; 503  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))

$LN139@Endwrite:
	lea	ebx, DWORD PTR __Str$171220[esp+88]
	mov	DWORD PTR $T484398[esp+84], ebx
	jmp	$LN266@Endwrite
$LN178@Endwrite:
	lea	esi, DWORD PTR __Str$171220[esp+88]
	jmp	$LN267@Endwrite
$LN7@Endwrite:

; 504  : 				{	// test result of homing conversion
; 505  : 				case codecvt_base::ok:
; 506  : 					_Wrotesome = false;	// homed successfully

	mov	BYTE PTR [ebx+65], 0
$LN6@Endwrite:

; 507  : 
; 508  : 				case codecvt_base::partial:	// fall through
; 509  : 					{	// put any generated bytes
; 510  : 					size_t _Count = _Dest - &*_Str.begin();

	mov	edx, DWORD PTR __Str$171220[esp+108]
	mov	ecx, DWORD PTR __Str$171220[esp+88]
	cmp	edx, 16					; 00000010H
	jb	$LN217@Endwrite
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN221@Endwrite
$LN268@Endwrite:
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN232@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN232@Endwrite:
	cmp	eax, esi
	ja	SHORT $LN221@Endwrite
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN236@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN236@Endwrite:
	mov	edi, DWORD PTR __Str$171220[esp+104]
	add	eax, edi
	cmp	esi, eax
	jbe	SHORT $LN222@Endwrite
$LN221@Endwrite:
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$171220[esp+108]
	mov	ecx, DWORD PTR __Str$171220[esp+88]
$LN222@Endwrite:
	lea	eax, DWORD PTR __Str$171220[esp+84]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN239@Endwrite
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN249@Endwrite
	lea	eax, DWORD PTR __Str$171220[esp+88]
$LN249@Endwrite:
	mov	edi, DWORD PTR __Str$171220[esp+104]
	add	eax, edi
	cmp	esi, eax
	jb	SHORT $LN239@Endwrite
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$171220[esp+108]
	mov	ecx, DWORD PTR __Str$171220[esp+88]
$LN239@Endwrite:
	mov	edi, DWORD PTR __Dest$171216[esp+84]
	sub	edi, esi

; 511  : 					if (0 < _Count && _Count !=
; 512  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))

	je	SHORT $LN5@Endwrite
	lea	ecx, DWORD PTR $T483771[esp+84]
	push	ecx
	lea	ecx, DWORD PTR __Str$171220[esp+88]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	esi, eax
	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN252@Endwrite
	test	eax, eax
	jne	SHORT $LN253@Endwrite
	call	__invalid_parameter_noinfo
$LN253@Endwrite:
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN261@Endwrite
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN262@Endwrite

; 507  : 
; 508  : 				case codecvt_base::partial:	// fall through
; 509  : 					{	// put any generated bytes
; 510  : 					size_t _Count = _Dest - &*_Str.begin();

$LN217@Endwrite:
	lea	esi, DWORD PTR __Str$171220[esp+88]
	jmp	$LN268@Endwrite

; 511  : 					if (0 < _Count && _Count !=
; 512  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))

$LN261@Endwrite:
	lea	ecx, DWORD PTR [eax+4]
$LN262@Endwrite:
	mov	edx, DWORD PTR [eax+20]
	add	edx, ecx
	cmp	DWORD PTR [esi+4], edx
	jb	SHORT $LN252@Endwrite
	call	__invalid_parameter_noinfo
$LN252@Endwrite:
	mov	eax, DWORD PTR [ebx+76]
	mov	esi, DWORD PTR [esi+4]
	push	eax
	push	edi
	push	1
	push	esi
	call	_fwrite
	add	esp, 16					; 00000010H
	cmp	edi, eax
	jne	SHORT $LN264@Endwrite
	mov	edx, DWORD PTR __Str$171220[esp+108]
	mov	ecx, DWORD PTR __Str$171220[esp+88]
$LN5@Endwrite:

; 514  : 					if (!_Wrotesome)

	cmp	BYTE PTR [ebx+65], 0
	je	SHORT $LN265@Endwrite

; 516  : 					if (_Count == 0)

	test	edi, edi
	jne	$LN11@Endwrite

; 517  : 						_Str.append(_STRING_INC, '\0');	// try with more space

	push	edi
	push	8
	lea	ecx, DWORD PTR __Str$171220[esp+92]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 526  : 				}

	jmp	$LN274@Endwrite
$LN264@Endwrite:

; 513  : 						return (false);	// write failed

	lea	ecx, DWORD PTR __Str$171220[esp+84]
$LN276@Endwrite:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN275@Endwrite:
	xor	al, al
	jmp	SHORT $LN13@Endwrite
$LN265@Endwrite:

; 515  : 						return (true);

	lea	ecx, DWORD PTR __Str$171220[esp+84]
$LN277@Endwrite:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN14@Endwrite:

; 492  : 			return (true);

	mov	al, 1
$LN13@Endwrite:

; 527  : 			}
; 528  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+68]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0:
	lea	ecx, DWORD PTR __Str$171220[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-68]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
; Function compile flags: /Ogtpy
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx

; 205  : 		{	// close the C stream

	push	ebx
	push	esi
	mov	esi, ecx

; 206  : 		_Myt *_Ans = this;
; 207  : 		if (_Myfile == 0)

	xor	ebx, ebx
	push	edi
	mov	edi, esi
	cmp	DWORD PTR [esi+76], ebx

; 208  : 			_Ans = 0;
; 209  : 		else

	je	SHORT $LN18@close@18

; 210  : 			{	// put any homing sequence and close file
; 211  : 			if (!_Endwrite())

	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al

; 212  : 				_Ans = 0;
; 213  : 			if (fclose(_Myfile) != 0)

	mov	eax, DWORD PTR [esi+76]
	push	eax
	cmove	edi, ebx
	call	_fclose
	add	esp, 4
	test	eax, eax
	je	SHORT $LN1@close@18
$LN18@close@18:

; 214  : 				_Ans = 0;

	xor	edi, edi
$LN1@close@18:

; 215  : 			}
; 216  : 		_Init(0, _Closefl);

	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], ecx
	mov	BYTE PTR [esi+72], bl
	mov	BYTE PTR [esi+65], bl
	lea	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], edx
	lea	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], ecx
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], edx
	lea	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], ecx
	mov	DWORD PTR [eax], ebx
	mov	edx, DWORD PTR [esi+36]
	mov	DWORD PTR [edx], ebx
	mov	eax, DWORD PTR [esi+52]
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], ebx
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], ebx
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [esi+76], ebx
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA

; 217  : 		return (_Ans);

	mov	eax, edi

; 218  : 		}

	pop	edi
	mov	DWORD PTR [esi+60], ebx
	mov	DWORD PTR [esi+68], ecx
	pop	esi
	pop	ebx
	ret	0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_impl.hpp
_TEXT	ENDS
;	COMDAT ?dispose@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEXXZ
_TEXT	SEGMENT
?dispose@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEXXZ PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::dispose, COMDAT
; _this$ = ecx

; 74   :     {

	push	esi

; 75   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 76   :         boost::sp_scalar_destructor_hook( px_, sizeof(X), this );
; 77   : #endif
; 78   :         boost::checked_delete( px_ );

	mov	esi, DWORD PTR [ecx+12]
	test	esi, esi
	je	SHORT $LN5@dispose@3
	push	esi
	call	??1chain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl::~chain_impl
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@dispose@3:
	pop	esi

; 79   :     }

	ret	0
?dispose@?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@UAEXXZ ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::dispose
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
__Fileposition$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx

; 414  : 		{	// change position to _Pos

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 415  : 		fpos_t _Fileposition = _POS_TYPE_TO_FPOS_T(_Pos);

	mov	eax, DWORD PTR __Pos$[ebp+8]
	push	esi
	mov	esi, ecx

; 416  : 		off_type _Off = (off_type)_Pos - (off_type)_FPOSOFF(_Fileposition);
; 417  : 
; 418  : 		if (_Myfile == 0 || !_Endwrite()
; 419  : 			|| fsetpos(_Myfile, &_Fileposition) != 0
; 420  : 			|| _Off != 0 && fseek(_Myfile, (long)_Off, SEEK_CUR) != 0
; 421  : 			|| fgetpos(_Myfile, &_Fileposition) != 0)

	cmp	DWORD PTR [esi+76], 0
	mov	ecx, DWORD PTR __Pos$[ebp+12]
	push	edi
	mov	edi, DWORD PTR __Pos$[ebp]
	mov	DWORD PTR __Fileposition$[esp+16], eax
	mov	DWORD PTR __Fileposition$[esp+20], ecx
	je	$LN3@seekpos@4
	mov	ecx, esi
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	$LN3@seekpos@4
	mov	eax, DWORD PTR [esi+76]
	lea	edx, DWORD PTR __Fileposition$[esp+16]
	push	edx
	push	eax
	call	_fsetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@seekpos@4
	test	edi, edi
	je	SHORT $LN2@seekpos@4
	mov	ecx, DWORD PTR [esi+76]
	push	1
	push	edi
	push	ecx
	call	_fseek
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@seekpos@4
$LN2@seekpos@4:
	mov	eax, DWORD PTR [esi+76]
	lea	edx, DWORD PTR __Fileposition$[esp+16]
	push	edx
	push	eax
	call	_fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@seekpos@4

; 423  : 
; 424  : 		_State = _POS_TYPE_TO_STATE(_Pos);

	mov	ecx, DWORD PTR __Pos$[ebp+16]

; 425  : 
; 426  : 		if (_Mysb::gptr() == &_Mychar)

	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [esi+68], ecx
	lea	ecx, DWORD PTR [esi+64]
	cmp	DWORD PTR [edx], ecx
	jne	SHORT $LN17@seekpos@4

; 427  : 			_Mysb::setg(&_Mychar, &_Mychar + 1,
; 428  : 				&_Mychar + 1);	// discard any putback

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [esi+65]
	mov	edx, esi
	sub	edx, eax
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [esi+48]
	add	edx, 65					; 00000041H
	mov	DWORD PTR [eax], edx
$LN17@seekpos@4:

; 429  : 		return (_POS_TYPE_FROM_STATE(pos_type, _State,

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[esp+16]
	mov	edx, DWORD PTR __Fileposition$[esp+20]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi+68]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx

; 430  : 			_Fileposition));	// return new position
; 431  : 		}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN3@seekpos@4:

; 422  : 			return (pos_type(_BADOFF));	// report failure

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF

; 430  : 			_Fileposition));	// return new position
; 431  : 		}

	pop	edi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	DWORD PTR [eax+16], 0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT
__Fileposition$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
__Way$ = 16						; size = 4
___formal$ = 20						; size = 4
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx

; 390  : 		{	// change position by _Off

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 391  : 		fpos_t _Fileposition;
; 392  : 
; 393  : 		if (_Mysb::gptr() == &_Mychar	// something putback
; 394  : 			&& _Way == ios_base::cur	// a relative seek
; 395  : 			&& _Pcvt == 0)	// not converting

	mov	eax, DWORD PTR [esi+32]
	push	edi
	lea	edi, DWORD PTR [esi+64]
	cmp	DWORD PTR [eax], edi
	jne	SHORT $LN19@seekoff@2
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN19@seekoff@2
	cmp	DWORD PTR [esi+60], 0
	jne	SHORT $LN19@seekoff@2

; 396  : 			_Off -= (off_type)sizeof (_Elem);	// back up over _Elem bytes

	mov	ebx, DWORD PTR __Off$[ebp]
	dec	ebx
	jmp	SHORT $LN6@seekoff@2
$LN19@seekoff@2:
	mov	ebx, DWORD PTR __Off$[ebp]
$LN6@seekoff@2:

; 397  : 
; 398  : 		if (_Myfile == 0 || !_Endwrite()
; 399  : 			|| (_Off != 0 || _Way != ios_base::cur)
; 400  : 				&& fseek(_Myfile, (long)_Off, _Way) != 0
; 401  : 			|| fgetpos(_Myfile, &_Fileposition) != 0)

	cmp	DWORD PTR [esi+76], 0
	je	$LN4@seekoff@2
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	SHORT $LN4@seekoff@2
	test	ebx, ebx
	jne	SHORT $LN2@seekoff@2
	cmp	DWORD PTR __Way$[ebp], 1
	je	SHORT $LN3@seekoff@2
$LN2@seekoff@2:
	mov	ecx, DWORD PTR __Way$[ebp]
	mov	edx, DWORD PTR [esi+76]
	push	ecx
	push	ebx
	push	edx
	call	_fseek
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@seekoff@2
$LN3@seekoff@2:
	mov	ecx, DWORD PTR [esi+76]
	lea	eax, DWORD PTR __Fileposition$[esp+24]
	push	eax
	push	ecx
	call	_fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@seekoff@2

; 403  : 
; 404  : 		if (_Mysb::gptr() == &_Mychar)

	mov	edx, DWORD PTR [esi+32]
	cmp	DWORD PTR [edx], edi
	jne	SHORT $LN15@seekoff@2

; 405  : 			_Mysb::setg(&_Mychar, &_Mychar + 1,
; 406  : 				&_Mychar + 1);	// discard any putback

	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], edi
	mov	edx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [esi+65]
	mov	ecx, esi
	mov	DWORD PTR [edx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	ecx, eax
	add	ecx, 65					; 00000041H
	mov	DWORD PTR [edx], ecx
$LN15@seekoff@2:

; 407  : 		return (_POS_TYPE_FROM_STATE(pos_type, _State,

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[esp+24]
	mov	edx, DWORD PTR __Fileposition$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi+68]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx

; 408  : 			_Fileposition));	// return new position
; 409  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN4@seekoff@2:

; 402  : 			return (pos_type(_BADOFF));	// report failure

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF

; 408  : 			_Fileposition));	// return new position
; 409  : 		}

	pop	edi
	xor	ecx, ecx
	pop	esi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0
__ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
xdata$x	ENDS
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
__Ch$170933 = -81					; size = 1
$T485151 = -80						; size = 4
__Src$170935 = -76					; size = 4
_this$GSCopy$ = -72					; size = 4
__Dest$170934 = -68					; size = 4
$T484912 = -64						; size = 8
$T484909 = -56						; size = 8
__Str$170929 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx

; 325  : 		{	// get an element from stream, point past it

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, eax

; 326  : 		if (_Mysb::gptr() != 0
; 327  : 			&& _Mysb::gptr() < _Mysb::egptr())

	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
	xor	edx, edx

; 353  : 				switch (_Pcvt->in(_State,
; 354  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Src,
; 355  : 					&_Ch, &_Ch + 1, _Dest))

	mov	DWORD PTR _this$GSCopy$[esp+100], ecx
	cmp	eax, edx
	je	SHORT $LN19@uflow@2
	mov	eax, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [eax]
	mov	esi, DWORD PTR [esi]
	add	esi, eax
	cmp	eax, esi
	jae	SHORT $LN19@uflow@2
	mov	eax, DWORD PTR [ecx+48]
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	movzx	eax, BYTE PTR [ecx]
	jmp	$LN14@uflow@2
$LN19@uflow@2:

; 328  : 			return (_Traits::to_int_type(
; 329  : 				*_Mysb::_Gninc()));	// return buffered
; 330  : 		else if (_Myfile == 0)

	mov	eax, DWORD PTR [ecx+76]
	cmp	eax, edx

; 331  : 			return (_Traits::eof());	// no open C stream, fail

	je	$LN218@uflow@2

; 332  : 		else if (_Pcvt == 0)

	cmp	DWORD PTR [ecx+60], edx
	jne	SHORT $LN15@uflow@2

; 333  : 			{	// no codecvt facet, just get it
; 334  : 			_Elem _Ch;
; 335  : 			return (_Fgetc(_Ch, _Myfile) ? _Traits::to_int_type(_Ch)
; 336  : 				: _Traits::eof());

	push	eax
	call	_fgetc
	add	esp, 4
	cmp	eax, -1
	je	$LN218@uflow@2
	movzx	eax, al
	jmp	$LN14@uflow@2
$LN15@uflow@2:

; 337  : 			}
; 338  : 		else
; 339  : 			{	// build string until codecvt succeeds
; 340  : 			string _Str;

	mov	DWORD PTR __Str$170929[esp+124], 15	; 0000000fH
	mov	DWORD PTR __Str$170929[esp+120], edx
	mov	BYTE PTR __Str$170929[esp+104], dl

; 341  : 
; 342  : 			for (; ; )
; 343  : 				{	// get using codecvt facet
; 344  : 				_Elem _Ch, *_Dest;
; 345  : 				const char *_Src;
; 346  : 				ptrdiff_t _Nleft;
; 347  : 				int _Meta = fgetc(_Myfile);

	push	eax
	mov	DWORD PTR __$EHRec$[esp+112], edx
	call	_fgetc
	add	esp, 4

; 348  : 
; 349  : 				if (_Meta == EOF)

	cmp	eax, -1
	je	$LN1@uflow@2
$LN13@uflow@2:

; 350  : 					return (_Traits::eof());	// partial char?
; 351  : 
; 352  : 				_Str.append(1, (char)_Meta);	// append byte and convert

	push	eax
	push	1
	lea	ecx, DWORD PTR __Str$170929[esp+108]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 353  : 				switch (_Pcvt->in(_State,
; 354  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Src,
; 355  : 					&_Ch, &_Ch + 1, _Dest))

	mov	edi, DWORD PTR __Str$170929[esp+124]
	mov	eax, DWORD PTR __Str$170929[esp+104]
	cmp	edi, 16					; 00000010H
	jb	$LN83@uflow@2
	mov	esi, eax
	mov	DWORD PTR $T485151[esp+100], esi
	test	eax, eax
	je	SHORT $LN87@uflow@2
$LN211@uflow@2:
	mov	ecx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN98@uflow@2
	lea	ecx, DWORD PTR __Str$170929[esp+104]
$LN98@uflow@2:
	cmp	ecx, esi
	ja	SHORT $LN87@uflow@2
	mov	ecx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN102@uflow@2
	lea	ecx, DWORD PTR __Str$170929[esp+104]
$LN102@uflow@2:
	mov	edx, DWORD PTR __Str$170929[esp+120]
	add	ecx, edx
	cmp	esi, ecx
	jbe	SHORT $LN88@uflow@2
$LN87@uflow@2:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __Str$170929[esp+124]
	mov	edx, DWORD PTR __Str$170929[esp+120]
	mov	eax, DWORD PTR __Str$170929[esp+104]
$LN88@uflow@2:
	lea	ecx, DWORD PTR __Str$170929[esp+100]
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN105@uflow@2
	mov	ecx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN115@uflow@2
	lea	ecx, DWORD PTR __Str$170929[esp+104]
$LN115@uflow@2:
	add	ecx, edx
	cmp	esi, ecx
	jb	SHORT $LN105@uflow@2
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __Str$170929[esp+124]
	mov	edx, DWORD PTR __Str$170929[esp+120]
	mov	eax, DWORD PTR __Str$170929[esp+104]
$LN105@uflow@2:
	mov	ebx, edx
	cmp	edi, 16					; 00000010H
	jb	$LN122@uflow@2
	mov	esi, eax
	test	eax, eax
	je	SHORT $LN126@uflow@2
$LN212@uflow@2:
	mov	ecx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN137@uflow@2
	lea	ecx, DWORD PTR __Str$170929[esp+104]
$LN137@uflow@2:
	cmp	ecx, esi
	ja	SHORT $LN126@uflow@2
	mov	ecx, eax
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN141@uflow@2
	lea	ecx, DWORD PTR __Str$170929[esp+104]
$LN141@uflow@2:
	add	ecx, edx
	cmp	esi, ecx
	jbe	SHORT $LN127@uflow@2
$LN126@uflow@2:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __Str$170929[esp+124]
	mov	edx, DWORD PTR __Str$170929[esp+120]
	mov	eax, DWORD PTR __Str$170929[esp+104]
$LN127@uflow@2:
	lea	ecx, DWORD PTR __Str$170929[esp+100]
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN144@uflow@2
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN154@uflow@2
	lea	eax, DWORD PTR __Str$170929[esp+104]
$LN154@uflow@2:
	add	eax, edx
	cmp	esi, eax
	jb	SHORT $LN144@uflow@2
	call	__invalid_parameter_noinfo
$LN144@uflow@2:
	mov	edi, DWORD PTR _this$GSCopy$[esp+100]
	mov	ecx, DWORD PTR [edi+60]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+16]
	lea	eax, DWORD PTR __Dest$170934[esp+100]
	push	eax
	lea	eax, DWORD PTR __Ch$170933[esp+105]
	push	eax
	lea	eax, DWORD PTR __Ch$170933[esp+108]
	push	eax
	lea	eax, DWORD PTR __Src$170935[esp+112]
	push	eax
	mov	eax, DWORD PTR $T485151[esp+116]
	add	eax, ebx
	push	eax
	push	esi
	lea	eax, DWORD PTR [edi+68]
	push	eax
	call	edx
	test	eax, eax
	jl	$LN1@uflow@2
	cmp	eax, 1
	jle	SHORT $LN8@uflow@2
	cmp	eax, 3
	jne	$LN1@uflow@2

; 369  : 					break;
; 370  : 
; 371  : 				case codecvt_base::noconv:
; 372  : 					if (_Str.size() < sizeof (_Elem))

	cmp	DWORD PTR __Str$170929[esp+120], 1
	jb	$LN4@uflow@2

; 373  : 						break;	// no conversion, but need more chars
; 374  : 
; 375  : 					_CRT_SECURE_MEMCPY(&_Ch,sizeof (_Elem), &*_Str.begin(),

	push	1
	lea	edx, DWORD PTR $T484912[esp+104]
	push	edx
	lea	ecx, DWORD PTR __Str$170929[esp+108]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	ecx, eax
	call	??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
	push	eax
	lea	eax, DWORD PTR __Ch$170933[esp+108]
	push	1
	push	eax
	call	_memcpy_s

; 376  : 						sizeof (_Elem));	// copy raw bytes to element
; 377  : 					return (_Traits::to_int_type(_Ch));	// return result

	movzx	esi, BYTE PTR __Ch$170933[esp+116]
	add	esp, 16					; 00000010H
	lea	ecx, DWORD PTR __Str$170929[esp+100]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	$LN14@uflow@2

; 353  : 				switch (_Pcvt->in(_State,
; 354  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Src,
; 355  : 					&_Ch, &_Ch + 1, _Dest))

$LN83@uflow@2:
	lea	ecx, DWORD PTR __Str$170929[esp+104]
	mov	DWORD PTR $T485151[esp+100], ecx
	mov	esi, ecx
	jmp	$LN211@uflow@2
$LN122@uflow@2:
	lea	esi, DWORD PTR __Str$170929[esp+104]
	jmp	$LN212@uflow@2
$LN8@uflow@2:

; 356  : 					{	// test result of converting one element
; 357  : 				case codecvt_base::partial:
; 358  : 				case codecvt_base::ok:
; 359  : 					if (_Dest != &_Ch)

	lea	eax, DWORD PTR __Ch$170933[esp+100]
	cmp	DWORD PTR __Dest$170934[esp+100], eax
	jne	$LN208@uflow@2

; 365  : 						}
; 366  : 					else
; 367  : 						_Str.erase((size_t)0,	// partial, discard used input
; 368  : 							(size_t)(_Src - &*_Str.begin()));

	mov	edx, DWORD PTR __Str$170929[esp+124]
	mov	eax, DWORD PTR __Str$170929[esp+104]
	cmp	edx, 16					; 00000010H
	jb	$LN165@uflow@2
	mov	esi, eax
	test	eax, eax
	je	SHORT $LN169@uflow@2
$LN213@uflow@2:
	mov	ecx, eax
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN180@uflow@2
	lea	ecx, DWORD PTR __Str$170929[esp+104]
$LN180@uflow@2:
	cmp	ecx, esi
	ja	SHORT $LN169@uflow@2
	mov	ecx, eax
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN184@uflow@2
	lea	ecx, DWORD PTR __Str$170929[esp+104]
$LN184@uflow@2:
	mov	ebx, DWORD PTR __Str$170929[esp+120]
	add	ecx, ebx
	cmp	esi, ecx
	jbe	SHORT $LN170@uflow@2
$LN169@uflow@2:
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$170929[esp+124]
	mov	eax, DWORD PTR __Str$170929[esp+104]
$LN170@uflow@2:
	lea	ecx, DWORD PTR __Str$170929[esp+100]
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN187@uflow@2
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN197@uflow@2
	lea	eax, DWORD PTR __Str$170929[esp+104]
$LN197@uflow@2:
	mov	edx, DWORD PTR __Str$170929[esp+120]
	add	eax, edx
	cmp	esi, eax
	jb	SHORT $LN187@uflow@2
	call	__invalid_parameter_noinfo
$LN187@uflow@2:
	mov	eax, DWORD PTR __Src$170935[esp+100]
	sub	eax, esi
	push	eax
	push	0
	lea	ecx, DWORD PTR __Str$170929[esp+108]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
$LN4@uflow@2:
	mov	ecx, DWORD PTR [edi+76]
	push	ecx
	call	_fgetc
	add	esp, 4
	cmp	eax, -1
	jne	$LN13@uflow@2
$LN1@uflow@2:

; 378  : 
; 379  : 				default:
; 380  : 					return (_Traits::eof());	// conversion failed

	lea	ecx, DWORD PTR __Str$170929[esp+100]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN218@uflow@2:
	or	eax, -1
$LN14@uflow@2:

; 381  : 					}
; 382  : 				}
; 383  : 			}
; 384  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0

; 365  : 						}
; 366  : 					else
; 367  : 						_Str.erase((size_t)0,	// partial, discard used input
; 368  : 							(size_t)(_Src - &*_Str.begin()));

$LN165@uflow@2:
	lea	esi, DWORD PTR __Str$170929[esp+104]
	jmp	$LN213@uflow@2
$LN208@uflow@2:

; 360  : 						{	// got an element, put back excess and deliver it
; 361  : 						_Nleft = (int)(&*_Str.begin() + _Str.size() - _Src);

	mov	edi, DWORD PTR __Str$170929[esp+120]
	lea	ecx, DWORD PTR $T484909[esp+100]
	push	ecx
	lea	ecx, DWORD PTR __Str$170929[esp+104]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	ecx, eax
	call	??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
	sub	edi, DWORD PTR __Src$170935[esp+100]
	mov	esi, eax
	add	esi, edi

; 362  : 						for (; 0 < _Nleft; )

	test	esi, esi
	jle	SHORT $LN5@uflow@2
$LN6@uflow@2:

; 363  : 							ungetc(_Src[--_Nleft], _Myfile);

	mov	edx, DWORD PTR _this$GSCopy$[esp+100]
	mov	eax, DWORD PTR [edx+76]
	mov	ecx, DWORD PTR __Src$170935[esp+100]
	movsx	edx, BYTE PTR [esi+ecx-1]
	dec	esi
	push	eax
	push	edx
	call	_ungetc
	add	esp, 8
	test	esi, esi
	jg	SHORT $LN6@uflow@2
$LN5@uflow@2:

; 364  : 						return (_Traits::to_int_type(_Ch));

	movzx	esi, BYTE PTR __Ch$170933[esp+100]
	lea	ecx, DWORD PTR __Str$170929[esp+100]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@uflow@2
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0:
	lea	ecx, DWORD PTR __Str$170929[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-84]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0
__ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
xdata$x	ENDS
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -76					; size = 4
__Ch$170782 = -72					; size = 1
$T486203 = -68						; size = 4
__Dest$170784 = -64					; size = 4
__Src$170783 = -60					; size = 4
$T485524 = -56						; size = 8
__Str$170785 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx

; 222  : 		{	// put an element to stream

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, eax

; 223  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	mov	ebx, DWORD PTR __Meta$[ebp]
	mov	edx, ecx

; 264  : 						_Str.append(_STRING_INC, '\0');	// try with more space

	mov	DWORD PTR _this$GSCopy$[esp+92], edx
	cmp	ebx, -1
	jne	SHORT $LN21@overflow@6

; 224  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

	xor	eax, eax
	jmp	$LN14@overflow@6
$LN21@overflow@6:

; 225  : 		else if (_Mysb::pptr() != 0
; 226  : 			&& _Mysb::pptr() < _Mysb::epptr())

	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN19@overflow@6
	mov	eax, DWORD PTR [edx+52]
	mov	esi, DWORD PTR [eax]
	add	esi, ecx
	cmp	ecx, esi
	jae	SHORT $LN19@overflow@6

; 227  : 			{	// room in buffer, store it
; 228  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [ecx], bl

; 229  : 			return (_Meta);

	mov	eax, ebx
	jmp	$LN14@overflow@6
$LN19@overflow@6:

; 230  : 			}
; 231  : 		else if (_Myfile == 0)

	mov	eax, DWORD PTR [edx+76]
	test	eax, eax

; 232  : 			return (_Traits::eof());	// no open C stream, fail

	je	$LN322@overflow@6

; 233  : 		else if (_Pcvt == 0)

	cmp	DWORD PTR [edx+60], 0
	jne	SHORT $LN15@overflow@6

; 234  : 			return (_Fputc(_Traits::to_char_type(_Meta), _Myfile)
; 235  : 				? _Meta : _Traits::eof());	// no codecvt facet, put as is

	push	eax
	movsx	eax, bl
	push	eax
	call	_fputc
	add	esp, 8
	cmp	eax, -1
	je	$LN322@overflow@6
	mov	eax, ebx
	jmp	$LN14@overflow@6
$LN15@overflow@6:

; 236  : 		else
; 237  : 			{	// put using codecvt facet
; 238  : 			const int _STRING_INC = 8;
; 239  : 			const _Elem _Ch = _Traits::to_char_type(_Meta);
; 240  : 			const _Elem *_Src;
; 241  : 			char *_Dest;
; 242  : 
; 243  : 			string _Str(_STRING_INC, '\0');

	mov	eax, 15					; 0000000fH
	mov	BYTE PTR __Str$170785[esp+96], 0
	pxor	xmm0, xmm0
	mov	DWORD PTR __Str$170785[esp+116], eax
	movq	QWORD PTR __Str$170785[esp+96], xmm0
	cmp	eax, 16					; 00000010H
	mov	eax, DWORD PTR __Str$170785[esp+96]
	mov	BYTE PTR __Ch$170782[esp+92], bl
	mov	DWORD PTR __Str$170785[esp+112], 8
	jae	SHORT $LN168@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN168@overflow@6:
	mov	BYTE PTR [eax+8], 0
	mov	DWORD PTR __$EHRec$[esp+100], 0
$LN323@overflow@6:
	mov	ecx, DWORD PTR __Str$170785[esp+96]
	mov	edx, DWORD PTR __Str$170785[esp+116]
	npad	8
$LL13@overflow@6:

; 244  : 			for (; ; )
; 245  : 				switch (_Pcvt->out(_State,
; 246  : 					&_Ch, &_Ch + 1, _Src,
; 247  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))

	cmp	edx, 16					; 00000010H
	jb	$LN175@overflow@6
	mov	ebx, ecx
	mov	DWORD PTR $T486203[esp+92], ebx
	test	ecx, ecx
	je	SHORT $LN179@overflow@6
$LN313@overflow@6:
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN190@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN190@overflow@6:
	cmp	eax, ebx
	ja	SHORT $LN179@overflow@6
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN194@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN194@overflow@6:
	mov	esi, DWORD PTR __Str$170785[esp+112]
	add	eax, esi
	cmp	ebx, eax
	jbe	SHORT $LN180@overflow@6
$LN179@overflow@6:
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$170785[esp+116]
	mov	ecx, DWORD PTR __Str$170785[esp+96]
$LN180@overflow@6:
	lea	eax, DWORD PTR __Str$170785[esp+92]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN197@overflow@6
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN207@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN207@overflow@6:
	mov	esi, DWORD PTR __Str$170785[esp+112]
	add	eax, esi
	cmp	ebx, eax
	jb	SHORT $LN197@overflow@6
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$170785[esp+116]
	mov	ecx, DWORD PTR __Str$170785[esp+96]
$LN197@overflow@6:
	mov	edi, DWORD PTR __Str$170785[esp+112]
	cmp	edx, 16					; 00000010H
	jb	$LN214@overflow@6
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN218@overflow@6
$LN314@overflow@6:
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN229@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN229@overflow@6:
	cmp	eax, esi
	ja	SHORT $LN218@overflow@6
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN233@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN233@overflow@6:
	mov	ebx, DWORD PTR __Str$170785[esp+112]
	add	eax, ebx
	mov	ebx, DWORD PTR $T486203[esp+92]
	cmp	esi, eax
	jbe	SHORT $LN219@overflow@6
$LN218@overflow@6:
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$170785[esp+116]
	mov	ecx, DWORD PTR __Str$170785[esp+96]
$LN219@overflow@6:
	lea	eax, DWORD PTR __Str$170785[esp+92]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN236@overflow@6
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN246@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN246@overflow@6:
	mov	ecx, DWORD PTR __Str$170785[esp+112]
	add	eax, ecx
	cmp	esi, eax
	jb	SHORT $LN236@overflow@6
	call	__invalid_parameter_noinfo
$LN236@overflow@6:
	mov	edx, DWORD PTR _this$GSCopy$[esp+92]
	mov	ecx, DWORD PTR [edx+60]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+20]
	lea	eax, DWORD PTR __Dest$170784[esp+92]
	push	eax
	add	ebx, edi
	push	ebx
	push	esi
	lea	eax, DWORD PTR __Src$170783[esp+104]
	push	eax
	lea	eax, DWORD PTR __Ch$170782[esp+109]
	push	eax
	lea	eax, DWORD PTR __Ch$170782[esp+112]
	push	eax
	mov	eax, DWORD PTR _this$GSCopy$[esp+116]
	add	eax, 68					; 00000044H
	push	eax
	call	edx
	test	eax, eax
	jl	$LN1@overflow@6
	cmp	eax, 1
	jg	$LN310@overflow@6

; 248  : 				{	// test result of converting one element
; 249  : 				case codecvt_base::partial:
; 250  : 				case codecvt_base::ok:
; 251  : 					{	// converted something, try to put it out
; 252  : 					size_t _Count = _Dest - &*_Str.begin();

	mov	edx, DWORD PTR __Str$170785[esp+116]
	mov	ecx, DWORD PTR __Str$170785[esp+96]
	cmp	edx, 16					; 00000010H
	jb	$LN253@overflow@6
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN257@overflow@6
$LN315@overflow@6:
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN268@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN268@overflow@6:
	cmp	eax, esi
	ja	SHORT $LN257@overflow@6
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN272@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN272@overflow@6:
	mov	edi, DWORD PTR __Str$170785[esp+112]
	add	eax, edi
	cmp	esi, eax
	jbe	SHORT $LN258@overflow@6
$LN257@overflow@6:
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$170785[esp+116]
	mov	ecx, DWORD PTR __Str$170785[esp+96]
$LN258@overflow@6:
	lea	eax, DWORD PTR __Str$170785[esp+92]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN275@overflow@6
	mov	eax, ecx
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN285@overflow@6
	lea	eax, DWORD PTR __Str$170785[esp+96]
$LN285@overflow@6:
	mov	edi, DWORD PTR __Str$170785[esp+112]
	add	eax, edi
	cmp	esi, eax
	jb	SHORT $LN275@overflow@6
	call	__invalid_parameter_noinfo
	mov	edx, DWORD PTR __Str$170785[esp+116]
	mov	ecx, DWORD PTR __Str$170785[esp+96]
$LN275@overflow@6:
	mov	edi, DWORD PTR __Dest$170784[esp+92]
	sub	edi, esi

; 253  : 					if (0 < _Count && _Count !=
; 254  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))

	je	$LN8@overflow@6
	lea	ecx, DWORD PTR $T485524[esp+92]
	push	ecx
	lea	ecx, DWORD PTR __Str$170785[esp+96]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	esi, eax
	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN288@overflow@6
	test	eax, eax
	jne	SHORT $LN289@overflow@6
	call	__invalid_parameter_noinfo
$LN289@overflow@6:
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN297@overflow@6
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN298@overflow@6

; 244  : 			for (; ; )
; 245  : 				switch (_Pcvt->out(_State,
; 246  : 					&_Ch, &_Ch + 1, _Src,
; 247  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))

$LN175@overflow@6:
	lea	ebx, DWORD PTR __Str$170785[esp+96]
	mov	DWORD PTR $T486203[esp+92], ebx
	jmp	$LN313@overflow@6
$LN214@overflow@6:
	lea	esi, DWORD PTR __Str$170785[esp+96]
	jmp	$LN314@overflow@6

; 248  : 				{	// test result of converting one element
; 249  : 				case codecvt_base::partial:
; 250  : 				case codecvt_base::ok:
; 251  : 					{	// converted something, try to put it out
; 252  : 					size_t _Count = _Dest - &*_Str.begin();

$LN253@overflow@6:
	lea	esi, DWORD PTR __Str$170785[esp+96]
	jmp	$LN315@overflow@6

; 253  : 					if (0 < _Count && _Count !=
; 254  : 						fwrite(&*_Str.begin(), 1, _Count, _Myfile))

$LN297@overflow@6:
	lea	ecx, DWORD PTR [eax+4]
$LN298@overflow@6:
	mov	edx, DWORD PTR [eax+20]
	add	edx, ecx
	cmp	DWORD PTR [esi+4], edx
	jb	SHORT $LN288@overflow@6
	call	__invalid_parameter_noinfo
$LN288@overflow@6:
	mov	eax, DWORD PTR _this$GSCopy$[esp+92]
	mov	ecx, DWORD PTR [eax+76]
	mov	esi, DWORD PTR [esi+4]
	push	ecx
	push	edi
	push	1
	push	esi
	call	_fwrite
	add	esp, 16					; 00000010H
	cmp	edi, eax
	jne	$LN1@overflow@6
	mov	edx, DWORD PTR __Str$170785[esp+116]
	mov	ecx, DWORD PTR __Str$170785[esp+96]
$LN8@overflow@6:

; 255  : 						return (_Traits::eof());	// write failed
; 256  : 
; 257  : 					_Wrotesome = true;	// write succeeded

	mov	eax, DWORD PTR _this$GSCopy$[esp+92]
	mov	BYTE PTR [eax+65], 1

; 258  : 					if (_Src != &_Ch)

	lea	eax, DWORD PTR __Ch$170782[esp+92]
	cmp	DWORD PTR __Src$170783[esp+92], eax
	jne	SHORT $LN312@overflow@6

; 260  : 
; 261  : 					if (0 < _Count)

	test	edi, edi
	ja	$LL13@overflow@6

; 262  : 						;
; 263  : 					else if (_Str.size() < 4 * _STRING_INC)

	cmp	DWORD PTR __Str$170785[esp+112], 32	; 00000020H

; 264  : 						_Str.append(_STRING_INC, '\0');	// try with more space

	lea	ecx, DWORD PTR __Str$170785[esp+92]
	jae	SHORT $LN4@overflow@6
	push	0
	push	8
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 276  : 				}

	jmp	$LN323@overflow@6
$LN310@overflow@6:

; 244  : 			for (; ; )
; 245  : 				switch (_Pcvt->out(_State,
; 246  : 					&_Ch, &_Ch + 1, _Src,
; 247  : 					&*_Str.begin(), &*_Str.begin() + _Str.size(), _Dest))

	cmp	eax, 3
	jne	SHORT $LN1@overflow@6

; 265  : 					else
; 266  : 						return (_Traits::eof());	// conversion failed
; 267  : 					break;
; 268  : 					}
; 269  : 
; 270  : 				case codecvt_base::noconv:
; 271  : 					return (_Fputc(_Ch, _Myfile) ? _Meta
; 272  : 						: _Traits::eof());	// no conversion, put as is

	mov	ecx, DWORD PTR _this$GSCopy$[esp+92]
	mov	edx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR __Ch$170782[esp+92]
	push	edx
	push	eax
	call	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z	; std::_Fputc<char>
	add	esp, 8
	test	al, al
	je	SHORT $LN26@overflow@6
	mov	esi, DWORD PTR __Meta$[ebp]
	lea	ecx, DWORD PTR __Str$170785[esp+92]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@overflow@6
$LN26@overflow@6:
	lea	ecx, DWORD PTR __Str$170785[esp+92]
	or	esi, -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@overflow@6
$LN312@overflow@6:

; 259  : 						return (_Meta);	// converted whole element

	lea	ecx, DWORD PTR __Str$170785[esp+92]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN14@overflow@6
$LN1@overflow@6:

; 273  : 
; 274  : 				default:
; 275  : 					return (_Traits::eof());	// conversion failed

	lea	ecx, DWORD PTR __Str$170785[esp+92]
$LN4@overflow@6:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN322@overflow@6:
	or	eax, -1
$LN14@overflow@6:

; 277  : 			}
; 278  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0:
	lea	ecx, DWORD PTR __Str$170785[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-76]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 117  : 		{	// destroy the object

	push	-1
	push	__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+36], 0

; 118  : 		if (_Closef)

	cmp	BYTE PTR [esi+72], 0
	je	SHORT $LN1@basic_file@9

; 119  : 			close();

	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@basic_file@9:

; 120  : 		}

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+36], -1
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$0
__ehfuncinfo$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
xdata$x	ENDS
;	COMDAT ??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_mode$ = 12						; size = 4
??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; boost::iostreams::basic_file<char>::impl::impl, COMDAT
; _path$ = edi

; 70   :         impl(const std::string& path, BOOST_IOS::openmode mode)

	push	-1
	push	__ehhandler$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+16]
	mov	ecx, esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	lea	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], edx
	xor	ecx, ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	BYTE PTR [esi+72], cl
	mov	BYTE PTR [esi+65], cl
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	lea	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], edx
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+52]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [esi+76], ecx
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [esi+68], edx
	mov	DWORD PTR [esi+60], ecx
	mov	DWORD PTR __$EHRec$[esp+28], ecx
	cmp	DWORD PTR [edi+24], 16			; 00000010H
	jb	SHORT $LN22@impl
	mov	ecx, DWORD PTR [edi+4]
	jmp	SHORT $LN23@impl
$LN22@impl:
	lea	ecx, DWORD PTR [edi+4]
$LN23@impl:
	mov	eax, DWORD PTR _mode$[esp+16]
	push	eax
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open

; 71   :             { file_.open(path.c_str(), mode); }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; boost::iostreams::basic_file<char>::impl::impl
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
;	COMDAT ??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ PROC ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >, COMDAT
; _this$ = ecx

; 275  :                 {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@

; 276  :                 }

	mov	DWORD PTR [esi+84], OFFSET ??_7exception@boost@@6B@
	mov	ecx, DWORD PTR [esi+88]
	push	edi
	test	ecx, ecx
	je	SHORT $LN7@error_info@7
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN7@error_info@7:
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	edi, DWORD PTR [esi+80]
	test	edi, edi
	je	SHORT $LN20@error_info@7
	lea	eax, DWORD PTR [edi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN20@error_info@7
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, edi
	call	eax
	lea	ecx, DWORD PTR [edi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN20@error_info@7
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, edi
	call	edx
$LN20@error_info@7:
	pop	edi
	mov	ecx, esi
	pop	esi
	jmp	??1system_error@system@boost@@UAE@XZ	; boost::system::system_error::~system_error
??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ ENDP ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ?pop@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
?pop@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::pop, COMDAT
; _this$ = eax

; 476  :     void pop() { chain_->pop(); }

	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?pop@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pop
	pop	ecx
	ret	0
?pop@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXXZ ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::pop
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAEPAXI@Z PROC ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@80
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@80:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAEPAXI@Z ENDP ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z$0
__ehfuncinfo$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z PROC ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	mov	edi, DWORD PTR ___that$[esp+24]
	push	edi
	call	??0system_error@system@boost@@QAE@ABV012@@Z
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	eax, DWORD PTR [edi+76]
	mov	DWORD PTR [esi+76], eax
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	test	eax, eax
	je	SHORT $LN16@error_info@8
	add	eax, 4
	mov	ecx, 1
	lock	 xadd	 DWORD PTR [eax], ecx
$LN16@error_info@8:
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	edi, edi
	je	SHORT $LN3@error_info@8
	add	edi, 84					; 00000054H
	jmp	SHORT $LN4@error_info@8
$LN3@error_info@8:
	xor	edi, edi
$LN4@error_info@8:
	mov	DWORD PTR [esi+84], OFFSET ??_7exception@boost@@6B@
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+88], ecx
	test	ecx, ecx
	je	SHORT $LN23@error_info@8
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN23@error_info@8:
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+92], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+96], edx
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+100], eax
	mov	DWORD PTR [esi], OFFSET ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::~basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
__ehhandler$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z ENDP ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	mov	DWORD PTR [esi+104], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [esi+104], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_base_w32.hpp
xdata$x	SEGMENT
__unwindtable$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z$0
__tryblocktable$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z$3
__ehfuncinfo$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\shared_count.hpp
xdata$x	ENDS
;	COMDAT ??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_p$ = 8							; size = 4
??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z PROC ; boost::detail::shared_count::shared_count<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>, COMDAT
; _this$ = ecx

; 82   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx

; 83   : #ifndef BOOST_NO_EXCEPTIONS
; 84   : 
; 85   :         try
; 86   :         {
; 87   :             pi_ = new sp_counted_impl_p<Y>( p );

	push	16					; 00000010H
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@shared_cou@8
	mov	ecx, 1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$sp_counted_impl_p@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@detail@boost@@6B@
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN5@shared_cou@8
$LN4@shared_cou@8:
	xor	eax, eax
$LN5@shared_cou@8:
	mov	DWORD PTR [esi], eax

; 93   :         }
; 94   : 
; 95   : #else
; 96   : 
; 97   :         pi_ = new sp_counted_impl_p<Y>( p );
; 98   : 
; 99   :         if( pi_ == 0 )
; 100  :         {
; 101  :             boost::checked_delete( p );
; 102  :             boost::throw_exception( std::bad_alloc() );
; 103  :         }
; 104  : 
; 105  : #endif
; 106  :     }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z$0:

; 88   :         }
; 89   :         catch(...)
; 90   :         {
; 91   :             boost::checked_delete( p );

	mov	esi, DWORD PTR _p$[ebp]
	call	??$checked_delete@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@YAXPAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@0@@Z ; boost::checked_delete<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>

; 92   :             throw;

	push	0
	push	0
	call	__CxxThrowException@8
$LN18@shared_cou@8:
$LN17@shared_cou@8:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z ENDP ; boost::detail::shared_count::shared_count<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
;	COMDAT ??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@?$close_impl@Uclose_filtering_stream@detail@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@23@H@Z
_TEXT	SEGMENT
??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@?$close_impl@Uclose_filtering_stream@detail@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@23@H@Z PROC ; boost::iostreams::detail::close_impl<boost::iostreams::detail::close_filtering_stream>::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >, COMDAT
; _t$ = eax

; 205  :     static void close(T& t, BOOST_IOS::openmode which)

	push	ecx

; 206  :     {
; 207  :         typedef typename category_of<T>::type category;
; 208  :         const bool in =  is_convertible<category, input>::value &&
; 209  :                         !is_convertible<category, output>::value;
; 210  :         if (in == (which == BOOST_IOS::in) && t.is_complete())

	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	test	BYTE PTR [ecx+44], 1
	je	SHORT $LN14@close@19

; 211  :             t.pop();

	push	eax
	call	?pop@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pop
$LN14@close@19:
	pop	ecx

; 212  :     }

	ret	0
??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@?$close_impl@Uclose_filtering_stream@detail@iostreams@boost@@@detail@iostreams@boost@@SAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@23@H@Z ENDP ; boost::iostreams::detail::close_impl<boost::iostreams::detail::close_filtering_stream>::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$0
__tryblocktable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$7
__ehfuncinfo$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_what_arg$ = 12						; size = 4
_ec$ = 16						; size = 8
??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT

; 1474 :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _what_arg$[ebp]
	push	eax
	mov	ecx, esi
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	mov	ecx, DWORD PTR _ec$[ebp]
	mov	edx, DWORD PTR _ec$[ebp+4]
	mov	DWORD PTR [esi+40], ecx
	mov	DWORD PTR [esi+44], edx
	xor	ebx, ebx
	mov	DWORD PTR [esi+72], 15			; 0000000fH
	mov	DWORD PTR [esi+68], ebx
	mov	BYTE PTR [esi+52], bl
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	lea	edi, DWORD PTR [esi+76]
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	DWORD PTR [edi], ebx
	mov	DWORD PTR [edi+4], ebx

; 1475 :       try
; 1476 :       {
; 1477 :         m_imp_ptr.reset( new m_imp );

	push	84					; 00000054H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN4@basic_file@10
	mov	DWORD PTR [eax+20], ebx
	mov	ecx, 15					; 0000000fH
	mov	DWORD PTR [eax+24], ecx
	mov	BYTE PTR [eax+4], bl
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+48], ebx
	mov	BYTE PTR [eax+32], bl
	mov	DWORD PTR [eax+80], ecx
	mov	DWORD PTR [eax+76], ebx
	push	eax
	mov	ecx, edi
	mov	BYTE PTR [eax+60], bl
	call	??$reset@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
	jmp	SHORT $LN12@basic_file@10
$LN4@basic_file@10:
	xor	eax, eax
	push	eax
	mov	ecx, edi
	call	??$reset@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>
	jmp	SHORT $LN12@basic_file@10
__catch$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$0:

; 1478 :       }
; 1479 :       catch (...) { m_imp_ptr.reset(); }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?reset@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXXZ ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset
	mov	eax, $LN156@basic_file@10
	ret	0
$LN156@basic_file@10:
	mov	esi, DWORD PTR _this$[ebp]
$LN12@basic_file@10:

; 1480 :     }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1system_error@system@boost@@UAE@XZ	; boost::system::system_error::~system_error
__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	jmp	??1?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ
__ehhandler$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$0
__tryblocktable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$7
__ehfuncinfo$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_what_arg$ = 8						; size = 4
_path1_arg$ = 12					; size = 4
_ec$ = 16						; size = 8
??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT
; _this$ = ecx

; 1487 :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	eax, DWORD PTR _what_arg$[ebp]
	push	eax
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	mov	ecx, DWORD PTR _ec$[ebp]
	mov	edx, DWORD PTR _ec$[ebp+4]
	mov	DWORD PTR [esi+40], ecx
	mov	DWORD PTR [esi+44], edx
	xor	ebx, ebx
	mov	DWORD PTR [esi+72], 15			; 0000000fH
	mov	DWORD PTR [esi+68], ebx
	mov	BYTE PTR [esi+52], bl
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	lea	edi, DWORD PTR [esi+76]
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	DWORD PTR [edi], ebx
	mov	DWORD PTR [edi+4], ebx

; 1488 :       try
; 1489 :       {
; 1490 :         m_imp_ptr.reset( new m_imp );

	push	84					; 00000054H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN4@basic_file@11
	mov	DWORD PTR [eax+20], ebx
	mov	ecx, 15					; 0000000fH
	mov	DWORD PTR [eax+24], ecx
	mov	BYTE PTR [eax+4], bl
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+48], ebx
	mov	BYTE PTR [eax+32], bl
	mov	DWORD PTR [eax+80], ecx
	mov	DWORD PTR [eax+76], ebx
	mov	BYTE PTR [eax+60], bl
	jmp	SHORT $LN5@basic_file@11
$LN4@basic_file@11:
	xor	eax, eax
$LN5@basic_file@11:
	push	eax
	mov	ecx, edi
	call	??$reset@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXPAUm_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@1@@Z ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>

; 1491 :         m_imp_ptr->m_path1 = path1_arg;

	mov	eax, DWORD PTR _path1_arg$[ebp]
	mov	ecx, DWORD PTR [edi]
	push	-1
	push	ebx
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN12@basic_file@11
__catch$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$0:

; 1492 :       }
; 1493 :       catch (...) { m_imp_ptr.reset(); }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	?reset@?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAEXXZ ; boost::shared_ptr<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::m_imp>::reset
	mov	eax, $LN164@basic_file@11
	ret	0
$LN164@basic_file@11:
	mov	esi, DWORD PTR _this$[ebp]
$LN12@basic_file@11:

; 1494 :     }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1system_error@system@boost@@UAE@XZ	; boost::system::system_error::~system_error
__unwindfunclet$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	jmp	??1?$shared_ptr@Um_imp@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@QAE@XZ
__ehhandler$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAEPAXI@Z PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi], OFFSET ??_7?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@6B@
	mov	esi, DWORD PTR [edi+80]
	test	esi, esi
	je	SHORT $LN14@scalar@81
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN14@scalar@81
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN14@scalar@81
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN14@scalar@81:
	mov	ecx, edi
	call	??1system_error@system@boost@@UAE@XZ	; boost::system::system_error::~system_error
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN17@scalar@81
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN17@scalar@81:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??_G?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAEPAXI@Z ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@@Z
_TEXT	SEGMENT
??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@@Z PROC ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl><boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>, COMDAT
; _this$ = edi
; _p$ = esi

; 188  :     {

	push	ecx
	push	esi
	lea	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], esi
	call	??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z ; boost::detail::shared_count::shared_count<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>

; 189  :         boost::detail::sp_enable_shared_from_this( this, p, p );

	push	esi
	push	esi
	push	edi
	call	?sp_enable_shared_from_this@detail@boost@@YAXZZ ; boost::detail::sp_enable_shared_from_this
	add	esp, 12					; 0000000cH

; 190  :     }

	mov	eax, edi
	pop	ecx
	ret	0
??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@?$shared_ptr@Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@1@@Z ENDP ; boost::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>::shared_ptr<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl><boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ??$?9DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT
??$?9DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z PROC ; std::operator!=<char,std::char_traits<char> >, COMDAT
; __Left$ = esi
; __Right$ = edi

; 561  : 	return (!(_Left == _Right));

	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	xor	ecx, ecx
	test	al, al
	sete	cl
	mov	al, cl

; 562  : 	}

	ret	0
??$?9DU?$char_traits@D@std@@@std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z ENDP ; std::operator!=<char,std::char_traits<char> >
_TEXT	ENDS
PUBLIC	__Last$GSCopy$
PUBLIC	__First$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z$0
__ehfuncinfo$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	ENDS
;	COMDAT ??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z
_TEXT	SEGMENT
__Prefix$159033 = -69					; size = 1
__Column$159029 = -68					; size = 4
__Ans$ = -64						; size = 4
__Off$159034 = -60					; size = 4
__Numfields$ = -56					; size = 4
__First$GSCopy$ = -52					; size = 4
__Last$GSCopy$ = -48					; size = 4
__Str$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z PROC ; std::_Getloctxt<char,std::istreambuf_iterator<char,std::char_traits<char> > >, COMDAT

; 533  : 	{	// find field at _Ptr that matches longest in [_First, _Last)

	push	-1
	push	__ehhandler$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, eax

; 534  : 	for (size_t _Off = 0; _Ptr[_Off] != (_Elem)0; ++_Off)

	mov	esi, DWORD PTR __Ptr$[esp+88]
	mov	cl, BYTE PTR [esi]
	mov	ebx, DWORD PTR __First$[esp+88]

; 568  : 			break;	// no pending prefixes or no input, give up
; 569  : 		}
; 570  : 	return (_Ans);	// return field number or negative value on failure

	mov	eax, DWORD PTR __Last$[esp+88]
	mov	edi, 2
	mov	DWORD PTR __First$GSCopy$[esp+92], ebx
	mov	DWORD PTR __Last$GSCopy$[esp+92], eax
	mov	DWORD PTR __Numfields$[esp+92], edi
	test	cl, cl
	je	SHORT $LN21@Getloctxt
	mov	al, cl
	mov	edx, esi
	npad	7
$LL23@Getloctxt:

; 535  : 		if (_Ptr[_Off] == _Ptr[0])

	cmp	al, cl
	jne	SHORT $LN22@Getloctxt

; 536  : 			++_Numfields;	// add fields with leading mark to initial count

	inc	edi
$LN22@Getloctxt:

; 534  : 	for (size_t _Off = 0; _Ptr[_Off] != (_Elem)0; ++_Off)

	mov	al, BYTE PTR [edx+1]
	inc	edx
	test	al, al
	jne	SHORT $LL23@Getloctxt

; 536  : 			++_Numfields;	// add fields with leading mark to initial count

	mov	DWORD PTR __Numfields$[esp+92], edi
$LN21@Getloctxt:

; 537  : 	string _Str(_Numfields, '\0');	// one column counter for each field

	xor	ebp, ebp
	push	ebp
	push	edi
	lea	ecx, DWORD PTR __Str$[esp+100]
	mov	DWORD PTR __Str$[esp+124], 15		; 0000000fH
	mov	DWORD PTR __Str$[esp+120], ebp
	mov	BYTE PTR __Str$[esp+104], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+100], ebp

; 538  : 
; 539  : 	int _Ans = -2;	// no candidates so far

	mov	DWORD PTR __Ans$[esp+92], -2		; fffffffeH

; 540  : 	for (size_t _Column = 1; ; ++_Column, ++_First, _Ans = -1)

	mov	DWORD PTR __Column$159029[esp+92], 1
$LL19@Getloctxt:

; 541  : 		{	// test each element against all viable fields
; 542  : 		bool  _Prefix = false;	// seen at least one valid prefix
; 543  : 		size_t _Off = 0;	// offset into fields
; 544  : 		size_t _Field = 0;	// current field number

	xor	ebp, ebp
	xor	edi, edi
	mov	BYTE PTR __Prefix$159033[esp+92], 0

; 545  : 
; 546  : 		for (; _Field < _Numfields; ++_Field)

	cmp	DWORD PTR __Numfields$[esp+92], ebp
	jbe	$LN174@Getloctxt
$LL16@Getloctxt:

; 547  : 			{	// test element at _Column in field _Field
; 548  : 			for (; _Ptr[_Off] != (_Elem)0 && _Ptr[_Off] != _Ptr[0]; ++_Off)

	mov	al, BYTE PTR [edi+esi]
	test	al, al
	je	SHORT $LN11@Getloctxt
	mov	cl, BYTE PTR [esi]
	npad	1
$LL13@Getloctxt:
	cmp	al, cl
	je	SHORT $LN11@Getloctxt
	mov	al, BYTE PTR [edi+esi+1]
	inc	edi
	test	al, al
	jne	SHORT $LL13@Getloctxt
$LN11@Getloctxt:

; 549  : 				;	// find beginning of field
; 550  : 
; 551  : 			if (_Str[_Field] != '\0')

	cmp	ebp, DWORD PTR __Str$[esp+112]
	jbe	SHORT $LN86@Getloctxt
	call	__invalid_parameter_noinfo
$LN86@Getloctxt:
	cmp	DWORD PTR __Str$[esp+116], 16		; 00000010H
	mov	eax, DWORD PTR __Str$[esp+96]
	jae	SHORT $LN92@Getloctxt
	lea	eax, DWORD PTR __Str$[esp+96]
$LN92@Getloctxt:
	cmp	BYTE PTR [eax+ebp], 0
	je	SHORT $LN10@Getloctxt

; 552  : 				_Off += _Str[_Field];	// skip tested columns in field

	cmp	ebp, DWORD PTR __Str$[esp+112]
	jbe	SHORT $LN93@Getloctxt
	call	__invalid_parameter_noinfo
$LN93@Getloctxt:
	cmp	DWORD PTR __Str$[esp+116], 16		; 00000010H
	mov	eax, DWORD PTR __Str$[esp+96]
	jae	SHORT $LN99@Getloctxt
	lea	eax, DWORD PTR __Str$[esp+96]
$LN99@Getloctxt:
	movsx	ecx, BYTE PTR [eax+ebp]
	add	edi, ecx

; 553  : 			else if (_Ptr[_Off += _Column] == _Ptr[0]

	jmp	$LN15@Getloctxt
$LN10@Getloctxt:

; 554  : 				|| _Ptr[_Off] == (_Elem)0)

	mov	ecx, DWORD PTR __Column$159029[esp+92]
	add	edi, ecx
	mov	al, BYTE PTR [edi+esi]
	mov	DWORD PTR __Off$159034[esp+92], edi
	cmp	al, BYTE PTR [esi]
	je	$LN7@Getloctxt
	test	al, al
	je	$LN7@Getloctxt

; 559  : 				}
; 560  : 			else if (_First == _Last || _Ptr[_Off] != *_First)

	mov	edi, DWORD PTR __Last$GSCopy$[esp+92]
	mov	esi, ebx
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	SHORT $LN4@Getloctxt
	cmp	BYTE PTR [ebx+4], al
	jne	SHORT $LN115@Getloctxt
	mov	ecx, DWORD PTR [ebx]
	test	ecx, ecx
	je	SHORT $LN113@Getloctxt
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN119@Getloctxt
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN119@Getloctxt
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN120@Getloctxt
$LN119@Getloctxt:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN120@Getloctxt:
	cmp	eax, -1
	je	SHORT $LN113@Getloctxt
	mov	BYTE PTR [ebx+5], al
	jmp	SHORT $LN112@Getloctxt
$LN113@Getloctxt:
	mov	DWORD PTR [ebx], 0
$LN112@Getloctxt:
	mov	BYTE PTR [ebx+4], 1
$LN115@Getloctxt:
	mov	ecx, DWORD PTR __Off$159034[esp+92]
	mov	edx, DWORD PTR __Ptr$[esp+88]
	mov	al, BYTE PTR [ecx+edx]
	cmp	al, BYTE PTR [ebx+5]
	jne	SHORT $LN4@Getloctxt

; 564  : 				_Prefix = true;	// still a valid prefix

	mov	BYTE PTR __Prefix$159033[esp+92], 1
	mov	esi, edx
	mov	edi, ecx
	jmp	SHORT $LN15@Getloctxt
$LN4@Getloctxt:

; 561  : 				_Str[_Field] = (char)(_Column < 127
; 562  : 					? _Column : 127);	// no match, just save skip count

	mov	ebx, DWORD PTR __Column$159029[esp+92]
	cmp	ebx, 127				; 0000007fH
	jb	SHORT $LN29@Getloctxt
	mov	ebx, 127				; 0000007fH
$LN29@Getloctxt:
	cmp	ebp, DWORD PTR __Str$[esp+112]
	jbe	SHORT $LN135@Getloctxt
	call	__invalid_parameter_noinfo
$LN135@Getloctxt:
	cmp	DWORD PTR __Str$[esp+116], 16		; 00000010H
	mov	eax, DWORD PTR __Str$[esp+96]
	jae	SHORT $LN141@Getloctxt
	lea	eax, DWORD PTR __Str$[esp+96]
$LN141@Getloctxt:

; 563  : 			else

	mov	esi, DWORD PTR __Ptr$[esp+88]
	mov	edi, DWORD PTR __Off$159034[esp+92]
	jmp	SHORT $LN184@Getloctxt
$LN7@Getloctxt:

; 555  : 				{	// matched all of field, save as possible answer
; 556  : 				_Str[_Field] = (char)(_Column < 127
; 557  : 					? _Column : 127);	// save skip count if small enough

	mov	ebx, ecx
	cmp	ecx, 127				; 0000007fH
	jb	SHORT $LN27@Getloctxt
	mov	ebx, 127				; 0000007fH
$LN27@Getloctxt:
	cmp	ebp, DWORD PTR __Str$[esp+112]
	jbe	SHORT $LN100@Getloctxt
	call	__invalid_parameter_noinfo
$LN100@Getloctxt:
	cmp	DWORD PTR __Str$[esp+116], 16		; 00000010H
	mov	eax, DWORD PTR __Str$[esp+96]
	jae	SHORT $LN106@Getloctxt
	lea	eax, DWORD PTR __Str$[esp+96]
$LN106@Getloctxt:

; 558  : 				_Ans = (int)_Field;	// save answer

	mov	DWORD PTR __Ans$[esp+92], ebp
$LN184@Getloctxt:

; 555  : 				{	// matched all of field, save as possible answer
; 556  : 				_Str[_Field] = (char)(_Column < 127
; 557  : 					? _Column : 127);	// save skip count if small enough

	mov	BYTE PTR [eax+ebp], bl

; 558  : 				_Ans = (int)_Field;	// save answer

	mov	ebx, DWORD PTR __First$GSCopy$[esp+92]
$LN15@Getloctxt:
	inc	ebp
	cmp	ebp, DWORD PTR __Numfields$[esp+92]
	jb	$LL16@Getloctxt

; 565  : 			}
; 566  : 
; 567  : 		if (!_Prefix || _First == _Last)

	cmp	BYTE PTR __Prefix$159033[esp+92], 0
	je	SHORT $LN174@Getloctxt
	mov	edi, DWORD PTR __Last$GSCopy$[esp+92]
	mov	esi, ebx
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	SHORT $LN174@Getloctxt
	mov	ecx, DWORD PTR [ebx]
	inc	DWORD PTR __Column$159029[esp+92]
	test	ecx, ecx
	je	SHORT $LN66@Getloctxt
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN72@Getloctxt
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN72@Getloctxt
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN73@Getloctxt

; 540  : 	for (size_t _Column = 1; ; ++_Column, ++_First, _Ans = -1)

$LN72@Getloctxt:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN73@Getloctxt:
	cmp	eax, -1
	je	SHORT $LN66@Getloctxt
	mov	esi, DWORD PTR __Ptr$[esp+88]
	mov	BYTE PTR [ebx+4], 0
	mov	DWORD PTR __Ans$[esp+92], -1
	jmp	$LL19@Getloctxt
$LN66@Getloctxt:
	mov	esi, DWORD PTR __Ptr$[esp+88]
	mov	DWORD PTR [ebx], 0
	mov	BYTE PTR [ebx+4], 1
	mov	DWORD PTR __Ans$[esp+92], -1
	jmp	$LL19@Getloctxt
$LN174@Getloctxt:

; 568  : 			break;	// no pending prefixes or no input, give up
; 569  : 		}
; 570  : 	return (_Ans);	// return field number or negative value on failure

	cmp	DWORD PTR __Str$[esp+116], 16		; 00000010H
	jb	SHORT $LN178@Getloctxt
	mov	eax, DWORD PTR __Str$[esp+96]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN178@Getloctxt:
	mov	eax, DWORD PTR __Ans$[esp+92]

; 571  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z$0:
	lea	ecx, DWORD PTR __Str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-76]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z ENDP ; std::_Getloctxt<char,std::istreambuf_iterator<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
;	COMDAT ??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_which$ = 12						; size = 4
??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z PROC ; boost::iostreams::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >, COMDAT

; 98   : { 

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 99   : #ifdef BOOST_IOSTREAMS_STRICT
; 100  :     assert(which == BOOST_IOS::in || which == BOOST_IOS::out);
; 101  : #else
; 102  :     if (which == (BOOST_IOS::in | BOOST_IOS::out)) {
; 103  :         detail::close_all(t);
; 104  :         return;
; 105  :     }
; 106  : #endif
; 107  :     detail::close_impl<T>::close(detail::unwrap(t), which); 

	mov	ecx, 1
	cmp	DWORD PTR _which$[ebp], ecx
	jne	SHORT $LN15@close@20
	mov	eax, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	test	BYTE PTR [edx+44], cl
	je	SHORT $LN15@close@20
	push	eax
	call	?pop@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXXZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pop
$LN15@close@20:

; 108  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z ENDP ; boost::iostreams::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
__Psave$154935 = -36					; size = 4
__Lock$489163 = -32					; size = 4
__Lock$154934 = -28					; size = 4
$T489155 = -24						; size = 12
__$EHRec$ = -12						; size = 12
__Lock$489185 = 8					; size = 4
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT

; 486  : {	// get facet reference from locale

	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, eax

; 487  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

	push	0
	lea	ecx, DWORD PTR __Lock$154934[esp+60]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[esp+64], 0

; 488  : 		const locale::facet *_Psave =
; 489  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet
; 490  : 
; 491  : 		size_t _Id = _Facet::id;

	cmp	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, 0 ; std::ctype<char>::id
	mov	ebx, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	DWORD PTR __Psave$154935[esp+56], ebx
	jne	SHORT $LN11@use_facet@5
	push	0
	lea	ecx, DWORD PTR __Lock$489163[esp+60]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	cmp	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, 0 ; std::ctype<char>::id
	jne	SHORT $LN10@use_facet@5
	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	mov	DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, eax ; std::ctype<char>::id
$LN10@use_facet@5:
	lea	ecx, DWORD PTR __Lock$489163[esp+56]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN11@use_facet@5:

; 492  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);

	mov	edi, DWORD PTR __Loc$[esp+52]
	mov	esi, DWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
	mov	eax, DWORD PTR [edi]
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@5
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+esi*4]
	test	ecx, ecx
	jne	SHORT $LN16@use_facet@5
$LN30@use_facet@5:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@5
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@5
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+esi*4]
	jmp	SHORT $LN15@use_facet@5
$LN20@use_facet@5:
	xor	ecx, ecx
	jmp	SHORT $LN30@use_facet@5
$LN16@use_facet@5:
	mov	esi, ecx
$LN15@use_facet@5:

; 493  : 
; 494  : 		if (_Pf != 0)

	test	esi, esi
	jne	SHORT $LN28@use_facet@5
$LN31@use_facet@5:

; 495  : 			;	// got facet from locale
; 496  : 		else if (_Psave != 0)

	test	ebx, ebx
	je	SHORT $LN4@use_facet@5

; 497  : 			_Pf = _Psave;	// lazy facet already allocated

	mov	esi, ebx
	jmp	SHORT $LN28@use_facet@5
$LN4@use_facet@5:

; 498  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

	lea	eax, DWORD PTR __Psave$154935[esp+56]
	push	edi
	push	eax
	call	?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z ; std::ctype<char>::_Getcat
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@5

; 499  : 
; 500  :  #if _HAS_EXCEPTIONS
; 501  : 		_THROW_NCEE(bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T489155[esp+60]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T489155[esp+60]
	push	ecx
	call	__CxxThrowException@8
$LN34@use_facet@5:
$LN2@use_facet@5:

; 502  : 
; 503  : 	#else /* _HAS_EXCEPTIONS */
; 504  : 			abort();	// lazy disallowed
; 505  : 	#endif /* _HAS_EXCEPTIONS */
; 506  : 
; 507  : 		else
; 508  : 			{	// queue up lazy facet for destruction
; 509  : 			_Pf = _Psave;

	mov	esi, DWORD PTR __Psave$154935[esp+56]

; 510  : 			_Facetptr<_Facet>::_Psave = _Psave;
; 511  : 
; 512  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 513  : 			_Pfmod->_Incref();

	push	0
	lea	ecx, DWORD PTR __Lock$489185[esp+56]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B, esi ; std::_Facetptr<std::ctype<char> >::_Psave
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN24@use_facet@5
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN24@use_facet@5:
	lea	ecx, DWORD PTR __Lock$489185[esp+52]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 514  : 			_Pfmod->_Register();

	push	esi
	call	?facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::facet_Register
	add	esp, 4
$LN28@use_facet@5:

; 515  : 			}
; 516  : 
; 517  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

	lea	ecx, DWORD PTR __Lock$154934[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, esi

; 518  : 	_END_LOCK()
; 519  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 40					; 00000028H
	ret	0
$LN33@use_facet@5:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$154934[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-40]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z$0
__ehfuncinfo$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
xdata$x	ENDS
;	COMDAT ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
_TEXT	SEGMENT
$T489203 = -20						; size = 4
__Lock$489225 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Byte$ = 8						; size = 1
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z PROC ; std::basic_ios<char,std::char_traits<char> >::widen, COMDAT
; _this$ = ecx

; 123  : 		{	// convert _Byte to character using imbued locale

	push	-1
	push	__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax

; 124  : 		const _Ctype& _Ctype_fac = _USE(getloc(), _Ctype);

	lea	eax, DWORD PTR $T489203[esp+36]
	push	eax
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	push	eax
	mov	DWORD PTR __$EHRec$[esp+48], 0
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	DWORD PTR __$EHRec$[esp+48], -1
	mov	edi, DWORD PTR $T489203[esp+40]
	add	esp, 4
	mov	ebx, eax
	test	edi, edi
	je	SHORT $LN7@widen
	push	0
	lea	ecx, DWORD PTR __Lock$489225[esp+40]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN9@widen
	cmp	eax, -1
	jae	SHORT $LN9@widen
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN9@widen:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$489225[esp+36]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN7@widen
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN7@widen:

; 125  : 		return (_Ctype_fac.widen(_Byte));

	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR __Byte$[esp+32]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	ecx, ebx
	call	edx

; 126  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z$0:
	lea	ecx, DWORD PTR $T489203[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::widen
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
xdata$x	SEGMENT
__unwindtable$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ$0
__ehfuncinfo$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
xdata$x	ENDS
;	COMDAT ??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ
_TEXT	SEGMENT
$T489244 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>, COMDAT
; _this$ = edi

; 139  :     chain_base() : pimpl_(new chain_impl) { }

	push	-1
	push	__ehhandler$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T489244[esp+28], esi
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	esi, esi
	je	SHORT $LN3@chain_base@4
	push	esi
	call	??0?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAE@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >
	mov	eax, 4
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [esi+32], 4096		; 00001000H
	mov	DWORD PTR [esi+36], 128			; 00000080H
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	jmp	SHORT $LN4@chain_base@4
$LN3@chain_base@4:
	xor	esi, esi
$LN4@chain_base@4:
	mov	DWORD PTR __$EHRec$[esp+36], -1
	push	esi
	lea	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], esi
	call	??$?0Uchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUchain_impl@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@1iostreams@2@@Z ; boost::detail::shared_count::shared_count<boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_impl>
	push	esi
	push	esi
	push	edi
	call	?sp_enable_shared_from_this@detail@boost@@YAXZZ ; boost::detail::sp_enable_shared_from_this
	add	esp, 12					; 0000000cH
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ$0:
	mov	eax, DWORD PTR $T489244[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
PUBLIC	__Last$GSCopy$
PUBLIC	__Ac$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z$1
__ehfuncinfo$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z
_TEXT	SEGMENT
__Seendigit$ = -105					; size = 1
__Ptr$ = -104						; size = 4
__Bad$ = -97						; size = 1
__Significant$ = -96					; size = 4
__Pten$ = -92						; size = 4
__Kseparator$153562 = -85				; size = 1
__Last$GSCopy$ = -84					; size = 4
__Punct_fac$ = -80					; size = 4
__Ac$GSCopy$ = -76					; size = 4
__Groups$153564 = -72					; size = 28
__Grouping$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Ac$ = 8						; size = 4
__First$ = 12						; size = 4
?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getffld, COMDAT
; __Last$ = edx
; __Loc$ = ecx

; 702  : 		{	// get floating-point field from [_First, _Last) into _Ac

	push	-1
	push	__ehhandler$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+112], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR __Ac$[esp+128]
	mov	ebp, DWORD PTR __First$[esp+128]
	mov	edi, edx

; 703  : 		const _Mypunct& _Punct_fac = _USE(_Loc, _Mypunct);

	mov	DWORD PTR __Ac$GSCopy$[esp+132], ebx

; 747  : 						;	// drop leading zeros
; 748  : 					else
; 749  : 						{	// save a significant digit
; 750  : 						*_Ptr++ = (char)((*_First - _E0) + '0');

	mov	DWORD PTR __Last$GSCopy$[esp+132], edi
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	lea	esi, DWORD PTR __Grouping$[esp+132]
	mov	ecx, eax
	mov	DWORD PTR __Punct_fac$[esp+132], eax
	call	?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
	mov	esi, ebp
	mov	DWORD PTR __$EHRec$[esp+140], 0
	mov	DWORD PTR __Ptr$[esp+132], ebx
	mov	BYTE PTR __Bad$[esp+132], 0
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	SHORT $LN64@Getffld

; 704  : 		const string _Grouping = _Punct_fac.grouping();
; 705  : 		const _Elem _E0 = _MAKLOCCHR(_Elem, '0', _Cvt);
; 706  : 		char *_Ptr = _Ac;
; 707  : 		bool _Bad = false;
; 708  : 
; 709  : 		if (_First == _Last)
; 710  : 			;	// empty field
; 711  : 		else if (*_First == _MAKLOCCHR(_Elem, '+', _Cvt))

	cmp	BYTE PTR [ebp+4], al
	jne	SHORT $LN83@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN81@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN87@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN87@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN88@Getffld
$LN87@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN88@Getffld:
	cmp	eax, -1
	je	SHORT $LN81@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN80@Getffld
$LN81@Getffld:
	mov	DWORD PTR [ebp], 0
$LN80@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN83@Getffld:
	cmp	BYTE PTR [ebp+5], 43			; 0000002bH

; 712  : 			*_Ptr++ = '+', ++_First;	// gather plus sign

	mov	esi, ebp
	jne	SHORT $LN66@Getffld
	mov	BYTE PTR [ebx], 43			; 0000002bH
	jmp	SHORT $LN1126@Getffld
$LN66@Getffld:

; 713  : 		else if (*_First == _MAKLOCCHR(_Elem, '-', _Cvt))

	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN64@Getffld

; 714  : 			*_Ptr++ = '-', ++_First;	// gather minus sign

	mov	BYTE PTR [ebx], al
	mov	esi, ebp
$LN1126@Getffld:
	inc	ebx
	mov	DWORD PTR __Ptr$[esp+132], ebx
	call	??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++
$LN64@Getffld:

; 715  : 
; 716  : 		bool _Seendigit = false;	// seen a digit in input
; 717  : 		int _Significant = 0;	// number of significant digits
; 718  : 		int _Pten = 0;	// power of 10 multiplier
; 719  : 
; 720  : 		if (*_Grouping.c_str() == CHAR_MAX || *_Grouping.c_str() <= '\0')

	mov	ecx, DWORD PTR __Grouping$[esp+156]
	mov	edx, DWORD PTR __Grouping$[esp+136]
	xor	eax, eax
	mov	DWORD PTR __Significant$[esp+132], eax
	mov	DWORD PTR __Pten$[esp+132], eax
	mov	BYTE PTR __Seendigit$[esp+132], 0
	mov	eax, edx
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN112@Getffld
	lea	eax, DWORD PTR __Grouping$[esp+136]
$LN112@Getffld:
	cmp	BYTE PTR [eax], 127			; 0000007fH
	je	$LN62@Getffld
	mov	eax, edx
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN118@Getffld
	lea	eax, DWORD PTR __Grouping$[esp+136]
$LN118@Getffld:
	cmp	BYTE PTR [eax], 0
	jle	$LN62@Getffld

; 732  : 					}
; 733  : 		else
; 734  : 			{	// grouping specified, gather digits and group sizes
; 735  : 			const _Elem _Kseparator = _Punct_fac.thousands_sep();

	mov	ecx, DWORD PTR __Punct_fac$[esp+132]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	BYTE PTR __Kseparator$153562[esp+132], al

; 736  : 
; 737  : 			string _Groups((size_t)1, '\0');

	mov	DWORD PTR __Groups$153564[esp+156], 15	; 0000000fH
	mov	BYTE PTR __Groups$153564[esp+136], 0
	mov	DWORD PTR __Groups$153564[esp+152], 1
	mov	BYTE PTR __Groups$153564[esp+137], 0

; 738  : 			size_t _Group = 0;
; 739  : 
; 740  : 			for (; _First != _Last; ++_First)

	mov	edi, DWORD PTR __Last$GSCopy$[esp+132]
	mov	esi, ebp
	mov	BYTE PTR __$EHRec$[esp+140], 1
	xor	ebx, ebx
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN37@Getffld
$LN53@Getffld:

; 741  : 				if (_E0 <= *_First && *_First <= _E0 + 9)

	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN346@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN344@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN350@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN350@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN351@Getffld
$LN350@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN351@Getffld:
	cmp	eax, -1
	je	SHORT $LN344@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN343@Getffld
$LN344@Getffld:
	mov	DWORD PTR [ebp], 0
$LN343@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN346@Getffld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jl	$LN50@Getffld
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN372@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN370@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN376@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN376@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN377@Getffld
$LN376@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN377@Getffld:
	cmp	eax, -1
	je	SHORT $LN370@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN369@Getffld
$LN370@Getffld:
	mov	DWORD PTR [ebp], 0
$LN369@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN372@Getffld:
	cmp	BYTE PTR [ebp+5], 57			; 00000039H
	jg	SHORT $LN50@Getffld

; 742  : 					{	// got a digit, add to group size
; 743  : 					_Seendigit = true;
; 744  : 					if (_MAX_SIG_DIG <= _Significant)

	mov	edi, DWORD PTR __Significant$[esp+132]
	cmp	edi, 36					; 00000024H
	mov	BYTE PTR __Seendigit$[esp+132], 1
	jl	SHORT $LN49@Getffld

; 745  : 						++_Pten;	// just scale by 10

	inc	DWORD PTR __Pten$[esp+132]
	jmp	SHORT $LN46@Getffld
$LN49@Getffld:

; 746  : 					else if (*_First == _E0 && _Significant == 0)

	mov	esi, ebp
	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	cmp	al, 48					; 00000030H
	jne	SHORT $LN47@Getffld
	test	edi, edi
	je	SHORT $LN46@Getffld
$LN47@Getffld:

; 747  : 						;	// drop leading zeros
; 748  : 					else
; 749  : 						{	// save a significant digit
; 750  : 						*_Ptr++ = (char)((*_First - _E0) + '0');

	mov	esi, ebp
	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	mov	ecx, DWORD PTR __Ptr$[esp+132]
	mov	BYTE PTR [ecx], al
	inc	ecx

; 751  : 						++_Significant;

	inc	edi
	mov	DWORD PTR __Ptr$[esp+132], ecx
	mov	DWORD PTR __Significant$[esp+132], edi
$LN46@Getffld:

; 752  : 						}
; 753  : 					if (_Groups[_Group] != CHAR_MAX)

	cmp	ebx, DWORD PTR __Groups$153564[esp+152]
	jbe	SHORT $LN392@Getffld
	call	__invalid_parameter_noinfo
$LN392@Getffld:
	mov	eax, DWORD PTR __Groups$153564[esp+136]
	mov	esi, 16					; 00000010H
	cmp	DWORD PTR __Groups$153564[esp+156], esi
	jae	SHORT $LN398@Getffld
	lea	eax, DWORD PTR __Groups$153564[esp+136]
$LN398@Getffld:
	cmp	BYTE PTR [eax+ebx], 127			; 0000007fH
	je	SHORT $LN52@Getffld

; 754  : 						++_Groups[_Group];

	cmp	ebx, DWORD PTR __Groups$153564[esp+152]
	jbe	SHORT $LN399@Getffld
	call	__invalid_parameter_noinfo
$LN399@Getffld:
	mov	eax, DWORD PTR __Groups$153564[esp+136]
	cmp	DWORD PTR __Groups$153564[esp+156], esi
	jae	SHORT $LN405@Getffld
	lea	eax, DWORD PTR __Groups$153564[esp+136]
$LN405@Getffld:
	inc	BYTE PTR [eax+ebx]

; 755  : 					}
; 756  : 				else if (_Groups[_Group] == '\0'

	jmp	SHORT $LN52@Getffld
$LN50@Getffld:

; 757  : 					|| _Kseparator == (_Elem)0
; 758  : 					|| *_First != _Kseparator)

	cmp	ebx, DWORD PTR __Groups$153564[esp+152]
	jbe	SHORT $LN406@Getffld
	call	__invalid_parameter_noinfo
$LN406@Getffld:
	cmp	DWORD PTR __Groups$153564[esp+156], 16	; 00000010H
	mov	eax, DWORD PTR __Groups$153564[esp+136]
	jae	SHORT $LN412@Getffld
	lea	eax, DWORD PTR __Groups$153564[esp+136]
$LN412@Getffld:
	cmp	BYTE PTR [eax+ebx], 0
	je	SHORT $LN1057@Getffld
	cmp	BYTE PTR __Kseparator$153562[esp+132], 0
	je	SHORT $LN1057@Getffld
	mov	esi, ebp
	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	cmp	al, BYTE PTR __Kseparator$153562[esp+132]
	jne	SHORT $LN1057@Getffld

; 759  : 					break;	// not a group separator, done
; 760  : 				else
; 761  : 					{	// add a new group to _Groups string
; 762  : 					_Groups.append((size_t)1, '\0');

	push	0
	push	1
	lea	ecx, DWORD PTR __Groups$153564[esp+140]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 763  : 					++_Group;

	inc	ebx
$LN52@Getffld:
	mov	esi, ebp
	call	??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++
	mov	edi, DWORD PTR __Last$GSCopy$[esp+132]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	$LN53@Getffld
$LN1057@Getffld:

; 764  : 					}
; 765  : 			if (_Group == 0)

	test	ebx, ebx
	je	SHORT $LN37@Getffld

; 766  : 				;	// no thousands separators seen
; 767  : 			else if ('\0' < _Groups[_Group])

	cmp	ebx, DWORD PTR __Groups$153564[esp+152]
	jbe	SHORT $LN413@Getffld
	call	__invalid_parameter_noinfo
$LN413@Getffld:
	cmp	DWORD PTR __Groups$153564[esp+156], 16	; 00000010H
	mov	eax, DWORD PTR __Groups$153564[esp+136]
	jae	SHORT $LN419@Getffld
	lea	eax, DWORD PTR __Groups$153564[esp+136]
$LN419@Getffld:
	cmp	BYTE PTR [eax+ebx], 0
	jle	SHORT $LN38@Getffld

; 768  : 				++_Group;	// add trailing group to group count

	inc	ebx

; 769  : 			else

	jmp	SHORT $LN37@Getffld
$LN38@Getffld:

; 770  : 				_Bad = true;	// trailing separator, fail

	mov	BYTE PTR __Bad$[esp+132], 1
$LN37@Getffld:

; 771  : 
; 772  : 			for (const char *_Pg = _Grouping.c_str();

	mov	esi, DWORD PTR __Grouping$[esp+136]
	mov	edi, 16					; 00000010H
	cmp	DWORD PTR __Grouping$[esp+156], edi
	jae	SHORT $LN425@Getffld
	lea	esi, DWORD PTR __Grouping$[esp+136]
$LN425@Getffld:

; 773  : 				!_Bad && 0 < _Group; )

	cmp	BYTE PTR __Bad$[esp+132], 0
	jne	SHORT $LN1058@Getffld
$LL36@Getffld:
	test	ebx, ebx
	jbe	SHORT $LN1058@Getffld

; 774  : 				if (*_Pg == CHAR_MAX)

	cmp	BYTE PTR [esi], 127			; 0000007fH
	je	SHORT $LN1058@Getffld

; 775  : 					break;	// end of grouping constraints to check
; 776  : 				else if (0 < --_Group && *_Pg != _Groups[_Group]
; 777  : 					|| 0 == _Group && *_Pg < _Groups[_Group])

	sub	ebx, 1
	je	SHORT $LN30@Getffld
	cmp	ebx, DWORD PTR __Groups$153564[esp+152]
	jbe	SHORT $LN426@Getffld
	call	__invalid_parameter_noinfo
$LN426@Getffld:
	mov	eax, DWORD PTR __Groups$153564[esp+136]
	cmp	DWORD PTR __Groups$153564[esp+156], edi
	jae	SHORT $LN432@Getffld
	lea	eax, DWORD PTR __Groups$153564[esp+136]
$LN432@Getffld:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax+ebx]
	jne	SHORT $LN31@Getffld
$LN30@Getffld:
	test	ebx, ebx
	jne	SHORT $LN32@Getffld
	cmp	ebx, DWORD PTR __Groups$153564[esp+152]
	jbe	SHORT $LN433@Getffld
	call	__invalid_parameter_noinfo
$LN433@Getffld:
	mov	eax, DWORD PTR __Groups$153564[esp+136]
	cmp	DWORD PTR __Groups$153564[esp+156], edi
	jae	SHORT $LN439@Getffld
	lea	eax, DWORD PTR __Groups$153564[esp+136]
$LN439@Getffld:
	mov	dl, BYTE PTR [esi]
	cmp	dl, BYTE PTR [eax+ebx]
	jl	SHORT $LN31@Getffld
$LN32@Getffld:

; 779  : 				else if ('\0' < _Pg[1])

	cmp	BYTE PTR [esi+1], 0
	jle	SHORT $LL36@Getffld

; 773  : 				!_Bad && 0 < _Group; )

	inc	esi
	jmp	SHORT $LL36@Getffld
$LN31@Getffld:

; 778  : 					_Bad = true;	// bad group size, fail

	mov	BYTE PTR __Bad$[esp+132], 1
$LN1058@Getffld:

; 780  : 					++_Pg;	// group size okay, advance to next test
; 781  : 			}

	mov	BYTE PTR __$EHRec$[esp+140], 0
	cmp	DWORD PTR __Groups$153564[esp+156], edi
	jb	SHORT $LN1088@Getffld
	mov	eax, DWORD PTR __Groups$153564[esp+136]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1088@Getffld:
	mov	edi, DWORD PTR __Last$GSCopy$[esp+132]
$LN59@Getffld:

; 782  : 
; 783  : 		if (_Seendigit && _Significant == 0)

	cmp	BYTE PTR __Seendigit$[esp+132], 0
	je	SHORT $LN27@Getffld
	mov	ebx, DWORD PTR __Significant$[esp+132]
$LN1064@Getffld:
	test	ebx, ebx
	jne	SHORT $LN27@Getffld

; 784  : 			*_Ptr++ = '0';	// save at least one leading digit

	mov	eax, DWORD PTR __Ptr$[esp+132]
	mov	BYTE PTR [eax], 48			; 00000030H
	inc	eax
	mov	DWORD PTR __Ptr$[esp+132], eax
$LN27@Getffld:

; 785  : 
; 786  : 		if (_First != _Last && *_First == _Punct_fac.decimal_point())

	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN500@Getffld
	cmp	BYTE PTR [ebp+4], al
	jne	$LN476@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	$LN474@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	$LN480@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	$LN480@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	$LN481@Getffld
$LN62@Getffld:

; 721  : 			for (; _First != _Last
; 722  : 				&& _E0 <= *_First && *_First <= _E0 + 9;
; 723  : 					_Seendigit = true, ++_First)

	mov	edi, DWORD PTR __Last$GSCopy$[esp+132]
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	SHORT $LN27@Getffld
	mov	ebx, DWORD PTR __Significant$[esp+132]
$LN121@Getffld:
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN152@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN150@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN156@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN156@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN157@Getffld
$LN156@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN157@Getffld:
	cmp	eax, -1
	je	SHORT $LN150@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN149@Getffld
$LN150@Getffld:
	mov	DWORD PTR [ebp], 0
$LN149@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN152@Getffld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jl	$LN1121@Getffld
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN178@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN176@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN182@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN182@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN183@Getffld
$LN182@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN183@Getffld:
	cmp	eax, -1
	je	SHORT $LN176@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN175@Getffld
$LN176@Getffld:
	mov	DWORD PTR [ebp], 0
$LN175@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN178@Getffld:
	cmp	BYTE PTR [ebp+5], 57			; 00000039H
	jg	$LN1121@Getffld

; 724  : 				if (_MAX_SIG_DIG <= _Significant)

	cmp	ebx, 36					; 00000024H
	jl	SHORT $LN58@Getffld

; 725  : 					++_Pten;	// just scale by 10

	inc	DWORD PTR __Pten$[esp+132]
	jmp	SHORT $LN60@Getffld
$LN58@Getffld:

; 726  : 				else if (*_First == _E0 && _Significant == 0)

	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN204@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN202@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN208@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN208@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN209@Getffld
$LN208@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN209@Getffld:
	cmp	eax, -1
	je	SHORT $LN202@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN201@Getffld
$LN202@Getffld:
	mov	DWORD PTR [ebp], 0
$LN201@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN204@Getffld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jne	SHORT $LN56@Getffld
	test	ebx, ebx
	je	SHORT $LN60@Getffld
$LN56@Getffld:

; 727  : 					;	// drop leading zeros
; 728  : 				else
; 729  : 					{	// save a significant digit
; 730  : 					*_Ptr++ = (char)((*_First - _E0) + '0');

	mov	esi, ebp
	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	mov	ecx, DWORD PTR __Ptr$[esp+132]
	mov	BYTE PTR [ecx], al
	inc	ecx
	mov	DWORD PTR __Ptr$[esp+132], ecx

; 731  : 					++_Significant;

	inc	ebx
$LN60@Getffld:
	mov	ecx, DWORD PTR [ebp]
	mov	BYTE PTR __Seendigit$[esp+132], 1
	test	ecx, ecx
	je	SHORT $LN122@Getffld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN128@Getffld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN128@Getffld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN129@Getffld

; 721  : 			for (; _First != _Last
; 722  : 				&& _E0 <= *_First && *_First <= _E0 + 9;
; 723  : 					_Seendigit = true, ++_First)

$LN128@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN129@Getffld:
	cmp	eax, -1
	je	SHORT $LN122@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN1060@Getffld
$LN122@Getffld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN1060@Getffld:
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	$LN121@Getffld

; 731  : 					++_Significant;

	mov	DWORD PTR __Significant$[esp+132], ebx

; 782  : 
; 783  : 		if (_Seendigit && _Significant == 0)

	jmp	$LN1064@Getffld
$LN1121@Getffld:

; 731  : 					++_Significant;

	mov	DWORD PTR __Significant$[esp+132], ebx

; 782  : 
; 783  : 		if (_Seendigit && _Significant == 0)

	jmp	$LN59@Getffld

; 785  : 
; 786  : 		if (_First != _Last && *_First == _Punct_fac.decimal_point())

$LN480@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN481@Getffld:
	cmp	eax, -1
	je	SHORT $LN474@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN473@Getffld
$LN474@Getffld:
	mov	DWORD PTR [ebp], 0
$LN473@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN476@Getffld:
	mov	ecx, DWORD PTR __Punct_fac$[esp+132]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	bl, BYTE PTR [ebp+5]
	call	eax
	cmp	bl, al
	jne	SHORT $LN1072@Getffld

; 787  : 			*_Ptr++ = localeconv()->decimal_point[0], ++_First;	// add .

	call	_localeconv
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Ptr$[esp+132]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR [ebp]
	inc	eax
	mov	DWORD PTR __Ptr$[esp+132], eax
	test	ecx, ecx
	je	SHORT $LN501@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN507@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN507@Getffld
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN508@Getffld
$LN507@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN508@Getffld:
	cmp	eax, -1
	je	SHORT $LN501@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN1072@Getffld
$LN501@Getffld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN1072@Getffld:
	mov	edi, DWORD PTR __Last$GSCopy$[esp+132]
$LN500@Getffld:

; 788  : 
; 789  : 		if (_Significant == 0)

	mov	ebx, DWORD PTR __Significant$[esp+132]
	test	ebx, ebx
	jne	$LN21@Getffld

; 790  : 			{	// 0000. so far
; 791  : 			for (; _First != _Last && *_First == _E0;
; 792  : 				_Seendigit = true, ++_First)

	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN22@Getffld
$LN523@Getffld:
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN554@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN552@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN558@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN558@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN559@Getffld
$LN558@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN559@Getffld:
	cmp	eax, -1
	je	SHORT $LN552@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN551@Getffld
$LN552@Getffld:
	mov	DWORD PTR [ebp], 0
$LN551@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN554@Getffld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jne	SHORT $LN22@Getffld
	mov	ecx, DWORD PTR [ebp]

; 793  : 				--_Pten;	// just count leading fraction zeros

	dec	DWORD PTR __Pten$[esp+132]
	mov	BYTE PTR __Seendigit$[esp+132], 1
	test	ecx, ecx
	je	SHORT $LN524@Getffld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN530@Getffld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN530@Getffld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN531@Getffld

; 790  : 			{	// 0000. so far
; 791  : 			for (; _First != _Last && *_First == _E0;
; 792  : 				_Seendigit = true, ++_First)

$LN530@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN531@Getffld:
	cmp	eax, -1
	je	SHORT $LN524@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN1061@Getffld
$LN524@Getffld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN1061@Getffld:
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	$LN523@Getffld
$LN22@Getffld:

; 794  : 			if (_Pten < 0)

	cmp	DWORD PTR __Pten$[esp+132], 0
	jge	SHORT $LN21@Getffld

; 795  : 				*_Ptr++ = '0', ++_Pten;	// put one back

	mov	eax, DWORD PTR __Ptr$[esp+132]
	mov	BYTE PTR [eax], 48			; 00000030H
	inc	eax
	inc	DWORD PTR __Pten$[esp+132]
	mov	DWORD PTR __Ptr$[esp+132], eax
$LN21@Getffld:

; 796  : 			}
; 797  : 
; 798  : 		for (; _First != _Last
; 799  : 				&& _E0 <= *_First && *_First <= _E0 + 9;
; 800  : 				_Seendigit = true, ++_First)

	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN18@Getffld
$LN576@Getffld:
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN607@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN605@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN611@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN611@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN612@Getffld
$LN611@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN612@Getffld:
	cmp	eax, -1
	je	SHORT $LN605@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN604@Getffld
$LN605@Getffld:
	mov	DWORD PTR [ebp], 0
$LN604@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN607@Getffld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jl	$LN18@Getffld
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN633@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN631@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN637@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN637@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN638@Getffld
$LN637@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN638@Getffld:
	cmp	eax, -1
	je	SHORT $LN631@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN630@Getffld
$LN631@Getffld:
	mov	DWORD PTR [ebp], 0
$LN630@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN633@Getffld:
	cmp	BYTE PTR [ebp+5], 57			; 00000039H
	jg	$LN18@Getffld

; 801  : 			if (_Significant < _MAX_SIG_DIG)

	cmp	ebx, 36					; 00000024H
	jge	SHORT $LN19@Getffld

; 802  : 				{	// save a significant fraction digit
; 803  : 				*_Ptr++ = (char)((*_First - _E0) + '0');

	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN659@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN657@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN663@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN663@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN664@Getffld
$LN663@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN664@Getffld:
	cmp	eax, -1
	je	SHORT $LN657@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN656@Getffld
$LN657@Getffld:
	mov	DWORD PTR [ebp], 0
$LN656@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN659@Getffld:
	mov	eax, DWORD PTR __Ptr$[esp+132]
	mov	cl, BYTE PTR [ebp+5]
	mov	BYTE PTR [eax], cl
	inc	eax
	mov	DWORD PTR __Ptr$[esp+132], eax

; 804  : 				++_Significant;

	inc	ebx
$LN19@Getffld:
	mov	ecx, DWORD PTR [ebp]
	mov	BYTE PTR __Seendigit$[esp+132], 1
	test	ecx, ecx
	je	SHORT $LN577@Getffld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN583@Getffld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN583@Getffld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN584@Getffld

; 796  : 			}
; 797  : 
; 798  : 		for (; _First != _Last
; 799  : 				&& _E0 <= *_First && *_First <= _E0 + 9;
; 800  : 				_Seendigit = true, ++_First)

$LN583@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN584@Getffld:
	cmp	eax, -1
	je	SHORT $LN577@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN1062@Getffld
$LN577@Getffld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN1062@Getffld:
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	$LN576@Getffld

; 805  : 				}
; 806  : 
; 807  : 		if (_Seendigit && _First != _Last
; 808  : 			&& (*_First == _MAKLOCCHR(_Elem, 'e', _Cvt)
; 809  : 				|| *_First == _MAKLOCCHR(_Elem, 'E', _Cvt)))

	jmp	SHORT $LN1065@Getffld
$LN18@Getffld:
	cmp	BYTE PTR __Seendigit$[esp+132], 0
	je	$LN4@Getffld
$LN1065@Getffld:
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN4@Getffld
	cmp	BYTE PTR [ebp+4], al
	jne	SHORT $LN689@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN687@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN693@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN693@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN694@Getffld
$LN693@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN694@Getffld:
	cmp	eax, -1
	je	SHORT $LN687@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN686@Getffld
$LN687@Getffld:
	mov	DWORD PTR [ebp], 0
$LN686@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN689@Getffld:
	cmp	BYTE PTR [ebp+5], 101			; 00000065H
	je	SHORT $LN15@Getffld
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN717@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN715@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN721@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN721@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN722@Getffld
$LN721@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN722@Getffld:
	cmp	eax, -1
	je	SHORT $LN715@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN714@Getffld
$LN715@Getffld:
	mov	DWORD PTR [ebp], 0
$LN714@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN717@Getffld:
	cmp	BYTE PTR [ebp+5], 69			; 00000045H
	jne	$LN4@Getffld
$LN15@Getffld:

; 810  : 			{	// 'e' or 'E', collect exponent
; 811  : 			*_Ptr++ = 'e', ++_First;

	mov	ebx, DWORD PTR __Ptr$[esp+132]
	mov	BYTE PTR [ebx], 101			; 00000065H
	mov	ecx, DWORD PTR [ebp]
	inc	ebx
	mov	DWORD PTR __Ptr$[esp+132], ebx
	test	ecx, ecx
	je	SHORT $LN742@Getffld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN748@Getffld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN748@Getffld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN749@Getffld
$LN748@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN749@Getffld:
	cmp	eax, -1
	je	SHORT $LN742@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN741@Getffld
$LN742@Getffld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN741@Getffld:

; 812  : 			_Seendigit = false, _Significant = 0;
; 813  : 
; 814  : 			if (_First == _Last)

	mov	esi, ebp
	mov	BYTE PTR __Seendigit$[esp+132], 0
	mov	DWORD PTR __Significant$[esp+132], 0
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN1055@Getffld

; 815  : 				;	// 'e' or 'E' is last element
; 816  : 			else if (*_First == _MAKLOCCHR(_Elem, '+', _Cvt))

	cmp	BYTE PTR [ebp+4], al
	jne	SHORT $LN770@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN768@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN774@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN774@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN775@Getffld
$LN774@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN775@Getffld:
	cmp	eax, -1
	je	SHORT $LN768@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN767@Getffld
$LN768@Getffld:
	mov	DWORD PTR [ebp], 0
$LN767@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN770@Getffld:
	cmp	BYTE PTR [ebp+5], 43			; 0000002bH
	jne	SHORT $LN12@Getffld

; 817  : 				*_Ptr++ = '+', ++_First;	// gather plus sign

	mov	BYTE PTR [ebx], 43			; 0000002bH
	jmp	SHORT $LN1129@Getffld
$LN12@Getffld:

; 818  : 			else if (*_First == _MAKLOCCHR(_Elem, '-', _Cvt))

	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN821@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN819@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN825@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN825@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN826@Getffld
$LN825@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN826@Getffld:
	cmp	eax, -1
	je	SHORT $LN819@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN818@Getffld
$LN819@Getffld:
	mov	DWORD PTR [ebp], 0
$LN818@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN821@Getffld:
	cmp	BYTE PTR [ebp+5], 45			; 0000002dH
	jne	SHORT $LN1055@Getffld

; 819  : 				*_Ptr++ = '-', ++_First;	// gather minus sign

	mov	BYTE PTR [ebx], 45			; 0000002dH
$LN1129@Getffld:
	mov	ecx, DWORD PTR [ebp]
	inc	ebx
	mov	DWORD PTR __Ptr$[esp+132], ebx
	test	ecx, ecx
	je	SHORT $LN846@Getffld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN852@Getffld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN852@Getffld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN853@Getffld
$LN852@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN853@Getffld:
	cmp	eax, -1
	je	SHORT $LN846@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN1055@Getffld
$LN846@Getffld:
	mov	BYTE PTR [ebp+4], 1
	mov	DWORD PTR [ebp], 0
$LN1055@Getffld:

; 820  : 			for (; _First != _Last && *_First == _E0; )

	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN7@Getffld
$LN9@Getffld:
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN876@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN874@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN880@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN880@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN881@Getffld
$LN880@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN881@Getffld:
	cmp	eax, -1
	je	SHORT $LN874@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN873@Getffld
$LN874@Getffld:
	mov	DWORD PTR [ebp], 0
$LN873@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN876@Getffld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jne	SHORT $LN8@Getffld

; 821  : 				_Seendigit = true, ++_First;	// strip leading zeros

	mov	ecx, DWORD PTR [ebp]
	mov	BYTE PTR __Seendigit$[esp+132], 1
	test	ecx, ecx
	je	SHORT $LN899@Getffld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN905@Getffld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN905@Getffld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN906@Getffld
$LN905@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN906@Getffld:
	cmp	eax, -1
	je	SHORT $LN899@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN898@Getffld
$LN899@Getffld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN898@Getffld:
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	$LN9@Getffld

; 822  : 			if (_Seendigit)

	jmp	SHORT $LN1066@Getffld
$LN8@Getffld:
	cmp	BYTE PTR __Seendigit$[esp+132], 0
	je	SHORT $LN7@Getffld
$LN1066@Getffld:

; 823  : 				*_Ptr++ = '0';	// put one back

	mov	eax, DWORD PTR __Ptr$[esp+132]
	mov	BYTE PTR [eax], 48			; 00000030H
	inc	eax
	mov	DWORD PTR __Ptr$[esp+132], eax
$LN7@Getffld:

; 824  : 			for (; _First != _Last
; 825  : 				&& _E0 <= *_First && *_First <= _E0 + 9;
; 826  : 				_Seendigit = true, ++_First)

	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN4@Getffld
	mov	ebx, DWORD PTR __Ptr$[esp+132]
$LN921@Getffld:
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN952@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN950@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN956@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN956@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN957@Getffld
$LN956@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN957@Getffld:
	cmp	eax, -1
	je	SHORT $LN950@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN949@Getffld
$LN950@Getffld:
	mov	DWORD PTR [ebp], 0
$LN949@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN952@Getffld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jl	$LN1124@Getffld
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN978@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN976@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN982@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN982@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN983@Getffld
$LN982@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN983@Getffld:
	cmp	eax, -1
	je	SHORT $LN976@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN975@Getffld
$LN976@Getffld:
	mov	DWORD PTR [ebp], 0
$LN975@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN978@Getffld:
	cmp	BYTE PTR [ebp+5], 57			; 00000039H
	jg	$LN1124@Getffld

; 827  : 				if (_Significant < _MAX_EXP_DIG)

	cmp	DWORD PTR __Significant$[esp+132], 8
	jge	SHORT $LN5@Getffld

; 828  : 					{	// save a significant exponent digit
; 829  : 					*_Ptr++ = (char)((*_First - _E0) + '0');

	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN1004@Getffld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN1002@Getffld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1008@Getffld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN1008@Getffld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN1009@Getffld
$LN1008@Getffld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN1009@Getffld:
	cmp	eax, -1
	je	SHORT $LN1002@Getffld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN1001@Getffld
$LN1002@Getffld:
	mov	DWORD PTR [ebp], 0
$LN1001@Getffld:
	mov	BYTE PTR [ebp+4], 1
$LN1004@Getffld:
	mov	cl, BYTE PTR [ebp+5]
	mov	BYTE PTR [ebx], cl
	inc	ebx

; 830  : 					++_Significant;

	inc	DWORD PTR __Significant$[esp+132]
$LN5@Getffld:
	mov	ecx, DWORD PTR [ebp]
	mov	BYTE PTR __Seendigit$[esp+132], 1
	test	ecx, ecx
	je	SHORT $LN922@Getffld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN928@Getffld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN928@Getffld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN929@Getffld

; 824  : 			for (; _First != _Last
; 825  : 				&& _E0 <= *_First && *_First <= _E0 + 9;
; 826  : 				_Seendigit = true, ++_First)

$LN928@Getffld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN929@Getffld:
	cmp	eax, -1
	je	SHORT $LN922@Getffld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN1063@Getffld
$LN922@Getffld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN1063@Getffld:
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	$LN921@Getffld
$LN1124@Getffld:

; 828  : 					{	// save a significant exponent digit
; 829  : 					*_Ptr++ = (char)((*_First - _E0) + '0');

	mov	DWORD PTR __Ptr$[esp+132], ebx
$LN4@Getffld:

; 831  : 					}
; 832  : 			}
; 833  : 
; 834  : 		if (_Bad || !_Seendigit)

	cmp	BYTE PTR __Bad$[esp+132], 0
	jne	SHORT $LN1@Getffld
	cmp	BYTE PTR __Seendigit$[esp+132], 0
	jne	SHORT $LN1095@Getffld
$LN1@Getffld:

; 835  : 			_Ptr = _Ac;	// roll back pointer to indicate failure

	mov	eax, DWORD PTR __Ac$GSCopy$[esp+132]
	jmp	SHORT $LN2@Getffld
$LN1095@Getffld:
	mov	eax, DWORD PTR __Ptr$[esp+132]
$LN2@Getffld:

; 836  : 		*_Ptr = '\0';
; 837  : 		return (_Pten);

	cmp	DWORD PTR __Grouping$[esp+156], 16	; 00000010H
	mov	BYTE PTR [eax], 0
	jb	SHORT $LN1067@Getffld
	mov	eax, DWORD PTR __Grouping$[esp+136]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1067@Getffld:
	mov	eax, DWORD PTR __Pten$[esp+132]

; 838  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+112]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z$0:
	lea	ecx, DWORD PTR __Grouping$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z$1:
	lea	ecx, DWORD PTR __Groups$153564[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-116]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getffld
PUBLIC	__Ac$GSCopy$
PUBLIC	__Last$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z$1
__ehfuncinfo$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z
_TEXT	SEGMENT
__Seendigit$ = -95					; size = 1
__Nonzero$ = -94					; size = 1
__Kseparator$ = -93					; size = 1
__Base$ = -92						; size = 4
__Last$GSCopy$ = -88					; size = 4
__Group$ = -88						; size = 4
__Ptr$ = -84						; size = 4
__Ac$GSCopy$ = -80					; size = 4
__Dlen$ = -76						; size = 4
__Groups$ = -72						; size = 28
__Grouping$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Ac$ = 8						; size = 4
__First$ = 12						; size = 4
__Basefield$ = 16					; size = 4
__Loc$ = 20						; size = 4
?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld, COMDAT
; __Last$ = ecx

; 616  : 		{	// get integer field from [_First, _Last) into _Ac

	push	-1
	push	__ehhandler$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+96], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR __Basefield$[esp+112]
	mov	eax, DWORD PTR __Ac$[esp+112]
	mov	ebp, DWORD PTR __First$[esp+112]

; 632  : 		int _Base = _Basefield == ios_base::oct ? 8
; 633  : 			: _Basefield == ios_base::hex ? 16
; 634  : 			: _Basefield == ios_base::_Fmtzero ? 0 : 10;

	mov	DWORD PTR __Last$GSCopy$[esp+116], ecx
	mov	ecx, DWORD PTR __Loc$[esp+112]
	mov	DWORD PTR __Ac$GSCopy$[esp+116], eax
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	edi, eax
	lea	esi, DWORD PTR __Grouping$[esp+116]
	mov	ecx, edi
	call	?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
	mov	DWORD PTR __$EHRec$[esp+124], 0
	cmp	DWORD PTR __Grouping$[esp+136], 0
	jne	SHORT $LN41@Getifld

; 617  : 		const _Mypunct& _Punct_fac = _USE(_Loc, _Mypunct);
; 618  : 		const string _Grouping = _Punct_fac.grouping();
; 619  : 		const _Elem _Kseparator = _Grouping.size() == 0
; 620  : 			? (_Elem)0 : _Punct_fac.thousands_sep();

	mov	BYTE PTR __Kseparator$[esp+116], 0
	jmp	SHORT $LN42@Getifld
$LN41@Getifld:
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, edi
	call	eax
	mov	BYTE PTR __Kseparator$[esp+116], al
$LN42@Getifld:

; 621  : 		const _Elem _E0 = _MAKLOCCHR(_Elem, '0', _Cvt);
; 622  : 		char *_Ptr = _Ac;

	mov	ecx, DWORD PTR __Ac$GSCopy$[esp+116]

; 623  : 
; 624  : 		if (_First == _Last)

	mov	edi, DWORD PTR __Last$GSCopy$[esp+116]
	mov	esi, ebp
	mov	DWORD PTR __Ptr$[esp+116], ecx
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	SHORT $LN34@Getifld

; 625  : 			;	// empty field
; 626  : 		else if (*_First == _MAKLOCCHR(_Elem, '+', _Cvt))

	cmp	BYTE PTR [ebp+4], al
	jne	SHORT $LN65@Getifld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN63@Getifld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN69@Getifld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN69@Getifld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN70@Getifld
$LN69@Getifld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN70@Getifld:
	cmp	eax, -1
	je	SHORT $LN63@Getifld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN62@Getifld
$LN63@Getifld:
	mov	DWORD PTR [ebp], 0
$LN62@Getifld:
	mov	BYTE PTR [ebp+4], 1
$LN65@Getifld:
	mov	al, BYTE PTR [ebp+5]

; 627  : 			*_Ptr++ = '+', ++_First;	// gather plus sign

	mov	esi, ebp
	cmp	al, 43					; 0000002bH
	jne	SHORT $LN36@Getifld
	mov	eax, DWORD PTR __Ac$GSCopy$[esp+116]
	mov	BYTE PTR [eax], 43			; 0000002bH
	jmp	SHORT $LN445@Getifld
$LN36@Getifld:

; 628  : 		else if (*_First == _MAKLOCCHR(_Elem, '-', _Cvt))

	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN34@Getifld

; 629  : 			*_Ptr++ = '-', ++_First;	// gather minus sign

	mov	eax, DWORD PTR __Ac$GSCopy$[esp+116]
	mov	BYTE PTR [eax], 45			; 0000002dH
	mov	esi, ebp
$LN445@Getifld:
	inc	eax
	mov	DWORD PTR __Ptr$[esp+116], eax
	call	??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++
$LN34@Getifld:

; 630  : 
; 631  : 		_Basefield &= ios_base::basefield;

	and	ebx, 3584				; 00000e00H

; 632  : 		int _Base = _Basefield == ios_base::oct ? 8
; 633  : 			: _Basefield == ios_base::hex ? 16
; 634  : 			: _Basefield == ios_base::_Fmtzero ? 0 : 10;

	cmp	ebx, 1024				; 00000400H
	jne	SHORT $LN45@Getifld
	mov	DWORD PTR __Base$[esp+116], 8
	mov	ebx, DWORD PTR __Base$[esp+116]
	jmp	SHORT $LN44@Getifld
$LN45@Getifld:
	cmp	ebx, 2048				; 00000800H
	jne	SHORT $LN43@Getifld
	mov	ebx, 16					; 00000010H
	jmp	SHORT $LN446@Getifld
$LN43@Getifld:
	neg	ebx
	sbb	ebx, ebx
	and	ebx, 10					; 0000000aH
$LN446@Getifld:
	mov	DWORD PTR __Base$[esp+116], ebx
$LN44@Getifld:

; 635  : 
; 636  : 		bool _Seendigit = false;	// seen a digit in input
; 637  : 		bool _Nonzero = false;	// seen a nonzero digit in input
; 638  : 
; 639  : 		if (_First != _Last && *_First == _E0)

	mov	esi, ebp
	mov	BYTE PTR __Seendigit$[esp+116], 0
	mov	BYTE PTR __Nonzero$[esp+116], 0
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN28@Getifld
	cmp	BYTE PTR [ebp+4], al
	jne	SHORT $LN99@Getifld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN97@Getifld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN103@Getifld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN103@Getifld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN104@Getifld
$LN103@Getifld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN104@Getifld:
	cmp	eax, -1
	je	SHORT $LN97@Getifld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN96@Getifld
$LN97@Getifld:
	mov	DWORD PTR [ebp], 0
$LN96@Getifld:
	mov	BYTE PTR [ebp+4], 1
$LN99@Getifld:
	cmp	BYTE PTR [ebp+5], 48			; 00000030H
	jne	SHORT $LN28@Getifld

; 640  : 			{	// leading zero, look for 0x, 0X
; 641  : 			_Seendigit = true, ++_First;

	mov	esi, ebp
	mov	BYTE PTR __Seendigit$[esp+116], 1
	call	??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++

; 642  : 			if (_First != _Last && (*_First == _MAKLOCCHR(_Elem, 'x', _Cvt)
; 643  : 					|| *_First == _MAKLOCCHR(_Elem, 'X', _Cvt))
; 644  : 				&& (_Base == 0 || _Base == 16))

	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	SHORT $LN32@Getifld
	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	cmp	al, 120					; 00000078H
	je	SHORT $LN31@Getifld
	call	??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEDXZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator*
	cmp	al, 88					; 00000058H
	jne	SHORT $LN32@Getifld
$LN31@Getifld:
	test	ebx, ebx
	je	SHORT $LN30@Getifld
	cmp	ebx, 16					; 00000010H
	jne	SHORT $LN32@Getifld
$LN30@Getifld:

; 645  : 				_Base = 16, _Seendigit = false, ++_First;

	mov	ebx, 16					; 00000010H
	mov	esi, ebp
	mov	DWORD PTR __Base$[esp+116], ebx
	mov	BYTE PTR __Seendigit$[esp+116], 0
	call	??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ ; std::istreambuf_iterator<char,std::char_traits<char> >::operator++
	jmp	SHORT $LN425@Getifld
$LN32@Getifld:

; 646  : 			else if (_Base == 0)

	test	ebx, ebx
	jne	SHORT $LN424@Getifld

; 647  : 				_Base = 8;

	mov	ebx, 8
	mov	DWORD PTR __Base$[esp+116], ebx

; 648  : 			}
; 649  : 
; 650  : 		int _Dlen = _Base == 0 || _Base == 10 ? 10
; 651  : 			: _Base == 8 ? 8 : 16 + 6;

	jmp	SHORT $LN425@Getifld
$LN28@Getifld:
	test	ebx, ebx
	je	SHORT $LN47@Getifld
$LN424@Getifld:
	cmp	ebx, 10					; 0000000aH
	je	SHORT $LN47@Getifld
$LN425@Getifld:
	mov	eax, ebx
	sub	eax, 8
	neg	eax
	sbb	eax, eax
	and	eax, 14					; 0000000eH
	add	eax, 8
	mov	DWORD PTR __Dlen$[esp+116], eax
	jmp	SHORT $LN48@Getifld
$LN47@Getifld:
	mov	DWORD PTR __Dlen$[esp+116], 10		; 0000000aH
$LN48@Getifld:

; 652  : 		string _Groups((size_t)1, (char)_Seendigit);

	mov	al, BYTE PTR __Seendigit$[esp+116]
	mov	DWORD PTR __Groups$[esp+140], 15	; 0000000fH
	mov	BYTE PTR __Groups$[esp+120], al
	mov	DWORD PTR __Groups$[esp+136], 1
	mov	BYTE PTR __Groups$[esp+121], 0

; 653  : 		size_t _Group = 0;

	xor	ebx, ebx

; 654  : 
; 655  : 		for (char *const _Pe = &_Ac[_MAX_INT_DIG - 1];
; 656  : 			_First != _Last; ++_First)

	mov	esi, ebp
	mov	BYTE PTR __$EHRec$[esp+124], 1
	mov	DWORD PTR __Group$[esp+116], ebx
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	jne	$LN440@Getifld
$LN239@Getifld:

; 657  : 			if (::memchr((const char *)"0123456789abcdefABCDEF",
; 658  : 				*_Ptr = _MAKLOCBYTE(_Elem, *_First, _Cvt), _Dlen) != 0)

	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN270@Getifld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN268@Getifld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN274@Getifld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN274@Getifld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN275@Getifld
$LN274@Getifld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN275@Getifld:
	cmp	eax, -1
	je	SHORT $LN268@Getifld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN267@Getifld
$LN268@Getifld:
	mov	DWORD PTR [ebp], 0
$LN267@Getifld:
	mov	BYTE PTR [ebp+4], 1
$LN270@Getifld:
	mov	al, BYTE PTR [ebp+5]
	mov	ecx, DWORD PTR __Dlen$[esp+116]
	mov	esi, DWORD PTR __Ptr$[esp+116]
	movsx	edx, al
	push	ecx
	push	edx
	push	OFFSET ??_C@_0BH@HHDGIIFB@0123456789abcdefABCDEF?$AA@
	mov	BYTE PTR [esi], al
	call	_memchr
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN24@Getifld

; 659  : 				{	// got a digit, characterize it and add to group size
; 660  : 				if ((_Nonzero || *_Ptr != '0') && _Ptr < _Pe)

	cmp	BYTE PTR __Nonzero$[esp+116], 0
	jne	SHORT $LN22@Getifld
	cmp	BYTE PTR [esi], 48			; 00000030H
	je	SHORT $LN23@Getifld
$LN22@Getifld:
	mov	eax, DWORD PTR __Ac$GSCopy$[esp+116]
	add	eax, 31					; 0000001fH
	cmp	esi, eax
	jae	SHORT $LN23@Getifld

; 661  : 					++_Ptr, _Nonzero = true;

	inc	esi
	mov	DWORD PTR __Ptr$[esp+116], esi
	mov	BYTE PTR __Nonzero$[esp+116], 1
$LN23@Getifld:

; 662  : 				_Seendigit = true;

	mov	BYTE PTR __Seendigit$[esp+116], 1

; 663  : 				if (_Groups[_Group] != CHAR_MAX)

	cmp	ebx, DWORD PTR __Groups$[esp+136]
	jbe	SHORT $LN292@Getifld
	call	__invalid_parameter_noinfo
$LN292@Getifld:
	mov	eax, DWORD PTR __Groups$[esp+120]
	mov	esi, 16					; 00000010H
	cmp	DWORD PTR __Groups$[esp+140], esi
	jae	SHORT $LN298@Getifld
	lea	eax, DWORD PTR __Groups$[esp+120]
$LN298@Getifld:
	cmp	BYTE PTR [eax+ebx], 127			; 0000007fH
	je	$LN26@Getifld

; 664  : 					++_Groups[_Group];

	cmp	ebx, DWORD PTR __Groups$[esp+136]
	jbe	SHORT $LN299@Getifld
	call	__invalid_parameter_noinfo
$LN299@Getifld:
	mov	eax, DWORD PTR __Groups$[esp+120]
	cmp	DWORD PTR __Groups$[esp+140], esi
	jae	SHORT $LN305@Getifld
	lea	eax, DWORD PTR __Groups$[esp+120]
$LN305@Getifld:
	inc	BYTE PTR [eax+ebx]

; 665  : 				}
; 666  : 			else if (_Groups[_Group] == '\0'

	jmp	$LN26@Getifld
$LN24@Getifld:

; 667  : 				|| _Kseparator == (_Elem)0
; 668  : 				|| *_First != _Kseparator)

	cmp	ebx, DWORD PTR __Groups$[esp+136]
	jbe	SHORT $LN306@Getifld
	call	__invalid_parameter_noinfo
$LN306@Getifld:
	cmp	DWORD PTR __Groups$[esp+140], 16	; 00000010H
	mov	eax, DWORD PTR __Groups$[esp+120]
	jae	SHORT $LN312@Getifld
	lea	eax, DWORD PTR __Groups$[esp+120]
$LN312@Getifld:
	cmp	BYTE PTR [eax+ebx], 0
	je	$LN420@Getifld
	mov	bl, BYTE PTR __Kseparator$[esp+116]
	test	bl, bl
	je	$LN420@Getifld
	cmp	BYTE PTR [ebp+4], 0
	jne	SHORT $LN319@Getifld
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN317@Getifld
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN323@Getifld
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN323@Getifld
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN324@Getifld
$LN323@Getifld:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN324@Getifld:
	cmp	eax, -1
	je	SHORT $LN317@Getifld
	mov	BYTE PTR [ebp+5], al
	jmp	SHORT $LN316@Getifld
$LN317@Getifld:
	mov	DWORD PTR [ebp], 0
$LN316@Getifld:
	mov	BYTE PTR [ebp+4], 1
$LN319@Getifld:
	cmp	BYTE PTR [ebp+5], bl
	jne	SHORT $LN420@Getifld

; 669  : 				break;	// not a group separator, done
; 670  : 			else
; 671  : 				{	// add a new group to _Groups string
; 672  : 				_Groups.append((string::size_type)1, '\0');

	push	0
	push	1
	lea	ecx, DWORD PTR __Groups$[esp+124]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 673  : 				++_Group;

	inc	DWORD PTR __Group$[esp+116]
	mov	ebx, DWORD PTR __Group$[esp+116]
$LN26@Getifld:
	mov	ecx, DWORD PTR [ebp]
	test	ecx, ecx
	je	SHORT $LN240@Getifld
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN246@Getifld
	mov	eax, DWORD PTR [ecx+48]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN246@Getifld
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [ecx], edx
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LN247@Getifld

; 654  : 
; 655  : 		for (char *const _Pe = &_Ac[_MAX_INT_DIG - 1];
; 656  : 			_First != _Last; ++_First)

$LN246@Getifld:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN247@Getifld:
	cmp	eax, -1
	je	SHORT $LN240@Getifld
	mov	BYTE PTR [ebp+4], 0
	jmp	SHORT $LN422@Getifld
$LN240@Getifld:
	mov	DWORD PTR [ebp], 0
	mov	BYTE PTR [ebp+4], 1
$LN422@Getifld:
	mov	esi, ebp
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	$LN239@Getifld
$LN420@Getifld:

; 674  : 				}
; 675  : 
; 676  : 		if (_Group == 0)

	mov	ebx, DWORD PTR __Group$[esp+116]
	test	ebx, ebx
	je	SHORT $LN440@Getifld

; 677  : 			;	// no thousands separators seen
; 678  : 		else if ('\0' < _Groups[_Group])

	cmp	ebx, DWORD PTR __Groups$[esp+136]
	jbe	SHORT $LN339@Getifld
	call	__invalid_parameter_noinfo
$LN339@Getifld:
	mov	eax, DWORD PTR __Groups$[esp+120]
	mov	edi, 16					; 00000010H
	cmp	DWORD PTR __Groups$[esp+140], edi
	jae	SHORT $LN345@Getifld
	lea	eax, DWORD PTR __Groups$[esp+120]
$LN345@Getifld:
	cmp	BYTE PTR [eax+ebx], 0
	jle	SHORT $LN14@Getifld

; 679  : 			++_Group;	// add trailing group to group count

	inc	ebx

; 680  : 		else

	jmp	SHORT $LN13@Getifld
$LN14@Getifld:

; 681  : 			_Seendigit = false;	// trailing separator, fail

	mov	BYTE PTR __Seendigit$[esp+116], 0
	jmp	SHORT $LN13@Getifld
$LN440@Getifld:

; 680  : 		else

	mov	edi, 16					; 00000010H
$LN13@Getifld:

; 682  : 
; 683  : 		for (const char *_Pg = _Grouping.c_str(); _Seendigit && 0 < _Group; )

	mov	esi, DWORD PTR __Grouping$[esp+120]
	cmp	DWORD PTR __Grouping$[esp+140], edi
	jae	SHORT $LN351@Getifld
	lea	esi, DWORD PTR __Grouping$[esp+120]
$LN351@Getifld:
	cmp	BYTE PTR __Seendigit$[esp+116], 0
	je	SHORT $LN423@Getifld
$LL12@Getifld:
	test	ebx, ebx
	jbe	SHORT $LN421@Getifld

; 684  : 			if (*_Pg == CHAR_MAX)

	cmp	BYTE PTR [esi], 127			; 0000007fH
	je	SHORT $LN421@Getifld

; 685  : 				break;	// end of grouping constraints to check
; 686  : 			else if (0 < --_Group && *_Pg != _Groups[_Group]
; 687  : 				|| 0 == _Group && *_Pg < _Groups[_Group])

	sub	ebx, 1
	je	SHORT $LN6@Getifld
	cmp	ebx, DWORD PTR __Groups$[esp+136]
	jbe	SHORT $LN352@Getifld
	call	__invalid_parameter_noinfo
$LN352@Getifld:
	mov	eax, DWORD PTR __Groups$[esp+120]
	cmp	DWORD PTR __Groups$[esp+140], edi
	jae	SHORT $LN358@Getifld
	lea	eax, DWORD PTR __Groups$[esp+120]
$LN358@Getifld:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax+ebx]
	jne	SHORT $LN423@Getifld
$LN6@Getifld:
	test	ebx, ebx
	jne	SHORT $LN8@Getifld
	cmp	ebx, DWORD PTR __Groups$[esp+136]
	jbe	SHORT $LN359@Getifld
	call	__invalid_parameter_noinfo
$LN359@Getifld:
	mov	eax, DWORD PTR __Groups$[esp+120]
	cmp	DWORD PTR __Groups$[esp+140], edi
	jae	SHORT $LN365@Getifld
	lea	eax, DWORD PTR __Groups$[esp+120]
$LN365@Getifld:
	mov	dl, BYTE PTR [esi]
	cmp	dl, BYTE PTR [eax+ebx]
	jl	SHORT $LN423@Getifld
$LN8@Getifld:

; 688  : 				_Seendigit = false;	// bad group size, fail
; 689  : 			else if ('\0' < _Pg[1])

	cmp	BYTE PTR [esi+1], 0
	jle	SHORT $LL12@Getifld

; 682  : 
; 683  : 		for (const char *_Pg = _Grouping.c_str(); _Seendigit && 0 < _Group; )

	inc	esi
	jmp	SHORT $LL12@Getifld
$LN421@Getifld:

; 690  : 				++_Pg;	// group size okay, advance to next test
; 691  : 
; 692  : 		if (_Seendigit && !_Nonzero)

	cmp	BYTE PTR __Nonzero$[esp+116], 0

; 693  : 			*_Ptr++ = '0';	// zero field, replace stripped zero(s)

	mov	eax, DWORD PTR __Ptr$[esp+116]
	jne	SHORT $LN1@Getifld
	mov	BYTE PTR [eax], 48			; 00000030H
	inc	eax
	jmp	SHORT $LN1@Getifld
$LN423@Getifld:

; 694  : 		else if (!_Seendigit)
; 695  : 			_Ptr = _Ac;	// roll back pointer to indicate failure

	mov	eax, DWORD PTR __Ac$GSCopy$[esp+116]
$LN1@Getifld:

; 696  : 		*_Ptr = '\0';

	mov	BYTE PTR [eax], 0

; 697  : 		return (_Base);

	cmp	DWORD PTR __Groups$[esp+140], edi
	jb	SHORT $LN382@Getifld
	mov	eax, DWORD PTR __Groups$[esp+120]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN382@Getifld:
	mov	DWORD PTR __Groups$[esp+140], 15	; 0000000fH
	mov	DWORD PTR __Groups$[esp+136], 0
	mov	BYTE PTR __Groups$[esp+120], 0
	cmp	DWORD PTR __Grouping$[esp+140], edi
	jb	SHORT $LN427@Getifld
	mov	ecx, DWORD PTR __Grouping$[esp+120]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN427@Getifld:
	mov	eax, DWORD PTR __Base$[esp+116]

; 698  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+96]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 96					; 00000060H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z$0:
	lea	ecx, DWORD PTR __Grouping$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z$1:
	lea	ecx, DWORD PTR __Groups$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-100]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
;	COMDAT ??0?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = eax

; 416  : BOOST_IOSTREAMS_DECL_CHAIN(chain, char)

	push	edi
	mov	edi, eax
	call	??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
	mov	eax, edi
	pop	edi
	ret	0
??0?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 941  : 		return (append((size_type)1, _Ch));

	mov	eax, DWORD PTR __Ch$[esp-4]
	push	eax
	push	1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 942  : 		}

	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
PUBLIC	__Val$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z
_TEXT	SEGMENT
__Errno$ = -84						; size = 4
__Ans$ = -80						; size = 8
__Base$ = -80						; size = 4
__Ep$ = -72						; size = 4
__Val$GSCopy$ = -68					; size = 4
$T494428 = -64						; size = 4
___$ReturnUdt$GSCopy$ = -60				; size = 4
__Lock$494454 = -56					; size = 4
__Ac$ = -52						; size = 32
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 584  : 		{	// get void pointer from [_First, _Last) into _Val

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __Iosbase$[ebp]
	mov	ebx, DWORD PTR __State$[ebp]

; 585  : 		_DEBUG_RANGE(_First, _Last);
; 586  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 587  : 		int _Errno = 0;
; 588  : 
; 589  :  #ifdef _LONGLONG
; 590  : 		int _Base = _Getifld(_Ac, _First, _Last, ios_base::hex,
; 591  : 			_Iosbase.getloc());	// gather field

	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+100], eax
	lea	eax, DWORD PTR $T494428[esp+100]
	xor	esi, esi
	push	eax
	mov	DWORD PTR __Val$GSCopy$[esp+104], edx
	mov	DWORD PTR __Errno$[esp+104], esi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	push	eax
	push	2048					; 00000800H
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Ac$[esp+112]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __$EHRec$[esp+124], esi
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	mov	DWORD PTR __$EHRec$[esp+124], -1
	mov	edi, DWORD PTR $T494428[esp+116]
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Base$[esp+100], eax
	cmp	edi, esi
	je	SHORT $LN13@do_get
	push	esi
	lea	ecx, DWORD PTR __Lock$494454[esp+104]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, esi
	jbe	SHORT $LN15@do_get
	cmp	eax, -1
	jae	SHORT $LN15@do_get
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN15@do_get:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494454[esp+100]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN13@do_get
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@do_get:

; 592  : 		const _ULONGLONG _Ans =
; 593  : 			(sizeof (void *) == sizeof (unsigned long))
; 594  : 				? (_ULONGLONG)::_Stoulx(_Ac, &_Ep, _Base, &_Errno)
; 595  : 				: ::_STOULL(_Ac, &_Ep, _Base, &_Errno);

	mov	ecx, DWORD PTR __Base$[esp+100]
	lea	eax, DWORD PTR __Errno$[esp+100]
	push	eax
	push	ecx
	lea	edx, DWORD PTR __Ep$[esp+108]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+112]
	push	eax
	call	__Stoulx
	add	esp, 16					; 00000010H

; 596  : 
; 597  :  #else /* _LONGLONG */
; 598  : 		const unsigned long _Ans = ::_Stoulx(_Ac, &_Ep,
; 599  : 			_Getifld(_Ac, _First, _Last, ios_base::hex,
; 600  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert
; 601  :  #endif /* _LONGLONG */
; 602  : 
; 603  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[ebp]
	lea	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Ans$[esp+100], eax
	mov	DWORD PTR __Ans$[esp+104], 0
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get

; 604  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get:

; 605  : 		if (_Ep == _Ac || _Errno != 0)

	lea	ecx, DWORD PTR __Ac$[esp+100]
	cmp	DWORD PTR __Ep$[esp+100], ecx
	je	SHORT $LN2@do_get
	cmp	DWORD PTR __Errno$[esp+100], 0
	jne	SHORT $LN2@do_get

; 607  : 		else
; 608  : 			_Val = (void *)((char *)0 + _Ans);	// deliver value

	mov	edx, DWORD PTR __Ans$[esp+100]
	mov	eax, DWORD PTR __Val$GSCopy$[esp+100]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN1@do_get
$LN2@do_get:

; 606  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get:

; 609  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+100]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 610  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z$0:
	lea	ecx, DWORD PTR $T494428[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-84]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAPAX@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	__Val$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z
_TEXT	SEGMENT
__Errno$ = -112						; size = 4
__Ep$ = -108						; size = 4
__Val$GSCopy$ = -104					; size = 4
___$ReturnUdt$GSCopy$ = -100				; size = 4
$T494476 = -96						; size = 4
__Lock$494500 = -92					; size = 4
__Ans$ = -88						; size = 8
__Ac$ = -80						; size = 60
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 564  : 		{	// get long double from [_First, _Last) into _Val

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+116], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __Iosbase$[ebp]
	mov	ebx, DWORD PTR __State$[ebp]

; 575  : 			_State |= ios_base::failbit;

	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+132], eax
	lea	eax, DWORD PTR $T494476[esp+132]
	xor	esi, esi
	push	eax
	mov	DWORD PTR __Val$GSCopy$[esp+136], edx
	mov	DWORD PTR __Errno$[esp+136], esi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$[esp+132]
	push	ecx
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Ac$[esp+144]
	push	ecx
	mov	ecx, eax
	lea	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __$EHRec$[esp+156], esi
	call	?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getffld
	add	esp, 12					; 0000000cH
	push	eax
	lea	edx, DWORD PTR __Ep$[esp+140]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+144]
	push	eax
	call	__Stoldx
	fstp	QWORD PTR __Ans$[esp+148]
	mov	DWORD PTR __$EHRec$[esp+156], -1
	mov	edi, DWORD PTR $T494476[esp+148]
	add	esp, 16					; 00000010H
	cmp	edi, esi
	je	SHORT $LN11@do_get@2
	push	esi
	lea	ecx, DWORD PTR __Lock$494500[esp+136]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, esi
	jbe	SHORT $LN13@do_get@2

; 565  : 		_DEBUG_RANGE(_First, _Last);
; 566  : 		char _Ac[_MAX_EXP_DIG + _MAX_SIG_DIG + 16], *_Ep;
; 567  : 		int _Errno = 0;
; 568  : 		const long double _Ans = ::_Stoldx(_Ac, &_Ep,
; 569  : 			_Getffld(_Ac, _First, _Last,
; 570  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert

	cmp	eax, -1
	jae	SHORT $LN13@do_get@2
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN13@do_get@2:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494500[esp+132]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN11@do_get@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN11@do_get@2:

; 571  : 
; 572  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[ebp]
	lea	esi, DWORD PTR __First$[ebp]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@2

; 573  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@2:

; 574  : 		if (_Ep == _Ac || _Errno != 0)

	lea	ecx, DWORD PTR __Ac$[esp+132]
	cmp	DWORD PTR __Ep$[esp+132], ecx
	je	SHORT $LN2@do_get@2
	cmp	DWORD PTR __Errno$[esp+132], 0
	jne	SHORT $LN2@do_get@2

; 576  : 		else
; 577  : 			_Val = _Ans;	// deliver value

	mov	edx, DWORD PTR __Val$GSCopy$[esp+132]
	movsd	xmm0, QWORD PTR __Ans$[esp+132]
	movsd	QWORD PTR [edx], xmm0
	jmp	SHORT $LN1@do_get@2
$LN2@do_get@2:

; 575  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@2:

; 578  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+132]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 579  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z$0:
	lea	ecx, DWORD PTR $T494476[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-116]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAO@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	__Val$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z
_TEXT	SEGMENT
__Errno$ = -112						; size = 4
__Ep$ = -108						; size = 4
__Val$GSCopy$ = -104					; size = 4
___$ReturnUdt$GSCopy$ = -100				; size = 4
$T494521 = -96						; size = 4
__Lock$494545 = -92					; size = 4
__Ans$ = -88						; size = 8
__Ac$ = -80						; size = 60
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 544  : 		{	// get double from [_First, _Last) into _Val

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+116], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __Iosbase$[ebp]
	mov	ebx, DWORD PTR __State$[ebp]

; 555  : 			_State |= ios_base::failbit;

	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+132], eax
	lea	eax, DWORD PTR $T494521[esp+132]
	xor	esi, esi
	push	eax
	mov	DWORD PTR __Val$GSCopy$[esp+136], edx
	mov	DWORD PTR __Errno$[esp+136], esi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$[esp+132]
	push	ecx
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Ac$[esp+144]
	push	ecx
	mov	ecx, eax
	lea	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR __$EHRec$[esp+156], esi
	call	?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getffld
	add	esp, 12					; 0000000cH
	push	eax
	lea	edx, DWORD PTR __Ep$[esp+140]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+144]
	push	eax
	call	__Stodx
	fstp	QWORD PTR __Ans$[esp+148]
	mov	DWORD PTR __$EHRec$[esp+156], -1
	mov	edi, DWORD PTR $T494521[esp+148]
	add	esp, 16					; 00000010H
	cmp	edi, esi
	je	SHORT $LN11@do_get@3
	push	esi
	lea	ecx, DWORD PTR __Lock$494545[esp+136]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, esi
	jbe	SHORT $LN13@do_get@3

; 545  : 		_DEBUG_RANGE(_First, _Last);
; 546  : 		char _Ac[_MAX_EXP_DIG + _MAX_SIG_DIG + 16], *_Ep;
; 547  : 		int _Errno = 0;
; 548  : 		const double _Ans = ::_Stodx(_Ac, &_Ep,
; 549  : 			_Getffld(_Ac, _First, _Last,
; 550  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert

	cmp	eax, -1
	jae	SHORT $LN13@do_get@3
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN13@do_get@3:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494545[esp+132]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN11@do_get@3
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN11@do_get@3:

; 551  : 
; 552  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[ebp]
	lea	esi, DWORD PTR __First$[ebp]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@3

; 553  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@3:

; 554  : 		if (_Ep == _Ac || _Errno != 0)

	lea	ecx, DWORD PTR __Ac$[esp+132]
	cmp	DWORD PTR __Ep$[esp+132], ecx
	je	SHORT $LN2@do_get@3
	cmp	DWORD PTR __Errno$[esp+132], 0
	jne	SHORT $LN2@do_get@3

; 556  : 		else
; 557  : 			_Val = _Ans;	// deliver value

	mov	edx, DWORD PTR __Val$GSCopy$[esp+132]
	movsd	xmm0, QWORD PTR __Ans$[esp+132]
	movsd	QWORD PTR [edx], xmm0
	jmp	SHORT $LN1@do_get@3
$LN2@do_get@3:

; 555  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@3:

; 558  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+132]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 559  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z$0:
	lea	ecx, DWORD PTR $T494521[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-116]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAN@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	__Val$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z
_TEXT	SEGMENT
__Errno$ = -104						; size = 4
__Ep$ = -100						; size = 4
__Ans$ = -96						; size = 4
__Val$GSCopy$ = -92					; size = 4
$T494566 = -88						; size = 4
___$ReturnUdt$GSCopy$ = -84				; size = 4
__Lock$494590 = -80					; size = 4
__Ac$ = -76						; size = 60
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 524  : 		{	// get float from [_First, _Last) into _Val

	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+104], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+120]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+116]
	mov	edx, DWORD PTR __Val$[esp+116]
	mov	ecx, DWORD PTR __Iosbase$[esp+116]
	mov	ebx, DWORD PTR __State$[esp+116]

; 534  : 		if (_Ep == _Ac || _Errno != 0)

	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+120], eax
	lea	eax, DWORD PTR $T494566[esp+120]
	push	eax
	mov	DWORD PTR __Val$GSCopy$[esp+124], edx
	mov	DWORD PTR __Errno$[esp+124], 0
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$[esp+120]
	push	ecx
	lea	edx, DWORD PTR __First$[esp+120]
	push	edx
	lea	ecx, DWORD PTR __Ac$[esp+128]
	push	ecx
	mov	ecx, eax
	lea	edx, DWORD PTR __Last$[esp+128]
	mov	DWORD PTR __$EHRec$[esp+140], 0
	call	?_Getffld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1ABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getffld
	add	esp, 8
	push	eax
	lea	edx, DWORD PTR __Ep$[esp+128]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+132]
	push	eax
	call	__Stofx
	fstp	DWORD PTR __Ans$[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], -1
	mov	edi, DWORD PTR $T494566[esp+136]
	add	esp, 16					; 00000010H
	test	edi, edi
	je	SHORT $LN11@do_get@4
	push	0
	lea	ecx, DWORD PTR __Lock$494590[esp+124]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN13@do_get@4

; 525  : 		_DEBUG_RANGE(_First, _Last);
; 526  : 		char _Ac[_MAX_EXP_DIG + _MAX_SIG_DIG + 16], *_Ep;
; 527  : 		int _Errno = 0;
; 528  : 		const float _Ans = ::_Stofx(_Ac, &_Ep,
; 529  : 			_Getffld(_Ac, _First, _Last,
; 530  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert

	cmp	eax, -1
	jae	SHORT $LN13@do_get@4
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN13@do_get@4:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494590[esp+120]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN11@do_get@4
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN11@do_get@4:

; 531  : 
; 532  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[esp+116]
	lea	esi, DWORD PTR __First$[esp+116]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@4

; 533  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@4:

; 534  : 		if (_Ep == _Ac || _Errno != 0)

	lea	ecx, DWORD PTR __Ac$[esp+120]
	cmp	DWORD PTR __Ep$[esp+120], ecx
	je	SHORT $LN2@do_get@4
	cmp	DWORD PTR __Errno$[esp+120], 0
	jne	SHORT $LN2@do_get@4

; 536  : 		else
; 537  : 			_Val = _Ans;	// deliver value

	mov	edx, DWORD PTR __Val$GSCopy$[esp+120]
	movss	xmm0, DWORD PTR __Ans$[esp+120]
	movss	DWORD PTR [edx], xmm0
	jmp	SHORT $LN1@do_get@4
$LN2@do_get@4:

; 535  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@4:

; 538  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+120]
	mov	ecx, DWORD PTR __First$[esp+116]
	mov	edx, DWORD PTR __First$[esp+120]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 539  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+120]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+104]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z$0:
	lea	ecx, DWORD PTR $T494566[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-104]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAM@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__Val$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z
_TEXT	SEGMENT
__Errno$ = -84						; size = 4
__Ep$ = -80						; size = 4
__Val$GSCopy$ = -76					; size = 4
___$ReturnUdt$GSCopy$ = -72				; size = 4
$T494612 = -68						; size = 4
__Ans$ = -64						; size = 8
__Lock$494640 = -56					; size = 4
__Ac$ = -52						; size = 32
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 503  : 		{	// get unsigned long long from [_First, _Last) into _Val

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, eax
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esi, DWORD PTR __Iosbase$[ebp]
	mov	ebx, DWORD PTR __State$[ebp]

; 504  : 		_DEBUG_RANGE(_First, _Last);
; 505  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 506  : 		int _Errno = 0;
; 507  : 		const _ULONGLONG _Ans = ::_STOULL(_Ac, &_Ep,

	lea	edx, DWORD PTR $T494612[esp+100]
	mov	DWORD PTR __Val$GSCopy$[esp+100], ecx
	xor	edi, edi
	push	edx
	mov	ecx, esi
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+104], eax
	mov	DWORD PTR __Errno$[esp+104], edi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$[esp+100]
	push	ecx
	push	ecx
	push	eax
	mov	DWORD PTR __$EHRec$[esp+120], edi
	mov	esi, DWORD PTR [esi+16]
	push	esi
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+120]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	add	esp, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR __Ep$[esp+108]
	push	ecx
	lea	edx, DWORD PTR __Ac$[esp+112]
	push	edx
	call	__Stoullx
	mov	DWORD PTR __Ans$[esp+116], eax
	mov	DWORD PTR __$EHRec$[esp+124], -1
	mov	eax, DWORD PTR $T494612[esp+116]
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Ans$[esp+104], edx
	cmp	eax, edi
	je	SHORT $LN13@do_get@5
	push	0
	lea	ecx, DWORD PTR __Lock$494640[esp+104]
	mov	edi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN15@do_get@5
	cmp	eax, -1
	jae	SHORT $LN15@do_get@5
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN15@do_get@5:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494640[esp+100]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN13@do_get@5
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@do_get@5:

; 508  : 			_Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 509  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert
; 510  : 
; 511  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[ebp]
	lea	esi, DWORD PTR __First$[ebp]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@5

; 512  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@5:

; 513  : 		if (_Ep == _Ac || _Errno != 0)

	lea	eax, DWORD PTR __Ac$[esp+100]
	cmp	DWORD PTR __Ep$[esp+100], eax
	je	SHORT $LN2@do_get@5
	cmp	DWORD PTR __Errno$[esp+100], 0
	jne	SHORT $LN2@do_get@5

; 515  : 		else
; 516  : 			_Val = _Ans;	// deliver value

	mov	eax, DWORD PTR __Val$GSCopy$[esp+100]
	mov	ecx, DWORD PTR __Ans$[esp+100]
	mov	edx, DWORD PTR __Ans$[esp+104]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	jmp	SHORT $LN1@do_get@5
$LN2@do_get@5:

; 514  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@5:

; 517  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+100]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 518  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z$0:
	lea	ecx, DWORD PTR $T494612[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-84]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_K@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__Val$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z
_TEXT	SEGMENT
__Errno$ = -84						; size = 4
__Ep$ = -80						; size = 4
__Val$GSCopy$ = -76					; size = 4
___$ReturnUdt$GSCopy$ = -72				; size = 4
$T494661 = -68						; size = 4
__Ans$ = -64						; size = 8
__Lock$494689 = -56					; size = 4
__Ac$ = -52						; size = 32
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 483  : 		{	// get long long from [_First, _Last) into _Val

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, eax
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esi, DWORD PTR __Iosbase$[ebp]
	mov	ebx, DWORD PTR __State$[ebp]

; 484  : 		_DEBUG_RANGE(_First, _Last);
; 485  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 486  : 		int _Errno = 0;
; 487  : 		const _LONGLONG _Ans = ::_STOLL(_Ac, &_Ep,

	lea	edx, DWORD PTR $T494661[esp+100]
	mov	DWORD PTR __Val$GSCopy$[esp+100], ecx
	xor	edi, edi
	push	edx
	mov	ecx, esi
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+104], eax
	mov	DWORD PTR __Errno$[esp+104], edi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$[esp+100]
	push	ecx
	push	ecx
	push	eax
	mov	DWORD PTR __$EHRec$[esp+120], edi
	mov	esi, DWORD PTR [esi+16]
	push	esi
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+120]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	add	esp, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR __Ep$[esp+108]
	push	ecx
	lea	edx, DWORD PTR __Ac$[esp+112]
	push	edx
	call	__Stollx
	mov	DWORD PTR __Ans$[esp+116], eax
	mov	DWORD PTR __$EHRec$[esp+124], -1
	mov	eax, DWORD PTR $T494661[esp+116]
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Ans$[esp+104], edx
	cmp	eax, edi
	je	SHORT $LN13@do_get@6
	push	0
	lea	ecx, DWORD PTR __Lock$494689[esp+104]
	mov	edi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN15@do_get@6
	cmp	eax, -1
	jae	SHORT $LN15@do_get@6
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN15@do_get@6:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494689[esp+100]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN13@do_get@6
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@do_get@6:

; 488  : 			_Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 489  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert
; 490  : 
; 491  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[ebp]
	lea	esi, DWORD PTR __First$[ebp]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@6

; 492  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@6:

; 493  : 		if (_Ep == _Ac || _Errno != 0)

	lea	eax, DWORD PTR __Ac$[esp+100]
	cmp	DWORD PTR __Ep$[esp+100], eax
	je	SHORT $LN2@do_get@6
	cmp	DWORD PTR __Errno$[esp+100], 0
	jne	SHORT $LN2@do_get@6

; 495  : 		else
; 496  : 			_Val = _Ans;	// deliver value

	mov	eax, DWORD PTR __Val$GSCopy$[esp+100]
	mov	ecx, DWORD PTR __Ans$[esp+100]
	mov	edx, DWORD PTR __Ans$[esp+104]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	jmp	SHORT $LN1@do_get@6
$LN2@do_get@6:

; 494  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@6:

; 497  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+100]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 498  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+100]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z$0:
	lea	ecx, DWORD PTR $T494661[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-84]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_J@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__Val$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z
_TEXT	SEGMENT
__Errno$ = -76						; size = 4
__Ep$ = -72						; size = 4
__Ans$ = -68						; size = 4
__Val$GSCopy$ = -64					; size = 4
$T494710 = -60						; size = 4
___$ReturnUdt$GSCopy$ = -56				; size = 4
__Lock$494738 = -52					; size = 4
__Ac$ = -48						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 462  : 		{	// get unsigned long from [_First, _Last) into _Val

	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, eax
	mov	ecx, DWORD PTR __Val$[esp+88]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+88]
	mov	esi, DWORD PTR __Iosbase$[esp+88]
	mov	ebx, DWORD PTR __State$[esp+88]

; 463  : 		_DEBUG_RANGE(_First, _Last);
; 464  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 465  : 		int _Errno = 0;
; 466  : 		const unsigned long _Ans = ::_Stoulx(_Ac, &_Ep,
; 467  : 			_Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 468  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert

	lea	edx, DWORD PTR $T494710[esp+92]
	mov	DWORD PTR __Val$GSCopy$[esp+92], ecx
	push	edx
	mov	ecx, esi
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+96], eax
	mov	DWORD PTR __Errno$[esp+96], 0
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$[esp+92]
	push	ecx
	push	eax
	mov	DWORD PTR __$EHRec$[esp+108], 0
	mov	esi, DWORD PTR [esi+16]
	push	esi
	lea	edx, DWORD PTR __First$[esp+100]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+108]
	push	eax
	lea	ecx, DWORD PTR __Last$[esp+108]
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Ep$[esp+100]
	push	ecx
	lea	edx, DWORD PTR __Ac$[esp+104]
	push	edx
	call	__Stoulx
	mov	DWORD PTR __$EHRec$[esp+116], -1
	mov	edi, DWORD PTR $T494710[esp+108]
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Ans$[esp+92], eax
	test	edi, edi
	je	SHORT $LN13@do_get@7
	push	0
	lea	ecx, DWORD PTR __Lock$494738[esp+96]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN15@do_get@7
	cmp	eax, -1
	jae	SHORT $LN15@do_get@7
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN15@do_get@7:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494738[esp+92]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN13@do_get@7
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@do_get@7:

; 469  : 
; 470  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[esp+88]
	lea	esi, DWORD PTR __First$[esp+88]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@7

; 471  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@7:

; 472  : 		if (_Ep == _Ac || _Errno != 0)

	lea	eax, DWORD PTR __Ac$[esp+92]
	cmp	DWORD PTR __Ep$[esp+92], eax
	je	SHORT $LN2@do_get@7
	cmp	DWORD PTR __Errno$[esp+92], 0
	jne	SHORT $LN2@do_get@7

; 474  : 		else
; 475  : 			_Val = _Ans;	// deliver value

	mov	ecx, DWORD PTR __Ans$[esp+92]
	mov	edx, DWORD PTR __Val$GSCopy$[esp+92]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN1@do_get@7
$LN2@do_get@7:

; 473  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@7:

; 476  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+92]
	mov	ecx, DWORD PTR __First$[esp+88]
	mov	edx, DWORD PTR __First$[esp+92]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 477  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z$0:
	lea	ecx, DWORD PTR $T494710[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-76]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAK@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__Val$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z
_TEXT	SEGMENT
__Errno$ = -76						; size = 4
__Ep$ = -72						; size = 4
__Ans$ = -68						; size = 4
__Val$GSCopy$ = -64					; size = 4
$T494760 = -60						; size = 4
___$ReturnUdt$GSCopy$ = -56				; size = 4
__Lock$494788 = -52					; size = 4
__Ac$ = -48						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 442  : 		{	// get long from [_First, _Last) into _Val

	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, eax
	mov	ecx, DWORD PTR __Val$[esp+88]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+88]
	mov	esi, DWORD PTR __Iosbase$[esp+88]
	mov	ebx, DWORD PTR __State$[esp+88]

; 443  : 		_DEBUG_RANGE(_First, _Last);
; 444  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 445  : 		int _Errno = 0;
; 446  : 		const long _Ans = ::_Stolx(_Ac, &_Ep,
; 447  : 			_Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 448  : 				_Iosbase.getloc()), &_Errno);	// gather field, convert

	lea	edx, DWORD PTR $T494760[esp+92]
	mov	DWORD PTR __Val$GSCopy$[esp+92], ecx
	push	edx
	mov	ecx, esi
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+96], eax
	mov	DWORD PTR __Errno$[esp+96], 0
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$[esp+92]
	push	ecx
	push	eax
	mov	DWORD PTR __$EHRec$[esp+108], 0
	mov	esi, DWORD PTR [esi+16]
	push	esi
	lea	edx, DWORD PTR __First$[esp+100]
	push	edx
	lea	eax, DWORD PTR __Ac$[esp+108]
	push	eax
	lea	ecx, DWORD PTR __Last$[esp+108]
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Ep$[esp+100]
	push	ecx
	lea	edx, DWORD PTR __Ac$[esp+104]
	push	edx
	call	__Stolx
	mov	DWORD PTR __$EHRec$[esp+116], -1
	mov	edi, DWORD PTR $T494760[esp+108]
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Ans$[esp+92], eax
	test	edi, edi
	je	SHORT $LN13@do_get@8
	push	0
	lea	ecx, DWORD PTR __Lock$494788[esp+96]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN15@do_get@8
	cmp	eax, -1
	jae	SHORT $LN15@do_get@8
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN15@do_get@8:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494788[esp+92]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN13@do_get@8
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN13@do_get@8:

; 449  : 
; 450  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[esp+88]
	lea	esi, DWORD PTR __First$[esp+88]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@8

; 451  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@8:

; 452  : 		if (_Ep == _Ac || _Errno != 0)

	lea	eax, DWORD PTR __Ac$[esp+92]
	cmp	DWORD PTR __Ep$[esp+92], eax
	je	SHORT $LN2@do_get@8
	cmp	DWORD PTR __Errno$[esp+92], 0
	jne	SHORT $LN2@do_get@8

; 454  : 		else
; 455  : 			_Val = _Ans;	// deliver value

	mov	ecx, DWORD PTR __Ans$[esp+92]
	mov	edx, DWORD PTR __Val$GSCopy$[esp+92]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN1@do_get@8
$LN2@do_get@8:

; 453  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@8:

; 456  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+92]
	mov	ecx, DWORD PTR __First$[esp+88]
	mov	edx, DWORD PTR __First$[esp+92]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 457  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z$0:
	lea	ecx, DWORD PTR $T494760[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-76]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAJ@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__Val$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z
_TEXT	SEGMENT
__Ptr$ = -76						; size = 4
__Errno$ = -72						; size = 4
__Lock$494842 = -68					; size = 4
__Val$GSCopy$ = -64					; size = 4
$T494810 = -60						; size = 4
___$ReturnUdt$GSCopy$ = -56				; size = 4
__Ep$ = -52						; size = 4
__Ac$ = -48						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 420  : 		{	// get unsigned int from [_First, _Last) into _Val

	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, eax
	mov	ecx, DWORD PTR __Val$[esp+92]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+92]
	mov	esi, DWORD PTR __Iosbase$[esp+92]
	mov	ebx, DWORD PTR __State$[esp+92]

; 421  : 		_DEBUG_RANGE(_First, _Last);
; 422  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 423  : 		int _Errno = 0;
; 424  : 		int _Base = _Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 425  : 			_Iosbase.getloc());	// gather field into _Ac

	lea	edx, DWORD PTR $T494810[esp+96]

; 433  : 			_State |= ios_base::failbit;

	mov	DWORD PTR __Val$GSCopy$[esp+96], ecx
	xor	edi, edi
	push	edx
	mov	ecx, esi
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+100], eax
	mov	DWORD PTR __Errno$[esp+100], edi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	push	eax
	mov	DWORD PTR __$EHRec$[esp+108], edi
	mov	esi, DWORD PTR [esi+16]
	push	esi
	lea	eax, DWORD PTR __First$[esp+100]
	push	eax
	lea	ecx, DWORD PTR __Ac$[esp+108]
	push	ecx
	lea	ecx, DWORD PTR __Last$[esp+108]
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	mov	DWORD PTR __$EHRec$[esp+120], -1
	mov	edi, DWORD PTR $T494810[esp+112]
	add	esp, 16					; 00000010H
	mov	ebp, eax
	test	edi, edi
	je	SHORT $LN17@do_get@9
	push	0
	lea	ecx, DWORD PTR __Lock$494842[esp+100]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN19@do_get@9

; 421  : 		_DEBUG_RANGE(_First, _Last);
; 422  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 423  : 		int _Errno = 0;
; 424  : 		int _Base = _Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 425  : 			_Iosbase.getloc());	// gather field into _Ac

	cmp	eax, -1
	jae	SHORT $LN19@do_get@9
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN19@do_get@9:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494842[esp+96]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN17@do_get@9
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN17@do_get@9:

; 426  : 		char *_Ptr = _Ac[0] == '-' ? _Ac + 1 : _Ac;	// point past any sign

	cmp	BYTE PTR __Ac$[esp+96], 45		; 0000002dH
	jne	SHORT $LN7@do_get@9
	lea	ecx, DWORD PTR __Ac$[esp+97]
	mov	DWORD PTR __Ptr$[esp+96], ecx
	jmp	SHORT $LN8@do_get@9
$LN7@do_get@9:
	lea	edx, DWORD PTR __Ac$[esp+96]
	mov	DWORD PTR __Ptr$[esp+96], edx
$LN8@do_get@9:

; 427  : 		const unsigned long _Ans =
; 428  : 			::_Stoulx(_Ptr, &_Ep, _Base, &_Errno);	// convert

	mov	edx, DWORD PTR __Ptr$[esp+96]
	lea	eax, DWORD PTR __Errno$[esp+96]
	push	eax
	push	ebp
	lea	ecx, DWORD PTR __Ep$[esp+104]
	push	ecx
	push	edx
	call	__Stoulx
	add	esp, 16					; 00000010H

; 429  : 
; 430  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[esp+92]
	lea	esi, DWORD PTR __First$[esp+92]
	mov	ebp, eax
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@9

; 431  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@9:

; 432  : 		if (_Ep == _Ptr || _Errno != 0 || UINT_MAX < _Ans)

	mov	eax, DWORD PTR __Ptr$[esp+96]
	cmp	DWORD PTR __Ep$[esp+96], eax
	je	SHORT $LN2@do_get@9
	cmp	DWORD PTR __Errno$[esp+96], 0
	jne	SHORT $LN2@do_get@9
	cmp	ebp, -1
	ja	SHORT $LN2@do_get@9

; 434  : 		else
; 435  : 			_Val = _Ac[0] == '-' ? 0 -_Ans : _Ans;	// deliver value

	cmp	BYTE PTR __Ac$[esp+96], 45		; 0000002dH
	jne	SHORT $LN9@do_get@9
	neg	ebp
$LN9@do_get@9:
	mov	ecx, DWORD PTR __Val$GSCopy$[esp+96]
	mov	DWORD PTR [ecx], ebp
	jmp	SHORT $LN1@do_get@9
$LN2@do_get@9:

; 433  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@9:

; 436  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+96]
	mov	edx, DWORD PTR __First$[esp+92]
	mov	ecx, DWORD PTR __First$[esp+96]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 437  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z$0:
	lea	ecx, DWORD PTR $T494810[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-80]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAI@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__Val$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z$0
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z
_TEXT	SEGMENT
__Ptr$ = -76						; size = 4
__Errno$ = -72						; size = 4
__Lock$494896 = -68					; size = 4
__Val$GSCopy$ = -64					; size = 4
$T494864 = -60						; size = 4
___$ReturnUdt$GSCopy$ = -56				; size = 4
__Ep$ = -52						; size = 4
__Ac$ = -48						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 397  : 		{	// get unsigned short from [_First, _Last) into _Val

	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, eax
	mov	ecx, DWORD PTR __Val$[esp+92]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+92]
	mov	esi, DWORD PTR __Iosbase$[esp+92]
	mov	ebx, DWORD PTR __State$[esp+92]

; 398  : 		_DEBUG_RANGE(_First, _Last);
; 399  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 400  : 		int _Errno = 0;
; 401  : 		int _Base = _Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 402  : 			_Iosbase.getloc());	// gather field into _Ac

	lea	edx, DWORD PTR $T494864[esp+96]

; 410  : 			_State |= ios_base::failbit;

	mov	DWORD PTR __Val$GSCopy$[esp+96], ecx
	xor	edi, edi
	push	edx
	mov	ecx, esi
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+100], eax
	mov	DWORD PTR __Errno$[esp+100], edi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	push	eax
	mov	DWORD PTR __$EHRec$[esp+108], edi
	mov	esi, DWORD PTR [esi+16]
	push	esi
	lea	eax, DWORD PTR __First$[esp+100]
	push	eax
	lea	ecx, DWORD PTR __Ac$[esp+108]
	push	ecx
	lea	ecx, DWORD PTR __Last$[esp+108]
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	mov	DWORD PTR __$EHRec$[esp+120], -1
	mov	edi, DWORD PTR $T494864[esp+112]
	add	esp, 16					; 00000010H
	mov	ebp, eax
	test	edi, edi
	je	SHORT $LN17@do_get@10
	push	0
	lea	ecx, DWORD PTR __Lock$494896[esp+100]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN19@do_get@10

; 398  : 		_DEBUG_RANGE(_First, _Last);
; 399  : 		char _Ac[_MAX_INT_DIG], *_Ep;
; 400  : 		int _Errno = 0;
; 401  : 		int _Base = _Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 402  : 			_Iosbase.getloc());	// gather field into _Ac

	cmp	eax, -1
	jae	SHORT $LN19@do_get@10
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN19@do_get@10:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$494896[esp+96]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN17@do_get@10
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN17@do_get@10:

; 403  : 		char *_Ptr = _Ac[0] == '-' ? _Ac + 1 : _Ac;	// point past any sign

	cmp	BYTE PTR __Ac$[esp+96], 45		; 0000002dH
	jne	SHORT $LN7@do_get@10
	lea	ecx, DWORD PTR __Ac$[esp+97]
	mov	DWORD PTR __Ptr$[esp+96], ecx
	jmp	SHORT $LN8@do_get@10
$LN7@do_get@10:
	lea	edx, DWORD PTR __Ac$[esp+96]
	mov	DWORD PTR __Ptr$[esp+96], edx
$LN8@do_get@10:

; 404  : 		const unsigned long _Ans =
; 405  : 			::_Stoulx(_Ptr, &_Ep, _Base, &_Errno);	// convert

	mov	edx, DWORD PTR __Ptr$[esp+96]
	lea	eax, DWORD PTR __Errno$[esp+96]
	push	eax
	push	ebp
	lea	ecx, DWORD PTR __Ep$[esp+104]
	push	ecx
	push	edx
	call	__Stoulx
	add	esp, 16					; 00000010H

; 406  : 
; 407  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[esp+92]
	lea	esi, DWORD PTR __First$[esp+92]
	mov	ebp, eax
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al
	je	SHORT $LN4@do_get@10

; 408  : 			_State |= ios_base::eofbit;

	or	DWORD PTR [ebx], 1
$LN4@do_get@10:

; 409  : 		if (_Ep == _Ptr || _Errno != 0 || USHRT_MAX < _Ans)

	mov	eax, DWORD PTR __Ptr$[esp+96]
	cmp	DWORD PTR __Ep$[esp+96], eax
	je	SHORT $LN2@do_get@10
	cmp	DWORD PTR __Errno$[esp+96], 0
	jne	SHORT $LN2@do_get@10
	cmp	ebp, 65535				; 0000ffffH
	ja	SHORT $LN2@do_get@10

; 411  : 		else
; 412  : 			_Val = (unsigned short)(_Ac[0] == '-'
; 413  : 				? 0 -_Ans : _Ans);	// deliver value

	cmp	BYTE PTR __Ac$[esp+96], 45		; 0000002dH
	jne	SHORT $LN9@do_get@10
	neg	ebp
$LN9@do_get@10:
	mov	ecx, DWORD PTR __Val$GSCopy$[esp+96]
	mov	WORD PTR [ecx], bp
	jmp	SHORT $LN1@do_get@10
$LN2@do_get@10:

; 410  : 			_State |= ios_base::failbit;

	or	DWORD PTR [ebx], 2
$LN1@do_get@10:

; 414  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+96]
	mov	edx, DWORD PTR __First$[esp+92]
	mov	ecx, DWORD PTR __First$[esp+96]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 415  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z$0:
	lea	ecx, DWORD PTR $T494864[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-80]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAAG@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 992  : 		{	// append [_Ptr, <null>)

	push	esi

; 993  : 		_DEBUG_POINTER(_Ptr);
; 994  : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	esi, DWORD PTR __Ptr$[esp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	5
$LL5@append@4:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@append@4
	sub	eax, edi
	push	eax
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi

; 995  : 		}

	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 946  : 		return (append(_Right, 0, npos));

	mov	eax, DWORD PTR __Right$[esp-4]
	push	-1
	push	0
	push	eax
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 947  : 		}

	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 935  : 		{	// append [_Ptr, <null>)

	push	esi

; 936  : 		return (append(_Ptr));

	mov	esi, DWORD PTR __Ptr$[esp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	5
$LL7@operator@358:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL7@operator@358
	sub	eax, edi
	push	eax
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi

; 937  : 		}

	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 931  : 		return (append(_Right));

	mov	eax, DWORD PTR __Right$[esp-4]
	push	-1
	push	0
	push	eax
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 932  : 		}

	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 920  : 		{	// assign [_Ptr, <null>)

	push	esi

; 921  : 		return (assign(_Ptr));

	mov	esi, DWORD PTR __Ptr$[esp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	5
$LL7@operator@359:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL7@operator@359
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi

; 922  : 		}

	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	??1InputStream@DRAMsimII@@QAE@XZ		; DRAMsimII::InputStream::~InputStream
__unwindtable$??1InputStream@DRAMsimII@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1InputStream@DRAMsimII@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1InputStream@DRAMsimII@@QAE@XZ$1
__ehfuncinfo$??1InputStream@DRAMsimII@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1InputStream@DRAMsimII@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1InputStream@DRAMsimII@@QAE@XZ PROC			; DRAMsimII::InputStream::~InputStream

; 254  : {

	push	-1
	push	__ehhandler$??1InputStream@DRAMsimII@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[esp+20]

; 255  : 	boost::iostreams::close(traceFile,std::ios_base::in);

	lea	esi, DWORD PTR [edi+88]
	push	1
	push	esi
	mov	DWORD PTR __$EHRec$[esp+40], 1
	call	??$close@V?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@@iostreams@boost@@YAXAAV?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@01@H@Z ; boost::iostreams::close<boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_> >
	add	esp, 8

; 256  : }

	push	esi
	mov	BYTE PTR __$EHRec$[esp+36], 0
	call	??1?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::~filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
	lea	eax, DWORD PTR [esi+24]
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	cmp	DWORD PTR [edi+84], 16			; 00000010H
	jb	SHORT $LN44@InputStrea
	mov	eax, DWORD PTR [edi+64]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN44@InputStrea:
	mov	DWORD PTR [edi+84], 15			; 0000000fH
	mov	DWORD PTR [edi+80], 0
	mov	BYTE PTR [edi+64], 0
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
__unwindfunclet$??1InputStream@DRAMsimII@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 60					; 0000003cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??1InputStream@DRAMsimII@@QAE@XZ$1:
	mov	esi, DWORD PTR _this$[ebp-4]
	add	esi, 88					; 00000058H
	jmp	??_D?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAEXXZ
__ehhandler$??1InputStream@DRAMsimII@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1InputStream@DRAMsimII@@QAE@XZ
	jmp	___CxxFrameHandler3
??1InputStream@DRAMsimII@@QAE@XZ ENDP			; DRAMsimII::InputStream::~InputStream
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ$0
__ehfuncinfo$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\error.hpp
xdata$x	ENDS
;	COMDAT ?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
_TEXT	SEGMENT
$T495133 = -44						; size = 4
$T495130 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ PROC ; boost::iostreams::detail::bad_putback, COMDAT
; ___$ReturnUdt$ = esi

; 32   : { return BOOST_IOSTREAMS_FAILURE("putback buffer full"); }

	push	-1
	push	__ehhandler$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax
	xor	ebx, ebx
	push	19					; 00000013H
	push	OFFSET ??_C@_0BE@DGJOHFIE@putback?5buffer?5full?$AA@
	lea	ecx, DWORD PTR $T495130[esp+60]
	mov	DWORD PTR $T495133[esp+60], ebx
	mov	DWORD PTR $T495130[esp+84], 15		; 0000000fH
	mov	DWORD PTR $T495130[esp+80], ebx
	mov	BYTE PTR $T495130[esp+64], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T495130[esp+52]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	cmp	DWORD PTR $T495130[esp+76], 16		; 00000010H
	mov	DWORD PTR [esi], OFFSET ??_7failure@ios_base@std@@6B@
	jb	SHORT $LN71@bad_putbac
	mov	ecx, DWORD PTR $T495130[esp+56]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@bad_putbac:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ$0:
	lea	ecx, DWORD PTR $T495130[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ENDP ; boost::iostreams::detail::bad_putback
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ$0
__ehfuncinfo$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\error.hpp
xdata$x	ENDS
;	COMDAT ?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
_TEXT	SEGMENT
$T495405 = -44						; size = 4
$T495402 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ PROC ; boost::iostreams::detail::cant_seek, COMDAT
; ___$ReturnUdt$ = esi

; 26   : { return BOOST_IOSTREAMS_FAILURE("no random access"); }

	push	-1
	push	__ehhandler$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax
	xor	ebx, ebx
	push	16					; 00000010H
	push	OFFSET ??_C@_0BB@JFGNMMAL@no?5random?5access?$AA@
	lea	ecx, DWORD PTR $T495402[esp+60]
	mov	DWORD PTR $T495405[esp+60], ebx
	mov	DWORD PTR $T495402[esp+84], 15		; 0000000fH
	mov	DWORD PTR $T495402[esp+80], ebx
	mov	BYTE PTR $T495402[esp+64], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T495402[esp+52]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	cmp	DWORD PTR $T495402[esp+76], 16		; 00000010H
	mov	DWORD PTR [esi], OFFSET ??_7failure@ios_base@std@@6B@
	jb	SHORT $LN71@cant_seek
	mov	ecx, DWORD PTR $T495402[esp+56]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@cant_seek:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ$0:
	lea	ecx, DWORD PTR $T495402[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ENDP ; boost::iostreams::detail::cant_seek
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ$0
__ehfuncinfo$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\error.hpp
xdata$x	ENDS
;	COMDAT ?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
_TEXT	SEGMENT
$T495677 = -44						; size = 4
$T495674 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ PROC ; boost::iostreams::detail::cant_write, COMDAT
; ___$ReturnUdt$ = esi

; 23   : { return BOOST_IOSTREAMS_FAILURE("no write access"); }

	push	-1
	push	__ehhandler$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax
	xor	ebx, ebx
	push	15					; 0000000fH
	push	OFFSET ??_C@_0BA@MGHELDEA@no?5write?5access?$AA@
	lea	ecx, DWORD PTR $T495674[esp+60]
	mov	DWORD PTR $T495677[esp+60], ebx
	mov	DWORD PTR $T495674[esp+84], 15		; 0000000fH
	mov	DWORD PTR $T495674[esp+80], ebx
	mov	BYTE PTR $T495674[esp+64], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T495674[esp+52]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	cmp	DWORD PTR $T495674[esp+76], 16		; 00000010H
	mov	DWORD PTR [esi], OFFSET ??_7failure@ios_base@std@@6B@
	jb	SHORT $LN71@cant_write
	mov	ecx, DWORD PTR $T495674[esp+56]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@cant_write:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ$0:
	lea	ecx, DWORD PTR $T495674[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ENDP ; boost::iostreams::detail::cant_write
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?what@system_error@system@boost@@UBEPBDXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?what@system_error@system@boost@@UBEPBDXZ$2
	DD	0ffffffffH
	DD	00H
__catchsym$?what@system_error@system@boost@@UBEPBDXZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?what@system_error@system@boost@@UBEPBDXZ$0
__tryblocktable$?what@system_error@system@boost@@UBEPBDXZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?what@system_error@system@boost@@UBEPBDXZ$3
__ehfuncinfo$?what@system_error@system@boost@@UBEPBDXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?what@system_error@system@boost@@UBEPBDXZ
	DD	01H
	DD	FLAT:__tryblocktable$?what@system_error@system@boost@@UBEPBDXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\system\system_error.hpp
xdata$x	ENDS
;	COMDAT ?what@system_error@system@boost@@UBEPBDXZ
_TEXT	SEGMENT
$T495946 = -48						; size = 28
$T495947 = -20						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?what@system_error@system@boost@@UBEPBDXZ PROC		; boost::system::system_error::what, COMDAT
; _this$ = ecx

; 59   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?what@system_error@system@boost@@UBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi

; 60   :       if ( m_what.empty() )

	cmp	DWORD PTR [esi+68], 0
	jne	__tryend$?what@system_error@system@boost@@UBEPBDXZ$1

; 61   :       {
; 62   :         try
; 63   :         {

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 64   :           m_what = this->std::runtime_error::what();

	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN20@what@3
	mov	edx, DWORD PTR [esi+16]
	jmp	SHORT $LN21@what@3
$LN20@what@3:
	lea	edx, DWORD PTR [esi+16]
$LN21@what@3:
	mov	eax, edx
	lea	edi, DWORD PTR [eax+1]
$LL83@what@3:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL83@what@3
	sub	eax, edi
	push	eax
	lea	edi, DWORD PTR [esi+48]
	push	edx
	mov	ecx, edi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 65   :           if ( m_error_code )

	mov	eax, DWORD PTR [esi+40]
	lea	ebx, DWORD PTR [esi+40]
	neg	eax
	sbb	eax, eax
	test	eax, OFFSET ?unspecified_bool_true@error_code@system@boost@@SAXXZ ; boost::system::error_code::unspecified_bool_true
	je	SHORT __tryend$?what@system_error@system@boost@@UBEPBDXZ$1

; 66   :           {
; 67   :             if ( !m_what.empty() ) m_what += ": ";

	cmp	DWORD PTR [esi+68], 0
	je	SHORT $LN32@what@3
	push	2
	push	OFFSET ??_C@_02LMMGGCAJ@?3?5?$AA@
	mov	ecx, edi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN32@what@3:

; 68   :             m_what += m_error_code.message();

	lea	ecx, DWORD PTR $T495946[ebp]
	push	ecx
	mov	ecx, ebx
	call	?message@error_code@system@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::system::error_code::message
	push	-1
	push	0
	push	eax
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	cmp	DWORD PTR $T495946[ebp+24], 16		; 00000010H
	jb	SHORT __tryend$?what@system_error@system@boost@@UBEPBDXZ$1
	mov	edx, DWORD PTR $T495946[ebp+4]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__tryend$?what@system_error@system@boost@@UBEPBDXZ$1:

; 72   :       }
; 73   :       return m_what.c_str();

	cmp	DWORD PTR [esi+72], 16			; 00000010H
	jb	SHORT $LN80@what@3
	mov	eax, DWORD PTR [esi+52]

; 74   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?what@system_error@system@boost@@UBEPBDXZ$0:

; 69   :           }
; 70   :         }
; 71   :         catch (...) { return std::runtime_error::what(); }

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 16			; 00000010H
	jb	SHORT $LN74@what@3
	mov	eax, DWORD PTR [eax+16]
	jmp	SHORT $LN87@what@3
$LN74@what@3:
	add	eax, 16					; 00000010H
$LN87@what@3:
	mov	DWORD PTR $T495947[ebp], eax
	mov	eax, $LN11@what@3
	ret	0
$LN11@what@3:
	mov	eax, DWORD PTR $T495947[ebp]

; 74   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0

; 72   :       }
; 73   :       return m_what.c_str();

$LN80@what@3:
	lea	eax, DWORD PTR [esi+52]

; 74   :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?what@system_error@system@boost@@UBEPBDXZ$2:
	lea	ecx, DWORD PTR $T495946[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?what@system_error@system@boost@@UBEPBDXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?what@system_error@system@boost@@UBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?what@system_error@system@boost@@UBEPBDXZ ENDP		; boost::system::system_error::what
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
;	COMDAT ?close@?$basic_file@D@iostreams@boost@@QAEXXZ
_TEXT	SEGMENT
?close@?$basic_file@D@iostreams@boost@@QAEXXZ PROC	; boost::iostreams::basic_file<char>::close, COMDAT
; _this$ = eax

; 175  : void basic_file<Ch>::close() { pimpl_->file_.close(); }

	mov	ecx, DWORD PTR [eax]
	jmp	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
?close@?$basic_file@D@iostreams@boost@@QAEXXZ ENDP	; boost::iostreams::basic_file<char>::close
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
_TEXT	ENDS
;	COMDAT ??$close@U?$basic_file_source@D@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@H@Z
_TEXT	SEGMENT
??$close@U?$basic_file_source@D@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@H@Z PROC ; boost::iostreams::detail::close_impl<boost::iostreams::closable_tag>::close<boost::iostreams::basic_file_source<char> >, COMDAT
; _t$ = eax

; 220  :     {
; 221  :         typedef typename category_of<T>::type category;
; 222  :         const bool in =  is_convertible<category, input>::value &&
; 223  :                         !is_convertible<category, output>::value;
; 224  :         if (in == (which == BOOST_IOS::in))
; 225  :             t.close();

	mov	ecx, DWORD PTR [eax]
	jmp	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
??$close@U?$basic_file_source@D@iostreams@boost@@@?$close_impl@Uclosable_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@H@Z ENDP ; boost::iostreams::detail::close_impl<boost::iostreams::closable_tag>::close<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z
_TEXT	SEGMENT
$T552304 = -40						; size = 40
___formal$ = 8						; size = 1
??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >, COMDAT

; 136  :     static std::streampos 

	sub	esp, 44					; 0000002cH
	push	esi

; 137  :     seek( Device&, stream_offset, BOOST_IOS::seekdir, 
; 138  :           BOOST_IOS::openmode, any_tag )
; 139  :     { 
; 140  :         throw cant_seek(); 

	lea	esi, DWORD PTR $T552304[esp+48]
	call	?cant_seek@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::cant_seek
	push	OFFSET __TI3?AVfailure@ios_base@std@@
	mov	eax, esi
	push	eax
	call	__CxxThrowException@8
$LN4@seek@11:
$LN3@seek@11:
	int	3
??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
_TEXT	ENDS
;	COMDAT ??$close@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@H@Z
_TEXT	SEGMENT
_which$ = 8						; size = 4
??$close@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@H@Z PROC ; boost::iostreams::close<boost::iostreams::basic_file_source<char> >, COMDAT
; _t$ = eax

; 99   : #ifdef BOOST_IOSTREAMS_STRICT
; 100  :     assert(which == BOOST_IOS::in || which == BOOST_IOS::out);
; 101  : #else
; 102  :     if (which == (BOOST_IOS::in | BOOST_IOS::out)) {
; 103  :         detail::close_all(t);
; 104  :         return;
; 105  :     }
; 106  : #endif
; 107  :     detail::close_impl<T>::close(detail::unwrap(t), which); 

	cmp	DWORD PTR _which$[esp-4], 1
	jne	SHORT $LN13@close@21
	mov	ecx, DWORD PTR [eax]
	jmp	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN13@close@21:

; 108  : }

	ret	0
??$close@U?$basic_file_source@D@iostreams@boost@@@iostreams@boost@@YAXAAU?$basic_file_source@D@01@H@Z ENDP ; boost::iostreams::close<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z
_TEXT	SEGMENT
$T552343 = -4						; size = 1
??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 127  :     static std::streampos 

	push	ecx

; 128  :     seek( Device& dev, Dummy*, stream_offset off, 
; 129  :           BOOST_IOS::seekdir way, BOOST_IOS::openmode which )
; 130  :     { 
; 131  :         typedef typename category_of<Device>::type category;
; 132  :         return seek(dev, off, way, which, category()); 

	mov	eax, DWORD PTR $T552343[esp+4]
	push	eax
	call	??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
$LN18@seek@12:
$LN17@seek@12:
	int	3
??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@_JHH@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$close@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z
_TEXT	SEGMENT
??$close@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::close<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _dev$ = ecx
; _which$ = eax

; 153  :     static void close(Device& dev, Dummy*, BOOST_IOS::openmode which)

	cmp	eax, 3
	jne	SHORT $LN3@close@22
	push	ecx
	call	??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_file_source<char> >
	add	esp, 4
$LN11@close@22:

; 154  :     { iostreams::close(dev, which); }

	ret	0

; 153  :     static void close(Device& dev, Dummy*, BOOST_IOS::openmode which)

$LN3@close@22:
	cmp	eax, 1
	jne	SHORT $LN11@close@22
	mov	ecx, DWORD PTR [ecx]
	jmp	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
??$close@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SAXAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@H@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::close<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z
_TEXT	SEGMENT
$T552415 = -40						; size = 40
??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 171  :     static std::streamsize 

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 44					; 0000002cH
	push	esi
	lea	esi, DWORD PTR $T552415[esp+48]
	call	?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::cant_write
	push	OFFSET __TI3?AVfailure@ios_base@std@@
	mov	eax, esi
	push	eax
	call	__CxxThrowException@8
$LN4@write:
$LN3@write:
	int	3
??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
xdata$x	SEGMENT
__unwindtable$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ$0
__ehfuncinfo$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
xdata$x	ENDS
;	COMDAT ??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ PROC	; boost::iostreams::basic_file<char>::impl::~impl, COMDAT

; 72   :         ~impl() { if (file_.is_open()) file_.close(); }

	push	-1
	push	__ehhandler$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	cmp	DWORD PTR [esi+76], 0
	je	SHORT $LN1@impl@2
	mov	ecx, esi
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@impl@2:
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+32], -1
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ ENDP	; boost::iostreams::basic_file<char>::impl::~impl
; Function compile flags: /Ogtpy
;	COMDAT ??_Gimpl@?$basic_file@D@iostreams@boost@@QAEPAXI@Z
_TEXT	SEGMENT
??_Gimpl@?$basic_file@D@iostreams@boost@@QAEPAXI@Z PROC	; boost::iostreams::basic_file<char>::impl::`scalar deleting destructor', COMDAT
; _this$ = esi
	push	ecx
	push	esi
	call	??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ ; boost::iostreams::basic_file<char>::impl::~impl
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	pop	ecx
	ret	0
??_Gimpl@?$basic_file@D@iostreams@boost@@QAEPAXI@Z ENDP	; boost::iostreams::basic_file<char>::impl::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\locale
_TEXT	ENDS
;	COMDAT ??$tolower@D@std@@YADDABVlocale@0@@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 1
??$tolower@D@std@@YADDABVlocale@0@@Z PROC		; std::tolower<char>, COMDAT
; __Loc$ = eax

; 251  : 	return (_USE(_Loc, ctype<_Elem>).tolower(_Ch));

	push	eax
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	ecx, DWORD PTR __Ch$[esp]
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+8]
	add	esp, 4
	push	ecx
	mov	ecx, eax
	call	edx

; 252  : 	}

	ret	0
??$tolower@D@std@@YADDABVlocale@0@@Z ENDP		; std::tolower<char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z
_TEXT	SEGMENT
$T552443 = -40						; size = 40
??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z PROC ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 171  :     static std::streamsize 

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 44					; 0000002cH
	push	esi
	lea	esi, DWORD PTR $T552443[esp+48]
	call	?cant_write@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::cant_write
	push	OFFSET __TI3?AVfailure@ios_base@std@@
	mov	eax, esi
	push	eax
	call	__CxxThrowException@8
$LN4@write@2:
$LN3@write@2:
	int	3
??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ENDP ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
$T552486 = -4						; size = 1
??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::seek<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 92   :     std::streampos seek( stream_offset off, BOOST_IOS::seekdir way,

	push	ecx
	mov	eax, DWORD PTR $T552486[esp+4]
	push	eax
	call	??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
$LN21@seek@13:
$LN20@seek@13:
	int	3
??$seek@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAE?AV?$fpos@H@std@@_JHHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::seek<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT
; _this$ = ecx
; _which$ = eax

; 100  :     void close(BOOST_IOS::openmode which, Device* dev)

	cmp	eax, 3
	jne	SHORT $LN5@close@23
	push	ecx
	call	??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_file_source<char> >
	add	esp, 4
$LN13@close@23:

; 101  :     { any_impl::close(t_, dev, which); }

	ret	0

; 100  :     void close(BOOST_IOS::openmode which, Device* dev)

$LN5@close@23:
	cmp	eax, 1
	jne	SHORT $LN13@close@23
	mov	ecx, DWORD PTR [ecx]
	jmp	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
??$close@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEXHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::close<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::write<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 81   :     std::streamsize write(const char_type* s, std::streamsize n, Sink* snk)

	jmp	??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_file_source<char> >::write<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?sync_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ
_TEXT	SEGMENT
?sync_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync_impl, COMDAT
; _this$ = eax

; 390  :     std::streamsize avail, amt;
; 391  :     if ((avail = static_cast<std::streamsize>(pptr() - pbase())) > 0) {

	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	test	eax, eax
	jle	SHORT $LN55@sync_impl@5

; 392  :         if ((amt = obj().write(pbase(), avail, next())) == avail)

	jmp	??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >

; 393  :             setp(out().begin(), out().end());
; 394  :         else {
; 395  :             const char_type* ptr = pptr();
; 396  :             setp(out().begin() + amt, out().end());
; 397  :             pbump(ptr - pptr());

$LN55@sync_impl@5:

; 398  :         }
; 399  :     }
; 400  : }

	ret	0
?sync_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync_impl
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\checked_delete.hpp
_TEXT	ENDS
;	COMDAT ??$checked_delete@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@YAXPAUimpl@?$basic_file@D@iostreams@0@@Z
_TEXT	SEGMENT
??$checked_delete@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@YAXPAUimpl@?$basic_file@D@iostreams@0@@Z PROC ; boost::checked_delete<boost::iostreams::basic_file<char>::impl>, COMDAT
; _x$ = esi

; 30   : {

	push	ecx

; 31   :     // intentionally complex - simplification causes regressions
; 32   :     typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
; 33   :     (void) sizeof(type_must_be_complete);
; 34   :     delete x;

	test	esi, esi
	je	SHORT $LN3@checked_de@4
	push	esi
	call	??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ ; boost::iostreams::basic_file<char>::impl::~impl
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@checked_de@4:
	pop	ecx

; 35   : }

	ret	0
??$checked_delete@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@YAXPAUimpl@?$basic_file@D@iostreams@0@@Z ENDP ; boost::checked_delete<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_impl.hpp
_TEXT	ENDS
;	COMDAT ?dispose@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEXXZ
_TEXT	SEGMENT
?dispose@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEXXZ PROC ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::dispose, COMDAT
; _this$ = ecx

; 74   :     {

	push	esi

; 75   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 76   :         boost::sp_scalar_destructor_hook( px_, sizeof(X), this );
; 77   : #endif
; 78   :         boost::checked_delete( px_ );

	mov	esi, DWORD PTR [ecx+12]
	test	esi, esi
	je	SHORT $LN5@dispose@4
	push	esi
	call	??1impl@?$basic_file@D@iostreams@boost@@QAE@XZ ; boost::iostreams::basic_file<char>::impl::~impl
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@dispose@4:
	pop	esi

; 79   :     }

	ret	0
?dispose@?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@UAEXXZ ENDP ; boost::detail::sp_counted_impl_p<boost::iostreams::basic_file<char>::impl>::dispose
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\case_conv.hpp
_TEXT	ENDS
;	COMDAT ??R?$to_lowerF@D@detail@algorithm@boost@@QBEDD@Z
_TEXT	SEGMENT
_Ch$ = 8						; size = 1
??R?$to_lowerF@D@detail@algorithm@boost@@QBEDD@Z PROC	; boost::algorithm::detail::to_lowerF<char>::operator(), COMDAT
; _this$ = eax

; 39   :                     #if defined(__BORLANDC__) && (__BORLANDC__ >= 0x560) && (__BORLANDC__ <= 0x564) && !defined(_USE_OLD_RW_STL)
; 40   :                         return std::tolower( Ch);
; 41   :                     #else
; 42   :                         return std::tolower<CharT>( Ch, m_Loc );

	mov	eax, DWORD PTR [eax]
	push	eax
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	edx, DWORD PTR [eax]
	add	esp, 4
	mov	ecx, eax
	mov	edx, DWORD PTR [edx+8]
	jmp	edx
??R?$to_lowerF@D@detail@algorithm@boost@@QBEDD@Z ENDP	; boost::algorithm::detail::to_lowerF<char>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	call	??1?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@93
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@93:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\adapter\concept_adapter.hpp
_TEXT	ENDS
;	COMDAT ??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z
_TEXT	SEGMENT
??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z PROC ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::write<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >, COMDAT

; 81   :     std::streamsize write(const char_type* s, std::streamsize n, Sink* snk)

	jmp	??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
??$write@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@?$concept_adapter@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@detail@iostreams@boost@@QAEHPBDHPAV?$linked_streambuf@DU?$char_traits@D@std@@@123@@Z ENDP ; boost::iostreams::detail::concept_adapter<boost::iostreams::basic_null_device<char,boost::iostreams::input> >::write<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?sync_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ
_TEXT	SEGMENT
?sync_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync_impl, COMDAT
; _this$ = eax

; 390  :     std::streamsize avail, amt;
; 391  :     if ((avail = static_cast<std::streamsize>(pptr() - pbase())) > 0) {

	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	test	eax, eax
	jle	SHORT $LN55@sync_impl@6

; 392  :         if ((amt = obj().write(pbase(), avail, next())) == avail)

	jmp	??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >

; 393  :             setp(out().begin(), out().end());
; 394  :         else {
; 395  :             const char_type* ptr = pptr();
; 396  :             setp(out().begin() + amt, out().end());
; 397  :             pbump(ptr - pptr());

$LN55@sync_impl@6:

; 398  :         }
; 399  :     }
; 400  : }

	ret	0
?sync_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync_impl
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seek_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z
_TEXT	SEGMENT
_off$ = 8						; size = 8
$T553062 = 16						; size = 1
$T552939 = 16						; size = 1
_way$ = 16						; size = 4
_which$ = 20						; size = 4
?seek_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl, COMDAT
; _this$ = eax

; 345  : {

	push	ecx
	push	esi
	mov	esi, eax

; 346  :     if ( gptr() != 0 && way == BOOST_IOS::cur && which == BOOST_IOS::in && 
; 347  :          eback() - gptr() <= off && off <= egptr() - gptr() ) 

	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	push	edi
	test	ecx, ecx
	je	SHORT $LN3@seek_impl@6
	mov	eax, 1
	cmp	DWORD PTR _way$[esp+8], eax
	jne	SHORT $LN3@seek_impl@6
	cmp	DWORD PTR _which$[esp+8], eax
	jne	SHORT $LN3@seek_impl@6
	mov	edx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [edx]
	mov	edi, DWORD PTR _off$[esp+12]
	sub	eax, ecx
	cdq
	cmp	edx, edi
	jg	SHORT $LN3@seek_impl@6
	mov	ecx, DWORD PTR _off$[esp+8]
	jl	SHORT $LN87@seek_impl@6
	cmp	eax, ecx
	ja	SHORT $LN3@seek_impl@6
$LN87@seek_impl@6:
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	cdq
	cmp	edi, edx
	jg	SHORT $LN3@seek_impl@6
	jl	SHORT $LN88@seek_impl@6
	cmp	ecx, eax
	ja	SHORT $LN3@seek_impl@6
$LN88@seek_impl@6:

; 348  :     {   // Small seek optimization
; 349  :         gbump(off);

	mov	eax, DWORD PTR [esi+48]
	sub	DWORD PTR [eax], ecx
	mov	esi, DWORD PTR [esi+32]
	add	DWORD PTR [esi], ecx

; 350  :         return obj().seek(0, BOOST_IOS::cur, BOOST_IOS::in, next_) -
; 351  :                static_cast<off_type>(egptr() - gptr());

	mov	ecx, DWORD PTR $T552939[esp+8]
	push	ecx
	call	??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
$LN90@seek_impl@6:
$LN3@seek_impl@6:

; 352  :     }
; 353  :     if (pptr() != 0) 

	mov	edx, DWORD PTR [esi+36]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN50@seek_impl@6

; 354  :         this->BOOST_IOSTREAMS_PUBSYNC(); // sync() confuses VisualAge 6.

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+48]
	mov	ecx, esi
	call	edx
$LN50@seek_impl@6:

; 355  :     if (way == BOOST_IOS::cur && gptr())
; 356  :         off -= static_cast<off_type>(egptr() - gptr());
; 357  :     setg(0, 0, 0);

	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+48]
	mov	DWORD PTR [edx], 0

; 358  :     setp(0, 0);

	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+36]

; 359  :     return obj().seek(off, way, which, next_);

	mov	eax, DWORD PTR $T553062[esp+8]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+52]
	push	eax
	mov	DWORD PTR [edx], 0
	call	??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
$LN91@seek_impl@6:
$LN89@seek_impl@6:
	int	3
?seek_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?init_get_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
_TEXT	SEGMENT
?init_get_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_get_area, COMDAT
; _this$ = ecx

; 405  :     if (shared_buffer() && pptr() != 0) {
; 406  :         sync_impl();
; 407  :         setp(0, 0);
; 408  :     }
; 409  :     setg(in().begin(), in().begin(), in().begin());

	mov	eax, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx], eax
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
	mov	edx, eax
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], edx

; 410  : }

	ret	0
?init_get_area@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_get_area
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?close_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z
_TEXT	SEGMENT
_which$ = 8						; size = 4
?close_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close_impl, COMDAT
; _this$ = ecx

; 371  :     if (which == BOOST_IOS::in && is_convertible<Mode, input>::value) {

	mov	eax, DWORD PTR _which$[esp-4]
	cmp	eax, 1
	jne	SHORT $LN6@close_impl@5

; 372  :         setg(0, 0, 0);

	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [edx], 0
$LN6@close_impl@5:

; 373  :     }
; 374  :     if (which == BOOST_IOS::out && is_convertible<Mode, output>::value) {
; 375  :         sync();
; 376  :         setp(0, 0);
; 377  :     }
; 378  :     if ( !is_convertible<category, dual_use>::value ||
; 379  :          is_convertible<Mode, input>::value == (which == BOOST_IOS::in) )
; 380  :     {
; 381  :         obj().close(which, next_);

	add	ecx, 64					; 00000040H
	cmp	eax, 3
	jne	SHORT $LN20@close_impl@5
	push	ecx
	call	??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z ; boost::iostreams::detail::close_all<boost::iostreams::basic_file_source<char> >
	add	esp, 4

; 382  :     }
; 383  : }

	ret	4

; 373  :     }
; 374  :     if (which == BOOST_IOS::out && is_convertible<Mode, output>::value) {
; 375  :         sync();
; 376  :         setp(0, 0);
; 377  :     }
; 378  :     if ( !is_convertible<category, dual_use>::value ||
; 379  :          is_convertible<Mode, input>::value == (which == BOOST_IOS::in) )
; 380  :     {
; 381  :         obj().close(which, next_);

$LN20@close_impl@5:
	cmp	eax, 1
	jne	SHORT $LN28@close_impl@5
	mov	ecx, DWORD PTR [ecx]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN28@close_impl@5:

; 382  :     }
; 383  : }

	ret	4
?close_impl@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEXH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::close_impl
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$0
__tryblocktable$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$2
__ehfuncinfo$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	01H
	DD	FLAT:__tryblocktable$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
xdata$x	ENDS
;	COMDAT ?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
_TEXT	SEGMENT
tv74 = -20						; size = 4
__$EHRec$ = -16						; size = 16
?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync, COMDAT
; _this$ = ecx

; 310  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 311  :     try { // sync() is no-throw.

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 312  :         sync_impl();

	mov	eax, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx]
	test	eax, eax
	jle	SHORT $LN62@sync@7
	call	??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
$LN87@sync@7:
$LN62@sync@7:

; 313  :         obj().flush(next_);

	mov	ecx, DWORD PTR [ecx+76]
	test	ecx, ecx
	je	SHORT $LN71@sync@7
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
$LN71@sync@7:

; 314  :         return 0;

	xor	eax, eax

; 316  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$0:

; 315  :     } catch (...) { return -1; }

	mov	eax, $LN7@sync@7
	ret	0
$LN7@sync@7:
	or	eax, -1

; 316  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN86@sync@7:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync
; Function compile flags: /Ogtpy
;	COMDAT ?overflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?overflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::overflow, COMDAT
; _this$ = ecx

; 284  : {

	push	esi
	mov	esi, ecx

; 285  :     if ( output_buffered() && pptr() == 0 ||
; 286  :          shared_buffer() && gptr() != 0 )

	mov	eax, DWORD PTR [esi+92]
	shr	eax, 1
	push	edi
	test	al, 1
	je	SHORT $LN9@overflow@7
	mov	ecx, DWORD PTR [esi+36]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN9@overflow@7

; 287  :     {
; 288  :         init_put_area();

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, esi
	call	eax
$LN9@overflow@7:

; 289  :     }
; 290  :     if (!traits_type::eq_int_type(c, traits_type::eof())) {

	mov	edx, DWORD PTR _c$[esp+4]
	cmp	edx, -1
	je	SHORT $LN113@overflow@7

; 291  :         if (output_buffered()) {

	mov	ecx, DWORD PTR [esi+92]
	shr	ecx, 1
	test	cl, 1
	je	SHORT $LN5@overflow@7

; 292  :             if (pptr() == epptr()) {

	mov	eax, DWORD PTR [esi+52]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [eax]
	lea	edi, DWORD PTR [eax+ecx]
	cmp	eax, edi
	jne	SHORT $LN3@overflow@7

; 293  :                 sync_impl();

	mov	edi, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [esi+20]
	mov	edi, DWORD PTR [edi]
	sub	edi, DWORD PTR [eax]
	test	edi, edi
	jle	SHORT $LN84@overflow@7
$LN5@overflow@7:
	call	??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
$LN120@overflow@7:
$LN84@overflow@7:

; 294  :                 if (pptr() == epptr())

	mov	eax, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [eax]
	add	ecx, eax
	cmp	eax, ecx
	jne	SHORT $LN3@overflow@7
	pop	edi

; 295  :                     return traits_type::eof();

	or	eax, -1
	pop	esi

; 306  : }

	ret	4
$LN3@overflow@7:

; 296  :             }
; 297  :             *pptr() = traits_type::to_char_type(c);

	mov	eax, DWORD PTR [esi+36]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx], dl

; 298  :             pbump(1);

	mov	eax, DWORD PTR [esi+52]
	dec	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+36]
	inc	DWORD PTR [esi]
	pop	edi

; 299  :         } else {
; 300  :             char_type d = traits_type::to_char_type(c);
; 301  :             if (obj().write(&d, 1, next_) != 1)
; 302  :                 return traits_type::eof();
; 303  :         }
; 304  :     }
; 305  :     return traits_type::not_eof(c);

	mov	eax, edx
	pop	esi

; 306  : }

	ret	4

; 299  :         } else {
; 300  :             char_type d = traits_type::to_char_type(c);
; 301  :             if (obj().write(&d, 1, next_) != 1)
; 302  :                 return traits_type::eof();
; 303  :         }
; 304  :     }
; 305  :     return traits_type::not_eof(c);

$LN113@overflow@7:
	pop	edi
	xor	eax, eax
	pop	esi

; 306  : }

	ret	4
$LN119@overflow@7:
?overflow@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::overflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pbackfail@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
_TEXT	SEGMENT
$T553900 = -40						; size = 40
_c$ = 8							; size = 4
?pbackfail@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pbackfail, COMDAT
; _this$ = ecx

; 270  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 271  :     if (gptr() != eback()) {

	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR [edx]
	sub	esp, 44					; 0000002cH
	push	esi
	cmp	edx, DWORD PTR [eax]
	je	SHORT $LN3@pbackfail@7

; 272  :         gbump(-1);

	mov	eax, DWORD PTR [ecx+48]
	inc	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+32]
	dec	DWORD PTR [eax]

; 273  :         if (!traits_type::eq_int_type(c, traits_type::eof()))

	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, -1
	je	SHORT $LN22@pbackfail@7

; 274  :             *gptr() = traits_type::to_char_type(c);

	mov	ecx, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], al

; 278  :     }
; 279  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4

; 275  :         return traits_type::not_eof(c);

$LN22@pbackfail@7:
	xor	eax, eax

; 278  :     }
; 279  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN3@pbackfail@7:

; 276  :     } else {
; 277  :         throw bad_putback();

	lea	esi, DWORD PTR $T553900[esp+48]
	call	?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::bad_putback
	push	OFFSET __TI3?AVfailure@ios_base@std@@
	mov	eax, esi
	push	eax
	call	__CxxThrowException@8
$LN29@pbackfail@7:
$LN28@pbackfail@7:
	int	3
?pbackfail@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pbackfail
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$0
__tryblocktable$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$2
__ehfuncinfo$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
xdata$x	ENDS
;	COMDAT ?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::strict_sync, COMDAT
; _this$ = ecx

; 320  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 321  :     try { // sync() is no-throw.

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 322  :         sync_impl();

	mov	eax, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx]
	test	eax, eax
	jle	SHORT $LN62@strict_syn@5
	call	??$write@U?$basic_file_source@D@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAU?$basic_file_source@D@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_file_source<char>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
$LN87@strict_syn@5:
$LN62@strict_syn@5:

; 323  :         return obj().flush(next_);

	mov	ecx, DWORD PTR [ecx+76]
	mov	bl, 1
	test	ecx, ecx
	je	SHORT $LN71@strict_syn@5
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	eax, -1
	jne	SHORT $LN71@strict_syn@5
	xor	bl, bl
$LN71@strict_syn@5:
	mov	al, bl

; 325  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$0:

; 324  :     } catch (...) { return false; }

	mov	eax, $LN7@strict_syn@5
	ret	0
$LN7@strict_syn@5:
	xor	al, al

; 325  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN86@strict_syn@5:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?strict_sync@?$indirect_streambuf@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::strict_sync
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\sp_counted_base_w32.hpp
xdata$x	SEGMENT
__unwindtable$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z$0
__tryblocktable$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z$3
__ehfuncinfo$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\shared_count.hpp
xdata$x	ENDS
;	COMDAT ??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_p$ = 8							; size = 4
??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z PROC ; boost::detail::shared_count::shared_count<boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = ecx

; 82   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx

; 83   : #ifndef BOOST_NO_EXCEPTIONS
; 84   : 
; 85   :         try
; 86   :         {
; 87   :             pi_ = new sp_counted_impl_p<Y>( p );

	push	16					; 00000010H
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@shared_cou@9
	mov	ecx, 1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$sp_counted_impl_p@Uimpl@?$basic_file@D@iostreams@boost@@@detail@boost@@6B@
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN5@shared_cou@9
$LN4@shared_cou@9:
	xor	eax, eax
$LN5@shared_cou@9:
	mov	DWORD PTR [esi], eax

; 93   :         }
; 94   : 
; 95   : #else
; 96   : 
; 97   :         pi_ = new sp_counted_impl_p<Y>( p );
; 98   : 
; 99   :         if( pi_ == 0 )
; 100  :         {
; 101  :             boost::checked_delete( p );
; 102  :             boost::throw_exception( std::bad_alloc() );
; 103  :         }
; 104  : 
; 105  : #endif
; 106  :     }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z$0:

; 88   :         }
; 89   :         catch(...)
; 90   :         {
; 91   :             boost::checked_delete( p );

	mov	esi, DWORD PTR _p$[ebp]
	call	??$checked_delete@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@YAXPAUimpl@?$basic_file@D@iostreams@0@@Z ; boost::checked_delete<boost::iostreams::basic_file<char>::impl>

; 92   :             throw;

	push	0
	push	0
	call	__CxxThrowException@8
$LN18@shared_cou@9:
$LN17@shared_cou@9:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z ENDP ; boost::detail::shared_count::shared_count<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Transform@PADPADU?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@std@@@std@@YAPADPAD00U?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T554231 = 8						; size = 1
__Last$ = 8						; size = 4
__Func$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Transform@PADPADU?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@std@@@std@@YAPADPAD00U?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Transform<char *,char *,boost::algorithm::detail::to_lowerF<char>,std::forward_iterator_tag>, COMDAT
; __First$ = ecx
; __Dest$ = eax

; 666  : 	{	// transform [_First, _Last) with _Func

	push	ebx
	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, eax

; 667  : 	_DEBUG_RANGE(_First, _Last);
; 668  : 	_DEBUG_POINTER(_Dest);
; 669  : 	_DEBUG_POINTER(_Func);
; 670  : 	for (; _First != _Last; ++_First, ++_Dest)

	cmp	esi, ebx
	je	SHORT $LN1@Transform
	npad	1
$LL3@Transform:

; 671  : 		*_Dest = _Func(*_First);

	mov	ecx, DWORD PTR __Func$[esp+8]
	mov	al, BYTE PTR [esi]
	push	ecx
	mov	BYTE PTR $T554231[esp+12], al
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	ecx, DWORD PTR $T554231[esp+12]
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+8]
	add	esp, 4
	push	ecx
	mov	ecx, eax
	call	edx
	mov	BYTE PTR [edi], al
	inc	esi
	inc	edi
	cmp	esi, ebx
	jne	SHORT $LL3@Transform

; 672  : 	return (_Dest);

	mov	eax, edi
$LN1@Transform:
	pop	edi
	pop	esi
	pop	ebx

; 673  : 	}

	ret	0
??$_Transform@PADPADU?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@std@@@std@@YAPADPAD00U?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Transform<char *,char *,boost::algorithm::detail::to_lowerF<char>,std::forward_iterator_tag>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z$0
__ehfuncinfo$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T554239 = -80						; size = 28
$T554238 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	push	-1
	push	__ehhandler$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, eax

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	eax, DWORD PTR [ecx+24]
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, 1
	jae	SHORT $LN1@Incsize@3

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	16					; 00000010H
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T554239[esp+92]
	mov	DWORD PTR $T554239[esp+116], 15		; 0000000fH
	mov	DWORD PTR $T554239[esp+112], 0
	mov	BYTE PTR $T554239[esp+96], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T554239[esp+84]
	push	eax
	lea	ecx, DWORD PTR $T554238[esp+88]
	mov	DWORD PTR __$EHRec$[esp+96], 0
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T554238[esp+88]
	push	ecx
	mov	DWORD PTR $T554238[esp+92], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN52@Incsize@3:
$LN1@Incsize@3:

; 1242 : 		_Mysize += _Count;

	inc	eax
	mov	DWORD PTR [ecx+24], eax

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 80					; 00000050H
	ret	0
$LN51@Incsize@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T554239[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-68]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Incsize
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
__Where$ = 12						; size = 8
?_Insert@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Insert, COMDAT
; __Val$ = ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();
; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	eax, DWORD PTR __Where$[esp]
	mov	edx, DWORD PTR [eax+4]
	push	esi
	push	edi
	lea	edi, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	call	?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@0ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode

; 719  : 		_Incsize(1);

	mov	ecx, DWORD PTR _this$[esp+4]
	mov	esi, eax
	call	?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [edi], esi

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR [esi+4]

; 722  : 		}

	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	ret	12					; 0000000cH
?_Insert@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z PROC ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	call	??1?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAE@XZ ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::~stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@94
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@94:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@UAEPAXI@Z ENDP ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?push_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z PROC ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::push_back, COMDAT
; __Val$ = eax

; 669  : 		{	// insert element at end

	push	ecx
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+4]
	push	esi

; 670  : 		_Insert(end(), _Val);

	mov	esi, DWORD PTR [ebx+20]
	mov	ecx, DWORD PTR [esi+4]
	push	edi
	push	eax
	push	ecx
	push	esi
	call	?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@0ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode
	mov	ecx, ebx
	mov	edi, eax
	call	?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Incsize
	mov	DWORD PTR [esi+4], edi
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [edx], edi

; 671  : 		}

	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	ret	4
?push_back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEXABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ENDP ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::push_back
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
_TEXT	ENDS
;	COMDAT ?init_get_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ
_TEXT	SEGMENT
?init_get_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_get_area, COMDAT
; _this$ = ecx

; 405  :     if (shared_buffer() && pptr() != 0) {
; 406  :         sync_impl();
; 407  :         setp(0, 0);
; 408  :     }
; 409  :     setg(in().begin(), in().begin(), in().begin());

	mov	eax, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx], eax
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
	mov	edx, eax
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax], edx

; 410  : }

	ret	0
?init_get_area@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@EAEXXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::init_get_area
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekpos@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z
_TEXT	SEGMENT
$T555055 = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
_sp$ = 12						; size = 24
_which$ = 36						; size = 4
?seekpos@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekpos, COMDAT
; _this$ = ecx

; 337  : { 

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	esi
	mov	esi, ecx

; 338  :     return seek_impl(position_to_offset(sp), BOOST_IOS::beg, which); 

	mov	eax, DWORD PTR [esi+36]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN66@seekpos@8
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+48]
	call	eax
$LN66@seekpos@8:
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+36]
	mov	ecx, DWORD PTR $T555055[esp+8]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+52]
	push	ecx
	mov	DWORD PTR [eax], 0
	call	??$seek@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@@?$device_wrapper_impl@Uany_tag@iostreams@boost@@@detail@iostreams@boost@@SA?AV?$fpos@H@std@@AAV?$basic_null_device@DUinput@iostreams@boost@@@23@_JHHUany_tag@23@@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::any_tag>::seek<boost::iostreams::basic_null_device<char,boost::iostreams::input> >
$LN105@seekpos@8:
$LN104@seekpos@8:
	int	3
?seekpos@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@V56@H@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekpos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekoff@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_off$ = 12						; size = 4
_way$ = 16						; size = 4
_which$ = 20						; size = 4
?seekoff@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekoff, COMDAT
; _this$ = ecx

; 331  : { return seek_impl(off, way, which); }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	mov	eax, DWORD PTR _which$[ebp]
	mov	edx, DWORD PTR _way$[ebp]
	push	eax
	mov	eax, DWORD PTR _off$[ebp]
	push	edx
	cdq
	push	edx
	push	eax
	mov	eax, ecx
	call	?seek_impl@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAE?AV?$fpos@H@std@@_JHH@Z ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seek_impl
$LN4@seekoff@6:
$LN3@seekoff@6:
	int	3
?seekoff@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAE?AV?$fpos@H@std@@JHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::seekoff
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$0
__tryblocktable$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$2
__ehfuncinfo$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	01H
	DD	FLAT:__tryblocktable$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
xdata$x	ENDS
;	COMDAT ?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
_TEXT	SEGMENT
tv74 = -20						; size = 4
__$EHRec$ = -16						; size = 16
?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync, COMDAT
; _this$ = ecx

; 310  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 311  :     try { // sync() is no-throw.

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 312  :         sync_impl();

	mov	eax, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx]
	test	eax, eax
	jle	SHORT $LN62@sync@8
	call	??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
$LN87@sync@8:
$LN62@sync@8:

; 313  :         obj().flush(next_);

	mov	ecx, DWORD PTR [ecx+68]
	test	ecx, ecx
	je	SHORT $LN71@sync@8
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
$LN71@sync@8:

; 314  :         return 0;

	xor	eax, eax

; 316  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ$0:

; 315  :     } catch (...) { return -1; }

	mov	eax, $LN7@sync@8
	ret	0
$LN7@sync@8:
	or	eax, -1

; 316  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN86@sync@8:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::sync
; Function compile flags: /Ogtpy
;	COMDAT ?overflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
?overflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::overflow, COMDAT
; _this$ = ecx

; 284  : {

	push	esi
	mov	esi, ecx

; 285  :     if ( output_buffered() && pptr() == 0 ||
; 286  :          shared_buffer() && gptr() != 0 )

	mov	eax, DWORD PTR [esi+84]
	shr	eax, 1
	push	edi
	test	al, 1
	je	SHORT $LN9@overflow@8
	mov	ecx, DWORD PTR [esi+36]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN9@overflow@8

; 287  :     {
; 288  :         init_put_area();

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, esi
	call	eax
$LN9@overflow@8:

; 289  :     }
; 290  :     if (!traits_type::eq_int_type(c, traits_type::eof())) {

	mov	edx, DWORD PTR _c$[esp+4]
	cmp	edx, -1
	je	SHORT $LN113@overflow@8

; 291  :         if (output_buffered()) {

	mov	ecx, DWORD PTR [esi+84]
	shr	ecx, 1
	test	cl, 1
	je	SHORT $LN5@overflow@8

; 292  :             if (pptr() == epptr()) {

	mov	eax, DWORD PTR [esi+52]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [eax]
	lea	edi, DWORD PTR [eax+ecx]
	cmp	eax, edi
	jne	SHORT $LN3@overflow@8

; 293  :                 sync_impl();

	mov	edi, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [esi+20]
	mov	edi, DWORD PTR [edi]
	sub	edi, DWORD PTR [eax]
	test	edi, edi
	jle	SHORT $LN84@overflow@8
$LN5@overflow@8:
	call	??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
$LN120@overflow@8:
$LN84@overflow@8:

; 294  :                 if (pptr() == epptr())

	mov	eax, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [eax]
	add	ecx, eax
	cmp	eax, ecx
	jne	SHORT $LN3@overflow@8
	pop	edi

; 295  :                     return traits_type::eof();

	or	eax, -1
	pop	esi

; 306  : }

	ret	4
$LN3@overflow@8:

; 296  :             }
; 297  :             *pptr() = traits_type::to_char_type(c);

	mov	eax, DWORD PTR [esi+36]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx], dl

; 298  :             pbump(1);

	mov	eax, DWORD PTR [esi+52]
	dec	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+36]
	inc	DWORD PTR [esi]
	pop	edi

; 299  :         } else {
; 300  :             char_type d = traits_type::to_char_type(c);
; 301  :             if (obj().write(&d, 1, next_) != 1)
; 302  :                 return traits_type::eof();
; 303  :         }
; 304  :     }
; 305  :     return traits_type::not_eof(c);

	mov	eax, edx
	pop	esi

; 306  : }

	ret	4

; 299  :         } else {
; 300  :             char_type d = traits_type::to_char_type(c);
; 301  :             if (obj().write(&d, 1, next_) != 1)
; 302  :                 return traits_type::eof();
; 303  :         }
; 304  :     }
; 305  :     return traits_type::not_eof(c);

$LN113@overflow@8:
	pop	edi
	xor	eax, eax
	pop	esi

; 306  : }

	ret	4
$LN119@overflow@8:
?overflow@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::overflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pbackfail@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z
_TEXT	SEGMENT
$T555643 = -40						; size = 40
_c$ = 8							; size = 4
?pbackfail@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pbackfail, COMDAT
; _this$ = ecx

; 270  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 271  :     if (gptr() != eback()) {

	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR [edx]
	sub	esp, 44					; 0000002cH
	push	esi
	cmp	edx, DWORD PTR [eax]
	je	SHORT $LN3@pbackfail@8

; 272  :         gbump(-1);

	mov	eax, DWORD PTR [ecx+48]
	inc	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+32]
	dec	DWORD PTR [eax]

; 273  :         if (!traits_type::eq_int_type(c, traits_type::eof()))

	mov	eax, DWORD PTR _c$[ebp]
	cmp	eax, -1
	je	SHORT $LN22@pbackfail@8

; 274  :             *gptr() = traits_type::to_char_type(c);

	mov	ecx, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], al

; 278  :     }
; 279  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4

; 275  :         return traits_type::not_eof(c);

$LN22@pbackfail@8:
	xor	eax, eax

; 278  :     }
; 279  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN3@pbackfail@8:

; 276  :     } else {
; 277  :         throw bad_putback();

	lea	esi, DWORD PTR $T555643[esp+48]
	call	?bad_putback@detail@iostreams@boost@@YA?AVfailure@ios_base@std@@XZ ; boost::iostreams::detail::bad_putback
	push	OFFSET __TI3?AVfailure@ios_base@std@@
	mov	eax, esi
	push	eax
	call	__CxxThrowException@8
$LN29@pbackfail@8:
$LN28@pbackfail@8:
	int	3
?pbackfail@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@MAEHH@Z ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::pbackfail
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$0
__tryblocktable$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$2
__ehfuncinfo$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\detail\streambuf\indirect_streambuf.hpp
xdata$x	ENDS
;	COMDAT ?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ PROC ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::strict_sync, COMDAT
; _this$ = ecx

; 320  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 321  :     try { // sync() is no-throw.

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 322  :         sync_impl();

	mov	eax, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx]
	test	eax, eax
	jle	SHORT $LN62@strict_syn@6
	call	??$write@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@V?$linked_streambuf@DU?$char_traits@D@std@@@detail@23@@?$device_wrapper_impl@Uinput@iostreams@boost@@@detail@iostreams@boost@@SAHAAV?$basic_null_device@DUinput@iostreams@boost@@@23@PAV?$linked_streambuf@DU?$char_traits@D@std@@@123@PBDH@Z ; boost::iostreams::detail::device_wrapper_impl<boost::iostreams::input>::write<boost::iostreams::basic_null_device<char,boost::iostreams::input>,boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > >
$LN87@strict_syn@6:
$LN62@strict_syn@6:

; 323  :         return obj().flush(next_);

	mov	ecx, DWORD PTR [ecx+68]
	mov	bl, 1
	test	ecx, ecx
	je	SHORT $LN71@strict_syn@6
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	eax, -1
	jne	SHORT $LN71@strict_syn@6
	xor	bl, bl
$LN71@strict_syn@6:
	mov	al, bl

; 325  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ$0:

; 324  :     } catch (...) { return false; }

	mov	eax, $LN7@strict_syn@6
	ret	0
$LN7@strict_syn@6:
	xor	al, al

; 325  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN86@strict_syn@6:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?strict_sync@?$indirect_streambuf@V?$basic_null_device@DUinput@iostreams@boost@@@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@UAE_NXZ ENDP ; boost::iostreams::detail::indirect_streambuf<boost::iostreams::basic_null_device<char,boost::iostreams::input>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::strict_sync
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Equal@PBVChannel@DRAMsimII@@PBV12@Uforward_iterator_tag@std@@@std@@YA_NPBVChannel@DRAMsimII@@00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Last1$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Equal@PBVChannel@DRAMsimII@@PBV12@Uforward_iterator_tag@std@@@std@@YA_NPBVChannel@DRAMsimII@@00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Equal<DRAMsimII::Channel const *,DRAMsimII::Channel const *,std::forward_iterator_tag>, COMDAT
; __First1$ = ecx
; __First2$ = eax

; 2991 : 	{	// compare [_First1, _Last1) to [First2, ...)

	push	ebx
	mov	ebx, DWORD PTR __Last1$[esp]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, eax

; 2992 : 	for (; _First1 != _Last1; ++_First1, ++_First2)

	cmp	esi, ebx
	je	SHORT $LN2@Equal@15
	npad	1
$LL4@Equal@15:

; 2993 : 		if (!(*_First1 == *_First2))

	push	edi
	push	esi
	call	??8Channel@DRAMsimII@@QBE_NABV01@@Z	; DRAMsimII::Channel::operator==
	test	al, al
	je	SHORT $LN8@Equal@15
	add	esi, 456				; 000001c8H
	add	edi, 456				; 000001c8H
	cmp	esi, ebx
	jne	SHORT $LL4@Equal@15
$LN2@Equal@15:
	pop	edi
	pop	esi

; 2995 : 	return (true);

	mov	al, 1
	pop	ebx

; 2996 : 	}

	ret	0
$LN8@Equal@15:
	pop	edi
	pop	esi

; 2994 : 			return (false);

	xor	al, al
	pop	ebx

; 2996 : 	}

	ret	0
??$_Equal@PBVChannel@DRAMsimII@@PBV12@Uforward_iterator_tag@std@@@std@@YA_NPBVChannel@DRAMsimII@@00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Equal<DRAMsimII::Channel const *,DRAMsimII::Channel const *,std::forward_iterator_tag>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$2
__ehfuncinfo$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
xdata$x	ENDS
;	COMDAT ??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
_TEXT	SEGMENT
$T555942 = -92						; size = 4
_buf$ = -92						; size = 4
_last$179617 = -88					; size = 8
$T555934 = -80						; size = 28
$T555933 = -52						; size = 40
__$EHRec$ = -12						; size = 12
_prev$ = 8						; size = 4
_this$ = 8						; size = 4
$T555945 = 12						; size = 4
_t$ = 12						; size = 4
??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >, COMDAT

; 225  :     void push_impl(const T& t, int buffer_size = -1, int pback_size = -1)

	push	-1
	push	__ehhandler$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR _this$[esp+112]

; 226  :     {
; 227  :         typedef typename iostreams::category_of<T>::type  category;
; 228  :         typedef typename unwrap_ios<T>::type              policy_type;
; 229  :         typedef stream_buffer<
; 230  :                     policy_type,
; 231  :                     BOOST_IOSTREAMS_CHAR_TRAITS(char_type),
; 232  :                     Alloc, Mode
; 233  :                 >                                         streambuf_t;
; 234  :         typedef typename list_type::iterator              iterator;
; 235  :         BOOST_STATIC_ASSERT((is_convertible<category, Mode>::value));
; 236  :         if (is_complete())

	mov	eax, DWORD PTR [ebx]
	test	BYTE PTR [eax+44], 1
	je	SHORT $LN6@push_impl

; 237  :             throw std::logic_error("chain complete");

	push	14					; 0000000eH
	xor	esi, esi
	push	OFFSET ??_C@_0P@HJKEEELA@chain?5complete?$AA@
	lea	ecx, DWORD PTR $T555934[esp+124]
	mov	DWORD PTR $T555934[esp+148], 15		; 0000000fH
	mov	DWORD PTR $T555934[esp+144], esi
	mov	BYTE PTR $T555934[esp+128], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T555934[esp+116]
	push	eax
	lea	ecx, DWORD PTR $T555933[esp+120]
	mov	DWORD PTR __$EHRec$[esp+128], esi
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI2?AVlogic_error@std@@
	lea	ecx, DWORD PTR $T555933[esp+120]
	push	ecx
	call	__CxxThrowException@8
$LN290@push_impl:
$LN6@push_impl:

; 238  :         streambuf_type* prev = !empty() ? list().back() : 0;

	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN9@push_impl
	call	?back@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@QAEAAPAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@XZ ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::back
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _prev$[esp+112], edx
	jmp	SHORT $LN286@push_impl
$LN9@push_impl:
	mov	DWORD PTR _prev$[esp+112], 0
$LN286@push_impl:

; 239  :         buffer_size =
; 240  :             buffer_size != -1 ?
; 241  :                 buffer_size :
; 242  :                 iostreams::optimal_buffer_size(t);
; 243  :         pback_size =
; 244  :             pback_size != -1 ?
; 245  :                 pback_size :
; 246  :                 pimpl_->pback_size_;

	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [eax+40]

; 247  :         std::auto_ptr<streambuf_t>
; 248  :             buf(new streambuf_t(t, buffer_size, pback_size));

	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T555942[esp+116], eax
	mov	DWORD PTR __$EHRec$[esp+124], 1
	test	eax, eax
	je	SHORT $LN15@push_impl
	mov	ecx, DWORD PTR _t$[esp+112]
	push	esi
	push	4096					; 00001000H
	push	ecx
	push	eax
	call	??0?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@QAE@ABU?$basic_file_source@D@12@HH@Z ; boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
	jmp	SHORT $LN16@push_impl
$LN15@push_impl:
	xor	eax, eax
$LN16@push_impl:
	mov	DWORD PTR _buf$[esp+116], eax
	mov	DWORD PTR __$EHRec$[esp+124], 2

; 249  :         list().push_back(buf.get());

	mov	ebp, DWORD PTR [ebx]
	mov	esi, DWORD PTR [ebp+20]
	lea	edx, DWORD PTR $T555945[esp+112]
	mov	DWORD PTR $T555945[esp+112], eax
	mov	eax, DWORD PTR [esi+4]
	push	edx
	push	eax
	push	esi
	call	?_Buynode@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEPAU_Node@?$_List_nod@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@2@PAU342@0ABQAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Buynode
	mov	ecx, ebp
	mov	edi, eax
	call	?_Incsize@?$list@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@V?$allocator@PAV?$linked_streambuf@DU?$char_traits@D@std@@@detail@iostreams@boost@@@std@@@std@@IAEXI@Z ; std::list<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *,std::allocator<boost::iostreams::detail::linked_streambuf<char,std::char_traits<char> > *> >::_Incsize
	mov	DWORD PTR [esi+4], edi
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax], edi

; 250  :         buf.release();
; 251  :         if (is_device<policy_type>::value) {
; 252  :             pimpl_->flags_ |= f_complete | f_open;

	mov	eax, DWORD PTR [ebx]
	or	DWORD PTR [eax+44], 3

; 253  :             for ( iterator first = list().begin(),

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+20]
	mov	esi, DWORD PTR [eax]
	mov	edi, DWORD PTR [ecx]

; 254  :                            last = list().end();

	mov	ebp, ecx
	mov	ecx, esi
	mov	DWORD PTR _buf$[esp+116], 0
	mov	DWORD PTR _last$179617[esp+116], ecx
	npad	6

; 255  :                   first != last;
; 256  :                   ++first )

$LL170@push_impl:
	test	esi, esi
	je	SHORT $LN184@push_impl
	cmp	esi, DWORD PTR _last$179617[esp+116]
	je	SHORT $LN185@push_impl
$LN184@push_impl:
	call	__invalid_parameter_noinfo
$LN185@push_impl:
	cmp	edi, ebp
	je	SHORT $LN2@push_impl

; 257  :             {
; 258  :                 (*first)->set_needs_close();

	test	esi, esi
	jne	SHORT $LN285@push_impl
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN206@push_impl:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN195@push_impl
	call	__invalid_parameter_noinfo
$LN195@push_impl:
	mov	eax, DWORD PTR [edi+8]
	and	DWORD PTR [eax+60], -7			; fffffff9H
	test	esi, esi
	jne	SHORT $LN284@push_impl
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN177@push_impl:

; 255  :                   first != last;
; 256  :                   ++first )

	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN166@push_impl
	call	__invalid_parameter_noinfo
$LN166@push_impl:
	mov	edi, DWORD PTR [edi]
	jmp	SHORT $LL170@push_impl
$LN285@push_impl:

; 257  :             {
; 258  :                 (*first)->set_needs_close();

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN206@push_impl
$LN284@push_impl:

; 255  :                   first != last;
; 256  :                   ++first )

	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN177@push_impl
$LN2@push_impl:

; 259  :             }
; 260  :         }
; 261  :         if (prev) prev->set_next(list().back());

	mov	ebp, DWORD PTR _prev$[esp+112]
	test	ebp, ebp
	je	SHORT $LN1@push_impl
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [eax]
	mov	edi, DWORD PTR [eax+20]
	test	esi, esi
	jne	SHORT $LN239@push_impl
	call	__invalid_parameter_noinfo
$LN239@push_impl:
	mov	edi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN249@push_impl
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN250@push_impl
$LN249@push_impl:
	xor	eax, eax
$LN250@push_impl:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN237@push_impl
	call	__invalid_parameter_noinfo
$LN237@push_impl:
	test	esi, esi
	jne	SHORT $LN283@push_impl
	call	__invalid_parameter_noinfo
$LN266@push_impl:
	cmp	edi, DWORD PTR [esi+20]
	jne	SHORT $LN255@push_impl
	call	__invalid_parameter_noinfo
$LN255@push_impl:
	mov	edx, DWORD PTR [ebp]
	mov	eax, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [edx+56]
	push	eax
	mov	ecx, ebp
	call	edx
$LN1@push_impl:

; 262  :         notify();

	mov	ebx, DWORD PTR [ebx]
	cmp	DWORD PTR [ebx+28], 0
	je	SHORT $LN271@push_impl
	mov	ecx, DWORD PTR [ebx+28]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN271@push_impl:

; 263  :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 96					; 00000060H
	ret	8
$LN283@push_impl:

; 259  :             }
; 260  :         }
; 261  :         if (prev) prev->set_next(list().back());

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN266@push_impl
$LN289@push_impl:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$0:
	lea	ecx, DWORD PTR $T555934[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$1:
	mov	eax, DWORD PTR $T555942[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z$2:
	lea	eax, DWORD PTR _buf$[ebp]
	jmp	??1?$auto_ptr@V?$stream_buffer@U?$basic_file_source@D@iostreams@boost@@U?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@iostreams@boost@@@std@@QAE@XZ ; std::auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >::~auto_ptr<boost::iostreams::stream_buffer<boost::iostreams::basic_file_source<char>,std::char_traits<char>,std::allocator<char>,boost::iostreams::input> >
__ehhandler$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-100]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
;	COMDAT ??$?0Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@1@@Z
_TEXT	SEGMENT
??$?0Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@1@@Z PROC ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl><boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = edi
; _p$ = esi

; 188  :     {

	push	ecx
	push	esi
	lea	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], esi
	call	??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z ; boost::detail::shared_count::shared_count<boost::iostreams::basic_file<char>::impl>

; 189  :         boost::detail::sp_enable_shared_from_this( this, p, p );

	push	esi
	push	esi
	push	edi
	call	?sp_enable_shared_from_this@detail@boost@@YAXZZ ; boost::detail::sp_enable_shared_from_this
	add	esp, 12					; 0000000cH

; 190  :     }

	mov	eax, edi
	pop	ecx
	ret	0
??$?0Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@1@@Z ENDP ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::shared_ptr<boost::iostreams::basic_file<char>::impl><boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Transform@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAD0V10@U?$to_lowerF@D@detail@algorithm@boost@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Tmp$556897 = -12					; size = 8
$T556887 = 8						; size = 1
$T556888 = 8						; size = 1
__First$ = 8						; size = 4
__Func$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
__Dest$ = 24						; size = 8
??$_Transform@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAD0V10@U?$to_lowerF@D@detail@algorithm@boost@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Transform<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >, COMDAT
; ___$ReturnUdt$ = esi
; __Last$ = edi

; 680  : 	{	// transform [_First, _Last) with _Func

	sub	esp, 16					; 00000010H

; 681  : 	// for range checked iterators, this will make sure there is enough space
; 682  : 	_OutIt _Result = _Dest + (_Last - _First);

	mov	ecx, DWORD PTR __Dest$[esp+16]
	mov	eax, DWORD PTR __Dest$[esp+12]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp+16]
	mov	edx, edi
	sub	edx, ebx
	mov	DWORD PTR __Tmp$556897[esp+24], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$556897[esp+24]
	mov	DWORD PTR __Tmp$556897[esp+24], eax
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	eax, DWORD PTR __Tmp$556897[esp+20]
	mov	ecx, DWORD PTR __Tmp$556897[esp+24]

; 683  : 	_Transform(_First, _Last, _CHECKED_BASE(_Dest), _Func,
; 684  : 		forward_iterator_tag(), _Range_checked_iterator_tag());

	mov	BYTE PTR $T556887[esp+16], 0
	mov	edx, DWORD PTR $T556887[esp+16]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR $T556888[esp+16]
	push	edx
	mov	DWORD PTR [esi+4], ecx
	mov	ecx, DWORD PTR __Func$[esp+20]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+28]
	push	ecx
	push	edi
	mov	ecx, ebx
	call	??$_Transform@PADPADU?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@std@@@std@@YAPADPAD00U?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Transform<char *,char *,boost::algorithm::detail::to_lowerF<char>,std::forward_iterator_tag>
	add	esp, 16					; 00000010H

; 685  : 	return (_Result);

	mov	eax, esi

; 686  : 	}

	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
??$_Transform@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAD0V10@U?$to_lowerF@D@detail@algorithm@boost@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Transform<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
xdata$x	SEGMENT
__unwindtable$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z$1
__ehfuncinfo$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >, COMDAT
; _this$ = ecx

; 363  :                 {

	push	-1
	push	__ehhandler$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+32], esi
	mov	edi, DWORD PTR _x$[esp+28]
	push	edi
	call	??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	mov	DWORD PTR __$EHRec$[esp+40], 0
	mov	DWORD PTR [esi+104], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	mov	BYTE PTR __$EHRec$[esp+40], 1
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [esi+104], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@

; 364  :                 copy_boost_exception(this,&x);

	test	edi, edi
	je	SHORT $LN3@clone_impl@4
	lea	ebx, DWORD PTR [edi+84]
	jmp	SHORT $LN4@clone_impl@4
$LN3@clone_impl@4:
	xor	ebx, ebx
$LN4@clone_impl@4:
	mov	ecx, DWORD PTR [esi+88]
	mov	edi, DWORD PTR [ebx+4]
	test	ecx, ecx
	je	SHORT $LN19@clone_impl@4
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN19@clone_impl@4:
	mov	DWORD PTR [esi+88], edi
	test	edi, edi
	je	SHORT $LN22@clone_impl@4
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+12]
	mov	ecx, edi
	call	edx
$LN22@clone_impl@4:
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR [esi+92], eax
	mov	ecx, DWORD PTR [ebx+12]
	mov	DWORD PTR [esi+96], ecx
	mov	edx, DWORD PTR [ebx+16]
	mov	DWORD PTR [esi+100], edx

; 365  :                 }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
__unwindfunclet$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1clone_base@exception_detail@boost@@UAE@XZ ; boost::exception_detail::clone_base::~clone_base
__ehhandler$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Equal@PBVChannel@DRAMsimII@@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YA_NPBVChannel@DRAMsimII@@0V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T556998 = 8						; size = 1
__First1$ = 8						; size = 4
$T556997 = 12						; size = 1
__Last1$ = 12						; size = 4
__First2$ = 16						; size = 8
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Equal@PBVChannel@DRAMsimII@@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YA_NPBVChannel@DRAMsimII@@0V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Equal<DRAMsimII::Channel const *,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >, COMDAT

; 3042 : 	{

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __Last1$[esp+4]

; 3043 : 	// for range checked iterators, this will make sure there is enough space
; 3044 : 	_InIt2 _Last2 = _First2 + (_Last1 - _First1); (_Last2);

	mov	ecx, ebp
	sub	ecx, DWORD PTR __First1$[esp+4]
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	mov	eax, DWORD PTR __First2$[esp+4]
	add	edx, ecx
	push	esi
	sar	edx, 8
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	push	edi
	mov	edi, DWORD PTR __First2$[esp+16]
	mov	ebx, eax
	test	eax, eax
	jne	SHORT $LN30@Equal@16
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN15@Equal@16:
	imul	esi, 456				; 000001c8H
	add	esi, edi
	cmp	esi, DWORD PTR [eax+16]
	ja	SHORT $LN5@Equal@16
	test	ebx, ebx
	je	SHORT $LN20@Equal@16
	mov	ebx, DWORD PTR [ebx]
	jmp	SHORT $LN21@Equal@16
$LN30@Equal@16:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN15@Equal@16
$LN20@Equal@16:
	xor	ebx, ebx
$LN21@Equal@16:
	cmp	esi, DWORD PTR [ebx+12]
	jae	SHORT $LN6@Equal@16
$LN5@Equal@16:
	call	__invalid_parameter_noinfo
$LN6@Equal@16:

; 3045 : 	return _Equal(_First1, _Last1, _CHECKED_BASE(_First2),
; 3046 : 		forward_iterator_tag(), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR $T556998[esp+12]
	mov	BYTE PTR $T556997[esp+12], 0
	mov	eax, DWORD PTR $T556997[esp+12]
	push	eax
	mov	eax, DWORD PTR __First2$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR __First1$[esp+20]
	push	ebp
	call	??$_Equal@PBVChannel@DRAMsimII@@PBV12@Uforward_iterator_tag@std@@@std@@YA_NPBVChannel@DRAMsimII@@00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<DRAMsimII::Channel const *,DRAMsimII::Channel const *,std::forward_iterator_tag>
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3047 : 	}

	ret	0
??$_Equal@PBVChannel@DRAMsimII@@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YA_NPBVChannel@DRAMsimII@@0V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Equal<DRAMsimII::Channel const *,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z
_TEXT	SEGMENT
??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z PROC ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push<boost::iostreams::basic_file_source<char> >, COMDAT
; _this$ = ecx
; _t$ = eax

; 208  :     BOOST_IOSTREAMS_DEFINE_PUSH(push, mode, char_type, push_impl)

	push	ecx
	push	eax
	push	ecx
	call	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
	pop	ecx
	ret	0
??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z ENDP ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
_TEXT	ENDS
;	COMDAT ??$reset@Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXPAUimpl@?$basic_file@D@iostreams@1@@Z
_TEXT	SEGMENT
$T557099 = -12						; size = 8
??$reset@Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXPAUimpl@?$basic_file@D@iostreams@1@@Z PROC ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::reset<boost::iostreams::basic_file<char>::impl>, COMDAT
; _this$ = edi
; _p$ = eax

; 389  :     template<class Y> void reset(Y * p) // Y must be complete

	sub	esp, 16					; 00000010H
	push	esi
	mov	esi, eax

; 390  :     {
; 391  :         BOOST_ASSERT(p == 0 || p != px); // catch self-reset errors
; 392  :         this_type(p).swap(*this);

	push	esi
	lea	ecx, DWORD PTR $T557099[esp+28]
	mov	DWORD PTR $T557099[esp+24], esi
	call	??$?0Uimpl@?$basic_file@D@iostreams@boost@@@shared_count@detail@boost@@QAE@PAUimpl@?$basic_file@D@iostreams@2@@Z ; boost::detail::shared_count::shared_count<boost::iostreams::basic_file<char>::impl>
	push	esi
	lea	eax, DWORD PTR $T557099[esp+24]
	push	esi
	push	eax
	call	?sp_enable_shared_from_this@detail@boost@@YAXZZ ; boost::detail::sp_enable_shared_from_this
	lea	ecx, DWORD PTR $T557099[esp+32]
	add	esp, 12					; 0000000cH
	cmp	ecx, edi
	je	SHORT $LN9@reset@18
	mov	eax, DWORD PTR $T557099[esp+20]
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR $T557099[esp+20], edx
	mov	DWORD PTR [edi], eax
$LN9@reset@18:
	mov	esi, DWORD PTR [edi+4]
	mov	eax, DWORD PTR $T557099[esp+24]
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR $T557099[esp+24], esi
	test	esi, esi
	je	SHORT $LN23@reset@18
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN23@reset@18
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN23@reset@18
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	call	eax
$LN23@reset@18:

; 393  :     }

	pop	esi
	add	esp, 16					; 00000010H
	ret	0
??$reset@Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXPAUimpl@?$basic_file@D@iostreams@1@@Z ENDP ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::reset<boost::iostreams::basic_file<char>::impl>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z
_TEXT	SEGMENT
$T557236 = -8						; size = 1
__Tmp$557242 = -8					; size = 8
$T557254 = -8						; size = 8
__Func$ = 8						; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
$T557237 = 28						; size = 1
__Dest$ = 28						; size = 8
??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z PROC ; std::transform<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >, COMDAT
; ___$ReturnUdt$ = esi

; 694  : 	{

	sub	esp, 12					; 0000000cH

; 695  : 	return _Transform(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest, _Func,
; 696  : 		_Iter_random(_First, _Dest), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Dest$[esp+8]
	mov	eax, DWORD PTR __Last$[esp+12]
	mov	ecx, DWORD PTR __First$[esp+12]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __Dest$[esp+20]
	push	edi
	mov	DWORD PTR $T557254[esp+24], edx
	mov	edi, eax
	sub	eax, ecx
	mov	DWORD PTR __Tmp$557242[esp+24], edx
	mov	ebx, ecx
	mov	edx, ebp
	push	eax
	lea	ecx, DWORD PTR __Tmp$557242[esp+28]
	mov	DWORD PTR __Tmp$557242[esp+32], edx
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	eax, DWORD PTR __Tmp$557242[esp+24]
	mov	ecx, DWORD PTR __Tmp$557242[esp+28]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR $T557237[esp+20]
	mov	BYTE PTR $T557236[esp+24], 0
	mov	edx, DWORD PTR $T557236[esp+24]
	push	edx
	mov	DWORD PTR [esi+4], ecx
	mov	ecx, DWORD PTR __Func$[esp+24]
	push	eax
	push	ecx
	push	edi
	mov	eax, ebp
	mov	ecx, ebx
	call	??$_Transform@PADPADU?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@std@@@std@@YAPADPAD00U?$to_lowerF@D@detail@algorithm@boost@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Transform<char *,char *,boost::algorithm::detail::to_lowerF<char>,std::forward_iterator_tag>
	add	esp, 16					; 00000010H

; 697  : 	}

	pop	edi
	pop	ebp
	mov	eax, esi
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	0
??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z ENDP ; std::transform<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ??$enable_error_info@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YA?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@0@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z
_TEXT	SEGMENT
$T557259 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$enable_error_info@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YA?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@0@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z PROC ; boost::enable_error_info<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >, COMDAT

; 315  :         {

	push	ecx

; 316  :         typedef typename exception_detail::enable_error_info_return_type<T>::type rt;
; 317  :         return rt(x);

	mov	eax, DWORD PTR _x$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR $T557259[esp+12], 0
	call	??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@Z ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
	mov	eax, esi
	pop	esi

; 318  :         }

	pop	ecx
	ret	0
??$enable_error_info@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YA?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@0@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ENDP ; boost::enable_error_info<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@95
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@95:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?rethrow@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ
_TEXT	SEGMENT
$T557268 = -108						; size = 108
?rethrow@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::rethrow, COMDAT
; _this$ = ecx

; 381  :                 {

	sub	esp, 108				; 0000006cH

; 382  :                 throw*this;

	lea	eax, DWORD PTR [ecx-104]
	push	eax
	lea	ecx, DWORD PTR $T557268[esp+112]
	call	??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	push	OFFSET __TI8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@
	lea	eax, DWORD PTR $T557268[esp+112]
	push	eax
	mov	DWORD PTR $T557268[esp+116], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR $T557268[esp+200], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR $T557268[esp+220], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
	call	__CxxThrowException@8
$LN12@rethrow@3:
$LN11@rethrow@3:
	int	3
?rethrow@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::rethrow
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ$0
__ehfuncinfo$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
xdata$x	ENDS
;	COMDAT ?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
_TEXT	SEGMENT
$T557291 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone, COMDAT
; _this$ = ecx

; 375  :                 {

	push	-1
	push	__ehhandler$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx

; 376  :                 return new clone_impl(*this);

	push	108					; 0000006cH
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T557291[esp+28], esi
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[esp+36], eax
	cmp	esi, eax
	je	SHORT $LN6@clone@4
	lea	eax, DWORD PTR [edi-104]
	push	eax
	mov	ecx, esi
	call	??0?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	lea	eax, DWORD PTR [esi+104]
	mov	DWORD PTR [eax], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [eax], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
$LN6@clone@4:

; 377  :                 }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ$0:
	mov	eax, DWORD PTR $T557291[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone
; Function compile flags: /Ogtpy
;	COMDAT ??1?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::~clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >, COMDAT
; _this$ = ecx

; 368  :                 {

	mov	DWORD PTR [ecx], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [ecx+84], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@

; 369  :                 }

	mov	DWORD PTR [ecx+104], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	jmp	??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
??1?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::~clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6B?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@2@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [esi+104], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	call	??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@96
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@96:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$equal@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA_NV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@00@Z
_TEXT	SEGMENT
$T557341 = -4						; size = 1
__First1$ = 8						; size = 8
$T557342 = 16						; size = 1
__Last1$ = 16						; size = 8
__First2$ = 24						; size = 8
??$equal@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA_NV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@00@Z PROC ; std::equal<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >, COMDAT

; 3055 : 	{	// compare [_First1, _Last1) to [First2, ...)

	push	ecx

; 3056 : 	return _Equal(_CHECKED_BASE(_First1), _CHECKED_BASE(_Last1), _First2,
; 3057 : 		_Iter_random(_First1, _First2), _STD _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR $T557342[esp]
	mov	edx, DWORD PTR __First2$[esp+4]
	mov	BYTE PTR $T557341[esp+4], 0
	mov	eax, DWORD PTR $T557341[esp+4]
	push	eax
	mov	eax, DWORD PTR __First2$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last1$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First1$[esp+16]
	push	eax
	push	ecx
	push	edx
	call	??$_Equal@PBVChannel@DRAMsimII@@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YA_NPBVChannel@DRAMsimII@@0V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<DRAMsimII::Channel const *,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >

; 3058 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$equal@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@V12@@std@@YA_NV?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@00@Z ENDP ; std::equal<std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXABU?$basic_file_source@D@23@HH@Z
_TEXT	SEGMENT
??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXABU?$basic_file_source@D@23@HH@Z PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::push_impl<boost::iostreams::basic_file_source<char> >, COMDAT
; _this$ = ecx
; _t$ = eax

; 486  :     void push_impl(const T& t BOOST_IOSTREAMS_PUSH_PARAMS())

	push	ecx
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	push	edx
	call	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
	pop	ecx

; 487  :     { chain_->push(t BOOST_IOSTREAMS_PUSH_ARGS()); }

	ret	0
??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@IAEXABU?$basic_file_source@D@23@HH@Z ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::push_impl<boost::iostreams::basic_file_source<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
xdata$x	SEGMENT
__unwindtable$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z$0
__ehfuncinfo$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
_TEXT	SEGMENT
$T557397 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_path$ = 12						; size = 4
_base_mode$ = 16					; size = 4
?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z PROC ; boost::iostreams::basic_file<char>::open, COMDAT
; _mode$ = ecx

; 167  : { 

	push	-1
	push	__ehhandler$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx

; 168  :     pimpl_.reset(new impl(path, mode | base_mode));

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T557397[esp+32], eax
	mov	DWORD PTR __$EHRec$[esp+40], 0
	test	eax, eax
	je	SHORT $LN3@open@8
	or	esi, DWORD PTR _base_mode$[esp+28]
	mov	edi, DWORD PTR _path$[esp+28]
	push	esi
	push	eax
	call	??0impl@?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; boost::iostreams::basic_file<char>::impl::impl
	jmp	SHORT $LN4@open@8
$LN3@open@8:
	xor	eax, eax
$LN4@open@8:
	mov	edi, DWORD PTR _this$[esp+28]
	mov	DWORD PTR __$EHRec$[esp+40], -1
	call	??$reset@Uimpl@?$basic_file@D@iostreams@boost@@@?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAEXPAUimpl@?$basic_file@D@iostreams@1@@Z ; boost::shared_ptr<boost::iostreams::basic_file<char>::impl>::reset<boost::iostreams::basic_file<char>::impl>

; 169  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z$0:
	mov	eax, DWORD PTR $T557397[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z ENDP ; boost::iostreams::basic_file<char>::open
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\case_conv.hpp
;	COMDAT ??$transform_range@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$to_lowerF@D@012@@Z
_TEXT	SEGMENT
$T557413 = -8						; size = 8
_Functor$ = 8						; size = 4
??$transform_range@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$to_lowerF@D@012@@Z PROC ; boost::algorithm::detail::transform_range<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::detail::to_lowerF<char> >, COMDAT
; _Input$ = eax

; 95   :                 std::transform( 
; 96   :                     ::boost::begin(Input), 
; 97   :                     ::boost::end(Input), 
; 98   :                     ::boost::begin(Input),
; 99   :                     Functor);

	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	sub	esp, 12					; 0000000cH
	push	esi
	push	ecx
	mov	ecx, DWORD PTR [eax+12]
	push	edx
	mov	edx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	push	edx
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _Functor$[esp+28]
	push	ecx
	push	edx
	push	eax
	lea	esi, DWORD PTR $T557413[esp+44]
	call	??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z ; std::transform<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
	add	esp, 28					; 0000001cH

; 100  :             }

	pop	esi
	add	esp, 12					; 0000000cH
	ret	0
??$transform_range@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@U?$to_lowerF@D@detail@algorithm@2@@detail@algorithm@boost@@YAXABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$to_lowerF@D@012@@Z ENDP ; boost::algorithm::detail::transform_range<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::detail::to_lowerF<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
_TEXT	ENDS
;	COMDAT ?m_append@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXD@Z
_TEXT	SEGMENT
$T557467 = 8						; size = 1
_value$ = 8						; size = 1
?m_append@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXD@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::m_append, COMDAT
; _this$ = ecx

; 1083 : #   ifdef BOOST_CYGWIN_PATH
; 1084 :       if ( m_path.empty() ) m_cygwin_root = (value == slash<path_type>::value);
; 1085 : #   endif
; 1086 : 
; 1087 : #   ifdef BOOST_WINDOWS_PATH
; 1088 :       // for BOOST_WINDOWS_PATH, convert alt_separator ('\') to separator ('/')
; 1089 :       m_path += ( value == path_alt_separator<path_type>::value
; 1090 :         ? slash<path_type>::value
; 1091 :         : value );

	mov	al, BYTE PTR _value$[esp-4]
	mov	BYTE PTR $T557467[esp-4], 47		; 0000002fH
	cmp	al, 92					; 0000005cH
	je	SHORT $LN4@m_append
	mov	BYTE PTR $T557467[esp-4], al
$LN4@m_append:
	mov	eax, DWORD PTR $T557467[esp-4]
	push	eax
	push	1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1092 : #   else
; 1093 :       m_path += value;
; 1094 : #   endif
; 1095 :     }

	ret	4
?m_append@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXD@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::m_append
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?m_append_separator_if_needed@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXXZ
_TEXT	SEGMENT
__Tmp$557544 = -16					; size = 8
__Tmp$557490 = -16					; size = 8
$T557473 = -8						; size = 8
$T557471 = -8						; size = 8
?m_append_separator_if_needed@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXXZ PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::m_append_separator_if_needed, COMDAT
; _this$ = ecx

; 1069 :     {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi

; 1070 :       if (
; 1071 : #       ifdef BOOST_WINDOWS_PATH
; 1072 :         *(m_path.end()-1) != colon<path_type>::value && 
; 1073 : #       endif
; 1074 :         *(m_path.end()-1) != slash<path_type>::value )

	lea	eax, DWORD PTR $T557471[esp+32]
	push	eax
	mov	edi, ecx
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$557490[esp+32], ecx
	push	-1
	lea	ecx, DWORD PTR __Tmp$557490[esp+36]
	mov	DWORD PTR __Tmp$557490[esp+40], edx
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	esi, DWORD PTR __Tmp$557490[esp+32]
	mov	ebx, DWORD PTR __Tmp$557490[esp+36]
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN12@m_append_s@2
	test	esi, esi
	jne	SHORT $LN13@m_append_s@2
	call	__invalid_parameter_noinfo
$LN13@m_append_s@2:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN21@m_append_s@2
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN22@m_append_s@2
$LN21@m_append_s@2:
	lea	eax, DWORD PTR [esi+4]
$LN22@m_append_s@2:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	ebx, ecx
	jb	SHORT $LN12@m_append_s@2
	call	__invalid_parameter_noinfo
$LN12@m_append_s@2:
	cmp	BYTE PTR [ebx], 58			; 0000003aH
	je	SHORT $LN42@m_append_s@2
	lea	edx, DWORD PTR $T557473[esp+32]
	push	edx
	mov	ecx, edi
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$557544[esp+32], ecx
	push	-1
	lea	ecx, DWORD PTR __Tmp$557544[esp+36]
	mov	DWORD PTR __Tmp$557544[esp+40], edx
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	esi, DWORD PTR __Tmp$557544[esp+32]
	mov	ebx, DWORD PTR __Tmp$557544[esp+36]
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN31@m_append_s@2
	test	esi, esi
	jne	SHORT $LN32@m_append_s@2
	call	__invalid_parameter_noinfo
$LN32@m_append_s@2:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN40@m_append_s@2
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN41@m_append_s@2
$LN40@m_append_s@2:
	lea	eax, DWORD PTR [esi+4]
$LN41@m_append_s@2:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	ebx, ecx
	jb	SHORT $LN31@m_append_s@2
	call	__invalid_parameter_noinfo
$LN31@m_append_s@2:
	cmp	BYTE PTR [ebx], 47			; 0000002fH
	je	SHORT $LN42@m_append_s@2

; 1075 :       {
; 1076 :         m_path += slash<path_type>::value;

	push	47					; 0000002fH
	push	1
	mov	ecx, edi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN42@m_append_s@2:

; 1077 :       }
; 1078 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?m_append_separator_if_needed@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXXZ ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::m_append_separator_if_needed
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$?8VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YA_NABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z
_TEXT	SEGMENT
$T557588 = -8						; size = 8
$T557783 = 8						; size = 1
$T557784 = 8						; size = 1
__Right$ = 8						; size = 4
??$?8VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YA_NABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z PROC ; std::operator==<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >, COMDAT
; __Left$ = esi

; 1307 : 	{	// test for vector equality

	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR __Right$[esp+8]

; 1308 : 	return (_Left.size() == _Right.size()
; 1309 : 		&& equal(_Left.begin(), _Left.end(), _Right.begin()));

	mov	ecx, DWORD PTR [ebx+16]
	push	ebp
	push	edi
	mov	edi, DWORD PTR [ebx+12]
	sub	ecx, edi
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	sar	edx, 8
	mov	ebp, edx
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, ebp
	jne	SHORT $LN3@operator@371
	cmp	edi, DWORD PTR [ebx+16]
	jbe	SHORT $LN12@operator@371
	call	__invalid_parameter_noinfo
$LN12@operator@371:
	mov	ebp, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR $T557588[esp+20], ecx
	cmp	DWORD PTR [esi+12], ebp
	jbe	SHORT $LN26@operator@371
	call	__invalid_parameter_noinfo
$LN26@operator@371:
	mov	ebx, DWORD PTR [esi+12]
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN40@operator@371
	call	__invalid_parameter_noinfo
$LN40@operator@371:
	mov	ecx, DWORD PTR $T557588[esp+20]
	mov	BYTE PTR $T557783[esp+16], 0
	mov	edx, DWORD PTR $T557783[esp+16]
	mov	eax, DWORD PTR $T557784[esp+16]
	push	edx
	push	eax
	push	edi
	push	ecx
	push	ebp
	push	ebx
	call	??$_Equal@PBVChannel@DRAMsimII@@V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@std@@YA_NPBVChannel@DRAMsimII@@0V?$_Vector_const_iterator@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<DRAMsimII::Channel const *,std::_Vector_const_iterator<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> > >
	add	esp, 24					; 00000018H
	test	al, al
	je	SHORT $LN3@operator@371
	pop	edi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 1310 : 	}

	add	esp, 8
	ret	0
$LN3@operator@371:
	pop	edi
	pop	ebp

; 1308 : 	return (_Left.size() == _Right.size()
; 1309 : 		&& equal(_Left.begin(), _Left.end(), _Right.begin()));

	xor	eax, eax
	pop	ebx

; 1310 : 	}

	add	esp, 8
	ret	0
??$?8VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YA_NABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z ENDP ; std::operator==<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\chain.hpp
_TEXT	ENDS
;	COMDAT ??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z
_TEXT	SEGMENT
??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z PROC ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::push<boost::iostreams::basic_file_source<char> >, COMDAT
; _this$ = ecx
; _t$ = eax

; 475  :     BOOST_IOSTREAMS_DEFINE_PUSH(push, mode, char_type, push_impl)

	push	ecx
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	push	edx
	call	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
	pop	ecx
	ret	0
??$push@U?$basic_file_source@D@iostreams@boost@@@?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@QAEXABU?$basic_file_source@D@23@HHPAX@Z ENDP ; boost::iostreams::detail::chain_client<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> > >::push<boost::iostreams::basic_file_source<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\shared_count.hpp
xdata$x	SEGMENT
__unwindtable$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z$0
__ehfuncinfo$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
xdata$x	ENDS
;	COMDAT ??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_mode$ = 12						; size = 4
_base_mode$ = 16					; size = 4
??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z PROC ; boost::iostreams::basic_file<char>::basic_file<char>, COMDAT
; _path$ = ecx

; 140  : { 

	push	-1
	push	__ehhandler$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR __$EHRec$[esp+32], eax

; 141  :     open(path, mode, base_mode);

	mov	eax, DWORD PTR _base_mode$[esp+20]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _mode$[esp+28]
	push	esi
	call	?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z ; boost::iostreams::basic_file<char>::open

; 142  : }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ
__ehhandler$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_file@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z ENDP ; boost::iostreams::basic_file<char>::basic_file<char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\case_conv.hpp
;	COMDAT ??$to_lower@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z
_TEXT	SEGMENT
$T557909 = -24						; size = 8
$T557850 = -16						; size = 16
_Loc$ = 8						; size = 4
??$to_lower@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z PROC ; boost::algorithm::to_lower<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _Input$ = eax

; 94   :         {

	sub	esp, 24					; 00000018H
	push	esi
	push	edi

; 95   :             ::boost::algorithm::detail::transform_range(
; 96   :                 as_literal(Input),
; 97   :                 ::boost::algorithm::detail::to_lowerF<
; 98   :                     typename range_value<WritableRangeT>::type >(Loc));

	lea	edi, DWORD PTR $T557850[esp+32]
	call	??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::as_literal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR [eax+12]
	push	edx
	mov	edx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	push	edx
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _Loc$[esp+44]
	push	ecx
	push	edx
	push	eax
	lea	esi, DWORD PTR $T557909[esp+60]
	call	??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z ; std::transform<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
	add	esp, 28					; 0000001cH

; 99   :         }

	pop	edi
	pop	esi
	add	esp, 24					; 00000018H
	ret	0
??$to_lower@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z ENDP ; boost::algorithm::to_lower<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	___$ReturnUdt$GSCopy$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
__ehfuncinfo$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
_in_root$ = -29						; size = 1
$T558218 = -28						; size = 1
_root_dir_start$ = -24					; size = 4
$T557935 = -20						; size = 4
___$ReturnUdt$GSCopy$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::file_string, COMDAT
; _this$ = ecx

; 1285 :     {

	push	-1
	push	__ehhandler$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+48]
	mov	esi, ecx
	xor	ebp, ebp
	mov	DWORD PTR $T557935[esp+52], ebp

; 1286 : #   ifdef BOOST_WINDOWS_PATH
; 1287 :       // for Windows, use the alternate separator, and bypass extra 
; 1288 :       // root separators
; 1289 : 
; 1290 :       typename string_type::size_type root_dir_start(
; 1291 :         detail::root_directory_start<String, Traits>( m_path, m_path.size() ) );

	mov	eax, DWORD PTR [esi+20]
	push	eax
	push	esi
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+60], ebx
	call	??$root_directory_start@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@detail@filesystem@boost@@YAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; boost::filesystem::detail::root_directory_start<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	add	esp, 8

; 1292 :       bool in_root( root_dir_start != string_type::npos );

	cmp	eax, -1

; 1293 :       String s;

	mov	DWORD PTR [ebx+24], 15			; 0000000fH
	mov	DWORD PTR [ebx+20], ebp
	mov	DWORD PTR _root_dir_start$[esp+52], eax
	setne	BYTE PTR _in_root$[esp+52]
	mov	BYTE PTR [ebx+4], 0

; 1328 :       }
; 1329 : #   ifdef BOOST_CYGWIN_PATH
; 1330 :       if ( m_cygwin_root ) s[0] = slash<path_type>::value;
; 1331 : #   endif
; 1332 :       return s;

	mov	DWORD PTR __$EHRec$[esp+60], ebp
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR $T557935[esp+52], 1
	cmp	eax, ebp
	je	$LN129@file_strin
$LN10@file_strin:

; 1296 :       {
; 1297 :         // special case // [net]
; 1298 :         if ( pos == 0 && m_path.size() > 1
; 1299 :           && m_path[0] == slash<path_type>::value
; 1300 :           && m_path[1] == slash<path_type>::value
; 1301 :           && ( m_path.size() == 2 
; 1302 :             || !detail::is_separator<path_type>( m_path[2] )
; 1303 :              ) )

	test	ebp, ebp
	jne	SHORT $LN7@file_strin
	cmp	eax, 1
	jbe	SHORT $LN7@file_strin
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	lea	edi, DWORD PTR [esi+4]
	jb	SHORT $LN58@file_strin
	mov	ecx, DWORD PTR [edi]
	jmp	SHORT $LN59@file_strin
$LN58@file_strin:
	mov	ecx, edi
$LN59@file_strin:
	cmp	BYTE PTR [ecx], 47			; 0000002fH
	jne	SHORT $LN7@file_strin
	cmp	eax, 1
	jae	SHORT $LN60@file_strin
	call	__invalid_parameter_noinfo
$LN60@file_strin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN65@file_strin
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN66@file_strin
$LN65@file_strin:
	mov	eax, edi
$LN66@file_strin:
	cmp	BYTE PTR [eax+1], 47			; 0000002fH
	jne	SHORT $LN7@file_strin
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 2
	je	SHORT $LN6@file_strin
	jae	SHORT $LN69@file_strin
	call	__invalid_parameter_noinfo
$LN69@file_strin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN74@file_strin
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN75@file_strin
$LN74@file_strin:
	mov	eax, edi
$LN75@file_strin:
	mov	al, BYTE PTR [eax+2]
	cmp	al, 47					; 0000002fH
	je	SHORT $LN7@file_strin
	cmp	al, 92					; 0000005cH
	je	SHORT $LN7@file_strin
$LN6@file_strin:

; 1304 :         {
; 1305 :           ++pos;
; 1306 :           s += path_alt_separator<path_type>::value;

	push	92					; 0000005cH
	mov	ebp, 1
	push	ebp
	mov	ecx, ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1307 :           s += path_alt_separator<path_type>::value;

	push	92					; 0000005cH
	push	ebp
	mov	ecx, ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1308 :           continue;

	jmp	$LN9@file_strin
$LN7@file_strin:

; 1309 :         }   
; 1310 : 
; 1311 :         // bypass extra root separators
; 1312 :         if ( in_root )

	cmp	BYTE PTR _in_root$[esp+52], 0
	je	SHORT $LN4@file_strin

; 1313 :         { 
; 1314 :           if ( s.size() > 0
; 1315 :             && s[s.size()-1] == path_alt_separator<path_type>::value
; 1316 :             && m_path[pos] == slash<path_type>::value
; 1317 :             ) continue;

	mov	eax, DWORD PTR [ebx+20]
	test	eax, eax
	jbe	SHORT $LN4@file_strin
	lea	edi, DWORD PTR [eax-1]
	cmp	edi, eax
	jbe	SHORT $LN88@file_strin
	call	__invalid_parameter_noinfo
$LN88@file_strin:
	cmp	DWORD PTR [ebx+24], 16			; 00000010H
	jb	SHORT $LN93@file_strin
	mov	eax, DWORD PTR [ebx+4]
	jmp	SHORT $LN94@file_strin
$LN93@file_strin:
	lea	eax, DWORD PTR [ebx+4]
$LN94@file_strin:
	cmp	BYTE PTR [eax+edi], 92			; 0000005cH
	jne	SHORT $LN4@file_strin
	cmp	ebp, DWORD PTR [esi+20]
	jbe	SHORT $LN95@file_strin
	call	__invalid_parameter_noinfo
$LN95@file_strin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN100@file_strin
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN101@file_strin
$LN100@file_strin:
	lea	eax, DWORD PTR [esi+4]
$LN101@file_strin:
	cmp	BYTE PTR [eax+ebp], 47			; 0000002fH
	je	SHORT $LN9@file_strin
$LN4@file_strin:

; 1318 :         }
; 1319 : 
; 1320 :         if ( m_path[pos] == slash<path_type>::value )

	cmp	ebp, DWORD PTR [esi+20]
	jbe	SHORT $LN102@file_strin
	call	__invalid_parameter_noinfo
$LN102@file_strin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	lea	edi, DWORD PTR [esi+4]
	jb	SHORT $LN107@file_strin
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN108@file_strin
$LN107@file_strin:
	mov	eax, edi
$LN108@file_strin:
	cmp	BYTE PTR [eax+ebp], 47			; 0000002fH
	jne	SHORT $LN3@file_strin

; 1321 :           s += path_alt_separator<path_type>::value;

	push	92					; 0000005cH

; 1322 :         else

	jmp	SHORT $LN138@file_strin
$LN3@file_strin:

; 1323 :           s += m_path[pos];

	cmp	ebp, DWORD PTR [esi+20]
	jbe	SHORT $LN111@file_strin
	call	__invalid_parameter_noinfo
$LN111@file_strin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN116@file_strin
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN117@file_strin
$LN116@file_strin:
	mov	eax, edi
$LN117@file_strin:
	mov	al, BYTE PTR [eax+ebp]
	mov	BYTE PTR $T558218[esp+52], al
	mov	ecx, DWORD PTR $T558218[esp+52]
	push	ecx
$LN138@file_strin:
	push	1
	mov	ecx, ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1324 : 
; 1325 :         if ( pos > root_dir_start
; 1326 :           && m_path[pos] == slash<path_type>::value )

	cmp	ebp, DWORD PTR _root_dir_start$[esp+52]
	jbe	SHORT $LN9@file_strin
	cmp	ebp, DWORD PTR [esi+20]
	jbe	SHORT $LN120@file_strin
	call	__invalid_parameter_noinfo
$LN120@file_strin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN125@file_strin
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN126@file_strin
$LN125@file_strin:
	mov	eax, edi
$LN126@file_strin:
	cmp	BYTE PTR [eax+ebp], 47			; 0000002fH
	jne	SHORT $LN9@file_strin

; 1327 :           { in_root = false; }

	mov	BYTE PTR _in_root$[esp+52], 0
$LN9@file_strin:

; 1294 :       for ( typename string_type::size_type pos( 0 );
; 1295 :         pos != m_path.size(); ++pos )

	mov	eax, DWORD PTR [esi+20]
	inc	ebp
	cmp	ebp, eax
	jne	$LN10@file_strin
$LN129@file_strin:

; 1328 :       }
; 1329 : #   ifdef BOOST_CYGWIN_PATH
; 1330 :       if ( m_cygwin_root ) s[0] = slash<path_type>::value;
; 1331 : #   endif
; 1332 :       return s;

	mov	eax, ebx

; 1333 : #   else
; 1334 :       return m_path;
; 1335 : #   endif
; 1336 :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 32					; 00000020H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0:
	mov	eax, DWORD PTR $T557935[ebp]
	and	eax, 1
	je	$LN14@file_strin
	and	DWORD PTR $T557935[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN14@file_strin:
	ret	0
__ehhandler$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::file_string
; Function compile flags: /Ogtpy
;	COMDAT ??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z
_TEXT	SEGMENT
$T558278 = 8						; size = 1
_next_p$ = 8						; size = 4
??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=, COMDAT
; _this$ = ecx

; 1102 :     {

	push	esi

; 1103 :       // ignore escape sequence on POSIX or Windows
; 1104 :       if ( *next_p == slash<path_type>::value
; 1105 :         && *(next_p+1) == slash<path_type>::value
; 1106 :         && *(next_p+2) == colon<path_type>::value ) next_p += 3;

	mov	esi, DWORD PTR _next_p$[esp]
	cmp	BYTE PTR [esi], 47			; 0000002fH
	push	edi
	mov	edi, ecx
	jne	SHORT $LN5@operator@372
	cmp	BYTE PTR [esi+1], 47			; 0000002fH
	jne	SHORT $LN5@operator@372
	cmp	BYTE PTR [esi+2], 58			; 0000003aH
	jne	SHORT $LN5@operator@372
	add	esi, 3
$LN5@operator@372:

; 1107 :       
; 1108 :       // append slash<path_type>::value if needed
; 1109 :       if ( !empty() && *next_p != 0
; 1110 :         && !detail::is_separator<path_type>( *next_p ) )

	cmp	DWORD PTR [edi+20], 0
	je	SHORT $LN4@operator@372
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN26@operator@372
	cmp	al, 47					; 0000002fH
	je	SHORT $LN4@operator@372
	cmp	al, 92					; 0000005cH
	je	SHORT $LN4@operator@372

; 1111 :       { m_append_separator_if_needed(); }

	call	?m_append_separator_if_needed@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@AAEXXZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::m_append_separator_if_needed
$LN4@operator@372:

; 1112 : 
; 1113 :       for ( ; *next_p != 0; ++next_p ) m_append( *next_p );

	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN26@operator@372
	npad	5
$LL3@operator@372:
	mov	BYTE PTR $T558278[esp+4], 47		; 0000002fH
	cmp	al, 92					; 0000005cH
	je	SHORT $LN19@operator@372
	mov	BYTE PTR $T558278[esp+4], al
$LN19@operator@372:
	mov	eax, DWORD PTR $T558278[esp+4]
	push	eax
	push	1
	mov	ecx, edi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	al, BYTE PTR [esi+1]
	inc	esi
	test	al, al
	jne	SHORT $LL3@operator@372
$LN26@operator@372:

; 1114 :       return *this;

	mov	eax, edi

; 1115 :     }

	pop	edi
	pop	esi
	ret	4
??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
_TEXT	ENDS
PUBLIC	__Val$GSCopy$
PUBLIC	__State$GSCopy$
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$4
__ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocnum
xdata$x	ENDS
;	COMDAT ?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z
_TEXT	SEGMENT
__Errno$151936 = -112					; size = 4
__State$GSCopy$ = -108					; size = 4
__Lock$559271 = -104					; size = 4
__Ep$151935 = -100					; size = 4
__Val$GSCopy$ = -96					; size = 4
$T558298 = -92						; size = 4
___$ReturnUdt$GSCopy$ = -88				; size = 4
__Lock$558330 = -84					; size = 4
$T558295 = -80						; size = 4
__Str$151920 = -76					; size = 28
__Ac$151934 = -48					; size = 32
$T558297 = -48						; size = 28
$T558296 = -48						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Iosbase$ = 28						; size = 4
__State$ = 32						; size = 4
__Val$ = 36						; size = 4
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z PROC ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get, COMDAT
; _this$ = ecx

; 360  : 		{	// get bool from [_First, _Last) into _Val

	push	-1
	push	__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+112], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, eax

; 391  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+128]
	mov	esi, DWORD PTR __Iosbase$[esp+128]
	mov	ecx, DWORD PTR __State$[esp+128]
	mov	edx, DWORD PTR __Val$[esp+128]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+132], eax
	mov	eax, DWORD PTR [esi+16]
	or	ebx, -1
	mov	DWORD PTR __State$GSCopy$[esp+132], ecx
	mov	DWORD PTR __Val$GSCopy$[esp+132], edx
	mov	ebp, ebx
	mov	ecx, esi
	test	eax, 16384				; 00004000H
	je	$LN6@do_get@11
	lea	eax, DWORD PTR $T558295[esp+132]
	push	eax
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+140], 0
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	DWORD PTR __$EHRec$[esp+140], ebx
	mov	edi, DWORD PTR $T558295[esp+132]
	mov	ebp, eax
	test	edi, edi
	je	SHORT $LN19@do_get@11
	push	0
	lea	ecx, DWORD PTR __Lock$558330[esp+136]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN21@do_get@11

; 361  : 		_DEBUG_RANGE(_First, _Last);
; 362  : 		int _Ans = -1;	// negative answer indicates failure
; 363  : 
; 364  : 		if (_Iosbase.flags() & ios_base::boolalpha)
; 365  : 			{	// get false name or true name
; 366  : 			typedef typename _Mystr::size_type _Mystrsize;
; 367  : 			const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

	cmp	eax, ebx
	jae	SHORT $LN21@do_get@11
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN21@do_get@11:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$558330[esp+132]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN19@do_get@11
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN19@do_get@11:

; 368  : 			_Mystr _Str((_Mystrsize)1, (char_type)0);

	mov	eax, 1
	mov	DWORD PTR __Str$151920[esp+156], 15	; 0000000fH
	mov	BYTE PTR __Str$151920[esp+136], 0
	mov	DWORD PTR __Str$151920[esp+152], eax
	mov	BYTE PTR __Str$151920[esp+137], 0

; 369  : 			_Str += _Punct_fac.falsename();

	lea	esi, DWORD PTR $T558296[esp+132]
	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+140], eax
	call	?falsename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
	push	ebx
	push	0
	push	eax
	lea	ecx, DWORD PTR __Str$151920[esp+144]
	mov	BYTE PTR __$EHRec$[esp+152], 2
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	edi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[esp+140], 1
	cmp	DWORD PTR $T558296[esp+156], edi
	jb	SHORT $LN155@do_get@11
	mov	ecx, DWORD PTR $T558296[esp+136]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN155@do_get@11:

; 370  : 			_Str += (char_type)0;

	push	0
	push	1
	lea	ecx, DWORD PTR __Str$151920[esp+140]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 371  : 			_Str += _Punct_fac.truename();	// construct "\0false\0true"

	lea	esi, DWORD PTR $T558297[esp+132]
	mov	ecx, ebp
	call	?truename@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
	push	ebx
	push	0
	push	eax
	lea	ecx, DWORD PTR __Str$151920[esp+144]
	mov	BYTE PTR __$EHRec$[esp+152], 3
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	BYTE PTR __$EHRec$[esp+140], 1
	cmp	DWORD PTR $T558297[esp+156], edi
	jb	SHORT $LN187@do_get@11
	mov	edx, DWORD PTR $T558297[esp+136]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN187@do_get@11:

; 372  : 			_Ans = _Getloctxt(_First, _Last, (size_t)2, _Str.c_str());

	mov	eax, DWORD PTR __Str$151920[esp+136]
	cmp	DWORD PTR __Str$151920[esp+156], edi
	jae	SHORT $LN202@do_get@11
	lea	eax, DWORD PTR __Str$151920[esp+136]
$LN202@do_get@11:
	push	eax
	lea	eax, DWORD PTR __Last$[esp+132]
	push	eax
	lea	ecx, DWORD PTR __First$[esp+136]
	push	ecx
	call	??$_Getloctxt@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0IPBD@Z ; std::_Getloctxt<char,std::istreambuf_iterator<char,std::char_traits<char> > >
	add	esp, 12					; 0000000cH

; 373  : 			}

	mov	DWORD PTR __$EHRec$[esp+140], ebx
	mov	ebp, eax
	cmp	DWORD PTR __Str$151920[esp+156], edi
	jb	$LN4@do_get@11
	mov	edx, DWORD PTR __Str$151920[esp+136]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 374  : 		else

	jmp	$LN4@do_get@11
$LN6@do_get@11:

; 375  : 			{	// get zero or nonzero integer
; 376  : 			char _Ac[_MAX_INT_DIG], *_Ep;
; 377  : 			int _Errno = 0;
; 378  : 			const unsigned long _Ulo = ::_Stoulx(_Ac, &_Ep,
; 379  : 				_Getifld(_Ac, _First, _Last, _Iosbase.flags(),
; 380  : 					_Iosbase.getloc()), &_Errno);

	lea	eax, DWORD PTR $T558298[esp+132]
	push	eax
	mov	DWORD PTR __Errno$151936[esp+136], 0
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	lea	ecx, DWORD PTR __Errno$151936[esp+132]
	push	ecx
	push	eax
	mov	DWORD PTR __$EHRec$[esp+148], 4
	mov	esi, DWORD PTR [esi+16]
	push	esi
	lea	edx, DWORD PTR __First$[esp+140]
	push	edx
	lea	eax, DWORD PTR __Ac$151934[esp+148]
	push	eax
	lea	ecx, DWORD PTR __Last$[esp+148]
	call	?_Getifld@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@ABAHPADAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@1HABVlocale@2@@Z ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getifld
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Ep$151935[esp+140]
	push	ecx
	lea	edx, DWORD PTR __Ac$151934[esp+144]
	push	edx
	call	__Stoulx
	mov	DWORD PTR __$EHRec$[esp+156], -1
	mov	edi, DWORD PTR $T558298[esp+148]
	add	esp, 16					; 00000010H
	mov	ebx, eax
	test	edi, edi
	je	SHORT $LN234@do_get@11
	push	0
	lea	ecx, DWORD PTR __Lock$559271[esp+136]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN236@do_get@11
	cmp	eax, -1
	jae	SHORT $LN236@do_get@11
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN236@do_get@11:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$559271[esp+132]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN234@do_get@11
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN234@do_get@11:

; 381  : 			if (_Ep != _Ac && _Errno == 0 && _Ulo <= 1)

	lea	eax, DWORD PTR __Ac$151934[esp+132]
	cmp	DWORD PTR __Ep$151935[esp+132], eax
	je	SHORT $LN4@do_get@11
	cmp	DWORD PTR __Errno$151936[esp+132], 0
	jne	SHORT $LN4@do_get@11
	cmp	ebx, 1
	ja	SHORT $LN4@do_get@11

; 382  : 				_Ans = _Ulo;

	mov	ebp, ebx
$LN4@do_get@11:

; 383  : 			}
; 384  : 
; 385  : 		if (_First == _Last)

	lea	edi, DWORD PTR __Last$[esp+128]
	lea	esi, DWORD PTR __First$[esp+128]
	call	?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z ; std::istreambuf_iterator<char,std::char_traits<char> >::equal
	test	al, al

; 386  : 			_State |= ios_base::eofbit;

	mov	eax, DWORD PTR __State$GSCopy$[esp+132]
	je	SHORT $LN3@do_get@11
	or	DWORD PTR [eax], 1
$LN3@do_get@11:

; 387  : 		if (_Ans < 0)

	test	ebp, ebp
	jge	SHORT $LN246@do_get@11

; 388  : 			_State |= ios_base::failbit;

	or	DWORD PTR [eax], 2

; 389  : 		else

	jmp	SHORT $LN1@do_get@11
$LN246@do_get@11:

; 390  : 			_Val = _Ans != 0;	// deliver value

	mov	edx, DWORD PTR __Val$GSCopy$[esp+132]
	setne	cl
	mov	BYTE PTR [edx], cl
$LN1@do_get@11:

; 391  : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$GSCopy$[esp+132]
	mov	ecx, DWORD PTR __First$[esp+128]
	mov	edx, DWORD PTR __First$[esp+132]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 392  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+132]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+112]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$0:
	lea	ecx, DWORD PTR $T558295[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$1:
	lea	ecx, DWORD PTR __Str$151920[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$2:
	lea	ecx, DWORD PTR $T558296[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$3:
	lea	ecx, DWORD PTR $T558297[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z$4:
	lea	ecx, DWORD PTR $T558298[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-116]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?do_get@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MBE?AV?$istreambuf_iterator@DU?$char_traits@D@std@@@2@V32@0AAVios_base@2@AAHAA_N@Z ENDP ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::do_get
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
;	COMDAT ??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=, COMDAT
; _this$ = ecx

; 204  :       basic_path & operator/=( const string_type & rhs ) { return operator /=( rhs.c_str() ); }

	mov	eax, DWORD PTR _rhs$[esp-4]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN7@operator@373
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _rhs$[esp-4], eax
	jmp	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
$LN7@operator@373:
	add	eax, 4
	mov	DWORD PTR _rhs$[esp-4], eax
	jmp	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\detail\shared_count.hpp
xdata$x	SEGMENT
__unwindtable$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$1
__ehfuncinfo$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\device\file.hpp
xdata$x	ENDS
;	COMDAT ??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_path$ = 12						; size = 4
??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; boost::iostreams::basic_file_source<char>::basic_file_source<char>, COMDAT

; 97   :         { }

	push	-1
	push	__ehhandler$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+16]
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR __$EHRec$[esp+28], eax
	mov	eax, DWORD PTR _path$[esp+16]
	push	1
	push	eax
	push	esi
	mov	ecx, 1
	call	?open@?$basic_file@D@iostreams@boost@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z ; boost::iostreams::basic_file<char>::open
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$1:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$shared_ptr@Uimpl@?$basic_file@D@iostreams@boost@@@boost@@QAE@XZ
__ehhandler$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT
; _this$ = ecx

; 166  :       basic_path( const string_type & s ) { operator/=( s ); }

	push	-1
	push	__ehhandler$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+24], esi
	xor	eax, eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], eax
	mov	BYTE PTR [esi+4], al
	mov	DWORD PTR __$EHRec$[esp+32], eax
	mov	eax, DWORD PTR _s$[esp+20]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN42@basic_path@2
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN43@basic_path@2
$LN42@basic_path@2:
	add	eax, 4
$LN43@basic_path@2:
	push	eax
	mov	ecx, esi
	call	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
PUBLIC	??8InputStream@DRAMsimII@@QBE_NABV01@@Z		; DRAMsimII::InputStream::operator==
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
_this$ = 8						; size = 4
??8InputStream@DRAMsimII@@QBE_NABV01@@Z PROC		; DRAMsimII::InputStream::operator==
; _rhs$ = edi

; 591  : {

	push	ebx
	mov	ebx, DWORD PTR _this$[esp]

; 592  : 	return type == rhs.type && systemConfig == rhs.systemConfig && channel == rhs.channel &&
; 593  : 		AlmostEqual<float>(channelLocality,rhs.channelLocality) && AlmostEqual<float>(rankLocality,rhs.rankLocality) &&
; 594  : 		AlmostEqual<float>(bankLocality,rhs.bankLocality) && time == rhs.time && AlmostEqual<float>(rowLocality,rhs.rowLocality) &&
; 595  : 		AlmostEqual<float>(readPercentage,rhs.readPercentage) && interarrivalDistributionModel == rhs.interarrivalDistributionModel &&
; 596  : 		AlmostEqual<float>(shortBurstRatio, rhs.shortBurstRatio) && AlmostEqual<float>(arrivalThreshold, rhs.arrivalThreshold) &&
; 597  : 		AlmostEqual<float>(cpuToMemoryRatio, rhs.cpuToMemoryRatio) && averageInterarrivalCycleCount == rhs.averageInterarrivalCycleCount;

	mov	eax, DWORD PTR [ebx]
	cmp	eax, DWORD PTR [edi]
	jne	$LN3@operator@374
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [ebx+4]
	call	??8SystemConfiguration@DRAMsimII@@QBE_NABV01@@Z ; DRAMsimII::SystemConfiguration::operator==
	test	al, al
	je	$LN3@operator@374
	mov	ecx, DWORD PTR [edi+8]
	push	esi
	mov	esi, DWORD PTR [ebx+8]
	push	ecx
	call	??$?8VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@YA_NABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@0@0@Z ; std::operator==<DRAMsimII::Channel,std::allocator<DRAMsimII::Channel> >
	add	esp, 4
	pop	esi
	test	al, al
	je	$LN3@operator@374
	movss	xmm1, DWORD PTR [ebx+12]
	movss	xmm2, DWORD PTR [edi+12]
	cvtps2pd xmm0, xmm1
	cvtps2pd xmm2, xmm2
	subsd	xmm0, xmm2
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm2, xmm0
	movsd	xmm0, QWORD PTR __mask@@AbsDouble@
	cvtps2pd xmm1, xmm1
	andpd	xmm2, xmm0
	andpd	xmm1, xmm0
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, xmm2
	movsd	xmm2, QWORD PTR __real@3ee4f8b588e368f1
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm1, xmm1
	mulsd	xmm1, xmm2
	comisd	xmm1, xmm3
	jb	$LN3@operator@374
	movss	xmm1, DWORD PTR [ebx+16]
	movss	xmm4, DWORD PTR [edi+16]
	cvtps2pd xmm3, xmm1
	cvtps2pd xmm1, xmm1
	cvtps2pd xmm4, xmm4
	subsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	cvtss2sd xmm3, xmm3
	andpd	xmm1, xmm0
	andpd	xmm3, xmm0
	cvtsd2ss xmm1, xmm1
	cvtsd2ss xmm3, xmm3
	cvtss2sd xmm1, xmm1
	cvtss2sd xmm3, xmm3
	mulsd	xmm1, xmm2
	comisd	xmm1, xmm3
	jb	$LN3@operator@374
	movss	xmm1, DWORD PTR [ebx+20]
	movss	xmm4, DWORD PTR [edi+20]
	cvtps2pd xmm3, xmm1
	cvtps2pd xmm4, xmm4
	subsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	cvtss2sd xmm3, xmm3
	andpd	xmm3, xmm0
	cvtps2pd xmm1, xmm1
	andpd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	cvtsd2ss xmm3, xmm3
	cvtss2sd xmm0, xmm0
	cvtss2sd xmm3, xmm3
	mulsd	xmm0, xmm2
	comisd	xmm0, xmm3
	jb	$LN3@operator@374
	mov	edx, DWORD PTR [ebx+24]
	cmp	edx, DWORD PTR [edi+24]
	jne	$LN3@operator@374
	mov	eax, DWORD PTR [ebx+28]
	cmp	eax, DWORD PTR [edi+28]
	jne	SHORT $LN3@operator@374
	movss	xmm2, DWORD PTR [edi+32]
	movss	xmm0, DWORD PTR [ebx+32]
	call	??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z	; DRAMsimII::AlmostEqual<float>
	test	al, al
	je	SHORT $LN3@operator@374
	movss	xmm2, DWORD PTR [edi+36]
	movss	xmm0, DWORD PTR [ebx+36]
	call	??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z	; DRAMsimII::AlmostEqual<float>
	test	al, al
	je	SHORT $LN3@operator@374
	mov	ecx, DWORD PTR [ebx+56]
	cmp	ecx, DWORD PTR [edi+56]
	jne	SHORT $LN3@operator@374
	movss	xmm2, DWORD PTR [edi+40]
	movss	xmm0, DWORD PTR [ebx+40]
	call	??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z	; DRAMsimII::AlmostEqual<float>
	test	al, al
	je	SHORT $LN3@operator@374
	movss	xmm2, DWORD PTR [edi+44]
	movss	xmm0, DWORD PTR [ebx+44]
	call	??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z	; DRAMsimII::AlmostEqual<float>
	test	al, al
	je	SHORT $LN3@operator@374
	movss	xmm2, DWORD PTR [edi+48]
	movss	xmm0, DWORD PTR [ebx+48]
	call	??$AlmostEqual@M@DRAMsimII@@YA_NMM@Z	; DRAMsimII::AlmostEqual<float>
	test	al, al
	je	SHORT $LN3@operator@374
	mov	edx, DWORD PTR [ebx+52]
	cmp	edx, DWORD PTR [edi+52]
	jne	SHORT $LN3@operator@374
	mov	eax, 1
	pop	ebx

; 598  : }

	ret	4
$LN3@operator@374:

; 592  : 	return type == rhs.type && systemConfig == rhs.systemConfig && channel == rhs.channel &&
; 593  : 		AlmostEqual<float>(channelLocality,rhs.channelLocality) && AlmostEqual<float>(rankLocality,rhs.rankLocality) &&
; 594  : 		AlmostEqual<float>(bankLocality,rhs.bankLocality) && time == rhs.time && AlmostEqual<float>(rowLocality,rhs.rowLocality) &&
; 595  : 		AlmostEqual<float>(readPercentage,rhs.readPercentage) && interarrivalDistributionModel == rhs.interarrivalDistributionModel &&
; 596  : 		AlmostEqual<float>(shortBurstRatio, rhs.shortBurstRatio) && AlmostEqual<float>(arrivalThreshold, rhs.arrivalThreshold) &&
; 597  : 		AlmostEqual<float>(cpuToMemoryRatio, rhs.cpuToMemoryRatio) && averageInterarrivalCycleCount == rhs.averageInterarrivalCycleCount;

	xor	eax, eax
	pop	ebx

; 598  : }

	ret	4
??8InputStream@DRAMsimII@@QBE_NABV01@@Z ENDP		; DRAMsimII::InputStream::operator==
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	0ffffffffH
	DD	00H
__catchsym$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__tryblocktable$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
__ehfuncinfo$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T559614 = -72						; size = 28
$T559615 = -44						; size = 28
__$EHRec$ = -16						; size = 16
_sys_err_what$ = 8					; size = 4
_path1_arg$ = 12					; size = 4
_path2_arg$ = 16					; size = 4
_target$ = 20						; size = 4
?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::filesystem::detail::what, COMDAT

; 628  :       {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 629  :         try
; 630  :         {
; 631  :           if ( target.empty() )

	mov	esi, DWORD PTR _target$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	cmp	DWORD PTR [esi+20], ebx
	jne	$LN107@what@4

; 632  :           {
; 633  :             target = sys_err_what;

	mov	edx, DWORD PTR _sys_err_what$[ebp]
	mov	eax, edx
	lea	edi, DWORD PTR [eax+1]
$LL120@what@4:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL120@what@4
	sub	eax, edi
	push	eax
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 634  :             if ( !path1_arg.empty() )

	mov	edi, DWORD PTR _path1_arg$[ebp]
	cmp	DWORD PTR [edi+20], ebx
	je	SHORT $LN61@what@4

; 635  :             {
; 636  :               target += ": \"";

	push	3
	push	OFFSET ??_C@_03NONCDIOG@?3?5?$CC?$AA@
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 637  :               target += path1_arg.file_string();

	lea	eax, DWORD PTR $T559614[ebp]
	push	eax
	mov	ecx, edi
	call	?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::file_string
	push	-1
	push	ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	cmp	DWORD PTR $T559614[ebp+24], 16		; 00000010H
	jb	SHORT $LN51@what@4
	mov	ecx, DWORD PTR $T559614[ebp+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN51@what@4:

; 638  :               target += "\"";

	push	1
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN61@what@4:

; 639  :             }
; 640  :             if ( !path2_arg.empty() )

	mov	edi, DWORD PTR _path2_arg$[ebp]
	cmp	DWORD PTR [edi+20], ebx
	je	SHORT $LN107@what@4

; 641  :             {
; 642  :               target += ", \"";

	push	3
	push	OFFSET ??_C@_03KLKADAKF@?0?5?$CC?$AA@
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 643  :               target += path2_arg.file_string();

	lea	edx, DWORD PTR $T559615[ebp]
	push	edx
	mov	ecx, edi
	call	?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::file_string
	push	-1
	push	ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	cmp	DWORD PTR $T559615[ebp+24], 16		; 00000010H
	jb	SHORT $LN97@what@4
	mov	eax, DWORD PTR $T559615[ebp+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN97@what@4:

; 644  :               target += "\"";

	push	1
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	ecx, esi
	mov	DWORD PTR $T559615[ebp+24], 15		; 0000000fH
	mov	DWORD PTR $T559615[ebp+20], ebx
	mov	BYTE PTR $T559615[ebp+4], bl
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN107@what@4:

; 645  :             }
; 646  :           }
; 647  :           return target.c_str();

	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN117@what@4
	mov	eax, DWORD PTR [esi+4]

; 652  :         }
; 653  :       }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:

; 648  :         }
; 649  :         catch (...)
; 650  :         {
; 651  :           return sys_err_what;

	mov	eax, $LN12@what@4
	ret	0
$LN12@what@4:
	mov	eax, DWORD PTR _sys_err_what$[ebp]

; 652  :         }
; 653  :       }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0

; 645  :             }
; 646  :           }
; 647  :           return target.c_str();

$LN117@what@4:
	lea	eax, DWORD PTR [esi+4]

; 652  :         }
; 653  :       }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T559614[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T559615[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::filesystem::detail::what
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
;	COMDAT ?clear@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
?clear@ios_base@std@@QAEXH@Z PROC			; std::ios_base::clear, COMDAT
; _this$ = ecx

; 301  : 		clear(_State, false);

	mov	eax, DWORD PTR __State$[esp-4]
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear

; 302  : 		}

	ret	4
?clear@ios_base@std@@QAEXH@Z ENDP			; std::ios_base::clear
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
xdata$x	SEGMENT
__unwindtable$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z$0
__tryblocktable$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z$4
__ehfuncinfo$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\close.hpp
xdata$x	ENDS
;	COMDAT ??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_t$ = 8							; size = 4
??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z PROC ; boost::iostreams::detail::close_all<boost::iostreams::basic_file_source<char> >, COMDAT

; 50   : { 

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 51   :     try {
; 52   :         boost::iostreams::close(t, BOOST_IOS::in);

	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	ecx, DWORD PTR [eax]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close

; 58   :     }
; 59   :     boost::iostreams::close(t, BOOST_IOS::out);
; 60   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z$0:

; 53   :     } catch (...) {

	mov	DWORD PTR __$EHRec$[ebp], esp

; 54   :         try {
; 55   :             boost::iostreams::close(t, BOOST_IOS::out);
; 56   :         } catch (...) { }
; 57   :         throw;

	push	0
	push	0
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	call	__CxxThrowException@8
$LN52@close_all@3:
$LN51@close_all@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$close_all@U?$basic_file_source@D@iostreams@boost@@@detail@iostreams@boost@@YAXAAU?$basic_file_source@D@12@@Z ENDP ; boost::iostreams::detail::close_all<boost::iostreams::basic_file_source<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
;	COMDAT ??$enable_current_exception@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@20@@Z
_TEXT	SEGMENT
$T595448 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$enable_current_exception@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@20@@Z PROC ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >, COMDAT

; 391  :         {

	push	ecx

; 392  :         return exception_detail::clone_impl<T>(x);

	mov	eax, DWORD PTR _x$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR $T595448[esp+12], 0
	call	??0?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@12@@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >::clone_impl<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
	mov	eax, esi
	pop	esi

; 393  :         }

	pop	ecx
	ret	0
??$enable_current_exception@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@20@@Z ENDP ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\throw_exception.hpp
xdata$x	SEGMENT
__unwindtable$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z$0
__ehfuncinfo$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z
_TEXT	SEGMENT
$T595454 = -228						; size = 108
$T595453 = -120						; size = 104
__$EHRec$ = -12						; size = 12
_e$ = 8							; size = 4
??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z PROC ; boost::throw_exception<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >, COMDAT

; 58   : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+236]
	mov	DWORD PTR fs:0, eax

; 59   :     //All boost exceptions are required to derive std::exception,
; 60   :     //to ensure compatibility with BOOST_NO_EXCEPTIONS.
; 61   :     throw_exception_assert_compatibility(e);
; 62   : 
; 63   : #ifndef BOOST_EXCEPTION_DISABLE
; 64   :     throw enable_current_exception(enable_error_info(e));

	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T595453[esp+240]
	push	ecx
	call	??$enable_error_info@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YA?AU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@0@ABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::enable_error_info<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
	push	eax
	lea	edx, DWORD PTR $T595454[esp+248]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+260], 0
	call	??$enable_current_exception@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@20@@Z ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > > >
	add	esp, 16					; 00000010H
	push	OFFSET __TI8?AV?$clone_impl@U?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@@exception_detail@boost@@
	lea	eax, DWORD PTR $T595454[esp+240]
	push	eax
	call	__CxxThrowException@8
$LN8@throw_exce@4:
$LN7@throw_exce@4:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z$0:
	lea	ecx, DWORD PTR $T595453[ebp]
	jmp	??1?$error_info_injector@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >::~error_info_injector<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
__ehhandler$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-220]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ENDP ; boost::throw_exception<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
;	COMDAT ?what@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UBEPBDXZ
_TEXT	SEGMENT
?what@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UBEPBDXZ PROC ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::what, COMDAT
; _this$ = ecx

; 698  :         if ( !m_imp_ptr.get() )

	cmp	DWORD PTR [ecx+76], 0
	jne	SHORT $LN1@what@5

; 699  :           return system::system_error::what();

	jmp	?what@system_error@system@boost@@UBEPBDXZ ; boost::system::system_error::what
$LN1@what@5:

; 700  :         return detail::what( system::system_error::what(), m_imp_ptr->m_path1,
; 701  :           m_imp_ptr->m_path2, m_imp_ptr->m_what );  

	mov	eax, DWORD PTR [ecx+76]
	lea	edx, DWORD PTR [eax+56]
	push	edx
	lea	edx, DWORD PTR [eax+28]
	push	edx
	push	eax
	call	?what@system_error@system@boost@@UBEPBDXZ ; boost::system::system_error::what
	push	eax
	call	?what@detail@filesystem@boost@@YAPBDPBDABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@1AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::detail::what
	add	esp, 16					; 00000010H

; 702  :       }

	ret	0
?what@?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UBEPBDXZ ENDP ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::what
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
__ehfuncinfo$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T595492 = -44						; size = 4
$T595489 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::external_file_string, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = edi

; 240  :       const external_string_type external_file_string() const { return Traits::to_external( *this, file_string() ); }

	push	-1
	push	__ehhandler$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, eax
	lea	eax, DWORD PTR $T595489[esp+48]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR $T595492[esp+52], 0
	call	?file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::file_string
	push	eax
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[esp+68], 0
	call	?to_external@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@23@ABV45@@Z ; boost::filesystem::path_traits::to_external
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR $T595489[esp+72], 16		; 00000010H
	jb	SHORT $LN32@external_f
	mov	ecx, DWORD PTR $T595489[esp+52]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN32@external_f:
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0:
	lea	ecx, DWORD PTR $T595489[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-32]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::external_file_string
; Function compile flags: /Ogtpy
;	COMDAT ??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=, COMDAT
; _this$ = ecx

; 203  :       basic_path & operator/=( const basic_path & rhs )  { return operator /=( rhs.string().c_str() ); }

	mov	eax, DWORD PTR _rhs$[esp-4]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN9@operator@382
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _rhs$[esp-4], eax
	jmp	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
$LN9@operator@382:
	add	eax, 4
	mov	DWORD PTR _rhs$[esp-4], eax
	jmp	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@ABV012@@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_s$ = 12						; size = 4
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z PROC ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT

; 167  :       basic_path( const value_type * s )  { operator/=( s ); }

	push	-1
	push	__ehhandler$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+16]
	xor	eax, eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], eax
	mov	BYTE PTR [esi+4], al
	mov	DWORD PTR __$EHRec$[esp+28], eax
	mov	eax, DWORD PTR _s$[esp+16]
	push	eax
	mov	ecx, esi
	call	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z ENDP ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z$1
__ehfuncinfo$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z
_TEXT	SEGMENT
$T595782 = -72						; size = 4
$T595777 = -68						; size = 28
$T595778 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_lhs$ = 8						; size = 4
??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z PROC ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT
; ___$ReturnUdt$ = esi

; 541  :       { return basic_path<String, Traits>( lhs ) /=

	push	-1
	push	__ehhandler$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	push	ebx
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+88]
	mov	DWORD PTR fs:0, eax

; 542  :           basic_path<String, Traits>( rhs ); }

	push	OFFSET ??_C@_0L@JCBAPMDC@traceFiles?$AA@
	lea	eax, DWORD PTR $T595778[esp+92]
	xor	ebx, ebx
	push	eax
	mov	DWORD PTR $T595782[esp+96], ebx
	call	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	mov	edi, eax
	mov	ecx, DWORD PTR _lhs$[esp+84]
	push	-1
	push	ebx
	mov	DWORD PTR __$EHRec$[esp+104], ebx
	push	ecx
	lea	ecx, DWORD PTR $T595777[esp+100]
	mov	DWORD PTR $T595777[esp+124], 15		; 0000000fH
	mov	DWORD PTR $T595777[esp+120], ebx
	mov	BYTE PTR $T595777[esp+104], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[esp+96], 1
	cmp	DWORD PTR [edi+24], 16			; 00000010H
	jb	SHORT $LN44@operator@383
	mov	edi, DWORD PTR [edi+4]
	jmp	SHORT $LN45@operator@383
$LN44@operator@383:
	add	edi, 4
$LN45@operator@383:
	push	edi
	lea	ecx, DWORD PTR $T595777[esp+92]
	call	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
	push	-1
	push	ebx
	mov	edi, 15					; 0000000fH
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T595777[esp+112], 16		; 00000010H
	jb	SHORT $LN93@operator@383
	mov	edx, DWORD PTR $T595777[esp+92]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN93@operator@383:
	cmp	DWORD PTR $T595778[esp+112], 16		; 00000010H
	mov	DWORD PTR $T595777[esp+112], edi
	mov	DWORD PTR $T595777[esp+108], ebx
	mov	BYTE PTR $T595777[esp+92], bl
	jb	SHORT $LN131@operator@383
	mov	eax, DWORD PTR $T595778[esp+92]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN131@operator@383:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+88]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	ebx
	add	esp, 76					; 0000004cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z$0:
	lea	ecx, DWORD PTR $T595778[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z$1:
	lea	ecx, DWORD PTR $T595777[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__ehhandler$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-72]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z ENDP ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\path.hpp
xdata$x	ENDS
;	COMDAT ??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T596404 = -72						; size = 4
$T596399 = -68						; size = 28
$T596400 = -40						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_lhs$ = 12						; size = 4
_rhs$ = 16						; size = 4
??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>, COMDAT

; 547  :       { return basic_path<String, Traits>( lhs ) /=

	push	-1
	push	__ehhandler$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+88]
	mov	DWORD PTR fs:0, eax

; 548  :           basic_path<String, Traits>( rhs ); }

	mov	eax, DWORD PTR _rhs$[esp+84]
	xor	ebx, ebx
	push	eax
	lea	ecx, DWORD PTR $T596400[esp+92]
	mov	DWORD PTR $T596404[esp+92], ebx
	call	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	mov	esi, eax
	mov	ecx, DWORD PTR _lhs$[esp+84]
	push	-1
	push	ebx
	mov	DWORD PTR __$EHRec$[esp+104], ebx
	push	ecx
	lea	ecx, DWORD PTR $T596399[esp+100]
	mov	DWORD PTR $T596399[esp+124], 15		; 0000000fH
	mov	DWORD PTR $T596399[esp+120], ebx
	mov	BYTE PTR $T596399[esp+104], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[esp+96], 1
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN44@operator@384
	mov	esi, DWORD PTR [esi+4]
	jmp	SHORT $LN45@operator@384
$LN44@operator@384:
	add	esi, 4
$LN45@operator@384:
	push	esi
	lea	ecx, DWORD PTR $T596399[esp+92]
	call	??_0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAEAAV012@PBD@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::operator/=
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+84]
	push	-1
	push	ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T596399[esp+112], 16		; 00000010H
	jb	SHORT $LN93@operator@384
	mov	edx, DWORD PTR $T596399[esp+92]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN93@operator@384:
	cmp	DWORD PTR $T596400[esp+112], 16		; 00000010H
	mov	DWORD PTR $T596399[esp+112], 15		; 0000000fH
	mov	DWORD PTR $T596399[esp+108], ebx
	mov	BYTE PTR $T596399[esp+92], bl
	jb	SHORT $LN131@operator@384
	mov	eax, DWORD PTR $T596400[esp+92]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN131@operator@384:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+88]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 76					; 0000004cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T596400[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T596399[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__ehhandler$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-72]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\filesystem\operations.hpp
xdata$x	SEGMENT
__unwindtable$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$2
__ehfuncinfo$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
_TEXT	SEGMENT
_ec$ = -164						; size = 8
_result$ = -156						; size = 4
$T597023 = -152						; size = 28
$T597021 = -124						; size = 28
$T597022 = -96						; size = 84
__$EHRec$ = -12						; size = 12
??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z PROC ; boost::filesystem::is_regular<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT
; _ph$ = ecx

; 322  :     { 

	push	-1
	push	__ehhandler$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx

; 323  :       system::error_code ec;

	xor	ebx, ebx
	mov	DWORD PTR _ec$[esp+180], ebx
	call	?get_system_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_system_category

; 324  :       file_status result( detail::status_api( ph.external_file_string(), ec ) );

	lea	edi, DWORD PTR $T597021[esp+180]
	mov	DWORD PTR _ec$[esp+184], eax
	call	?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::external_file_string
	lea	ecx, DWORD PTR _ec$[esp+180]
	push	ecx
	push	eax
	lea	edx, DWORD PTR _result$[esp+188]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+200], ebx
	call	?status_api@detail@filesystem@boost@@YA?AVfile_status@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVerror_code@system@3@@Z ; boost::filesystem::detail::status_api
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __$EHRec$[esp+188], -1
	cmp	DWORD PTR $T597021[esp+204], 16		; 00000010H
	jb	SHORT $LN25@is_regular
	mov	eax, DWORD PTR $T597021[esp+184]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN25@is_regular:

; 325  :       if ( ec )

	mov	ecx, DWORD PTR _ec$[esp+180]
	neg	ecx
	sbb	ecx, ecx
	test	ecx, OFFSET ?unspecified_bool_true@error_code@system@boost@@SAXXZ ; boost::system::error_code::unspecified_bool_true
	je	SHORT $LN1@is_regular

; 326  :         boost::throw_exception( basic_filesystem_error<Path>(
; 327  :           "boost::filesystem::is_regular", ph, ec ) );

	push	29					; 0000001dH
	push	OFFSET ??_C@_0BO@JCBFFKAC@boost?3?3filesystem?3?3is_regular?$AA@
	lea	ecx, DWORD PTR $T597023[esp+188]
	mov	DWORD PTR $T597023[esp+212], 15		; 0000000fH
	mov	DWORD PTR $T597023[esp+208], ebx
	mov	BYTE PTR $T597023[esp+192], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+188], 1
	mov	edx, DWORD PTR _ec$[esp+184]
	mov	eax, DWORD PTR _ec$[esp+180]
	push	edx
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T597023[esp+192]
	push	ecx
	lea	ecx, DWORD PTR $T597022[esp+196]
	call	??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	push	eax
	mov	BYTE PTR __$EHRec$[esp+192], 2
	call	??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::throw_exception<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
$LN79@is_regular:
$LN1@is_regular:

; 328  :       return is_regular( result );

	xor	eax, eax
	cmp	DWORD PTR _result$[esp+180], 2
	sete	al

; 329  :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 164				; 000000a4H
	ret	0
$LN78@is_regular:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$0:
	lea	ecx, DWORD PTR $T597021[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$1:
	lea	ecx, DWORD PTR $T597023[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$2:
	lea	ecx, DWORD PTR $T597022[ebp]
	jmp	??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::~basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
__ehhandler$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-164]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ENDP ; boost::filesystem::is_regular<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$2
__ehfuncinfo$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
_TEXT	SEGMENT
_ec$ = -164						; size = 8
_result$ = -156						; size = 4
$T597308 = -152						; size = 28
$T597306 = -124						; size = 28
$T597307 = -96						; size = 84
__$EHRec$ = -12						; size = 12
??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z PROC ; boost::filesystem::exists<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT
; _ph$ = ecx

; 291  :     { 

	push	-1
	push	__ehhandler$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx

; 292  :       system::error_code ec;

	xor	ebx, ebx
	mov	DWORD PTR _ec$[esp+180], ebx
	call	?get_system_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_system_category

; 293  :       file_status result( detail::status_api( ph.external_file_string(), ec ) );

	lea	edi, DWORD PTR $T597306[esp+180]
	mov	DWORD PTR _ec$[esp+184], eax
	call	?external_file_string@?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::external_file_string
	lea	ecx, DWORD PTR _ec$[esp+180]
	push	ecx
	push	eax
	lea	edx, DWORD PTR _result$[esp+188]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+200], ebx
	call	?status_api@detail@filesystem@boost@@YA?AVfile_status@23@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVerror_code@system@3@@Z ; boost::filesystem::detail::status_api
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __$EHRec$[esp+188], -1
	cmp	DWORD PTR $T597306[esp+204], 16		; 00000010H
	jb	SHORT $LN25@exists@2
	mov	eax, DWORD PTR $T597306[esp+184]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN25@exists@2:

; 294  :       if ( ec )

	mov	ecx, DWORD PTR _ec$[esp+180]
	neg	ecx
	sbb	ecx, ecx
	test	ecx, OFFSET ?unspecified_bool_true@error_code@system@boost@@SAXXZ ; boost::system::error_code::unspecified_bool_true
	je	SHORT $LN1@exists@2

; 295  :         boost::throw_exception( basic_filesystem_error<Path>(
; 296  :           "boost::filesystem::exists", ph, ec ) );

	push	25					; 00000019H
	push	OFFSET ??_C@_0BK@LKDJBKKI@boost?3?3filesystem?3?3exists?$AA@
	lea	ecx, DWORD PTR $T597308[esp+188]
	mov	DWORD PTR $T597308[esp+212], 15		; 0000000fH
	mov	DWORD PTR $T597308[esp+208], ebx
	mov	BYTE PTR $T597308[esp+192], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+188], 1
	mov	edx, DWORD PTR _ec$[esp+184]
	mov	eax, DWORD PTR _ec$[esp+180]
	push	edx
	push	eax
	push	esi
	lea	ecx, DWORD PTR $T597308[esp+192]
	push	ecx
	lea	ecx, DWORD PTR $T597307[esp+196]
	call	??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@Verror_code@system@2@@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	push	eax
	mov	BYTE PTR __$EHRec$[esp+192], 2
	call	??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::throw_exception<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
$LN83@exists@2:
$LN1@exists@2:

; 297  :       return exists( result );

	mov	eax, DWORD PTR _result$[esp+180]
	cmp	eax, ebx
	je	SHORT $LN75@exists@2
	cmp	eax, 1
	je	SHORT $LN75@exists@2
	mov	eax, 1
	jmp	SHORT $LN2@exists@2
$LN75@exists@2:
	xor	eax, eax
$LN2@exists@2:

; 298  :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+180]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 164				; 000000a4H
	ret	0
$LN82@exists@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$0:
	lea	ecx, DWORD PTR $T597306[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$1:
	lea	ecx, DWORD PTR $T597308[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z$2:
	lea	ecx, DWORD PTR $T597307[ebp]
	jmp	??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::~basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
__ehhandler$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-164]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ENDP ; boost::filesystem::exists<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$3
__ehfuncinfo$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\operations.hpp
xdata$x	ENDS
;	COMDAT ??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ
_TEXT	SEGMENT
$T597609 = -164						; size = 4
_ec$ = -164						; size = 8
$T597603 = -156						; size = 28
$T597602 = -156						; size = 28
$T597601 = -128						; size = 84
_ph$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ PROC ; boost::filesystem::current_path<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >, COMDAT
; ___$ReturnUdt$ = esi

; 528  :     {

	push	-1
	push	__ehhandler$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 152				; 00000098H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+164], eax
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+172]
	mov	DWORD PTR fs:0, eax
	xor	ebx, ebx
	mov	DWORD PTR $T597609[esp+172], ebx

; 529  :       typename Path::external_string_type ph;

	mov	DWORD PTR _ph$[esp+196], 15		; 0000000fH
	mov	DWORD PTR _ph$[esp+192], ebx
	mov	BYTE PTR _ph$[esp+176], bl

; 530  :       system::error_code ec( detail::get_current_path_api( ph ) );

	lea	eax, DWORD PTR _ph$[esp+172]
	push	eax
	lea	ecx, DWORD PTR _ec$[esp+176]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+188], ebx
	call	?get_current_path_api@detail@filesystem@boost@@YA?AVerror_code@system@3@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::detail::get_current_path_api

; 531  :       if ( ec )

	mov	edx, DWORD PTR _ec$[esp+180]
	add	esp, 8
	neg	edx
	sbb	edx, edx
	test	edx, OFFSET ?unspecified_bool_true@error_code@system@boost@@SAXXZ ; boost::system::error_code::unspecified_bool_true
	je	SHORT $LN1@current_pa

; 532  :           boost::throw_exception( basic_filesystem_error<Path>(
; 533  :             "boost::filesystem::current_path", ec ) );

	push	31					; 0000001fH
	push	OFFSET ??_C@_0CA@PLMEELJH@boost?3?3filesystem?3?3current_path?$AA@
	lea	ecx, DWORD PTR $T597602[esp+180]
	mov	DWORD PTR $T597602[esp+204], 15		; 0000000fH
	mov	DWORD PTR $T597602[esp+200], ebx
	mov	BYTE PTR $T597602[esp+184], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[esp+180], 1
	mov	eax, DWORD PTR _ec$[esp+176]
	mov	ecx, DWORD PTR _ec$[esp+172]
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T597602[esp+180]
	push	edx
	lea	eax, DWORD PTR $T597601[esp+184]
	push	eax
	call	??0?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Verror_code@system@2@@Z ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	push	eax
	mov	BYTE PTR __$EHRec$[esp+184], 2
	call	??$throw_exception@V?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@@boost@@YAXABV?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@0@@Z ; boost::throw_exception<boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> > >
$LN134@current_pa:
$LN1@current_pa:

; 534  :       return Path( Path::traits_type::to_internal( ph ) );

	lea	ecx, DWORD PTR _ph$[esp+172]
	push	ecx
	lea	edx, DWORD PTR $T597603[esp+176]
	push	edx
	call	?to_internal@path_traits@filesystem@boost@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV45@@Z ; boost::filesystem::path_traits::to_internal
	add	esp, 8
	push	eax
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[esp+184], 3
	call	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	cmp	DWORD PTR $T597603[esp+196], 16		; 00000010H
	jb	SHORT $LN96@current_pa
	mov	eax, DWORD PTR $T597603[esp+176]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN96@current_pa:
	cmp	DWORD PTR _ph$[esp+196], 16		; 00000010H
	mov	DWORD PTR $T597603[esp+196], 15		; 0000000fH
	mov	DWORD PTR $T597603[esp+192], ebx
	mov	BYTE PTR $T597603[esp+176], bl
	jb	SHORT $LN122@current_pa
	mov	ecx, DWORD PTR _ph$[esp+176]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN122@current_pa:
	mov	eax, esi

; 535  :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+172]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+164]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 164				; 000000a4H
	ret	0
$LN133@current_pa:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$0:
	lea	ecx, DWORD PTR _ph$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$1:
	lea	ecx, DWORD PTR $T597602[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$2:
	lea	ecx, DWORD PTR $T597601[ebp]
	jmp	??1?$basic_filesystem_error@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@UAE@XZ ; boost::filesystem::basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >::~basic_filesystem_error<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
__unwindfunclet$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ$3:
	lea	ecx, DWORD PTR $T597603[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-156]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ ENDP ; boost::filesystem::current_path<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$2
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$9 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$0
__tryblocktable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$9
__ehfuncinfo$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
$T598120 = 12						; size = 4
__Noskip$ = 12						; size = 1
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Ipfx, COMDAT

; 92   : 		{	// test stream state and skip whitespace as needed

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, DWORD PTR _this$[ebp]

; 93   : 		if (ios_base::good())

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+edi+8]
	add	ecx, edi
	test	eax, eax
	jne	$LN1@Ipfx

; 94   : 			{	// state okay, flush tied stream and skip whitespace
; 95   : 			if (_Myios::tie() != 0)

	mov	ecx, DWORD PTR [ecx+44]
	test	ecx, ecx
	je	SHORT $LN10@Ipfx

; 96   : 				_Myios::tie()->flush();

	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN10@Ipfx:

; 97   : 
; 98   : 			if (!_Noskip && ios_base::flags() & ios_base::skipws)

	cmp	BYTE PTR __Noskip$[ebp], 0
	jne	$LN18@Ipfx
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [edx+edi+16]
	test	cl, 1
	je	$LN18@Ipfx

; 99   : 				{	// skip whitespace
; 100  : 				const _Ctype& _Ctype_fac = _USE(ios_base::getloc(), _Ctype);

	lea	ecx, DWORD PTR $T598120[ebp]
	push	ecx
	mov	ecx, edx
	add	ecx, edi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	add	esp, 4
	lea	ecx, DWORD PTR $T598120[ebp]
	mov	ebx, eax
	call	??1locale@std@@QAE@XZ			; std::locale::~locale

; 101  : 
; 102  : 				_TRY_IO_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 1

; 103  : 				int_type _Meta = _Myios::rdbuf()->sgetc();

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+edi+40]
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN33@Ipfx
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN33@Ipfx
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LL108@Ipfx
$LN33@Ipfx:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	npad	4
$LL108@Ipfx:

; 106  : 					if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	cmp	eax, -1
	jne	SHORT $LN4@Ipfx

; 107  : 						{	// end of file, quit
; 108  : 						_Myios::setstate(ios_base::eofbit);

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+edi+8]
	add	ecx, edi
	or	eax, 1
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN56@Ipfx
	or	eax, 4
$LN56@Ipfx:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN18@Ipfx
$LN4@Ipfx:

; 109  : 						break;
; 110  : 						}
; 111  : 					else if (!_Ctype_fac.is(_Ctype::space,
; 112  : 						_Traits::to_char_type(_Meta)))

	mov	edx, DWORD PTR [ebx+16]
	movzx	ecx, al
	test	BYTE PTR [edx+ecx*2], 72		; 00000048H
	jne	SHORT $LN6@Ipfx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN18@Ipfx
$LN6@Ipfx:

; 104  : 
; 105  : 				for (; ; _Meta = _Myios::rdbuf()->snextc())

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [ecx+edi+40]
	call	?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::snextc
	jmp	SHORT $LL108@Ipfx
__catch$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$0:

; 113  : 						break;	// not whitespace, quit
; 114  : 				_CATCH_IO_END

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	or	eax, 4
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN69@Ipfx
	or	eax, 4
$LN69@Ipfx:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN110@Ipfx
	ret	0
$LN110@Ipfx:
	mov	edi, DWORD PTR _this$[ebp]
$LN18@Ipfx:

; 115  : 				}
; 116  : 
; 117  : 			if (ios_base::good())

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edi
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN1@Ipfx

; 118  : 				return (true);

	mov	al, 1

; 122  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN1@Ipfx:

; 119  : 			}
; 120  : 		_Myios::setstate(ios_base::failbit);

	mov	eax, DWORD PTR [ecx+8]
	or	eax, 2
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN104@Ipfx
	or	eax, 4
$LN104@Ipfx:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear

; 121  : 		return (false);

	xor	al, al

; 122  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$2:
	lea	ecx, DWORD PTR $T598120[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAV32@@Z
_TEXT	SEGMENT
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAV32@@Z PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT
; _this$ = ecx
; __Strbuf$ = eax

; 89   : 		{	// set stream buffer pointer

	push	esi

; 90   : 		_Mysb *_Oldstrbuf = _Mystrbuf;

	mov	esi, DWORD PTR [ecx+40]

; 91   : 		_Mystrbuf = _Strbuf;

	mov	DWORD PTR [ecx+40], eax

; 92   : 		clear();

	neg	eax
	sbb	eax, eax
	and	eax, -4					; fffffffcH
	add	eax, 4
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear

; 93   : 		return (_Oldstrbuf);

	mov	eax, esi
	pop	esi

; 94   : 		}

	ret	0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAV32@@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\filtering_stream.hpp
_TEXT	ENDS
;	COMDAT ?notify@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@EAEXXZ
_TEXT	SEGMENT
?notify@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@EAEXXZ PROC ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::notify, COMDAT
; _this$ = ecx

; 92   :     void notify() { this->rdbuf(chain_.empty() ? 0 : &chain_.front()); }

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+16]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN3@notify@4
	xor	eax, eax
	jmp	SHORT $LN13@notify@4
$LN3@notify@4:
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN63@notify@4
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN52@notify@4:
	cmp	edi, DWORD PTR [eax+20]
	jne	SHORT $LN41@notify@4
	call	__invalid_parameter_noinfo
$LN41@notify@4:
	mov	eax, DWORD PTR [edi+8]
	pop	edi
$LN13@notify@4:
	mov	edx, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+esi+48], eax
	lea	ecx, DWORD PTR [ecx+esi+8]
	neg	eax
	sbb	eax, eax
	and	eax, -4					; fffffffcH
	add	eax, 4
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	pop	esi
	ret	0
$LN63@notify@4:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN52@notify@4
?notify@?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@EAEXXZ ENDP ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::notify
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0
__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Istr$ = 12						; size = 4
__Noskip$ = 16						; size = 1
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 75   : 			{	// construct locking and calling _Ipfx

	push	-1
	push	__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR __Istr$[esp+20]
	mov	esi, DWORD PTR _this$[esp+20]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN11@sentry@2
	lea	ecx, DWORD PTR [eax+4]
	call	?_Lock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Lock
$LN11@sentry@2:

; 76   : 			_Ok = this->_Myistr._Ipfx(_Noskip);

	mov	eax, DWORD PTR __Noskip$[esp+20]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	ecx
	call	?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z ; std::basic_istream<char,std::char_traits<char> >::_Ipfx
	mov	BYTE PTR [esi+4], al

; 77   : 			}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$0
__tryblocktable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$12
__ehfuncinfo$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z
	DD	01H
	DD	FLAT:__tryblocktable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	ENDS
;	COMDAT ??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z
_TEXT	SEGMENT
$T598627 = -52						; size = 8
$T598626 = -52						; size = 8
__Ok$ = -44						; size = 8
$T598625 = -36						; size = 8
__Lock$598661 = -32					; size = 4
$T598622 = -28						; size = 4
__State$ = -24						; size = 4
__Nget_fac$149554 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z PROC ; std::basic_istream<char,std::char_traits<char> >::operator>>, COMDAT

; 387  : 		{	// extract a double

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _this$[ebp]

; 388  : 		ios_base::iostate _State = ios_base::goodbit;

	xor	esi, esi

; 389  : 		const sentry _Ok(*this);

	push	esi
	push	ebx
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	mov	DWORD PTR __State$[ebp], esi
	call	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], esi

; 390  : 		if (_Ok)

	cmp	BYTE PTR __Ok$[ebp+4], 0
	je	$LN12@operator@385

; 391  : 			{	// state okay, use facet to extract
; 392  : 			const _Nget& _Nget_fac = _USE(ios_base::getloc(), _Nget);

	mov	edx, DWORD PTR [ebx]
	lea	ecx, DWORD PTR $T598622[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, ebx
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edi, DWORD PTR $T598622[ebp]
	mov	DWORD PTR __Nget_fac$149554[ebp], eax
	cmp	edi, esi
	je	SHORT $LN18@operator@385
	push	esi
	lea	ecx, DWORD PTR __Lock$598661[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, esi
	jbe	SHORT $LN20@operator@385
	cmp	eax, -1
	jae	SHORT $LN20@operator@385
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN20@operator@385:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$598661[ebp]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN18@operator@385
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN18@operator@385:

; 393  : 
; 394  : 			_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 395  : 			_Nget_fac.get(_Iter(_Myios::rdbuf()), _Iter(0),
; 396  : 				*this, _State, _Val);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [ecx+ebx+40]
	lea	eax, DWORD PTR [ecx+ebx]
	mov	ecx, DWORD PTR __Nget_fac$149554[ebp]
	xor	edi, edi
	test	esi, esi
	sete	dl
	mov	BYTE PTR $T598626[ebp+4], dl
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [edx+12]
	push	ecx
	lea	ecx, DWORD PTR __State$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T598626[ebp+4]
	push	eax
	mov	BYTE PTR $T598625[ebp+4], 1
	mov	eax, DWORD PTR $T598625[ebp+4]
	push	eax
	push	edi
	push	ecx
	mov	ecx, DWORD PTR __Nget_fac$149554[ebp]
	push	esi
	lea	eax, DWORD PTR $T598627[ebp]
	push	eax
	call	edx
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	jmp	SHORT $LN12@operator@385
__catch$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$0:

; 397  : 			_CATCH_IO_END

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	or	eax, 4
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN39@operator@385
	or	eax, 4
$LN39@operator@385:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN88@operator@385
	ret	0
$LN88@operator@385:
	mov	ebx, DWORD PTR _this$[ebp]
$LN12@operator@385:

; 398  : 			}
; 399  : 
; 400  : 		_Myios::setstate(_State);

	mov	edx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, ebx
	test	edx, edx
	je	SHORT $LN68@operator@385
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edx
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN70@operator@385
	or	eax, 4
$LN70@operator@385:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN68@operator@385:

; 401  : 		return (*this);

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN85@operator@385
	lea	ecx, DWORD PTR [eax+4]
	call	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
$LN85@operator@385:
	mov	eax, ebx

; 402  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z$3:
	lea	ecx, DWORD PTR $T598622[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::operator>>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$0
__tryblocktable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$12
__ehfuncinfo$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z
	DD	01H
	DD	FLAT:__tryblocktable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	ENDS
;	COMDAT ??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z
_TEXT	SEGMENT
$T598806 = -52						; size = 8
$T598805 = -52						; size = 8
__Ok$ = -44						; size = 8
$T598804 = -36						; size = 8
__Lock$598838 = -32					; size = 4
$T598801 = -28						; size = 4
__State$ = -24						; size = 4
__Nget_fac$149541 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z PROC ; std::basic_istream<char,std::char_traits<char> >::operator>>, COMDAT

; 349  : 		{	// extract an  unsigned long long

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _this$[ebp]

; 350  : 		ios_base::iostate _State = ios_base::goodbit;

	xor	esi, esi

; 351  : 		const sentry _Ok(*this);

	push	esi
	push	ebx
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	mov	DWORD PTR __State$[ebp], esi
	call	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], esi

; 352  : 		if (_Ok)

	cmp	BYTE PTR __Ok$[ebp+4], 0
	je	$LN12@operator@386

; 353  : 			{	// state okay, use facet to extract
; 354  : 			const _Nget& _Nget_fac = _USE(ios_base::getloc(), _Nget);

	mov	edx, DWORD PTR [ebx]
	lea	ecx, DWORD PTR $T598801[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, ebx
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edi, DWORD PTR $T598801[ebp]
	mov	DWORD PTR __Nget_fac$149541[ebp], eax
	cmp	edi, esi
	je	SHORT $LN18@operator@386
	push	esi
	lea	ecx, DWORD PTR __Lock$598838[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, esi
	jbe	SHORT $LN20@operator@386
	cmp	eax, -1
	jae	SHORT $LN20@operator@386
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN20@operator@386:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$598838[ebp]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN18@operator@386
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN18@operator@386:

; 355  : 
; 356  : 			_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 357  : 			_Nget_fac.get(_Iter(_Myios::rdbuf()), _Iter(0),
; 358  : 				*this, _State, _Val);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [ecx+ebx+40]
	lea	eax, DWORD PTR [ecx+ebx]
	mov	ecx, DWORD PTR __Nget_fac$149541[ebp]
	xor	edi, edi
	test	esi, esi
	sete	dl
	mov	BYTE PTR $T598805[ebp+4], dl
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [edx+20]
	push	ecx
	lea	ecx, DWORD PTR __State$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T598805[ebp+4]
	push	eax
	mov	BYTE PTR $T598804[ebp+4], 1
	mov	eax, DWORD PTR $T598804[ebp+4]
	push	eax
	push	edi
	push	ecx
	mov	ecx, DWORD PTR __Nget_fac$149541[ebp]
	push	esi
	lea	eax, DWORD PTR $T598806[ebp]
	push	eax
	call	edx
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	jmp	SHORT $LN12@operator@386
__catch$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$0:

; 359  : 			_CATCH_IO_END

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	or	eax, 4
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN39@operator@386
	or	eax, 4
$LN39@operator@386:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN88@operator@386
	ret	0
$LN88@operator@386:
	mov	ebx, DWORD PTR _this$[ebp]
$LN12@operator@386:

; 360  : 			}
; 361  : 
; 362  : 		_Myios::setstate(_State);

	mov	edx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, ebx
	test	edx, edx
	je	SHORT $LN68@operator@386
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edx
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN70@operator@386
	or	eax, 4
$LN70@operator@386:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN68@operator@386:

; 363  : 		return (*this);

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN85@operator@386
	lea	ecx, DWORD PTR [eax+4]
	call	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
$LN85@operator@386:
	mov	eax, ebx

; 364  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z$3:
	lea	ecx, DWORD PTR $T598801[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::operator>>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$0
__tryblocktable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$12
__ehfuncinfo$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z
	DD	01H
	DD	FLAT:__tryblocktable$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	ENDS
;	COMDAT ??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z
_TEXT	SEGMENT
$T598985 = -52						; size = 8
$T598984 = -52						; size = 8
__Ok$ = -44						; size = 8
$T598983 = -36						; size = 8
__Lock$599019 = -32					; size = 4
$T598980 = -28						; size = 4
__State$ = -24						; size = 4
__Nget_fac$149273 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z PROC ; std::basic_istream<char,std::char_traits<char> >::operator>>, COMDAT

; 330  : 		{	// extract a long long

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _this$[ebp]

; 331  : 		ios_base::iostate _State = ios_base::goodbit;

	xor	esi, esi

; 332  : 		const sentry _Ok(*this);

	push	esi
	push	ebx
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	mov	DWORD PTR __State$[ebp], esi
	call	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], esi

; 333  : 
; 334  : 		if (_Ok)

	cmp	BYTE PTR __Ok$[ebp+4], 0
	je	$LN12@operator@387

; 335  : 			{	// state okay, use facet to extract
; 336  : 			const _Nget& _Nget_fac = _USE(ios_base::getloc(), _Nget);

	mov	edx, DWORD PTR [ebx]
	lea	ecx, DWORD PTR $T598980[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, ebx
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$use_facet@V?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edi, DWORD PTR $T598980[ebp]
	mov	DWORD PTR __Nget_fac$149273[ebp], eax
	cmp	edi, esi
	je	SHORT $LN18@operator@387
	push	esi
	lea	ecx, DWORD PTR __Lock$599019[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, esi
	jbe	SHORT $LN20@operator@387
	cmp	eax, -1
	jae	SHORT $LN20@operator@387
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN20@operator@387:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$599019[ebp]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN18@operator@387
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN18@operator@387:

; 337  : 
; 338  : 			_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 339  : 			_Nget_fac.get(_Iter(_Myios::rdbuf()), _Iter(0),
; 340  : 				*this, _State, _Val);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [ecx+ebx+40]
	lea	eax, DWORD PTR [ecx+ebx]
	mov	ecx, DWORD PTR __Nget_fac$149273[ebp]
	xor	edi, edi
	test	esi, esi
	sete	dl
	mov	BYTE PTR $T598984[ebp+4], dl
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [edx+24]
	push	ecx
	lea	ecx, DWORD PTR __State$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T598984[ebp+4]
	push	eax
	mov	BYTE PTR $T598983[ebp+4], 1
	mov	eax, DWORD PTR $T598983[ebp+4]
	push	eax
	push	edi
	push	ecx
	mov	ecx, DWORD PTR __Nget_fac$149273[ebp]
	push	esi
	lea	eax, DWORD PTR $T598985[ebp]
	push	eax
	call	edx
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	jmp	SHORT $LN12@operator@387
__catch$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$0:

; 341  : 			_CATCH_IO_END

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	or	eax, 4
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN39@operator@387
	or	eax, 4
$LN39@operator@387:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN88@operator@387
	ret	0
$LN88@operator@387:
	mov	ebx, DWORD PTR _this$[ebp]
$LN12@operator@387:

; 342  : 			}
; 343  : 
; 344  : 		_Myios::setstate(_State);

	mov	edx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, ebx
	test	edx, edx
	je	SHORT $LN68@operator@387
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edx
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN70@operator@387
	or	eax, 4
$LN70@operator@387:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN68@operator@387:

; 345  : 		return (*this);

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN85@operator@387
	lea	ecx, DWORD PTR [eax+4]
	call	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
$LN85@operator@387:
	mov	eax, ebx

; 346  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__unwindfunclet$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z$3:
	lea	ecx, DWORD PTR $T598980[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\filesystem\operations.hpp
;	COMDAT ?is_regular@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z
_TEXT	SEGMENT
?is_regular@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z PROC ; boost::filesystem::is_regular, COMDAT
; _ph$ = ecx

; 652  :       { return is_regular<path>( ph ); }

	push	ecx
	call	??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::is_regular<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	pop	ecx
	ret	0
?is_regular@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z ENDP ; boost::filesystem::is_regular
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?exists@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z
_TEXT	SEGMENT
?exists@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z PROC ; boost::filesystem::exists, COMDAT
; _ph$ = ecx

; 637  :     inline bool exists( const path & ph ) { return exists<path>( ph ); }

	push	ecx
	call	??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::exists<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	pop	ecx
	ret	0
?exists@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@@Z ENDP ; boost::filesystem::exists
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?current_path@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@XZ
_TEXT	SEGMENT
$T599166 = -4						; size = 4
?current_path@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@XZ PROC ; boost::filesystem::current_path, COMDAT
; ___$ReturnUdt$ = eax

; 557  :       { return current_path<boost::filesystem::path>(); }

	sub	esp, 8
	push	esi
	mov	esi, eax
	mov	DWORD PTR $T599166[esp+12], 0
	call	??$current_path@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@XZ ; boost::filesystem::current_path<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	mov	eax, esi
	pop	esi
	add	esp, 8
	ret	0
?current_path@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@XZ ENDP ; boost::filesystem::current_path
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
_TEXT	ENDS
;	COMDAT ?_Init@ios_base@std@@IAEXXZ
_TEXT	SEGMENT
__Lock$599188 = -4					; size = 4
?_Init@ios_base@std@@IAEXXZ PROC			; std::ios_base::_Init, COMDAT
; _this$ = ecx

; 515  :         {	// initialize a new ios_base

	push	ecx
	push	ebx
	push	ebp

; 516  :         _Ploc = 0;

	xor	ebp, ebp
	push	esi
	mov	esi, ecx
	push	edi

; 517  :         _Stdstr = 0;
; 518  :         _Except = goodbit;
; 519  :         _Fmtfl = skipws | dec;
; 520  :         _Prec = 6;
; 521  :         _Wide = 0;
; 522  :         _Arr = 0;
; 523  :         _Calls = 0;
; 524  :         clear(goodbit);

	push	ebp
	push	ebp
	mov	DWORD PTR [esi+36], ebp
	mov	DWORD PTR [esi+4], ebp
	mov	DWORD PTR [esi+12], ebp
	mov	DWORD PTR [esi+16], 513			; 00000201H
	mov	DWORD PTR [esi+20], 6
	mov	DWORD PTR [esi+24], ebp
	mov	DWORD PTR [esi+28], ebp
	mov	DWORD PTR [esi+32], ebp
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear

; 525  :         _Ploc = _NEW_CRT locale;

	push	4
	call	??2@YAPAXI@Z				; operator new
	mov	edi, eax
	add	esp, 4
	cmp	edi, ebp
	je	SHORT $LN3@Init@6
	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR [edi], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	ebp
	lea	ecx, DWORD PTR __Lock$599188[esp+24]
	mov	ebx, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, -1
	jae	SHORT $LN9@Init@6
	inc	eax
	mov	DWORD PTR [ebx+4], eax
$LN9@Init@6:
	lea	ecx, DWORD PTR __Lock$599188[esp+20]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	DWORD PTR [esi+36], edi

; 526  :         }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	0
$LN3@Init@6:
	pop	edi
	mov	DWORD PTR [esi+36], ebp
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	0
?_Init@ios_base@std@@IAEXXZ ENDP			; std::ios_base::_Init
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$12
__ehfuncinfo$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string
xdata$x	ENDS
;	COMDAT ??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ok$ = -44						; size = 8
__Ctype_fac$158571 = -36				; size = 4
__Lock$618550 = -32					; size = 4
$T618513 = -28						; size = 4
__State$ = -24						; size = 4
__Changed$ = -17					; size = 1
__$EHRec$ = -16						; size = 16
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator>><char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 427  : 	{	// extract a string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, DWORD PTR __Istr$[ebp]

; 428  : 	typedef ctype<_Elem> _Ctype;
; 429  : 	typedef basic_istream<_Elem, _Traits> _Myis;
; 430  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 431  : 	typedef typename _Mystr::size_type _Mysizt;
; 432  : 
; 433  : 	ios_base::iostate _State = ios_base::goodbit;

	xor	esi, esi

; 434  : 	bool _Changed = false;
; 435  : 	const typename _Myis::sentry _Ok(_Istr);

	push	esi
	push	edi
	lea	eax, DWORD PTR __Ok$[ebp]
	push	eax
	mov	DWORD PTR __State$[ebp], esi
	mov	BYTE PTR __Changed$[ebp], 0
	call	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], esi

; 436  : 
; 437  : 	if (_Ok)

	cmp	BYTE PTR __Ok$[ebp+4], 0
	je	$LN20@operator@397

; 438  : 		{	// state okay, extract characters
; 439  : 		const _Ctype& _Ctype_fac = _USE(_Istr.getloc(), _Ctype);

	mov	edx, DWORD PTR [edi]
	lea	ecx, DWORD PTR $T618513[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, edi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	ebx, DWORD PTR $T618513[ebp]
	add	esp, 4
	mov	DWORD PTR __Ctype_fac$158571[ebp], eax
	cmp	ebx, esi
	je	SHORT $LN26@operator@397
	push	esi
	lea	ecx, DWORD PTR __Lock$618550[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, esi
	jbe	SHORT $LN28@operator@397
	cmp	eax, -1
	jae	SHORT $LN28@operator@397
	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN28@operator@397:
	mov	esi, DWORD PTR [ebx+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$618550[ebp]
	and	esi, ebx
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN26@operator@397
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN26@operator@397:

; 440  : 		_Str.erase();

	mov	ecx, DWORD PTR __Str$[ebp]
	push	-1
	push	0
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 441  : 
; 442  : 		_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 443  : 		_Mysizt _Size = 0 < _Istr.width()
; 444  : 			&& (_Mysizt)_Istr.width() < _Str.max_size()
; 445  : 				? (_Mysizt)_Istr.width() : _Str.max_size();

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+edi+24]
	add	ecx, edi
	test	eax, eax
	jle	SHORT $LN13@operator@397
	mov	ebx, eax
	cmp	eax, -2					; fffffffeH
	jb	SHORT $LN49@operator@397
$LN13@operator@397:
	mov	ebx, -2					; fffffffeH
$LN49@operator@397:

; 446  : 		typename _Traits::int_type _Meta = _Istr.rdbuf()->sgetc();

	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [ecx+32]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN58@operator@397
	mov	edx, DWORD PTR [ecx+48]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN58@operator@397
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	jmp	SHORT $LL137@operator@397
$LN58@operator@397:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LL137@operator@397:

; 447  : 
; 448  : 		for (; 0 < _Size; --_Size, _Meta = _Istr.rdbuf()->snextc())

	test	ebx, ebx
	jbe	SHORT $LN6@operator@397

; 449  : 			if(_Traits::eq_int_type(_Traits::eof(), _Meta))

	cmp	eax, -1
	jne	SHORT $LN5@operator@397

; 450  : 				{	// end of file, quit
; 451  : 				_State |= ios_base::eofbit;

	or	DWORD PTR __State$[ebp], 1
$LN6@operator@397:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN20@operator@397
$LN5@operator@397:

; 452  : 				break;
; 453  : 				}
; 454  : 			else if (_Ctype_fac.is(_Ctype::space,
; 455  : 				_Traits::to_char_type(_Meta)))

	mov	edx, DWORD PTR __Ctype_fac$158571[ebp]
	mov	edx, DWORD PTR [edx+16]
	movzx	ecx, al
	test	BYTE PTR [edx+ecx*2], 72		; 00000048H
	jne	SHORT $LN6@operator@397

; 456  : 				break;	// whitespace, quit
; 457  : 			else
; 458  : 				{	// add character to string
; 459  : 				_Str.append(1, _Traits::to_char_type(_Meta));

	mov	ecx, DWORD PTR __Str$[ebp]
	push	eax
	push	1
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [ecx+edi+40]

; 460  : 				_Changed = true;

	mov	BYTE PTR __Changed$[ebp], 1
	dec	ebx
	call	?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ ; std::basic_streambuf<char,std::char_traits<char> >::snextc
	jmp	SHORT $LL137@operator@397
__catch$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:

; 461  : 				}
; 462  : 		_CATCH_IO_(_Istr)

	mov	eax, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	or	eax, 4
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN87@operator@397
	or	eax, 4
$LN87@operator@397:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN143@operator@397
	ret	0
$LN143@operator@397:
	mov	edi, DWORD PTR __Istr$[ebp]
$LN20@operator@397:

; 463  : 		}
; 464  : 
; 465  : 	_Istr.width(0);

	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+4]

; 466  : 	if (!_Changed)
; 467  : 		_State |= ios_base::failbit;

	mov	edx, DWORD PTR __State$[ebp]
	add	eax, edi
	cmp	BYTE PTR __Changed$[ebp], 0
	mov	DWORD PTR [eax+24], 0
	jne	SHORT $LN1@operator@397
	or	edx, 2
$LN1@operator@397:

; 468  : 	_Istr.setstate(_State);

	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, edi
	test	edx, edx
	je	SHORT $LN118@operator@397
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edx
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN120@operator@397
	or	eax, 4
$LN120@operator@397:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN118@operator@397:

; 469  : 	return (_Istr);

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [ecx+eax+40]
	test	eax, eax
	je	SHORT $LN139@operator@397
	lea	ecx, DWORD PTR [eax+4]
	call	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
$LN139@operator@397:
	mov	eax, edi

; 470  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	eax, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3:
	lea	ecx, DWORD PTR $T618513[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$9
__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$10 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$10
__ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string
xdata$x	ENDS
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ok$ = -36						; size = 8
__Size$ = -28						; size = 4
__Pad$ = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 540  : 	{	// insert a string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 541  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 542  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 543  : 	typedef typename _Mystr::size_type _Mysizt;
; 544  : 
; 545  : 	ios_base::iostate _State = ios_base::goodbit;
; 546  : 	_Mysizt _Size = _Str.size();
; 547  : 	_Mysizt _Pad = _Ostr.width() <= 0 || (_Mysizt)_Ostr.width() <= _Size
; 548  : 			? 0 : (_Mysizt)_Ostr.width() - _Size;

	mov	esi, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ebx, DWORD PTR __Str$[ebp]
	mov	eax, DWORD PTR [edx+esi+24]
	mov	ecx, DWORD PTR [ebx+20]
	xor	edi, edi
	cmp	eax, edi
	mov	DWORD PTR __State$[ebp], edi
	mov	DWORD PTR __Size$[ebp], ecx
	jle	SHORT $LN21@operator@398
	cmp	eax, ecx
	jbe	SHORT $LN21@operator@398
	sub	eax, ecx
	mov	DWORD PTR __Pad$[ebp], eax
	jmp	SHORT $LN22@operator@398
$LN21@operator@398:
	mov	DWORD PTR __Pad$[ebp], edi
$LN22@operator@398:

; 549  : 	const typename _Myos::sentry _Ok(_Ostr);

	push	esi
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], edi

; 550  : 
; 551  : 	if (!_Ok)

	cmp	BYTE PTR __Ok$[ebp+4], 0
	jne	SHORT $LN18@operator@398

; 552  : 		_State |= ios_base::badbit;

	mov	DWORD PTR __State$[ebp], 4

; 553  : 	else

	jmp	$LN26@operator@398
$LN18@operator@398:

; 554  : 		{	// state okay, insert characters
; 555  : 	_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 556  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+esi+16]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LL170@operator@398
	npad	4
$LL14@operator@398:

; 557  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN12@operator@398

; 558  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 559  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [eax+esi]
	mov	al, BYTE PTR [ecx+48]
	mov	ecx, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN46@operator@398
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN46@operator@398
	dec	DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [ecx]
	lea	edi, DWORD PTR [edx+1]
	mov	DWORD PTR [ecx], edi
	mov	BYTE PTR [edx], al
	movzx	eax, al
	jmp	SHORT $LN47@operator@398
$LN46@operator@398:
	mov	edx, DWORD PTR [ecx]
	movzx	eax, al
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN47@operator@398:
	cmp	eax, -1
	jne	SHORT $LN13@operator@398

; 560  : 					{	// insertion failed, quit
; 561  : 					_State |= ios_base::badbit;

	or	DWORD PTR __State$[ebp], 4
$LN12@operator@398:

; 562  : 					break;
; 563  : 					}
; 564  : 
; 565  : 		if (_State == ios_base::goodbit)

	xor	edi, edi
	cmp	DWORD PTR __State$[ebp], edi
	jne	$LN2@operator@398
$LL170@operator@398:

; 566  : 			for (_Mysizt _Count = 0; _Count < _Size; ++_Count)

	cmp	edi, DWORD PTR __Size$[ebp]
	jae	SHORT $LN7@operator@398

; 567  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 568  : 					_Ostr.rdbuf()->sputc(_Str[_Count])))

	cmp	edi, DWORD PTR [ebx+20]
	jbe	SHORT $LN62@operator@398
	call	__invalid_parameter_noinfo
$LN62@operator@398:
	cmp	DWORD PTR [ebx+24], 16			; 00000010H
	jb	SHORT $LN67@operator@398
	mov	eax, DWORD PTR [ebx+4]
	jmp	SHORT $LN68@operator@398
$LN13@operator@398:

; 557  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	dec	DWORD PTR __Pad$[ebp]
	jmp	SHORT $LL14@operator@398

; 567  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 568  : 					_Ostr.rdbuf()->sputc(_Str[_Count])))

$LN67@operator@398:
	lea	eax, DWORD PTR [ebx+4]
$LN68@operator@398:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+esi+40]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	mov	al, BYTE PTR [eax+edi]
	je	SHORT $LN73@operator@398
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN73@operator@398
	dec	DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [ecx]
	lea	ebx, DWORD PTR [edx+1]
	mov	DWORD PTR [ecx], ebx
	mov	ebx, DWORD PTR __Str$[ebp]
	mov	BYTE PTR [edx], al
	movzx	eax, al
	jmp	SHORT $LN74@operator@398
$LN73@operator@398:
	mov	edx, DWORD PTR [ecx]
	movzx	eax, al
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN74@operator@398:
	cmp	eax, -1
	jne	SHORT $LN8@operator@398

; 569  : 					{	// insertion failed, quit
; 570  : 					_State |= ios_base::badbit;

	or	DWORD PTR __State$[ebp], 4
$LN7@operator@398:

; 571  : 					break;
; 572  : 					}
; 573  : 
; 574  : 		if (_State == ios_base::goodbit)

	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN2@operator@398
$LL4@operator@398:

; 575  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN2@operator@398

; 576  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 577  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	al, BYTE PTR [edx+esi+48]
	lea	ecx, DWORD PTR [edx+esi]
	mov	ecx, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN95@operator@398
	mov	edx, DWORD PTR [ecx+52]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN95@operator@398
	dec	DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR [ecx]
	lea	edi, DWORD PTR [edx+1]
	mov	DWORD PTR [ecx], edi
	mov	BYTE PTR [edx], al
	movzx	eax, al
	jmp	SHORT $LN96@operator@398
$LN8@operator@398:

; 566  : 			for (_Mysizt _Count = 0; _Count < _Size; ++_Count)

	inc	edi
	jmp	$LL170@operator@398

; 576  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 577  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

$LN95@operator@398:
	mov	edx, DWORD PTR [ecx]
	movzx	eax, al
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN96@operator@398:
	cmp	eax, -1
	jne	$LN3@operator@398

; 578  : 					{	// insertion failed, quit
; 579  : 					_State |= ios_base::badbit;

	or	DWORD PTR __State$[ebp], 4
$LN2@operator@398:

; 580  : 					break;
; 581  : 					}
; 582  : 		_Ostr.width(0);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	add	eax, esi
	xor	ecx, ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], ecx
$LN26@operator@398:

; 584  : 		}
; 585  : 
; 586  : 	_Ostr.setstate(_State);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, esi
	test	edx, edx
	je	SHORT $LN149@operator@398
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edx
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN151@operator@398
	or	eax, 4
$LN151@operator@398:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN149@operator@398:

; 587  : 	return (_Ostr);

	mov	DWORD PTR __$EHRec$[ebp+12], 3
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN153@operator@398
	mov	ecx, DWORD PTR __Ok$[ebp]
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
$LN153@operator@398:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+40]
	test	eax, eax
	je	SHORT $LN171@operator@398
	lea	ecx, DWORD PTR [eax+4]
	call	?_Unlock@_Mutex@std@@QAEXXZ		; std::_Mutex::_Unlock
$LN171@operator@398:
	mov	eax, esi

; 588  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@operator@398:

; 575  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	dec	DWORD PTR __Pad$[ebp]
	jmp	$LL4@operator@398
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:

; 583  : 		_CATCH_IO_(_Ostr)

	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	or	eax, 4
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN120@operator@398
	or	eax, 4
$LN120@operator@398:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN27@operator@398
	ret	0
$LN27@operator@398:
	mov	esi, DWORD PTR __Ostr$[ebp]
	jmp	$LN26@operator@398
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$9:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
;	COMDAT ?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z
_TEXT	SEGMENT
__Strbuf$ = 8						; size = 4
__Isstd$ = 12						; size = 1
?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::init, COMDAT
; _this$ = ecx

; 131  : 		{	// initialize with stream buffer pointer

	push	esi
	mov	esi, ecx

; 132  : 		_Init();	// initialize ios_base

	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init

; 133  : 		_Mystrbuf = _Strbuf;

	mov	eax, DWORD PTR __Strbuf$[esp]

; 134  : 		_Tiestr = 0;
; 135  : 		_Fillch = widen(' ');

	push	32					; 00000020H
	mov	ecx, esi
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], 0
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen

; 136  : 
; 137  : 		if (_Mystrbuf == 0)

	cmp	DWORD PTR [esi+40], 0
	mov	BYTE PTR [esi+48], al
	jne	SHORT $LN11@init

; 138  : 			setstate(badbit);

	mov	eax, DWORD PTR [esi+8]
	or	eax, 4
	push	0
	push	eax
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN11@init:

; 139  : 
; 140  : 		if (_Isstd)

	cmp	BYTE PTR __Isstd$[esp], 0
	je	SHORT $LN2@init

; 141  : 			_Addstd(this);	// special handling for standard streams

	push	esi
	call	?_Addstd@ios_base@std@@SAXPAV12@@Z	; std::ios_base::_Addstd
	add	esp, 4

; 144  : 		}

	pop	esi
	ret	8
$LN2@init:

; 142  : 		else
; 143  : 		_Stdstr = 0;

	mov	DWORD PTR [esi+4], 0

; 144  : 		}

	pop	esi
	ret	8
?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::init
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z$0
__ehfuncinfo$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	ENDS
;	COMDAT ??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
_TEXT	SEGMENT
$T619144 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Strbuf$ = 8						; size = 4
__Isstd$ = 12						; size = 1
_$initVBases$ = 16					; size = 4
??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::basic_istream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 32   : 		{	// construct from stream buffer pointer

	push	-1
	push	__ehhandler$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+32], esi
	xor	eax, eax
	mov	DWORD PTR $T619144[esp+32], eax
	cmp	DWORD PTR _$initVBases$[esp+28], eax
	je	SHORT $LN1@basic_istr
	mov	DWORD PTR [esi], OFFSET ??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR [esi+8], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+40], eax
	mov	DWORD PTR $T619144[esp+32], 1
$LN1@basic_istr:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]

; 33   : 		_Myios::init(_Strbuf, _Isstd);

	mov	ecx, DWORD PTR __Strbuf$[esp+28]
	mov	DWORD PTR [esi+edx], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR __Isstd$[esp+28]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, esi
	call	?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ; std::basic_ios<char,std::char_traits<char> >::init

; 34   : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 24					; 00000018H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z$0:
	mov	eax, DWORD PTR $T619144[ebp]
	and	eax, 1
	je	$LN5@basic_istr
	and	DWORD PTR $T619144[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN5@basic_istr:
	ret	0
__ehhandler$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::basic_istream<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\smart_ptr\shared_ptr.hpp
xdata$x	SEGMENT
__unwindtable$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ$1
	DD	01H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ$2
__ehfuncinfo$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\filtering_stream.hpp
xdata$x	ENDS
;	COMDAT ??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ
_TEXT	SEGMENT
$T619165 = -20						; size = 4
$T619266 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ PROC ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>, COMDAT

; 90   :     filtering_stream_base() : stream_type(0) { this->set_chain(&chain_); }

	push	-1
	push	__ehhandler$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR _this$[esp+36]
	xor	edi, edi
	mov	DWORD PTR $T619165[esp+40], edi
	mov	DWORD PTR [ebx+4], edi
	mov	DWORD PTR [ebx], OFFSET ??_7?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@6B@
	mov	DWORD PTR __$EHRec$[esp+48], 1
	lea	ebp, DWORD PTR [ebx+8]
	mov	eax, ebp
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax+4], edi
	mov	esi, DWORD PTR [ecx+4]
	add	esi, eax
	mov	ecx, esi
	mov	DWORD PTR $T619266[esp+40], eax
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	push	32					; 00000020H
	mov	ecx, esi
	mov	DWORD PTR [esi+40], edi
	mov	DWORD PTR [esi+44], edi
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	mov	BYTE PTR [esi+48], al
	cmp	DWORD PTR [esi+40], edi
	jne	SHORT $LN38@filtering_@5
	mov	eax, DWORD PTR [esi+8]
	or	eax, 4
	or	eax, 4
	push	edi
	push	eax
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN38@filtering_@5:
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR __$EHRec$[esp+48], 3
	mov	edx, DWORD PTR [ebp]
	mov	DWORD PTR [ebx], OFFSET ??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@23@@
	mov	eax, DWORD PTR [edx+4]
	lea	edi, DWORD PTR [ebx+16]
	mov	DWORD PTR [eax+ebx+8], OFFSET ??_7?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@
	call	??0?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@IAE@XZ ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>
	mov	DWORD PTR [ebx+4], edi
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [ecx+28], ebx
	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp-4]
	jmp	??1?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@iostreams@boost@@UAE@XZ
__unwindfunclet$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-24]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ ENDP ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ$0
__ehfuncinfo$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iostreams\filtering_stream.hpp
xdata$x	ENDS
;	COMDAT ??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ
_TEXT	SEGMENT
$T619298 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ PROC ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>, COMDAT

; 152  : BOOST_IOSTREAMS_DEFINE_FILTER_STREAM(filtering_stream, boost::iostreams::chain, char)

	push	-1
	push	__ehhandler$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	xor	eax, eax
	mov	DWORD PTR $T619298[esp+24], eax
	mov	DWORD PTR [esi+8], OFFSET ??_8?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@7B@
	mov	DWORD PTR [esi+24], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+32], eax
	push	esi
	mov	DWORD PTR $T619298[esp+28], 1
	call	??0?$filtering_stream_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@Upublic_@23@@detail@iostreams@boost@@IAE@XZ ; boost::iostreams::detail::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>::filtering_stream_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,boost::iostreams::public_>
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], OFFSET ??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$access_control@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@Upublic_@34@U?$pub_@V?$chain_client@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@@detail@iostreams@boost@@@234@@12@@
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi+8], OFFSET ??_7?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@6B?$basic_istream@DU?$char_traits@D@std@@@std@@@
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ$0:
	mov	eax, DWORD PTR $T619298[ebp]
	and	eax, 1
	je	$LN5@filtering_@6
	and	DWORD PTR $T619298[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 24					; 00000018H
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN5@filtering_@6:
	ret	0
__ehhandler$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ ENDP ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$11 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$0
__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$11
__ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z
	DD	01H
	DD	FLAT:__tryblocktable$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
xdata$x	ENDS
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z
_TEXT	SEGMENT
$T619324 = -48						; size = 8
$T619323 = -48						; size = 8
__Ok$ = -40						; size = 8
__Nput_fac$149179 = -32					; size = 4
$T619372 = -28						; size = 1
__Lock$619358 = -28					; size = 4
$T619320 = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
__Val$ = 12						; size = 4
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT

; 391  : 		{	// insert a float

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR _this$[ebp]

; 392  : 		ios_base::iostate _State = ios_base::goodbit;

	xor	edi, edi

; 393  : 		const sentry _Ok(*this);

	push	esi
	lea	ecx, DWORD PTR __Ok$[ebp]
	mov	DWORD PTR __State$[ebp], edi
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], edi

; 394  : 
; 395  : 		if (_Ok)

	cmp	BYTE PTR __Ok$[ebp+4], 0
	je	$LN13@operator@399

; 396  : 			{	// state okay, use facet to insert
; 397  : 			const _Nput& _Nput_fac = _USE(ios_base::getloc(), _Nput);

	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR $T619320[ebp]
	push	eax
	add	ecx, esi
	call	?getloc@ios_base@std@@QBE?AVlocale@2@XZ	; std::ios_base::getloc
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@ABVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	ebx, DWORD PTR $T619320[ebp]
	mov	DWORD PTR __Nput_fac$149179[ebp], eax
	test	ebx, ebx
	je	SHORT $LN19@operator@399
	push	0
	lea	ecx, DWORD PTR __Lock$619358[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	jbe	SHORT $LN21@operator@399
	cmp	eax, -1
	jae	SHORT $LN21@operator@399
	dec	eax
	mov	DWORD PTR [ebx+4], eax
$LN21@operator@399:
	mov	edi, DWORD PTR [ebx+4]
	neg	edi
	sbb	edi, edi
	not	edi
	lea	ecx, DWORD PTR __Lock$619358[ebp]
	and	edi, ebx
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	edi, edi
	je	SHORT $LN19@operator@399
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, edi
	call	eax
$LN19@operator@399:

; 398  : 
; 399  : 			_TRY_IO_BEGIN
; 400  : 			if (_Nput_fac.put(_Iter(_Myios::rdbuf()), *this,
; 401  : 				_Myios::fill(), (double)_Val).failed())

	movss	xmm0, DWORD PTR __Val$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+esi+40]
	add	ecx, esi
	sub	esp, 8
	mov	BYTE PTR $T619323[ebp], 0
	mov	cl, BYTE PTR [ecx+48]
	mov	BYTE PTR $T619372[ebp], cl
	mov	ebx, DWORD PTR $T619372[ebp]
	mov	ecx, DWORD PTR __Nput_fac$149179[ebp]
	mov	edi, DWORD PTR [ecx]
	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR [esp], xmm0
	push	ebx
	add	eax, esi
	push	eax
	push	edx
	mov	edx, DWORD PTR $T619323[ebp]
	push	edx
	mov	edx, DWORD PTR [edi+12]
	lea	eax, DWORD PTR $T619324[ebp]
	push	eax
	call	edx
	cmp	BYTE PTR $T619324[ebp], 0
	je	SHORT $LN1@operator@399

; 402  : 				_State |= ios_base::badbit;

	mov	DWORD PTR __State$[ebp], 4
$LN1@operator@399:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN13@operator@399
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$0:

; 403  : 			_CATCH_IO_END

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	or	eax, 4
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN42@operator@399
	or	eax, 4
$LN42@operator@399:
	push	1
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN79@operator@399
	ret	0
$LN79@operator@399:
	mov	esi, DWORD PTR _this$[ebp]
$LN13@operator@399:

; 404  : 			}
; 405  : 
; 406  : 		_Myios::setstate(_State);

	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __State$[ebp]
	add	ecx, esi
	test	edx, edx
	je	SHORT $LN71@operator@399
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edx
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN73@operator@399
	or	eax, 4
$LN73@operator@399:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN71@operator@399:

; 407  : 		return (*this);

	lea	ecx, DWORD PTR __Ok$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, esi

; 408  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__unwindfunclet$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z$3:
	lea	ecx, DWORD PTR $T619320[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z ; DRAMsimII::InputStream::InputStream
__unwindtable$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$0
__ehfuncinfo$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_rhs$ = 12						; size = 4
??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z PROC ; DRAMsimII::InputStream::InputStream
; _systemConfigVal$ = ecx
; _systemChannel$ = edx

; 251  : {}

	push	-1
	push	__ehhandler$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _rhs$[esp+28]
	mov	esi, DWORD PTR _this$[esp+28]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ecx
	mov	DWORD PTR [esi+8], edx
	fld	DWORD PTR [edi+12]
	fstp	DWORD PTR [esi+12]
	xor	ebx, ebx
	fld	DWORD PTR [edi+16]
	fstp	DWORD PTR [esi+16]
	fld	DWORD PTR [edi+20]
	fstp	DWORD PTR [esi+20]
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+24], eax
	mov	ecx, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], ecx
	fld	DWORD PTR [edi+32]
	fstp	DWORD PTR [esi+32]
	fld	DWORD PTR [edi+36]
	fstp	DWORD PTR [esi+36]
	fld	DWORD PTR [edi+40]
	fstp	DWORD PTR [esi+40]
	fld	DWORD PTR [edi+44]
	fstp	DWORD PTR [esi+44]
	fld	DWORD PTR [edi+48]
	fstp	DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edi+52]
	mov	DWORD PTR [esi+52], edx
	mov	eax, DWORD PTR [edi+56]
	mov	DWORD PTR [esi+56], eax
	mov	DWORD PTR [esi+84], 15			; 0000000fH
	mov	DWORD PTR [esi+80], ebx
	mov	BYTE PTR [esi+64], bl
	lea	ecx, DWORD PTR [esi+88]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+44], ebx
	call	??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
	push	4996					; 00001384H
	lea	edx, DWORD PTR [edi+164]
	push	edx
	lea	eax, DWORD PTR [esi+164]
	push	eax
	call	_memcpy
	movq	xmm0, QWORD PTR [edi+5160]
	movq	QWORD PTR [esi+5160], xmm0
	movq	xmm0, QWORD PTR [edi+5168]
	movq	QWORD PTR [esi+5168], xmm0
	movq	xmm0, QWORD PTR [edi+5176]
	movq	QWORD PTR [esi+5176], xmm0
	mov	ecx, DWORD PTR [edi+5184]
	mov	DWORD PTR [esi+5184], ecx
	fld	QWORD PTR [edi+5192]
	fstp	QWORD PTR [esi+5192]
	lea	ebp, DWORD PTR [edi+5288]
	fld	QWORD PTR [edi+5200]
	mov	BYTE PTR [esi+5232], bl
	fstp	QWORD PTR [esi+5200]
	movq	xmm0, QWORD PTR [edi+5240]
	movq	QWORD PTR [esi+5240], xmm0
	movq	xmm0, QWORD PTR [edi+5248]
	movq	QWORD PTR [esi+5248], xmm0
	movq	xmm0, QWORD PTR [edi+5256]
	movq	QWORD PTR [esi+5256], xmm0
	movq	xmm0, QWORD PTR [edi+5264]
	movq	QWORD PTR [esi+5264], xmm0
	movq	xmm0, QWORD PTR [edi+5272]
	movq	QWORD PTR [esi+5272], xmm0
	movq	xmm0, QWORD PTR [edi+5280]
	push	5008					; 00001390H
	lea	edi, DWORD PTR [esi+5288]
	push	ebp
	push	edi
	movq	QWORD PTR [esi+5280], xmm0
	call	_memcpy
	fld	QWORD PTR [ebp+5008]
	fstp	QWORD PTR [edi+5008]
	add	esp, 24					; 00000018H
	fld	QWORD PTR [ebp+5016]
	mov	BYTE PTR [edi+5048], bl
	fstp	QWORD PTR [edi+5016]
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	8
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 60					; 0000003cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
??0InputStream@DRAMsimII@@QAE@ABV01@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z ENDP ; DRAMsimII::InputStream::InputStream
PUBLIC	??0InputStream@DRAMsimII@@QAE@ABV01@@Z		; DRAMsimII::InputStream::InputStream
__unwindtable$??0InputStream@DRAMsimII@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABV01@@Z$0
__ehfuncinfo$??0InputStream@DRAMsimII@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InputStream@DRAMsimII@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0InputStream@DRAMsimII@@QAE@ABV01@@Z PROC		; DRAMsimII::InputStream::InputStream
; _rhs$ = ecx

; 226  : {}

	push	-1
	push	__ehhandler$??0InputStream@DRAMsimII@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	esi, DWORD PTR _this$[esp+28]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], edx
	fld	DWORD PTR [edi+12]
	fstp	DWORD PTR [esi+12]
	xor	ebx, ebx
	fld	DWORD PTR [edi+16]
	fstp	DWORD PTR [esi+16]
	fld	DWORD PTR [edi+20]
	fstp	DWORD PTR [esi+20]
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+24], eax
	mov	ecx, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], ecx
	fld	DWORD PTR [edi+32]
	fstp	DWORD PTR [esi+32]
	fld	DWORD PTR [edi+36]
	fstp	DWORD PTR [esi+36]
	fld	DWORD PTR [edi+40]
	fstp	DWORD PTR [esi+40]
	fld	DWORD PTR [edi+44]
	fstp	DWORD PTR [esi+44]
	fld	DWORD PTR [edi+48]
	fstp	DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edi+52]
	mov	DWORD PTR [esi+52], edx
	mov	eax, DWORD PTR [edi+56]
	mov	DWORD PTR [esi+56], eax
	mov	DWORD PTR [esi+84], 15			; 0000000fH
	mov	DWORD PTR [esi+80], ebx
	mov	BYTE PTR [esi+64], bl
	lea	ecx, DWORD PTR [esi+88]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+44], ebx
	call	??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
	push	4996					; 00001384H
	lea	edx, DWORD PTR [edi+164]
	push	edx
	lea	eax, DWORD PTR [esi+164]
	push	eax
	call	_memcpy
	movq	xmm0, QWORD PTR [edi+5160]
	movq	QWORD PTR [esi+5160], xmm0
	movq	xmm0, QWORD PTR [edi+5168]
	movq	QWORD PTR [esi+5168], xmm0
	movq	xmm0, QWORD PTR [edi+5176]
	movq	QWORD PTR [esi+5176], xmm0
	mov	ecx, DWORD PTR [edi+5184]
	mov	DWORD PTR [esi+5184], ecx
	fld	QWORD PTR [edi+5192]
	fstp	QWORD PTR [esi+5192]
	lea	ebp, DWORD PTR [edi+5288]
	fld	QWORD PTR [edi+5200]
	mov	BYTE PTR [esi+5232], bl
	fstp	QWORD PTR [esi+5200]
	movq	xmm0, QWORD PTR [edi+5240]
	movq	QWORD PTR [esi+5240], xmm0
	movq	xmm0, QWORD PTR [edi+5248]
	movq	QWORD PTR [esi+5248], xmm0
	movq	xmm0, QWORD PTR [edi+5256]
	movq	QWORD PTR [esi+5256], xmm0
	movq	xmm0, QWORD PTR [edi+5264]
	movq	QWORD PTR [esi+5264], xmm0
	movq	xmm0, QWORD PTR [edi+5272]
	movq	QWORD PTR [esi+5272], xmm0
	movq	xmm0, QWORD PTR [edi+5280]
	push	5008					; 00001390H
	lea	edi, DWORD PTR [esi+5288]
	push	ebp
	push	edi
	movq	QWORD PTR [esi+5280], xmm0
	call	_memcpy
	fld	QWORD PTR [ebp+5008]
	fstp	QWORD PTR [edi+5008]
	add	esp, 24					; 00000018H
	fld	QWORD PTR [ebp+5016]
	fstp	QWORD PTR [edi+5016]
	mov	BYTE PTR [edi+5048], bl
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	4
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 60					; 0000003cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0InputStream@DRAMsimII@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0InputStream@DRAMsimII@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
??0InputStream@DRAMsimII@@QAE@ABV01@@Z ENDP		; DRAMsimII::InputStream::InputStream
PUBLIC	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4InputType@InputStream@0@@Z ; DRAMsimII::operator<<
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4InputType@InputStream@0@@Z PROC ; DRAMsimII::operator<<
; _os$ = esi
; _it$ = eax

; 750  : 	switch (it)

	cmp	eax, 6
	ja	SHORT $LN1@operator@424
	jmp	DWORD PTR $LN14@operator@424[eax*4]
$LN8@operator@424:

; 751  : 	{
; 752  : 	case InputStream::K6_TRACE:
; 753  : 		os << "k6";

	push	OFFSET ??_C@_02MNCAJDFJ@k6?$AA@

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN7@operator@424:

; 754  : 		break;
; 755  : 	case InputStream::MASE_TRACE:
; 756  : 		os << "mase";

	push	OFFSET ??_C@_04JFNIGCJD@mase?$AA@

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN6@operator@424:

; 757  : 		break;
; 758  : 	case InputStream::RANDOM:
; 759  : 		os << "random";

	push	OFFSET ??_C@_06NLFCANPD@random?$AA@

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN5@operator@424:

; 760  : 		break;
; 761  : 	case InputStream::MAPPED:
; 762  : 		os << "mapped";

	push	OFFSET ??_C@_06JGDKDGGA@mapped?$AA@

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN4@operator@424:

; 763  : 		break;
; 764  : 	case InputStream::ALPHASIM:
; 765  : 		os << "alphasim";

	push	OFFSET ??_C@_08JHOICCJE@alphasim?$AA@

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN3@operator@424:

; 766  : 		break;
; 767  : 	case InputStream::GEMS:
; 768  : 		os << "gems";

	push	OFFSET ??_C@_04FKCKNGMI@gems?$AA@

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN2@operator@424:

; 769  : 		break;
; 770  : 	case InputStream::DRAMSIM:
; 771  : 		os << "ds2";

	push	OFFSET ??_C@_03NBDIMCMP@ds2?$AA@

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN1@operator@424:

; 772  : 		break;
; 773  : 	default:
; 774  : 		os << "unknown";

	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 775  : 		break;
; 776  : 	}
; 777  : 
; 778  : 	return os;

	mov	eax, esi
	add	esp, 8

; 779  : }

	ret	0
$LN14@operator@424:
	DD	$LN8@operator@424
	DD	$LN7@operator@424
	DD	$LN6@operator@424
	DD	$LN5@operator@424
	DD	$LN4@operator@424
	DD	$LN3@operator@424
	DD	$LN2@operator@424
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4InputType@InputStream@0@@Z ENDP ; DRAMsimII::operator<<
_TEXT	ENDS
PUBLIC	__real@41200000
PUBLIC	__real@4020000000000000
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; DRAMsimII::InputStream::InputStream
;	COMDAT __real@41200000
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
__ehfuncinfo$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$8
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
tv916 = -140						; size = 4
tv887 = -140						; size = 4
tv880 = -140						; size = 4
$T638304 = -140						; size = 8
$T638301 = -140						; size = 4
$T638298 = -140						; size = 4
$T638305 = -132						; size = 28
$T638303 = -132						; size = 28
_this$GSCopy$ = -104					; size = 4
$T638302 = -100						; size = 28
_inFileWithPath$147962 = -72				; size = 28
_cwd$147959 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_systemConfig$ = 12					; size = 4
_arrivalDistributionModel$ = 16				; size = 4
_filename$ = 20						; size = 28
??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z PROC ; DRAMsimII::InputStream::InputStream
; _systemChannel$ = ecx
; _avgInterarrivalCycles$ = edx

; 163  : {

	push	-1
	push	__ehhandler$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+140], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+160]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _this$[esp+156]
	mov	DWORD PTR _this$GSCopy$[esp+160], ebp
	mov	eax, DWORD PTR _systemConfig$[esp+156]
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+168], edi
	mov	DWORD PTR [ebp+4], eax
	mov	eax, DWORD PTR _arrivalDistributionModel$[esp+156]
	lea	ebx, DWORD PTR [ebp+60]
	mov	DWORD PTR [ebp+8], ecx
	mov	DWORD PTR [ebp+52], edx
	mov	DWORD PTR [ebp+56], eax
	mov	DWORD PTR [ebx+24], 15			; 0000000fH
	mov	DWORD PTR [ebx+20], edi
	mov	BYTE PTR [ebx+4], 0
	lea	ecx, DWORD PTR [ebp+88]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+172], 1
	call	??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
	push	edi
	mov	BYTE PTR __$EHRec$[esp+172], 2
	call	__time64
	mov	DWORD PTR $T638298[esp+164], eax
	lea	esi, DWORD PTR [ebp+164]
	add	esp, 4
	lea	ecx, DWORD PTR $T638298[esp+160]
	mov	eax, esi
	call	?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::seed
	xorps	xmm0, xmm0
	movsd	QWORD PTR [ebp+5160], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ebp+5168], xmm0
	mov	eax, 16383				; 00003fffH
	mov	DWORD PTR [ebp+5176], edi
	mov	DWORD PTR [ebp+5180], eax
	mov	DWORD PTR [ebp+5184], eax
	fild	DWORD PTR [ebp+52]
	mov	edx, DWORD PTR [ebp+52]
	test	edx, edx
	jge	SHORT $LN251@InputStrea@2
	fadd	QWORD PTR __real@41f0000000000000
$LN251@InputStrea@2:
	movsd	xmm0, QWORD PTR __real@4020000000000000
	fstp	QWORD PTR [ebp+5192]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	movsd	QWORD PTR [ebp+5200], xmm0
	mov	BYTE PTR [ebp+5232], 0
	movq	xmm0, QWORD PTR [ebp+5160]
	movq	QWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ebp+5168]
	movq	QWORD PTR [eax+8], xmm0
	lea	eax, DWORD PTR [ebp+5240]
	mov	ecx, esi
	call	??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_real@N@1@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >
	mov	eax, DWORD PTR [ebp+5184]
	movq	xmm0, QWORD PTR [ebp+5176]
	movq	QWORD PTR [ebp+5276], xmm0
	mov	DWORD PTR [ebp+5284], eax
	mov	DWORD PTR [ebp+5272], esi
	fld	QWORD PTR [ebp+5192]
	sub	esp, 48					; 00000030H
	mov	eax, esp
	fstp	QWORD PTR [eax]
	mov	DWORD PTR $T638301[esp+208], esp
	fld	QWORD PTR [ebp+5200]
	mov	BYTE PTR [eax+40], 0
	fstp	QWORD PTR [eax+8]
	mov	eax, 4996				; 00001384H
	call	__chkstk
	mov	edi, esp
	lea	eax, DWORD PTR [ebp+5288]
	mov	ecx, 1249				; 000004e1H
	push	eax
	rep movsd
	call	??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$normal_distribution@N@1@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >

; 164  : 	using namespace boost::algorithm;
; 165  : 	using boost::iostreams::file_source;
; 166  : 	if (interarrivalDistributionModel == UNIFORM_DISTRIBUTION)

	mov	eax, DWORD PTR [ebp+56]
	test	eax, eax
	jne	$LN7@InputStrea@2

; 167  : 		arrivalThreshold = 1.0 - (1.0 / (double)averageInterarrivalCycleCount);

	mov	ecx, DWORD PTR [ebp+52]
	fild	DWORD PTR [ebp+52]
	test	ecx, ecx
	jge	SHORT $LN252@InputStrea@2
	fadd	QWORD PTR __real@41f0000000000000
$LN252@InputStrea@2:
	fld1
	fld	ST(0)
	fdivrp	ST(2), ST(0)
	fsubrp	ST(1), ST(0)
	fstp	DWORD PTR [ebp+44]
$LN249@InputStrea@2:

; 169  : 		arrivalThreshold = 1.0 - (1.0 / boxMuller((double)averageInterarrivalCycleCount, 10));

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
$LN5@InputStrea@2:

; 170  : 	if (arrivalThreshold > 1.0F)

	movss	xmm1, DWORD PTR [ebp+44]
	comiss	xmm1, DWORD PTR __real@3f800000
	jbe	SHORT $LN4@InputStrea@2

; 171  : 		arrivalThreshold = 1.0F / arrivalThreshold;

	cvtps2pd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtpd2ps xmm0, xmm0
	movss	DWORD PTR [ebp+44], xmm0
$LN4@InputStrea@2:

; 172  : 
; 173  : 	if (!traceFilename.empty() && (type != RANDOM))

	cmp	DWORD PTR [ebp+80], 0
	mov	edi, 16					; 00000010H
	je	$LN2@InputStrea@2
	cmp	DWORD PTR [ebp], 2
	je	$LN2@InputStrea@2

; 174  : 	{
; 175  : 		//traceFile.open(settings.inFile.c_str());
; 176  : 
; 177  : 		if (!traceFile.good())

	mov	eax, DWORD PTR [ebp+96]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+ebp+104], 0
	je	$LN2@InputStrea@2

; 178  : 		{
; 179  : 			boost::filesystem::path cwd(boost::filesystem::current_path());

	lea	eax, DWORD PTR _cwd$147959[esp+160]
	call	?current_path@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@XZ ; boost::filesystem::current_path

; 180  : 			cwd = cwd / "traceFiles" / traceFilename;

	lea	edx, DWORD PTR _cwd$147959[esp+160]
	push	edx
	lea	esi, DWORD PTR $T638302[esp+164]
	mov	BYTE PTR __$EHRec$[esp+172], 3
	call	??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	push	ebx
	push	eax
	lea	eax, DWORD PTR $T638303[esp+172]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+184], 4
	call	??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	add	esp, 16					; 00000010H
	push	-1
	xor	esi, esi
	push	esi
	push	eax
	lea	ecx, DWORD PTR _cwd$147959[esp+172]
	mov	BYTE PTR __$EHRec$[esp+180], 5
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T638303[esp+184], edi
	jb	SHORT $LN105@InputStrea@2
	mov	ecx, DWORD PTR $T638303[esp+164]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN105@InputStrea@2:
	mov	BYTE PTR __$EHRec$[esp+168], 3
	mov	DWORD PTR $T638303[esp+184], 15		; 0000000fH
	mov	DWORD PTR $T638303[esp+180], esi
	mov	BYTE PTR $T638303[esp+164], 0
	cmp	DWORD PTR $T638302[esp+184], edi
	jb	SHORT $LN133@InputStrea@2
	mov	edx, DWORD PTR $T638302[esp+164]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN133@InputStrea@2:

; 181  : 			string inFileWithPath = cwd.string();

	push	-1
	push	esi
	lea	eax, DWORD PTR _cwd$147959[esp+168]
	push	eax
	lea	ecx, DWORD PTR _inFileWithPath$147962[esp+172]
	mov	DWORD PTR _inFileWithPath$147962[esp+196], 15 ; 0000000fH
	mov	DWORD PTR _inFileWithPath$147962[esp+192], esi
	mov	BYTE PTR _inFileWithPath$147962[esp+176], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	BYTE PTR __$EHRec$[esp+168], 6

; 182  : #ifndef WIN32
; 183  : 			if (ends_with(traceFilename,"gz"))
; 184  : 				traceFile.push(gzip_decompressor());
; 185  : 			else if (ends_with(traceFilename,"bz2") || ends_with(traceFilename,"bz"))
; 186  : 				traceFile.push(bzip2_decompressor());
; 187  : #endif
; 188  : 
; 189  : 			traceFile.push(file_source(inFileWithPath.c_str()));

	mov	eax, DWORD PTR _inFileWithPath$147962[esp+164]
	cmp	DWORD PTR _inFileWithPath$147962[esp+184], edi
	jae	SHORT $LN176@InputStrea@2
	lea	eax, DWORD PTR _inFileWithPath$147962[esp+164]
$LN176@InputStrea@2:
	push	eax
	lea	ecx, DWORD PTR $T638305[esp+164]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR $T638305[esp+160]
	push	ecx
	lea	edx, DWORD PTR $T638304[esp+164]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+176], 7
	call	??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
	mov	BYTE PTR __$EHRec$[esp+168], 8
	mov	ecx, DWORD PTR [ebp+92]
	push	eax
	push	ecx
	call	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
	lea	eax, DWORD PTR $T638304[esp+160]
	mov	BYTE PTR __$EHRec$[esp+168], 7
	call	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
	mov	BYTE PTR __$EHRec$[esp+168], 6
	cmp	DWORD PTR $T638305[esp+184], edi
	jb	SHORT $LN203@InputStrea@2
	mov	eax, DWORD PTR $T638305[esp+164]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN203@InputStrea@2:

; 190  : 
; 191  : 			if (!traceFile.is_complete())

	mov	ecx, DWORD PTR [ebp+92]
	mov	edx, DWORD PTR [ecx]
	test	BYTE PTR [edx+44], 1
	jne	$LN1@InputStrea@2

; 192  : 			{
; 193  : 				cerr << "Unable to open trace file \"" << traceFilename << "\"" << endl;

	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	push	ebx
	push	OFFSET ??_C@_0BM@MLMDDFBP@Unable?5to?5open?5trace?5file?5?$CC?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 194  : 				exit(-9);

	push	-9					; fffffff7H
	call	_exit
$LN255@InputStrea@2:
$LN7@InputStrea@2:

; 168  : 	else if (interarrivalDistributionModel == GAUSSIAN_DISTRIBUTION)

	cmp	eax, 1
	jne	$LN249@InputStrea@2

; 169  : 		arrivalThreshold = 1.0 - (1.0 / boxMuller((double)averageInterarrivalCycleCount, 10));

	fld	DWORD PTR __real@41200000
	mov	edx, DWORD PTR [ebp+52]
	sub	esp, 8
	fstp	DWORD PTR [esp+4]
	fild	DWORD PTR [ebp+52]
	test	edx, edx
	jge	SHORT $LN253@InputStrea@2
	fadd	DWORD PTR __real@4f800000
$LN253@InputStrea@2:
	mov	eax, ebp
	fstp	DWORD PTR [esp]
	call	?boxMuller@InputStream@DRAMsimII@@QBEMMM@Z ; DRAMsimII::InputStream::boxMuller
	cvtss2sd xmm1, xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movapd	xmm2, xmm0
	divsd	xmm2, xmm1
	movapd	xmm1, xmm0
	subsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	movss	DWORD PTR [ebp+44], xmm1
	jmp	$LN5@InputStrea@2
$LN1@InputStrea@2:

; 195  : 			}
; 196  : 		}

	lea	ecx, DWORD PTR _inFileWithPath$147962[esp+160]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR _cwd$147959[esp+160]
	call	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
$LN2@InputStrea@2:

; 197  : 	}
; 198  : }

	cmp	DWORD PTR _filename$[esp+180], edi
	jb	SHORT $LN239@InputStrea@2
	mov	eax, DWORD PTR _filename$[esp+160]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN239@InputStrea@2:
	mov	eax, ebp
	mov	ecx, DWORD PTR __$EHRec$[esp+160]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+140]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 140				; 0000008cH
	ret	40					; 00000028H
$LN254@InputStrea@2:
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp-4]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$1:
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$2:
	mov	esi, DWORD PTR _this$GSCopy$[ebp]
	add	esi, 88					; 00000058H
	jmp	??_D?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAEXXZ
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$3:
	lea	ecx, DWORD PTR _cwd$147959[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$4:
	lea	ecx, DWORD PTR $T638302[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$5:
	lea	ecx, DWORD PTR $T638303[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$6:
	lea	ecx, DWORD PTR _inFileWithPath$147962[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$7:
	lea	ecx, DWORD PTR $T638305[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$8:
	lea	eax, DWORD PTR $T638304[ebp]
	jmp	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
__ehhandler$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-144]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
	jmp	___CxxFrameHandler3
??0InputStream@DRAMsimII@@AAE@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@IW4DistributionType@01@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ENDP ; DRAMsimII::InputStream::InputStream
PUBLIC	__real@3e112e0be826d695
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z ; DRAMsimII::InputStream::InputStream
;	COMDAT __real@3e112e0be826d695
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
CONST	SEGMENT
__real@3e112e0be826d695 DQ 03e112e0be826d695r	; 1e-009
__unwindtable$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$9
	DD	02H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$11
	DD	02H
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$13
__ehfuncinfo$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
tv1240 = -152						; size = 4
tv1235 = -152						; size = 4
tv1230 = -152						; size = 4
tv1225 = -152						; size = 4
tv1217 = -152						; size = 4
tv1204 = -152						; size = 4
tv1175 = -152						; size = 4
tv1168 = -152						; size = 4
$T639251 = -152						; size = 4
$T639248 = -152						; size = 4
tv1004 = -148						; size = 4
$T639261 = -144						; size = 8
$T639259 = -144						; size = 8
$T639257 = -144						; size = 8
$T639262 = -136						; size = 28
$T639260 = -136						; size = 28
$T639255 = -136						; size = 28
$T639252 = -136						; size = 28
$T639256 = -108						; size = 28
$T639253 = -108						; size = 28
_this$GSCopy$ = -80					; size = 4
$T639258 = -76						; size = 28
$T639254 = -76						; size = 28
_inFileWithPath$147511 = -48				; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_settings$ = 12						; size = 4
_systemChannel$ = 16					; size = 4
??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z PROC ; DRAMsimII::InputStream::InputStream
; _systemConfigVal$ = edx

; 86   : {

	push	-1
	push	__ehhandler$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+156], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+176]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _settings$[esp+172]
	mov	ebp, DWORD PTR _this$[esp+172]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR [ebp], ecx
	mov	ecx, DWORD PTR _systemChannel$[esp+172]
	mov	DWORD PTR [ebp+4], edx
	mov	DWORD PTR [ebp+8], ecx
	fild	DWORD PTR [eax+300]
	mov	edx, DWORD PTR [eax+300]
	mov	DWORD PTR _this$GSCopy$[esp+176], ebp
	test	edx, edx
	jge	SHORT $LN330@InputStrea@3
	fadd	DWORD PTR __real@4f800000
$LN330@InputStrea@3:
	fld1
	fld	ST(0)
	fdivrp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [ebp+12]
	fild	DWORD PTR [eax+304]
	mov	ecx, DWORD PTR [eax+304]
	test	ecx, ecx
	jge	SHORT $LN331@InputStrea@3
	fadd	DWORD PTR __real@4f800000
$LN331@InputStrea@3:
	fdivr	ST(0), ST(1)
	fstp	DWORD PTR [ebp+16]
	fild	DWORD PTR [eax+308]
	mov	edx, DWORD PTR [eax+308]
	test	edx, edx
	jge	SHORT $LN332@InputStrea@3
	fadd	DWORD PTR __real@4f800000
$LN332@InputStrea@3:
	fdivr	ST(0), ST(1)
	xor	esi, esi
	mov	DWORD PTR [ebp+24], esi
	mov	DWORD PTR [ebp+28], esi
	fstp	DWORD PTR [ebp+20]
	fild	DWORD PTR [eax+240]
	mov	ecx, DWORD PTR [eax+240]
	test	ecx, ecx
	jge	SHORT $LN333@InputStrea@3
	fadd	DWORD PTR __real@4f800000
$LN333@InputStrea@3:
	fdivp	ST(1), ST(0)
	xorps	xmm0, xmm0
	fstp	DWORD PTR [ebp+32]
	fld	DWORD PTR [eax+316]
	fstp	DWORD PTR [ebp+36]
	fld	DWORD PTR [eax+312]
	fstp	DWORD PTR [ebp+40]
	movss	DWORD PTR [ebp+44], xmm0
	fild	DWORD PTR [eax+204]
	mov	edx, DWORD PTR [eax+204]
	test	edx, edx
	jge	SHORT $LN334@InputStrea@3
	fadd	QWORD PTR __real@41f0000000000000
$LN334@InputStrea@3:
	fmul	QWORD PTR __real@3e112e0be826d695
	lea	edi, DWORD PTR [eax+192]
	push	-1
	lea	ebx, DWORD PTR [ebp+60]
	fstp	DWORD PTR [ebp+48]
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [ebp+52], ecx
	mov	edx, DWORD PTR [eax+88]
	mov	DWORD PTR [ebp+56], edx
	add	eax, 32					; 00000020H
	push	esi
	mov	DWORD PTR [ebx+24], 15			; 0000000fH
	mov	DWORD PTR [ebx+20], esi
	push	eax
	mov	ecx, ebx
	mov	DWORD PTR tv1004[esp+188], eax
	mov	BYTE PTR [ebx+4], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR [ebp+88]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+188], esi
	call	??0?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAE@XZ ; boost::iostreams::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>::filtering_stream<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::public_>
	push	esi
	mov	BYTE PTR __$EHRec$[esp+188], 1
	call	__time64
	mov	DWORD PTR $T639248[esp+180], eax
	lea	esi, DWORD PTR [ebp+164]
	add	esp, 4
	lea	ecx, DWORD PTR $T639248[esp+176]
	mov	eax, esi
	call	?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::seed
	xorps	xmm0, xmm0
	movsd	QWORD PTR [ebp+5160], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ebp+5168], xmm0
	mov	eax, 16383				; 00003fffH
	mov	DWORD PTR [ebp+5176], 0
	mov	DWORD PTR [ebp+5180], eax
	mov	DWORD PTR [ebp+5184], eax
	fild	DWORD PTR [edi]
	mov	ecx, DWORD PTR [edi]
	test	ecx, ecx
	jge	SHORT $LN335@InputStrea@3
	fadd	QWORD PTR __real@41f0000000000000
$LN335@InputStrea@3:
	movsd	xmm0, QWORD PTR __real@4020000000000000
	fstp	QWORD PTR [ebp+5192]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	movsd	QWORD PTR [ebp+5200], xmm0
	mov	BYTE PTR [ebp+5232], 0
	movq	xmm0, QWORD PTR [ebp+5160]
	movq	QWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ebp+5168]
	movq	QWORD PTR [eax+8], xmm0
	lea	eax, DWORD PTR [ebp+5240]
	mov	ecx, esi
	call	??0?$variate_generator@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$uniform_real@N@3@@boost@@QAE@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$uniform_real@N@1@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &,boost::uniform_real<double> >
	mov	eax, DWORD PTR [ebp+5184]
	movq	xmm0, QWORD PTR [ebp+5176]
	movq	QWORD PTR [ebp+5276], xmm0
	mov	DWORD PTR [ebp+5284], eax
	mov	DWORD PTR [ebp+5272], esi
	fld	QWORD PTR [ebp+5192]
	sub	esp, 48					; 00000030H
	mov	eax, esp
	fstp	QWORD PTR [eax]
	mov	DWORD PTR $T639251[esp+224], esp
	fld	QWORD PTR [ebp+5200]
	mov	BYTE PTR [eax+40], 0
	fstp	QWORD PTR [eax+8]
	mov	eax, 4996				; 00001384H
	call	__chkstk
	mov	edi, esp
	lea	edx, DWORD PTR [ebp+5288]
	mov	ecx, 1249				; 000004e1H
	push	edx
	rep movsd
	call	??0?$variate_generator@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@V?$normal_distribution@N@3@@boost@@QAE@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@1@V?$normal_distribution@N@1@@Z ; boost::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >::variate_generator<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>,boost::normal_distribution<double> >

; 87   : 	using boost::iostreams::file_source;
; 88   : 	using namespace boost::filesystem;
; 89   : 	using boost::algorithm::ends_with;
; 90   : 
; 91   : 	if (interarrivalDistributionModel == UNIFORM_DISTRIBUTION)

	mov	eax, DWORD PTR [ebp+56]
	test	eax, eax
	jne	$LN17@InputStrea@3

; 92   : 		arrivalThreshold = 1.0 - (1.0 / (double)averageInterarrivalCycleCount);

	mov	eax, DWORD PTR [ebp+52]
	fild	DWORD PTR [ebp+52]
	test	eax, eax
	jge	SHORT $LN336@InputStrea@3
	fadd	QWORD PTR __real@41f0000000000000
$LN336@InputStrea@3:
	fld1
	fld	ST(0)
	fdivrp	ST(2), ST(0)
	fsubrp	ST(1), ST(0)
	fstp	DWORD PTR [ebp+44]
$LN328@InputStrea@3:

; 94   : 		arrivalThreshold = 1.0 - (1.0 / boxMuller((double)averageInterarrivalCycleCount, 10));	

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
$LN15@InputStrea@3:

; 95   : 	if (arrivalThreshold > 1.0F)

	movss	xmm1, DWORD PTR [ebp+44]
	comiss	xmm1, DWORD PTR __real@3f800000
	jbe	SHORT $LN14@InputStrea@3

; 96   : 		arrivalThreshold = 1.0F / arrivalThreshold;

	cvtps2pd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtpd2ps xmm0, xmm0
	movss	DWORD PTR [ebp+44], xmm0
$LN14@InputStrea@3:

; 97   : 
; 98   : 	if (!traceFilename.empty() && (type != RANDOM))

	cmp	DWORD PTR [ebp+80], 0
	je	$LN12@InputStrea@3
	cmp	DWORD PTR [ebp], 2
	je	$LN12@InputStrea@3

; 99   : 	{
; 100  : 		if (!traceFile.is_complete() || !traceFile.good())

	mov	eax, DWORD PTR [ebp+92]
	mov	eax, DWORD PTR [eax]
	test	BYTE PTR [eax+44], 1
	je	SHORT $LN11@InputStrea@3
	mov	edx, DWORD PTR [ebp+96]
	mov	eax, DWORD PTR [edx+4]
	cmp	DWORD PTR [eax+ebp+104], 0
	je	$LN12@InputStrea@3
$LN11@InputStrea@3:

; 101  : 		{			
; 102  : #ifndef WIN32
; 103  : 			if (ends_with(traceFilename,"gz"))
; 104  : 				traceFile.push(gzip_decompressor());
; 105  : 			else if (ends_with(traceFilename,"bz2") || ends_with(traceFilename,"bz"))
; 106  : 				traceFile.push(bzip2_decompressor());
; 107  : #endif
; 108  : 			path inFileWithPath(traceFilename);

	push	ebx
	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+180]
	call	??0?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>

; 109  : 			// first check the absolute path
; 110  : 			if (!exists(inFileWithPath) || !is_regular(inFileWithPath))

	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 2
	call	??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::exists<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	test	al, al
	je	$LN9@InputStrea@3
	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+176]
	call	??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::is_regular<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	test	al, al
	je	$LN9@InputStrea@3

; 132  : 				}
; 133  : 			}
; 134  : 			else
; 135  : 			{
; 136  : 				traceFile.push(file_source(inFileWithPath.string().c_str()));

	cmp	DWORD PTR _inFileWithPath$147511[esp+200], 16 ; 00000010H
	mov	eax, DWORD PTR _inFileWithPath$147511[esp+180]
	jae	SHORT $LN307@InputStrea@3
	lea	eax, DWORD PTR _inFileWithPath$147511[esp+180]
$LN307@InputStrea@3:
	push	eax
	lea	ecx, DWORD PTR $T639262[esp+180]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR $T639262[esp+176]
	push	ecx
	lea	edx, DWORD PTR $T639261[esp+180]
	mov	bl, 12					; 0000000cH
	push	edx
	mov	BYTE PTR __$EHRec$[esp+192], bl
	call	??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
	mov	BYTE PTR __$EHRec$[esp+184], 13		; 0000000dH
	mov	ecx, DWORD PTR [ebp+92]
	push	eax
	push	ecx
	call	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
	lea	eax, DWORD PTR $T639261[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], bl
	call	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
	lea	ecx, DWORD PTR $T639262[esp+176]
	jmp	$LN339@InputStrea@3
$LN17@InputStrea@3:

; 93   : 	else if (interarrivalDistributionModel == GAUSSIAN_DISTRIBUTION)

	cmp	eax, 1
	jne	$LN328@InputStrea@3

; 94   : 		arrivalThreshold = 1.0 - (1.0 / boxMuller((double)averageInterarrivalCycleCount, 10));	

	fld	DWORD PTR __real@41200000
	mov	ecx, DWORD PTR [ebp+52]
	sub	esp, 8
	fstp	DWORD PTR [esp+4]
	fild	DWORD PTR [ebp+52]
	test	ecx, ecx
	jge	SHORT $LN337@InputStrea@3
	fadd	DWORD PTR __real@4f800000
$LN337@InputStrea@3:
	mov	eax, ebp
	fstp	DWORD PTR [esp]
	call	?boxMuller@InputStream@DRAMsimII@@QBEMMM@Z ; DRAMsimII::InputStream::boxMuller
	cvtss2sd xmm1, xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movapd	xmm2, xmm0
	divsd	xmm2, xmm1
	movapd	xmm1, xmm0
	subsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	movss	DWORD PTR [ebp+44], xmm1
	jmp	$LN15@InputStrea@3
$LN9@InputStrea@3:

; 111  : 			{
; 112  : 				inFileWithPath = current_path() / traceFilename;

	lea	eax, DWORD PTR $T639252[esp+176]
	call	?current_path@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@XZ ; boost::filesystem::current_path
	push	ebx
	push	eax
	lea	eax, DWORD PTR $T639253[esp+184]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+196], 3
	call	??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	add	esp, 12					; 0000000cH
	push	-1
	push	0
	push	eax
	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+188]
	mov	BYTE PTR __$EHRec$[esp+196], 4
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ebx, 16					; 00000010H
	cmp	DWORD PTR $T639253[esp+200], ebx
	jb	SHORT $LN124@InputStrea@3
	mov	ecx, DWORD PTR $T639253[esp+180]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN124@InputStrea@3:
	mov	edi, 15					; 0000000fH
	mov	BYTE PTR __$EHRec$[esp+184], 2
	mov	DWORD PTR $T639253[esp+200], edi
	mov	DWORD PTR $T639253[esp+196], 0
	mov	BYTE PTR $T639253[esp+180], 0
	cmp	DWORD PTR $T639252[esp+200], ebx
	jb	SHORT $LN152@InputStrea@3
	mov	edx, DWORD PTR $T639252[esp+180]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN152@InputStrea@3:

; 113  : 
; 114  : 				// then check the traceFiles dir
; 115  : 				if (!exists(inFileWithPath) || !is_regular(inFileWithPath))

	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+176]
	call	??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::exists<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	test	al, al
	je	SHORT $LN7@InputStrea@3
	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+176]
	call	??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::is_regular<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	test	al, al
	je	SHORT $LN7@InputStrea@3

; 127  : 					}
; 128  : 				}
; 129  : 				else
; 130  : 				{
; 131  : 					traceFile.push(file_source(inFileWithPath.string().c_str()));

	mov	eax, DWORD PTR _inFileWithPath$147511[esp+180]
	cmp	DWORD PTR _inFileWithPath$147511[esp+200], ebx
	jae	SHORT $LN289@InputStrea@3
	lea	eax, DWORD PTR _inFileWithPath$147511[esp+180]
$LN289@InputStrea@3:
	push	eax
	lea	ecx, DWORD PTR $T639260[esp+180]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	eax, DWORD PTR $T639260[esp+176]
	push	eax
	lea	ecx, DWORD PTR $T639259[esp+180]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+192], 10		; 0000000aH
	call	??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
	mov	BYTE PTR __$EHRec$[esp+184], 11		; 0000000bH
	mov	ecx, DWORD PTR [ebp+92]
	push	eax
	push	ecx
	call	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
	lea	eax, DWORD PTR $T639259[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 10		; 0000000aH
	call	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
	lea	ecx, DWORD PTR $T639260[esp+176]
	jmp	$LN339@InputStrea@3
$LN7@InputStrea@3:

; 116  : 				{
; 117  : 					inFileWithPath = current_path() / "traceFiles" / settings.inFile;

	lea	eax, DWORD PTR $T639254[esp+176]
	call	?current_path@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@12@XZ ; boost::filesystem::current_path
	push	eax
	lea	esi, DWORD PTR $T639255[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 5
	call	??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@PBD@Z ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	add	esp, 4
	mov	edx, DWORD PTR tv1004[esp+176]
	push	edx
	push	eax
	lea	eax, DWORD PTR $T639256[esp+184]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+196], 6
	call	??$?KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@YA?AV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@ABV201@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::filesystem::operator/<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
	add	esp, 12					; 0000000cH
	push	-1
	xor	esi, esi
	push	esi
	push	eax
	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+188]
	mov	BYTE PTR __$EHRec$[esp+196], 7
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T639256[esp+200], ebx
	jb	SHORT $LN190@InputStrea@3
	mov	ecx, DWORD PTR $T639256[esp+180]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN190@InputStrea@3:
	mov	DWORD PTR $T639256[esp+200], edi
	mov	DWORD PTR $T639256[esp+196], esi
	mov	BYTE PTR $T639256[esp+180], 0
	cmp	DWORD PTR $T639255[esp+200], ebx
	jb	SHORT $LN218@InputStrea@3
	mov	edx, DWORD PTR $T639255[esp+180]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN218@InputStrea@3:
	mov	BYTE PTR __$EHRec$[esp+184], 2
	mov	DWORD PTR $T639255[esp+200], edi
	mov	DWORD PTR $T639255[esp+196], esi
	mov	BYTE PTR $T639255[esp+180], 0
	cmp	DWORD PTR $T639254[esp+200], ebx
	jb	SHORT $LN246@InputStrea@3
	mov	eax, DWORD PTR $T639254[esp+180]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN246@InputStrea@3:

; 118  : 
; 119  : 					if (!exists(inFileWithPath) || !is_regular(inFileWithPath))

	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+176]
	call	??$exists@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::exists<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	test	al, al
	je	$LN5@InputStrea@3
	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+176]
	call	??$is_regular@V?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@@filesystem@boost@@YA_NABV?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@01@@Z ; boost::filesystem::is_regular<boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits> >
	test	al, al
	je	$LN5@InputStrea@3

; 123  : 					}
; 124  : 					else
; 125  : 					{
; 126  : 						traceFile.push(file_source(inFileWithPath.string().c_str()));

	mov	eax, DWORD PTR _inFileWithPath$147511[esp+180]
	cmp	DWORD PTR _inFileWithPath$147511[esp+200], ebx
	jae	SHORT $LN271@InputStrea@3
	lea	eax, DWORD PTR _inFileWithPath$147511[esp+180]
$LN271@InputStrea@3:
	push	eax
	lea	ecx, DWORD PTR $T639258[esp+180]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR $T639258[esp+176]
	push	ecx
	lea	edx, DWORD PTR $T639257[esp+180]
	mov	bl, 8
	push	edx
	mov	BYTE PTR __$EHRec$[esp+192], bl
	call	??0?$basic_file_source@D@iostreams@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; boost::iostreams::basic_file_source<char>::basic_file_source<char>
	mov	BYTE PTR __$EHRec$[esp+184], 9
	mov	ecx, DWORD PTR [ebp+92]
	push	eax
	push	ecx
	call	??$push_impl@U?$basic_file_source@D@iostreams@boost@@@?$chain_base@V?$chain@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Uinput@23@@detail@iostreams@boost@@AAEXABU?$basic_file_source@D@23@HH@Z ; boost::iostreams::detail::chain_base<boost::iostreams::chain<boost::iostreams::input,char,std::char_traits<char>,std::allocator<char> >,char,std::char_traits<char>,std::allocator<char>,boost::iostreams::input>::push_impl<boost::iostreams::basic_file_source<char> >
	lea	eax, DWORD PTR $T639257[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], bl
	call	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
	lea	ecx, DWORD PTR $T639258[esp+176]
$LN339@InputStrea@3:
	mov	BYTE PTR __$EHRec$[esp+184], 2
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 137  : 			}
; 138  : 
; 139  : 			if (!traceFile.is_complete())

	mov	eax, DWORD PTR [ebp+92]
	mov	ecx, DWORD PTR [eax]
	test	BYTE PTR [ecx+44], 1
	jne	SHORT $LN1@InputStrea@3

; 140  : 			{
; 141  : 				cerr << "Unable to open trace file \"" << settings.inFile << "\"" << endl;

	mov	edx, DWORD PTR tv1004[esp+176]
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	push	ecx
	push	edx
	push	ecx
	push	OFFSET ??_C@_0BM@MLMDDFBP@Unable?5to?5open?5trace?5file?5?$CC?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 142  : 				exit(-9);

	push	-9					; fffffff7H
	call	_exit
$LN340@InputStrea@3:
$LN1@InputStrea@3:

; 143  : 			}
; 144  : 		}

	lea	ecx, DWORD PTR _inFileWithPath$147511[esp+176]
	call	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
$LN12@InputStrea@3:

; 145  : 	}
; 146  : }

	mov	eax, ebp
	mov	ecx, DWORD PTR __$EHRec$[esp+176]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+156]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 156				; 0000009cH
	ret	12					; 0000000cH
$LN5@InputStrea@3:

; 120  : 					{
; 121  : 						cerr << "Unable to open trace file \"" << settings.inFile << "\"" << endl;

	mov	eax, DWORD PTR tv1004[esp+176]
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	push	ecx
	push	eax
	push	ecx
	push	OFFSET ??_C@_0BM@MLMDDFBP@Unable?5to?5open?5trace?5file?5?$CC?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 122  : 						exit(-9);

	push	-9					; fffffff7H
	call	_exit
$LN341@InputStrea@3:
$LN338@InputStrea@3:
	int	3
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$1:
	mov	esi, DWORD PTR _this$GSCopy$[ebp]
	add	esi, 88					; 00000058H
	jmp	??_D?$filtering_stream@Uinput@iostreams@boost@@DU?$char_traits@D@std@@V?$allocator@D@5@Upublic_@23@@iostreams@boost@@QAEXXZ
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$2:
	lea	ecx, DWORD PTR _inFileWithPath$147511[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$12:
	lea	ecx, DWORD PTR $T639262[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$13:
	lea	eax, DWORD PTR $T639261[ebp]
	jmp	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$3:
	lea	ecx, DWORD PTR $T639252[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$4:
	lea	ecx, DWORD PTR $T639253[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$10:
	lea	ecx, DWORD PTR $T639260[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$11:
	lea	eax, DWORD PTR $T639259[ebp]
	jmp	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$5:
	lea	ecx, DWORD PTR $T639254[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$6:
	lea	ecx, DWORD PTR $T639255[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$7:
	lea	ecx, DWORD PTR $T639256[ebp]
	jmp	??1?$basic_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Upath_traits@filesystem@boost@@@filesystem@boost@@QAE@XZ ; boost::filesystem::basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>::~basic_path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::filesystem::path_traits>
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$8:
	lea	ecx, DWORD PTR $T639258[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z$9:
	lea	eax, DWORD PTR $T639257[ebp]
	jmp	??1?$basic_file_source@D@iostreams@boost@@QAE@XZ
__ehhandler$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-160]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
??0InputStream@DRAMsimII@@QAE@ABVSettings@1@ABVSystemConfiguration@1@ABV?$vector@VChannel@DRAMsimII@@V?$allocator@VChannel@DRAMsimII@@@std@@@std@@@Z ENDP ; DRAMsimII::InputStream::InputStream
PUBLIC	_token$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z$1
__ehfuncinfo$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\settings.h
xdata$x	ENDS
;	COMDAT ?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z
_TEXT	SEGMENT
$T640451 = -84						; size = 4
_token$GSCopy$ = -80					; size = 4
__Lock$640616 = -76					; size = 4
_result$124567 = -76					; size = 8
$T640711 = -68						; size = 8
$T640703 = -60						; size = 16
_lowerNodeName$124455 = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z PROC ; DRAMsimII::Settings::tokenize, COMDAT
; _nodeName$ = edx
; _token$ = ecx

; 469  : 		{

	push	-1
	push	__ehhandler$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+88], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+108]
	mov	DWORD PTR fs:0, eax
	mov	esi, edx

; 470  : 			if (nodeName.length() == 0)

	mov	eax, DWORD PTR [esi+20]
	xor	ebx, ebx

; 489  : 				{
; 490  : 					token = result->second;

	mov	DWORD PTR _token$GSCopy$[esp+108], ecx
	cmp	eax, ebx
	jne	SHORT $LN6@tokenize
	mov	DWORD PTR [ecx], 98			; 00000062H
	mov	al, 1
	jmp	$LN3@tokenize
$LN6@tokenize:

; 471  : 			{
; 472  : 				token = unknown_token;
; 473  : 				return true;
; 474  : 			}
; 475  : 			else if (nodeName.length() > 1 && nodeName.at(0) == '/' && nodeName.at(1) == '/')

	cmp	eax, 1
	jbe	SHORT $LN4@tokenize
	cmp	eax, ebx
	ja	SHORT $LN15@tokenize
	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN15@tokenize:
	mov	ebp, 16					; 00000010H
	lea	edi, DWORD PTR [esi+4]
	cmp	DWORD PTR [esi+24], ebp
	jb	SHORT $LN20@tokenize
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN21@tokenize
$LN20@tokenize:
	mov	eax, edi
$LN21@tokenize:
	cmp	BYTE PTR [eax], 47			; 0000002fH
	jne	SHORT $LN4@tokenize
	cmp	DWORD PTR [esi+20], 1
	ja	SHORT $LN22@tokenize
	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN22@tokenize:
	cmp	DWORD PTR [esi+24], ebp
	jb	SHORT $LN27@tokenize
	mov	edi, DWORD PTR [edi]
$LN27@tokenize:
	cmp	BYTE PTR [edi+1], 47			; 0000002fH
	jne	SHORT $LN4@tokenize

; 476  : 			{
; 477  : 				token = comment_token;

	mov	eax, DWORD PTR _token$GSCopy$[esp+108]
	mov	DWORD PTR [eax], 30			; 0000001eH

; 478  : 				return true;

	mov	al, 1
	jmp	$LN3@tokenize
$LN4@tokenize:

; 479  : 			}				
; 480  : 			else
; 481  : 			{
; 482  : 				std::string lowerNodeName = nodeName;

	push	-1
	push	ebx
	push	esi
	lea	ecx, DWORD PTR _lowerNodeName$124455[esp+120]
	mov	DWORD PTR _lowerNodeName$124455[esp+144], 15 ; 0000000fH
	mov	DWORD PTR _lowerNodeName$124455[esp+140], ebx
	mov	BYTE PTR _lowerNodeName$124455[esp+124], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+116], ebx

; 483  : 				//std::transform(lowerNodeName.begin(),lowerNodeName.end(),lowerNodeName.begin(),std::ptr_fun((int (*)( int))std::tolower));
; 484  : 				boost::algorithm::to_lower(lowerNodeName);

	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR $T640451[esp+108], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	ebx
	lea	ecx, DWORD PTR __Lock$640616[esp+112]
	mov	esi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN57@tokenize
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN57@tokenize:
	lea	ecx, DWORD PTR __Lock$640616[esp+108]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	lea	eax, DWORD PTR _lowerNodeName$124455[esp+108]
	lea	edi, DWORD PTR $T640703[esp+108]
	mov	BYTE PTR __$EHRec$[esp+116], 1
	call	??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::as_literal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR [eax+12]
	push	edx
	mov	edx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	push	edx
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T640451[esp+132]
	push	eax
	lea	esi, DWORD PTR $T640711[esp+136]
	call	??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z ; std::transform<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
	add	esp, 28					; 0000001cH
	lea	ecx, DWORD PTR $T640451[esp+108]
	mov	BYTE PTR __$EHRec$[esp+116], bl
	call	??1locale@std@@QAE@XZ			; std::locale::~locale

; 485  : 
; 486  : 				std::map<std::string, FileIOToken>::iterator result = tokenizeMap.find(lowerNodeName);

	lea	ecx, DWORD PTR _result$124567[esp+108]
	push	ecx
	lea	edi, DWORD PTR _lowerNodeName$124455[esp+112]
	call	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::FileIOToken,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum DRAMsimII::FileIOToken> >,0> >::find

; 487  : 
; 488  : 				if (result != tokenizeMap.end())

	mov	esi, DWORD PTR _result$124567[esp+108]
	mov	edi, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A+24
	cmp	esi, ebx
	je	SHORT $LN102@tokenize
	cmp	esi, DWORD PTR ?tokenizeMap@Settings@DRAMsimII@@0V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FileIOToken@DRAMsimII@@@std@@@2@@std@@A
	je	SHORT $LN103@tokenize
$LN102@tokenize:
	call	__invalid_parameter_noinfo
$LN103@tokenize:
	mov	ebp, DWORD PTR _result$124567[esp+112]
	cmp	ebp, edi
	je	SHORT $LN2@tokenize

; 489  : 				{
; 490  : 					token = result->second;

	cmp	esi, ebx
	jne	SHORT $LN184@tokenize
	call	__invalid_parameter_noinfo
	xor	esi, esi
$LN123@tokenize:
	cmp	ebp, DWORD PTR [esi+24]
	jne	SHORT $LN114@tokenize
	call	__invalid_parameter_noinfo
$LN114@tokenize:

; 491  : 					return true;

	cmp	DWORD PTR _lowerNodeName$124455[esp+132], 16 ; 00000010H
	mov	edx, DWORD PTR [ebp+40]
	mov	eax, DWORD PTR _token$GSCopy$[esp+108]
	mov	DWORD PTR [eax], edx
	jb	SHORT $LN144@tokenize
	mov	ecx, DWORD PTR _lowerNodeName$124455[esp+112]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN144@tokenize:
	mov	al, 1
	jmp	SHORT $LN3@tokenize
$LN184@tokenize:

; 489  : 				{
; 490  : 					token = result->second;

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN123@tokenize
$LN2@tokenize:

; 492  : 				}
; 493  : 				else
; 494  : 					std::cerr << lowerNodeName << " failed" << std::endl;

	push	OFFSET ??_C@_07OCDKBNAP@?5failed?$AA@
	push	ecx
	lea	edx, DWORD PTR _lowerNodeName$124455[esp+116]
	push	edx
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 495  : 					return false;

	cmp	DWORD PTR _lowerNodeName$124455[esp+132], 16 ; 00000010H
	jb	SHORT $LN174@tokenize
	mov	eax, DWORD PTR _lowerNodeName$124455[esp+112]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN174@tokenize:
	xor	al, al
$LN3@tokenize:

; 496  : 			}
; 497  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+108]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+88]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 88					; 00000058H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z$0:
	lea	ecx, DWORD PTR _lowerNodeName$124455[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z$1:
	lea	ecx, DWORD PTR $T640451[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-92]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z ENDP ; DRAMsimII::Settings::tokenize
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\settings.h
xdata$x	ENDS
;	COMDAT ?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_first$ = -80						; size = 4
$T641131 = -80						; size = 4
__Lock$641394 = -76					; size = 4
__Lock$641256 = -76					; size = 4
$T641350 = -72						; size = 8
$T641343 = -64						; size = 16
_lowerValue$ = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; DRAMsimII::Settings::dramTokenizer, COMDAT

; 151  : 		{

	push	-1
	push	__ehhandler$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+80], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _value$[esp+92]

; 152  : 			std::string lowerValue = value;

	xor	ebx, ebx
	push	-1
	push	ebx
	push	eax
	lea	ecx, DWORD PTR _lowerValue$[esp+108]
	mov	DWORD PTR _lowerValue$[esp+132], 15	; 0000000fH
	mov	DWORD PTR _lowerValue$[esp+128], ebx
	mov	BYTE PTR _lowerValue$[esp+112], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+104], ebx

; 153  : 			//std::transform(lowerValue.begin(),lowerValue.end(),lowerValue.begin(),std::ptr_fun((int (*)( int))std::tolower));
; 154  : 			//std::transform(lowerValue.begin(), lowerValue.end(), lowerValue.begin(), std::tolower);
; 155  : 			boost::algorithm::to_lower(lowerValue);

	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR $T641131[esp+96], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	ebx
	lea	ecx, DWORD PTR __Lock$641256[esp+100]
	mov	esi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN34@dramTokeni
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN34@dramTokeni:
	lea	ecx, DWORD PTR __Lock$641256[esp+96]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	lea	eax, DWORD PTR _lowerValue$[esp+96]
	lea	edi, DWORD PTR $T641343[esp+96]
	mov	BYTE PTR __$EHRec$[esp+104], 1
	call	??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::as_literal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR [eax+12]
	push	edx
	mov	edx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	push	edx
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T641131[esp+120]
	push	eax
	lea	esi, DWORD PTR $T641350[esp+124]
	call	??$transform@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$to_lowerF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@00U?$to_lowerF@D@detail@algorithm@boost@@@Z ; std::transform<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::to_lowerF<char> >
	mov	BYTE PTR __$EHRec$[esp+132], bl
	mov	edi, DWORD PTR $T641131[esp+124]
	add	esp, 28					; 0000001cH
	cmp	edi, ebx
	je	SHORT $LN65@dramTokeni
	push	ebx
	lea	ecx, DWORD PTR __Lock$641394[esp+100]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, ebx
	jbe	SHORT $LN67@dramTokeni
	cmp	eax, -1
	jae	SHORT $LN67@dramTokeni
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN67@dramTokeni:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$641394[esp+96]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	cmp	esi, ebx
	je	SHORT $LN65@dramTokeni
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN65@dramTokeni:

; 156  : 
; 157  : 			FileIOToken first = unknown_token;
; 158  : 			
; 159  : 			if (!tokenize(lowerValue,first))

	lea	ecx, DWORD PTR _first$[esp+96]
	lea	edx, DWORD PTR _lowerValue$[esp+96]
	mov	DWORD PTR _first$[esp+96], 98		; 00000062H
	call	?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z ; DRAMsimII::Settings::tokenize
	test	al, al
	jne	SHORT $LN73@dramTokeni

; 160  : 				std::cerr << "warn: unknown token: " << std::endl;

	push	OFFSET ??_C@_0BG@GMOCOBCC@warn?3?5unknown?5token?3?5?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN73@dramTokeni:

; 161  : 
; 162  : 			return first;

	cmp	DWORD PTR _lowerValue$[esp+120], 16	; 00000010H
	jb	SHORT $LN101@dramTokeni
	mov	ecx, DWORD PTR _lowerValue$[esp+100]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN101@dramTokeni:
	mov	eax, DWORD PTR _first$[esp+96]

; 163  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _lowerValue$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T641131[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-80]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; DRAMsimII::Settings::dramTokenizer
PUBLIC	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVInputStream@0@@Z ; DRAMsimII::operator<<
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
_i$148846 = -8						; size = 8
_os$ = 8						; size = 4
tv661 = 12						; size = 4
_is$ = 12						; size = 4
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVInputStream@0@@Z PROC ; DRAMsimII::operator<<

; 733  : {

	sub	esp, 8
	push	ebx

; 734  : 	os << "type[" << is.type << "]" << endl;

	mov	ebx, DWORD PTR _os$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _is$[esp+12]
	push	esi
	push	edi
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	push	OFFSET ??_C@_05FGCALOPN@type?$FL?$AA@
	push	ebx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	esi, eax
	mov	eax, DWORD PTR [ebp]
	add	esp, 8
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4InputType@InputStream@0@@Z ; DRAMsimII::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 735  : 	os << is.systemConfig << endl;

	mov	edi, DWORD PTR [ebp+4]
	mov	esi, ebx
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVSystemConfiguration@0@@Z ; DRAMsimII::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 736  : 	for (vector<Channel>::const_iterator i = is.channel.begin(); i != is.channel.end(); i++)

	mov	esi, DWORD PTR [ebp+8]
	mov	edi, DWORD PTR [esi+12]
	cmp	edi, DWORD PTR [esi+16]
	jbe	SHORT $LN17@operator@431
	call	__invalid_parameter_noinfo
$LN17@operator@431:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _i$148846[esp+24], eax
	mov	ebx, edi
	npad	5
$LL32@operator@431:
	mov	esi, DWORD PTR [ebp+8]
	mov	edi, DWORD PTR [esi+16]
	cmp	DWORD PTR [esi+12], edi
	jbe	SHORT $LN45@operator@431
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR _i$148846[esp+24]
$LN45@operator@431:
	mov	esi, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN58@operator@431
	cmp	eax, esi
	je	SHORT $LN59@operator@431
$LN58@operator@431:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR _i$148846[esp+24]
$LN59@operator@431:
	cmp	ebx, edi
	je	$LN1@operator@431

; 737  : 	{
; 738  : 		os << *i << endl;

	test	eax, eax
	jne	$LN128@operator@431
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN75@operator@431:
	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN66@operator@431
	call	__invalid_parameter_noinfo
$LN66@operator@431:
	mov	ecx, DWORD PTR _os$[esp+20]
	mov	eax, ebx
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVChannel@0@@Z ; DRAMsimII::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	lea	eax, DWORD PTR [ecx+esi]
	xor	edi, edi
	test	BYTE PTR [eax+8], 6
	jne	SHORT $LN130@operator@431
	mov	eax, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN130@operator@431
	mov	edi, 4
$LN130@operator@431:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN2@operator@431
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edi
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN100@operator@431
	or	eax, 4
$LN100@operator@431:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN2@operator@431:
	mov	eax, DWORD PTR _i$148846[esp+24]
	test	eax, eax
	jne	SHORT $LN127@operator@431
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN39@operator@431:

; 736  : 	for (vector<Channel>::const_iterator i = is.channel.begin(); i != is.channel.end(); i++)

	cmp	ebx, DWORD PTR [eax+16]
	jb	SHORT $LN30@operator@431
	call	__invalid_parameter_noinfo
$LN30@operator@431:
	mov	eax, DWORD PTR _i$148846[esp+24]
	add	ebx, 456				; 000001c8H
	jmp	$LL32@operator@431
$LN128@operator@431:

; 737  : 	{
; 738  : 		os << *i << endl;

	mov	eax, DWORD PTR [eax]
	jmp	$LN75@operator@431
$LN127@operator@431:

; 736  : 	for (vector<Channel>::const_iterator i = is.channel.begin(); i != is.channel.end(); i++)

	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN39@operator@431
$LN1@operator@431:

; 739  : 	}
; 740  : 	os << is.channelLocality << " " << is.rankLocality << " " << is.bankLocality << " " <<
; 741  : 		is.time << " " << is.rowLocality << " " << is.readPercentage << " " << is.shortBurstRatio <<
; 742  : 		is.arrivalThreshold << " " << is.arrivalThreshold << " " << is.cpuToMemoryRatio << " " <<
; 743  : 		is.averageInterarrivalCycleCount << " " << is.traceFilename << endl;

	mov	eax, DWORD PTR [ebp+52]
	fld	DWORD PTR [ebp+44]
	fstp	DWORD PTR tv661[esp+20]
	lea	edx, DWORD PTR [ebp+60]
	fld	DWORD PTR [ebp+48]
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	eax
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	ecx
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	fld	DWORD PTR tv661[esp+44]
	push	ecx
	fst	DWORD PTR [esp]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	sub	esp, 8
	fstp	DWORD PTR [esp+4]
	mov	edx, DWORD PTR [ebp+24]
	fld	DWORD PTR [ebp+40]
	mov	ebx, DWORD PTR _os$[esp+60]
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	fld	DWORD PTR [ebp+36]
	push	ecx
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	fld	DWORD PTR [ebp+32]
	push	ecx
	mov	ecx, DWORD PTR [ebp+28]
	fstp	DWORD PTR [esp]
	fld	DWORD PTR [ebp+20]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	ecx
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	ecx
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	fld	DWORD PTR [ebp+16]
	push	ecx
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	fld	DWORD PTR [ebp+12]
	push	ecx
	fstp	DWORD PTR [esp]
	push	ebx
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@_J@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	lea	eax, DWORD PTR [ecx+esi]
	xor	edi, edi
	test	BYTE PTR [eax+8], 6
	jne	SHORT $LN132@operator@431
	mov	eax, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	eax, -1
	jne	SHORT $LN132@operator@431
	mov	edi, 4
$LN132@operator@431:
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	test	edi, edi
	je	SHORT $LN129@operator@431
	mov	eax, DWORD PTR [ecx+8]
	or	eax, edi
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN124@operator@431
	or	eax, 4
$LN124@operator@431:
	push	0
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN129@operator@431:
	pop	edi
	pop	esi
	pop	ebp

; 744  : 
; 745  : 	return os;

	mov	eax, ebx
	pop	ebx

; 746  : }

	add	esp, 8
	ret	0
??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVInputStream@0@@Z ENDP ; DRAMsimII::operator<<
_TEXT	ENDS
PUBLIC	__real@412e848000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	?ascii2multiplier@InputStream@DRAMsimII@@ABENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::InputStream::ascii2multiplier
;	COMDAT __real@412e848000000000
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+006
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
CONST	ENDS
_TEXT	SEGMENT
?ascii2multiplier@InputStream@DRAMsimII@@ABENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; DRAMsimII::InputStream::ascii2multiplier
; _input$ = eax

; 565  : {

	push	esi
	mov	esi, eax

; 566  : 	switch(Settings::dramTokenizer(input))

	push	esi
	call	?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::dramTokenizer
	add	eax, -9					; fffffff7H
	add	esp, 4
	cmp	eax, 4
	ja	SHORT $LN1@ascii2mult
	jmp	DWORD PTR $LN15@ascii2mult[eax*4]
$LN6@ascii2mult:

; 567  : 	{
; 568  : 	case PICOSECOND:
; 569  : 		return 0.001;

	movsd	xmm0, QWORD PTR __real@3f50624dd2f1a9fc
	pop	esi

; 586  : 		break;
; 587  : 	}
; 588  : }

	ret	0
$LN5@ascii2mult:

; 570  : 		break;
; 571  : 	case NANOSECOND:
; 572  : 		return 1.0;

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	pop	esi

; 586  : 		break;
; 587  : 	}
; 588  : }

	ret	0
$LN4@ascii2mult:

; 573  : 		break;
; 574  : 	case MICROSECOND:
; 575  : 		return 1000.0;

	movsd	xmm0, QWORD PTR __real@408f400000000000
	pop	esi

; 586  : 		break;
; 587  : 	}
; 588  : }

	ret	0
$LN3@ascii2mult:

; 576  : 		break;
; 577  : 	case MILLISECOND:
; 578  : 		return 1000000.0;

	movsd	xmm0, QWORD PTR __real@412e848000000000
	pop	esi

; 586  : 		break;
; 587  : 	}
; 588  : }

	ret	0
$LN2@ascii2mult:

; 579  : 		break;
; 580  : 	case SECOND:
; 581  : 		return 1000000000.0;

	movsd	xmm0, QWORD PTR __real@41cdcd6500000000
	pop	esi

; 586  : 		break;
; 587  : 	}
; 588  : }

	ret	0
$LN1@ascii2mult:

; 582  : 		break;
; 583  : 	default:
; 584  : 		cerr << "unknown multipler " << input << endl;

	push	esi
	push	OFFSET ??_C@_0BD@KJGDBDDP@unknown?5multipler?5?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 585  : 		return 0.0;

	xorps	xmm0, xmm0
	pop	esi

; 586  : 		break;
; 587  : 	}
; 588  : }

	ret	0
$LN15@ascii2mult:
	DD	$LN4@ascii2mult
	DD	$LN3@ascii2mult
	DD	$LN5@ascii2mult
	DD	$LN6@ascii2mult
	DD	$LN2@ascii2mult
?ascii2multiplier@InputStream@DRAMsimII@@ABENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; DRAMsimII::InputStream::ascii2multiplier
PUBLIC	?getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z ; DRAMsimII::InputStream::getNextRandomRequest
;	COMDAT ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\transaction.cpp
_BSS	SEGMENT
?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A DB 028H DUP (?) ; `DRAMsimII::InputStream::getNextRandomRequest'::`28'::nextAddress
_BSS	ENDS
;	COMDAT ?$S1@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA
_BSS	SEGMENT
?$S1@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA DD 01H DUP (?) ; `DRAMsimII::InputStream::getNextRandomRequest'::`28'::$S1
_BSS	ENDS
;	COMDAT ?nextChannel@?4??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA
_BSS	SEGMENT
?nextChannel@?4??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA DD 01H DUP (?) ; `DRAMsimII::InputStream::getNextRandomRequest'::`5'::nextChannel
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_BSS	ENDS
_TEXT	SEGMENT
_nextRank$148674 = -40					; size = 4
_nextBank$148676 = -36					; size = 4
_nextRow$148679 = -32					; size = 4
_burstLength$148682 = -28				; size = 4
tv896 = -24						; size = 4
_nextType$148681 = -24					; size = 4
tv1071 = -20						; size = 4
tv1053 = -20						; size = 4
tv1039 = -20						; size = 4
tv774 = -20						; size = 8
$T678259 = -20						; size = 8
tv1069 = -12						; size = 8
tv1062 = -12						; size = 8
tv1045 = -12						; size = 8
tv1037 = -12						; size = 8
tv1024 = -12						; size = 8
tv1007 = -12						; size = 8
tv976 = -12						; size = 8
tv908 = -12						; size = 8
tv851 = -12						; size = 8
tv780 = -12						; size = 8
$T678258 = -12						; size = 8
tv1074 = 8						; size = 2
tv1042 = 8						; size = 2
$T678512 = 8						; size = 4
$T678428 = 8						; size = 4
$T678341 = 8						; size = 4
_nextTime$148685 = 8					; size = 4
_this$ = 8						; size = 4
_transactionID$ = 12					; size = 4
?getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z PROC ; DRAMsimII::InputStream::getNextRandomRequest

; 609  : {

	sub	esp, 44					; 0000002cH
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+44]

; 610  : 	if (type == RANDOM)

	cmp	DWORD PTR [ebx], 2
	push	ebp
	push	esi
	push	edi
	jne	$LN17@getNextRan

; 611  : 	{
; 612  : 		static unsigned nextChannel;
; 613  : 
; 614  : 		// check against last transaction to see what the chan_id was, and whether we need to change channels or not
; 615  : 		// choose a random channel that's not this one
; 616  : 		if (channelLocality < rngGenerator())

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, QWORD PTR __real@0000000000000000
	lea	edi, DWORD PTR [ebx+5240]
	movsd	QWORD PTR tv774[esp+60], xmm0
	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv780[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv780[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]

; 617  : 		{
; 618  : 			nextChannel = (nextChannel + (rngIntGenerator() % (systemConfig.getChannelCount() - 1))) % systemConfig.getChannelCount();

	mov	eax, DWORD PTR [ebx+5284]
	mov	ecx, DWORD PTR [ebx+5276]
	lea	esi, DWORD PTR [ebx+5272]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+12]
	push	eax
	cvtps2pd xmm1, xmm1
	comisd	xmm0, xmm1
	push	ecx
	push	esi
	jbe	SHORT $LN16@getNextRan
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	edx, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [edx+356]
	xor	edx, edx
	lea	ebp, DWORD PTR [ecx-1]
	div	ebp
	add	esp, 12					; 0000000cH
	mov	eax, edx
	add	eax, DWORD PTR ?nextChannel@?4??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA
	xor	edx, edx
	div	ecx

; 619  : 		}
; 620  : 		// choose a random channel from any of them
; 621  : 		else

	jmp	SHORT $LN209@getNextRan
$LN16@getNextRan:

; 622  : 		{
; 623  : 			nextChannel = rngIntGenerator() % systemConfig.getChannelCount();

	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	ecx, DWORD PTR [ebx+4]
	xor	edx, edx
	add	esp, 12					; 0000000cH
	div	DWORD PTR [ecx+356]
$LN209@getNextRan:

; 624  : 		}
; 625  : 
; 626  : 		// check against the rank_id of the last transaction to the newly selected channel to see if we need to change the rank_id
; 627  : 		// or keep to this rank_id
; 628  : 		unsigned nextRank = channel[nextChannel].getLastRankID();

	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T678341[esp+56], eax
	mov	ebp, edx
	mov	DWORD PTR ?nextChannel@?4??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA, edx
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	ebp, eax
	jb	SHORT $LN52@getNextRan
	call	__invalid_parameter_noinfo
$LN52@getNextRan:
	mov	ecx, DWORD PTR $T678341[esp+56]
	imul	ebp, 456				; 000001c8H
	add	ebp, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [ebp+24]
	test	eax, eax
	je	SHORT $LN59@getNextRan
	mov	eax, DWORD PTR [eax+60]
	jmp	SHORT $LN60@getNextRan
$LN59@getNextRan:
	mov	edx, DWORD PTR [ebp+176]
	mov	eax, DWORD PTR [edx+360]
	dec	eax
$LN60@getNextRan:

; 629  : 
; 630  : 		if (rankLocality < rngGenerator())

	movsd	xmm0, QWORD PTR [edi+16]
	mov	DWORD PTR _nextRank$148674[esp+60], eax
	movsd	QWORD PTR tv851[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv851[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+16]
	cvtps2pd xmm1, xmm1
	comisd	xmm0, xmm1
	jbe	SHORT $LN14@getNextRan

; 631  : 		{
; 632  : 			// choose a rank that's not this one
; 633  : 			nextRank = (nextRank + 1 + (rngIntGenerator() % (systemConfig.getRankCount() - 1))) % systemConfig.getRankCount();

	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+4]
	push	eax
	push	ecx
	push	esi
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	edx, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [edx+360]
	xor	edx, edx
	lea	ebp, DWORD PTR [ecx-1]
	div	ebp
	mov	eax, DWORD PTR _nextRank$148674[esp+72]
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR [edx+eax+1]
	xor	edx, edx
	div	ecx
	mov	DWORD PTR _nextRank$148674[esp+60], edx
$LN14@getNextRan:

; 634  : 		}
; 635  : 		// else choose the same rank again
; 636  : 
; 637  : 		unsigned nextBank = channel[nextChannel].getRank(nextRank).getLastBankID();

	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR [eax+12]
	mov	ebp, DWORD PTR ?nextChannel@?4??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA
	mov	DWORD PTR $T678428[esp+56], eax
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	ebp, ecx
	jb	SHORT $LN85@getNextRan
	call	__invalid_parameter_noinfo
$LN85@getNextRan:
	mov	edx, DWORD PTR $T678428[esp+56]
	imul	ebp, 456				; 000001c8H
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+ebp+416]
	sub	ecx, DWORD PTR [eax+ebp+412]
	lea	ebp, DWORD PTR [eax+ebp+400]
	mov	eax, 1296593901				; 4d4873edH
	imul	ecx
	sar	edx, 7
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	DWORD PTR _nextRank$148674[esp+60], ecx
	jb	SHORT $LN92@getNextRan
	call	__invalid_parameter_noinfo
$LN92@getNextRan:
	mov	eax, DWORD PTR _nextRank$148674[esp+60]
	mov	edx, DWORD PTR [ebp+12]
	imul	eax, 424				; 000001a8H

; 638  : 
; 639  : 		if (bankLocality < rngGenerator())

	movsd	xmm0, QWORD PTR [edi+16]
	mov	DWORD PTR tv896[esp+60], eax
	mov	eax, DWORD PTR [eax+edx+140]
	mov	DWORD PTR _nextBank$148676[esp+60], eax
	movsd	QWORD PTR tv908[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv908[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+20]
	cvtps2pd xmm1, xmm1
	comisd	xmm0, xmm1
	jbe	SHORT $LN13@getNextRan

; 640  : 		{
; 641  : 			// choose a new bank that's not this one
; 642  : 			nextBank =  (nextBank + 1 + (rngIntGenerator() % (systemConfig.getBankCount() - 1))) % systemConfig.getBankCount();

	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [esi+4]
	push	ecx
	push	edx
	push	esi
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	ecx, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ecx+364]
	xor	edx, edx
	lea	ebp, DWORD PTR [ecx-1]
	div	ebp
	mov	eax, DWORD PTR _nextBank$148676[esp+72]
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR [edx+eax+1]
	xor	edx, edx
	div	ecx
	mov	DWORD PTR _nextBank$148676[esp+60], edx
$LN13@getNextRan:

; 643  : 		}
; 644  : 		// else leave it as is
; 645  : 		assert(nextBank < systemConfig.getBankCount());
; 646  : 
; 647  : 		unsigned nextRow = channel[nextChannel].getRank(nextRank).bank[nextBank].getOpenRowID();

	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR [eax+12]
	mov	ebp, DWORD PTR ?nextChannel@?4??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA
	mov	DWORD PTR $T678512[esp+56], eax
	mov	eax, -1883757585			; 8fb823efH
	imul	ecx
	add	edx, ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	ebp, ecx
	jb	SHORT $LN117@getNextRan
	call	__invalid_parameter_noinfo
$LN117@getNextRan:
	mov	edx, DWORD PTR $T678512[esp+56]
	imul	ebp, 456				; 000001c8H
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+ebp+416]
	sub	ecx, DWORD PTR [eax+ebp+412]
	lea	ebp, DWORD PTR [eax+ebp+400]
	mov	eax, 1296593901				; 4d4873edH
	imul	ecx
	sar	edx, 7
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	DWORD PTR _nextRank$148674[esp+60], ecx
	jb	SHORT $LN124@getNextRan
	call	__invalid_parameter_noinfo
$LN124@getNextRan:
	mov	edx, DWORD PTR [ebp+12]
	mov	eax, DWORD PTR tv896[esp+60]
	mov	ecx, DWORD PTR [eax+edx+416]
	sub	ecx, DWORD PTR [eax+edx+412]
	lea	ebp, DWORD PTR [eax+edx+400]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	DWORD PTR _nextBank$148676[esp+60], ecx
	jb	SHORT $LN129@getNextRan
	call	__invalid_parameter_noinfo
$LN129@getNextRan:
	mov	edx, DWORD PTR _nextBank$148676[esp+60]
	mov	eax, DWORD PTR [ebp+12]
	imul	edx, 168				; 000000a8H
	mov	ecx, DWORD PTR [edx+eax+128]

; 648  : 
; 649  : 		if (rowLocality < rngGenerator())

	movsd	xmm0, QWORD PTR [edi+16]
	mov	DWORD PTR _nextRow$148679[esp+60], ecx
	movsd	QWORD PTR tv976[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv976[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+32]
	cvtps2pd xmm1, xmm1
	comisd	xmm0, xmm1
	jbe	SHORT $LN12@getNextRan

; 650  : 		{
; 651  : 			// choose a new row that's not this one
; 652  : 			nextRow = (nextRow + 1 + (rngIntGenerator() % (systemConfig.getRowCount() - 1))) % systemConfig.getRowCount();

	mov	edx, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi+4]
	push	edx
	push	eax
	push	esi
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	ecx, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ecx+368]
	xor	edx, edx
	lea	ebp, DWORD PTR [ecx-1]
	div	ebp
	mov	eax, DWORD PTR _nextRow$148679[esp+72]
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR [edx+eax+1]
	xor	edx, edx
	div	ecx
	mov	DWORD PTR _nextRow$148679[esp+60], edx
$LN12@getNextRan:

; 653  : 		}
; 654  : 		// else leave it as is
; 655  : 
; 656  : 		Transaction::TransactionType nextType = (readPercentage > rngGenerator()) ? Transaction::READ_TRANSACTION : Transaction::WRITE_TRANSACTION;

	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv1007[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv1007[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+36]
	cvtps2pd xmm1, xmm1
	comisd	xmm1, xmm0
	mov	DWORD PTR _nextType$148681[esp+60], 2
	ja	SHORT $LN21@getNextRan
	mov	DWORD PTR _nextType$148681[esp+60], 1
$LN21@getNextRan:

; 657  : 
; 658  : 		unsigned burstLength = (shortBurstRatio > rngGenerator()) ? 4 : 8;

	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv1024[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv1024[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+40]
	cvtps2pd xmm1, xmm1
	comisd	xmm1, xmm0
	mov	DWORD PTR _burstLength$148682[esp+60], 4
	ja	SHORT $LN23@getNextRan
	mov	DWORD PTR _burstLength$148682[esp+60], 8
$LN23@getNextRan:

; 659  : 
; 660  : 		unsigned nextColumn = rngIntGenerator() & (systemConfig.getColumnCount() - 1);

	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [esi+4]
	push	ecx
	push	edx
	push	esi
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	mov	ecx, DWORD PTR [ebx+4]
	mov	ebp, DWORD PTR [ecx+372]
	dec	ebp
	and	ebp, eax

; 661  : 
; 662  : 		assert(arrivalThreshold <= 1.0F);
; 663  : 
; 664  : 		unsigned nextTime = 0;
; 665  : 
; 666  : 		switch (interarrivalDistributionModel)

	mov	eax, DWORD PTR [ebx+56]
	xor	esi, esi
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nextTime$148685[esp+56], esi
	cmp	eax, 4
	ja	$LN10@getNextRan
	jmp	DWORD PTR $LN210@getNextRan[eax*4]
$LN9@getNextRan:

; 667  : 		{
; 668  : 		case GAUSSIAN_DISTRIBUTION:
; 669  : #if 0
; 670  : 			while (true)
; 671  : 			{
; 672  : 				if (arrivalThreshold < rngGenerator()) // interarrival probability function
; 673  : 				{
; 674  : 					arrivalThreshold = 1.0F - (1.0F / abs(boxMuller(averageInterarrivalCycleCount, 10)));
; 675  : 					assert(arrivalThreshold <= 1.0F);
; 676  : 					break;
; 677  : 				}
; 678  : 				else
; 679  : 				{
; 680  : 					nextTime++;
; 681  : 				}
; 682  : 			}
; 683  : #endif
; 684  : 			nextTime = (int)std::max(0.0,arrivalGenerator());

	lea	eax, DWORD PTR [ebx+5288]
	lea	edi, DWORD PTR [eax+5008]
	call	??$?RV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$normal_distribution@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z ; boost::normal_distribution<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double> >
	xorps	xmm1, xmm1
	comisd	xmm0, xmm1
	movsd	QWORD PTR $T678258[esp+60], xmm0
	movsd	QWORD PTR $T678259[esp+60], xmm1
	lea	eax, DWORD PTR $T678258[esp+60]
	ja	SHORT $LN185@getNextRan
	lea	eax, DWORD PTR $T678259[esp+60]
$LN185@getNextRan:
	fld	QWORD PTR [eax]
	fnstcw	WORD PTR tv1074[esp+56]
	movzx	eax, WORD PTR tv1074[esp+56]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1071[esp+60], eax
	fldcw	WORD PTR tv1071[esp+60]
	fistp	QWORD PTR tv1069[esp+60]
	mov	edx, DWORD PTR tv1069[esp+60]
	fldcw	WORD PTR tv1074[esp+56]
	mov	DWORD PTR _nextTime$148685[esp+56], edx

; 685  : 			break;

	jmp	$LN10@getNextRan
$LN206@getNextRan:

; 686  : 		case POISSON_DISTRIBUTION:
; 687  : 			while (true)
; 688  : 			{
; 689  : 				if (arrivalThreshold < rngGenerator()) // interarrival probability function

	movsd	xmm0, QWORD PTR [edi+16]
	movsd	QWORD PTR tv1062[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv1062[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+44]
	cvtps2pd xmm1, xmm1
	comisd	xmm0, xmm1
	ja	SHORT $LN207@getNextRan
	npad	8
$LL7@getNextRan:
	movsd	xmm0, QWORD PTR [edi+16]

; 692  : 					assert(arrivalThreshold <= 1.0F);
; 693  : 					break;
; 694  : 				}
; 695  : 				else
; 696  : 				{
; 697  : 					nextTime++;

	inc	esi
	movsd	QWORD PTR tv1062[esp+60], xmm0
	call	??R?$backward_compatible_uniform_01@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@detail@boost@@QAENXZ ; boost::detail::backward_compatible_uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &>,double>::operator()
	movsd	xmm1, QWORD PTR tv1062[esp+60]
	subsd	xmm0, QWORD PTR __real@0000000000000000
	divsd	xmm0, QWORD PTR tv774[esp+60]
	movsd	xmm2, QWORD PTR [edi+24]
	subsd	xmm2, xmm1
	mulsd	xmm0, xmm2
	addsd	xmm0, xmm1
	movss	xmm1, DWORD PTR [ebx+44]
	cvtps2pd xmm1, xmm1
	comisd	xmm0, xmm1
	jbe	SHORT $LL7@getNextRan
	mov	DWORD PTR _nextTime$148685[esp+56], esi
$LN207@getNextRan:

; 690  : 				{
; 691  : 					arrivalThreshold = 1.0F - (1.0F / Poisson(averageInterarrivalCycleCount));

	mov	eax, DWORD PTR [ebx+52]
	fild	DWORD PTR [ebx+52]
	test	eax, eax
	jge	SHORT $LN208@getNextRan
	fadd	DWORD PTR __real@4f800000
$LN208@getNextRan:
	push	ecx
	mov	esi, ebx
	fstp	DWORD PTR [esp]
	call	?Poisson@InputStream@DRAMsimII@@QBEMM@Z	; DRAMsimII::InputStream::Poisson
	cvtss2sd xmm1, xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movapd	xmm2, xmm0
	divsd	xmm2, xmm1
	subsd	xmm0, xmm2
	cvtpd2ps xmm0, xmm0
	movss	DWORD PTR [ebx+44], xmm0

; 698  : 				}
; 699  : 			}
; 700  : 			break;

	jmp	SHORT $LN10@getNextRan
$LN3@getNextRan:

; 701  : 		case UNIFORM_DISTRIBUTION:
; 702  : 		case LOGNORMAL_DISTRIBUTION:
; 703  : 		case NORMAL_DISTRIBUTION:
; 704  : 			nextTime = (int)std::abs(arrivalGenerator());

	lea	eax, DWORD PTR [ebx+5288]
	lea	edi, DWORD PTR [eax+5008]
	call	??$?RV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@boost@@@?$normal_distribution@N@boost@@QAENAAV?$uniform_01@V?$pass_through_engine@V?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@N@1@@Z ; boost::normal_distribution<double>::operator()<boost::uniform_01<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> >,double> >
	fnstcw	WORD PTR tv1042[esp+56]
	movzx	eax, WORD PTR tv1042[esp+56]
	movsd	QWORD PTR tv1045[esp+60], xmm0
	or	eax, 3072				; 00000c00H
	fld	QWORD PTR tv1045[esp+60]
	mov	DWORD PTR tv1039[esp+60], eax
	fabs
	fldcw	WORD PTR tv1039[esp+60]
	fistp	QWORD PTR tv1037[esp+60]
	mov	ecx, DWORD PTR tv1037[esp+60]
	fldcw	WORD PTR tv1042[esp+56]
	mov	DWORD PTR _nextTime$148685[esp+56], ecx
$LN10@getNextRan:

; 705  : 			break;
; 706  : 
; 707  : 		}
; 708  : 
; 709  : 		// set arrival time
; 710  : 
; 711  : 		static Address nextAddress;

	test	BYTE PTR ?$S1@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA, 1
	jne	SHORT $LN200@getNextRan
	or	DWORD PTR ?$S1@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA, 1
	or	eax, -1
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A, eax
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+8, eax
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+12, eax
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+16, eax
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+20, eax
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+24, eax
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+28, eax
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+32, eax
$LN200@getNextRan:

; 712  : 
; 713  : 		time += nextTime;

	mov	edx, DWORD PTR _nextTime$148685[esp+56]
	add	DWORD PTR [ebx+24], edx

; 714  : 
; 715  : 		nextAddress.setAddress(nextChannel,nextRank,nextBank,nextRow,nextColumn);

	mov	eax, DWORD PTR ?nextChannel@?4??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4IA
	mov	ecx, DWORD PTR _nextRank$148674[esp+60]
	adc	DWORD PTR [ebx+28], 0
	mov	edx, DWORD PTR _nextBank$148676[esp+60]
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+16, eax
	mov	eax, DWORD PTR _nextRow$148679[esp+60]
	mov	esi, OFFSET ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+20, ecx
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+24, edx
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+32, ebp
	mov	DWORD PTR ?nextAddress@?BM@??getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@3@I@Z@4VAddress@3@A+28, eax
	call	?reverseAddressTranslation@Address@DRAMsimII@@IAE_NXZ ; DRAMsimII::Address::reverseAddressTranslation

; 716  : 
; 717  : 		assert(nextAddress.getChannel() < systemConfig.getChannelCount());
; 718  : 		assert(nextAddress.getRank() < systemConfig.getRankCount());
; 719  : 		assert(nextAddress.getBank() < systemConfig.getBankCount());
; 720  : 		assert(nextAddress.getRow() < systemConfig.getRowCount());
; 721  : 		assert(nextAddress.getColumn() < systemConfig.getColumnCount());
; 722  : 
; 723  : 		return new Transaction(nextType, time, burstLength, nextAddress, 0, 0, transactionID);

	call	?acquireItem@?$Queue@VTransaction@DRAMsimII@@@DRAMsimII@@QAEPAVTransaction@2@XZ ; DRAMsimII::Queue<DRAMsimII::Transaction>::acquireItem
	test	eax, eax
	je	SHORT $LN17@getNextRan
	mov	ecx, DWORD PTR _transactionID$[esp+56]
	mov	edx, DWORD PTR _burstLength$148682[esp+60]
	push	ecx
	mov	ecx, DWORD PTR [ebx+28]
	push	edx
	mov	edx, DWORD PTR [ebx+24]
	push	ecx
	mov	ecx, DWORD PTR _nextType$148681[esp+72]
	push	edx
	push	ecx
	mov	edx, esi
	call	??0Transaction@DRAMsimII@@QAE@W4TransactionType@01@_JIABVAddress@1@_KHI@Z ; DRAMsimII::Transaction::Transaction

; 724  : 	}
; 725  : 	else
; 726  : 		return NULL;
; 727  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	8
$LN17@getNextRan:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	8
	npad	1
$LN210@getNextRan:
	DD	$LN3@getNextRan
	DD	$LN9@getNextRan
	DD	$LN206@getNextRan
	DD	$LN3@getNextRan
	DD	$LN3@getNextRan
?getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z ENDP ; DRAMsimII::InputStream::getNextRandomRequest
_TEXT	ENDS
PUBLIC	__real@3ddb7cdfd9d7bdbb
PUBLIC	__$ArrayPad$
PUBLIC	?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z ; DRAMsimII::InputStream::getNextIncomingTransaction
EXTRN	__ftol2:PROC
;	COMDAT __real@3ddb7cdfd9d7bdbb
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
CONST	SEGMENT
__real@3ddb7cdfd9d7bdbb DQ 03ddb7cdfd9d7bdbbr	; 1e-010
__unwindtable$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$3
__ehfuncinfo$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\inputstream.cpp
_TEXT	SEGMENT
_tempPA$148287 = -84					; size = 8
_timestamp$148201 = -84					; size = 8
_PC$148288 = -76					; size = 8
_tempPA$148200 = -76					; size = 8
$T678757 = -64						; size = 4
$T678751 = -64						; size = 4
_timestamp$148289 = -60					; size = 8
_input$148290 = -48					; size = 28
_input$148199 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_transactionID$ = 8					; size = 4
?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z PROC ; DRAMsimII::InputStream::getNextIncomingTransaction
; _this$ = ecx

; 382  : {	

	push	-1
	push	__ehhandler$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+84], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+104]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx

; 383  : 	switch (type)

	mov	eax, DWORD PTR [edi]
	cmp	eax, 6
	ja	$LN1@getNextInc
	jmp	DWORD PTR $LN136@getNextInc[eax*4]
$LN20@getNextInc:

; 384  : 	{
; 385  : 	case RANDOM:
; 386  : 		return getNextRandomRequest(transactionID);

	mov	eax, DWORD PTR _transactionID$[esp+100]
	push	eax
	push	edi
	call	?getNextRandomRequest@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z ; DRAMsimII::InputStream::getNextRandomRequest
	jmp	$LN23@getNextInc
$LN19@getNextInc:

; 387  : 		break;
; 388  : 	case K6_TRACE:
; 389  : 		{
; 390  : 			cerr << "needs to be updated" << endl;

	push	OFFSET ??_C@_0BE@FKOGOOD@needs?5to?5be?5updated?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 391  : 			exit(-2);

	push	-2					; fffffffeH
	call	_exit
$LN138@getNextInc:
$LN18@getNextInc:

; 392  : #if 0
; 393  : 			Transaction::TransactionType attributes;
; 394  : 			int burst_length = 4; // Socket 7 cachelines are 32 byte long, burst of 4
; 395  : 			int burst_count = 0;
; 396  : 			bool bursting = true;
; 397  : 			//double multiplier;
; 398  : 			tick timestamp;
; 399  : 			unsigned address;
; 400  : 			Transaction *newTrans = new Transaction();
; 401  : 
; 402  : 			while ((bursting == true) && traceFile.good())
; 403  : 			{
; 404  : 				string input;
; 405  : 
; 406  : 				traceFile >> hex >> address >> input >> timestamp;
; 407  : 
; 408  : 				if(traceFile.good())
; 409  : 				{
; 410  : 					cerr << "Unexpected EOF, Please fix input trace file" << endl;
; 411  : 					return NULL;
; 412  : 				}
; 413  : 
; 414  : 				FileIOToken control = Settings::dramTokenizer(input);
; 415  : 
; 416  : 				if (control == unknown_token)
; 417  : 				{
; 418  : 					cerr << "Unknown Token Found" << input << endl;
; 419  : 					return NULL;
; 420  : 				}
; 421  : 
; 422  : 				if (control == MEM_WR)
; 423  : 				{
; 424  : 					attributes = Transaction::WRITE_TRANSACTION;
; 425  : 				}
; 426  : 				else
; 427  : 				{
; 428  : 					attributes = Transaction::READ_TRANSACTION;
; 429  : 				}
; 430  : 
; 431  : 				traceFile >> input;
; 432  : 				if(traceFile.eof())
; 433  : 				{
; 434  : 					cerr << "Unexpected EOF, Please fix input trace file" << endl;
; 435  : 					return false;
; 436  : 				}
; 437  : 				// FIXME: what was this for?
; 438  : 				if (/*(thisEvent.attributes != control) || */
; 439  : 					((address & 0xFFFFFFE0) != 0) || (burst_count == burst_length))
; 440  : 				{
; 441  : 					bursting = false;
; 442  : 					timestamp = static_cast<tick>(static_cast<double>(timestamp) * ascii2multiplier(input));
; 443  : 					newTrans = new Transaction(0x3FFFFFFF & address,); // mask out top addr bit
; 444  : 					thisEvent.attributes = Transaction::CONTROL_TRANSACTION;
; 445  : 					thisEvent.timestamp = timestamp;
; 446  : 					burst_count = 1;
; 447  : 				}
; 448  : 				else
; 449  : 				{
; 450  : 					burst_count++;
; 451  : 				}
; 452  : 			}
; 453  : 			thisEvent.address.setPhysicalAddress(address);
; 454  : 			thisEvent.timestamp = timestamp;
; 455  : #endif
; 456  : 		}
; 457  : 		break;
; 458  : 	case MASE_TRACE:
; 459  : 		{
; 460  : 			string input;

	xor	ebx, ebx
	mov	DWORD PTR _input$148199[esp+128], 15	; 0000000fH
	mov	DWORD PTR _input$148199[esp+124], ebx
	mov	BYTE PTR _input$148199[esp+108], bl

; 461  : 
; 462  : 			PhysicalAddress tempPA;
; 463  : 			tick timestamp;
; 464  : 			traceFile >> hex >> tempPA >> input >> dec >> timestamp;

	lea	ecx, DWORD PTR _timestamp$148201[esp+104]
	push	ecx
	push	OFFSET ?dec@std@@YAAAVios_base@1@AAV21@@Z ; std::dec
	lea	edx, DWORD PTR _input$148199[esp+112]
	push	edx
	push	ecx
	lea	eax, DWORD PTR _tempPA$148200[esp+120]
	push	eax
	lea	ebp, DWORD PTR [edi+96]
	push	OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
	mov	esi, ebp
	mov	DWORD PTR __$EHRec$[esp+136], ebx
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	push	eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	add	esp, 4
	push	eax
	call	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	push	eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_J@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>

; 465  : 			//thisEvent.timestamp /= 40000;
; 466  : 
; 467  : 			//thisEvent.timestamp /= cpuToMemoryRatio;
; 468  : 			timestamp *= cpuToMemoryRatio;

	fild	QWORD PTR _timestamp$148201[esp+104]
	fmul	DWORD PTR [edi+48]
	call	__ftol2

; 469  : 			if(!traceFile.good()) /// found starting Hex address

	mov	ecx, DWORD PTR [ebp]
	mov	DWORD PTR _timestamp$148201[esp+104], eax
	mov	DWORD PTR _timestamp$148201[esp+108], edx
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+edi+104], ebx
	je	SHORT $LN17@getNextInc
$LN134@getNextInc:

; 470  : 			{
; 471  : 				cerr << "Unexpected EOF, Please fix input trace file" << endl;

	push	OFFSET ??_C@_0CM@CGJPJJEC@Unexpected?5EOF?0?5Please?5fix?5input@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN135@getNextInc:

; 490  : 				return NULL;

	lea	ecx, DWORD PTR _input$148199[esp+104]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	xor	eax, eax
$LN23@getNextInc:

; 558  : 		break;
; 559  : 	}
; 560  : 
; 561  : 	return NULL;
; 562  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+104]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	ret	4
$LN17@getNextInc:

; 472  : 				return false;
; 473  : 			}
; 474  : 
; 475  : 			Transaction::TransactionType type;
; 476  : 
; 477  : 			switch (Settings::dramTokenizer(input))

	lea	eax, DWORD PTR _input$148199[esp+104]
	push	eax
	call	?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::dramTokenizer
	dec	eax
	add	esp, 4
	cmp	eax, 97					; 00000061H
	ja	$LN10@getNextInc
	movzx	ecx, BYTE PTR $LN131@getNextInc[eax]
	jmp	DWORD PTR $LN137@getNextInc[ecx*4]
$LN14@getNextInc:

; 478  : 			{
; 479  : 			case FETCH:
; 480  : 				type = Transaction::IFETCH_TRANSACTION;

	xor	esi, esi

; 481  : 				break;

	jmp	SHORT $LN15@getNextInc
$LN13@getNextInc:

; 482  : 			case MEM_RD:
; 483  : 				type = Transaction::READ_TRANSACTION;

	mov	esi, 2

; 484  : 				break;

	jmp	SHORT $LN15@getNextInc
$LN12@getNextInc:

; 485  : 			case MEM_WR:
; 486  : 				type = Transaction::WRITE_TRANSACTION;

	mov	esi, 1
$LN15@getNextInc:

; 495  : 				break;
; 496  : 			}
; 497  : 
; 498  : 			return new Transaction(type, timestamp, 8, tempPA, 0x0, transactionID);

	call	?acquireItem@?$Queue@VTransaction@DRAMsimII@@@DRAMsimII@@QAEPAVTransaction@2@XZ ; DRAMsimII::Queue<DRAMsimII::Transaction>::acquireItem
	mov	DWORD PTR $T678751[esp+104], eax
	mov	BYTE PTR __$EHRec$[esp+112], 1
	cmp	eax, ebx
	je	SHORT $LN25@getNextInc
	mov	edx, DWORD PTR _transactionID$[esp+100]
	mov	ecx, DWORD PTR _tempPA$148200[esp+108]
	push	-1
	push	edx
	mov	edx, DWORD PTR _tempPA$148200[esp+112]
	push	ebx
	push	ebx
	push	ecx
	mov	ecx, DWORD PTR _timestamp$148201[esp+128]
	push	edx
	mov	edx, DWORD PTR _timestamp$148201[esp+128]
	push	ecx
	push	edx
	push	esi
	call	??0Transaction@DRAMsimII@@QAE@W4TransactionType@01@_JI_K_KHI@Z ; DRAMsimII::Transaction::Transaction
	lea	ecx, DWORD PTR _input$148199[esp+104]
	mov	esi, eax
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	$LN23@getNextInc
$LN25@getNextInc:
	lea	ecx, DWORD PTR _input$148199[esp+104]
	xor	esi, esi
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	$LN23@getNextInc
$LN11@getNextInc:

; 487  : 				break;
; 488  : 			case unknown_token:
; 489  : 				cerr << "Unknown Token Found " << input << endl;

	lea	eax, DWORD PTR _input$148199[esp+104]
	push	eax
	push	ecx
	push	OFFSET ??_C@_0BF@CEJMJFKN@Unknown?5Token?5Found?5?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<

; 490  : 				return NULL;

	jmp	$LN135@getNextInc
$LN10@getNextInc:

; 491  : 				break;			
; 492  : 			default:
; 493  : 				cerr << "Unexpected transaction type: " << input;

	lea	ecx, DWORD PTR _input$148199[esp+104]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0BO@HCCIPKHE@Unexpected?5transaction?5type?3?5?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8

; 494  : 				exit(-7);

	push	-7					; fffffff9H
	call	_exit
$LN139@getNextInc:
$LN8@getNextInc:

; 499  : 		}
; 500  : 		break;
; 501  : 	case MAPPED:
; 502  : 		{
; 503  : 			cerr << "needs to be updated" << endl;
; 504  : 			exit(-2);
; 505  : #if 0
; 506  : 			static BusEvent newEvent;
; 507  : 
; 508  : 			if (!getNextBusEvent(newEvent))
; 509  : 			{
; 510  : 				/* EOF reached */
; 511  : 				return NULL;
; 512  : 			}
; 513  : 			else
; 514  : 			{
; 515  : 				return new Transaction(newEvent.attributes,newEvent.timestamp >> COMPRESS_INCOMING_TRANSACTIONS,0,newEvent.address, 0, transactionID);
; 516  : 			}
; 517  : #endif
; 518  : 		}
; 519  : 		break;
; 520  : 	case DRAMSIM:
; 521  : 		{
; 522  : 			PhysicalAddress tempPA, PC;
; 523  : 			double timestamp;
; 524  : 			string input;

	mov	DWORD PTR _input$148290[esp+128], 15	; 0000000fH
	mov	DWORD PTR _input$148290[esp+124], 0
	mov	BYTE PTR _input$148290[esp+108], 0

; 525  : 			traceFile >> hex >> tempPA >> input >> dec >> timestamp >> hex >> PC;

	lea	edx, DWORD PTR _PC$148288[esp+104]
	push	edx
	push	OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
	lea	eax, DWORD PTR _timestamp$148289[esp+112]
	push	eax
	push	OFFSET ?dec@std@@YAAAVios_base@1@AAV21@@Z ; std::dec
	lea	ecx, DWORD PTR _input$148290[esp+120]
	push	ecx
	push	ecx
	lea	edx, DWORD PTR _tempPA$148287[esp+128]
	push	edx
	lea	ebp, DWORD PTR [edi+96]
	push	OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
	mov	esi, ebp
	mov	DWORD PTR __$EHRec$[esp+144], 2
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	push	eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	add	esp, 4
	push	eax
	call	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	esi, eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	push	eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAN@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	mov	esi, eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>
	push	eax
	call	??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AA_K@Z ; std::basic_istream<char,std::char_traits<char> >::operator>>

; 526  : 			//cerr << "warn: timestamp adjusted incorrectly to compensate for older trace files" << endl;
; 527  : 			tick arrivalTime = (timestamp * 1E-10) * systemConfig.Frequency();

	mov	eax, DWORD PTR [edi+4]
	fld	QWORD PTR [eax+336]
	fld	QWORD PTR _timestamp$148289[esp+104]
	fmul	QWORD PTR __real@3ddb7cdfd9d7bdbb
	fmulp	ST(1), ST(0)
	call	__ftol2

; 528  : 
; 529  : 			if (!traceFile.good()) /// found starting Hex address

	mov	ecx, DWORD PTR [ebp]
	mov	ebx, edx
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+edi+104], 0
	mov	esi, eax

; 530  : 			{
; 531  : 				cerr << "Unexpected EOF, Please fix input trace file" << endl;
; 532  : 				return NULL;

	jne	$LN134@getNextInc

; 533  : 			}
; 534  : 
; 535  : 			Transaction::TransactionType type;
; 536  : 
; 537  : 			switch (Settings::dramTokenizer(input))

	lea	eax, DWORD PTR _input$148290[esp+104]
	push	eax
	call	?dramTokenizer@Settings@DRAMsimII@@SA?AW4FileIOToken@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::dramTokenizer
	add	esp, 4
	sub	eax, 7
	je	SHORT $LN4@getNextInc
	sub	eax, 1
	je	SHORT $LN3@getNextInc

; 545  : 			default:
; 546  : 				cerr << "Unexpected transaction type: " << input;

	lea	ecx, DWORD PTR _input$148290[esp+104]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0BO@HCCIPKHE@Unexpected?5transaction?5type?3?5?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8

; 547  : 				exit(-7);

	push	-7					; fffffff9H
	call	_exit
$LN140@getNextInc:
$LN3@getNextInc:

; 541  : 				break;
; 542  : 			case MEM_WR:
; 543  : 				type = Transaction::WRITE_TRANSACTION;

	mov	edi, 1

; 544  : 				break;

	jmp	SHORT $LN5@getNextInc
$LN4@getNextInc:

; 538  : 			{
; 539  : 			case MEM_RD:
; 540  : 				type = Transaction::READ_TRANSACTION;

	mov	edi, 2
$LN5@getNextInc:

; 548  : 				break;
; 549  : 			}
; 550  : 
; 551  : 			return new Transaction(type, arrivalTime, 8, tempPA, PC, 0, transactionID);

	call	?acquireItem@?$Queue@VTransaction@DRAMsimII@@@DRAMsimII@@QAEPAVTransaction@2@XZ ; DRAMsimII::Queue<DRAMsimII::Transaction>::acquireItem
	mov	DWORD PTR $T678757[esp+104], eax
	mov	BYTE PTR __$EHRec$[esp+112], 3
	test	eax, eax
	je	$LN25@getNextInc
	mov	edx, DWORD PTR _transactionID$[esp+100]
	mov	ecx, DWORD PTR _PC$148288[esp+108]
	push	edx
	mov	edx, DWORD PTR _PC$148288[esp+108]
	push	0
	push	ecx
	mov	ecx, DWORD PTR _tempPA$148287[esp+120]
	push	edx
	mov	edx, DWORD PTR _tempPA$148287[esp+120]
	push	ecx
	push	edx
	push	ebx
	push	esi
	push	edi
	call	??0Transaction@DRAMsimII@@QAE@W4TransactionType@01@_JI_K_KHI@Z ; DRAMsimII::Transaction::Transaction
	lea	ecx, DWORD PTR _input$148199[esp+104]
	mov	esi, eax
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	$LN23@getNextInc
$LN1@getNextInc:

; 552  : 		}
; 553  : 		break;
; 554  : 	case NONE:
; 555  : 	default:
; 556  : 		cerr << "Unknown input trace format" << endl;

	push	OFFSET ??_C@_0BL@KOHMPJBI@Unknown?5input?5trace?5format?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 557  : 		exit(-20);

	push	-20					; ffffffecH
	call	_exit
$LN141@getNextInc:
$LN133@getNextInc:
	npad	1
$LN136@getNextInc:

; 558  : 		break;
; 559  : 	}
; 560  : 
; 561  : 	return NULL;
; 562  : }

	DD	$LN19@getNextInc
	DD	$LN18@getNextInc
	DD	$LN20@getNextInc
	DD	$LN19@getNextInc
	DD	$LN1@getNextInc
	DD	$LN1@getNextInc
	DD	$LN8@getNextInc
$LN137@getNextInc:
	DD	$LN14@getNextInc
	DD	$LN13@getNextInc
	DD	$LN12@getNextInc
	DD	$LN11@getNextInc
	DD	$LN10@getNextInc
$LN131@getNextInc:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$0:
	lea	ecx, DWORD PTR _input$148199[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$1:
	mov	esi, DWORD PTR $T678751[ebp]
	jmp	??3Transaction@DRAMsimII@@SAXPAX@Z	; DRAMsimII::Transaction::operator delete
__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$2:
	lea	ecx, DWORD PTR _input$148290[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z$3:
	mov	esi, DWORD PTR $T678757[ebp]
	jmp	??3Transaction@DRAMsimII@@SAXPAX@Z	; DRAMsimII::Transaction::operator delete
__ehhandler$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-88]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z
	jmp	___CxxFrameHandler3
?getNextIncomingTransaction@InputStream@DRAMsimII@@QAEPAVTransaction@2@I@Z ENDP ; DRAMsimII::InputStream::getNextIncomingTransaction
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\system\error_code.hpp
;	COMDAT ??__Esystem_category@system@boost@@YAXXZ
text$yc	SEGMENT
??__Esystem_category@system@boost@@YAXXZ PROC		; boost::system::`dynamic initializer for 'system_category'', COMDAT

; 205  :     static const error_category &  system_category = get_system_category();

	call	?get_system_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_system_category
	mov	DWORD PTR _system_category, eax
	ret	0
??__Esystem_category@system@boost@@YAXXZ ENDP		; boost::system::`dynamic initializer for 'system_category''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__Egeneric_category@system@boost@@YAXXZ
text$yc	SEGMENT
??__Egeneric_category@system@boost@@YAXXZ PROC		; boost::system::`dynamic initializer for 'generic_category'', COMDAT

; 206  :     static const error_category &  generic_category = get_generic_category();

	call	?get_generic_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_generic_category
	mov	DWORD PTR _generic_category, eax
	ret	0
??__Egeneric_category@system@boost@@YAXXZ ENDP		; boost::system::`dynamic initializer for 'generic_category''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__Eposix_category@system@boost@@YAXXZ
text$yc	SEGMENT
??__Eposix_category@system@boost@@YAXXZ PROC		; boost::system::`dynamic initializer for 'posix_category'', COMDAT

; 211  :     static const error_category &  posix_category = get_generic_category();

	call	?get_generic_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_generic_category
	mov	DWORD PTR _posix_category, eax
	ret	0
??__Eposix_category@system@boost@@YAXXZ ENDP		; boost::system::`dynamic initializer for 'posix_category''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__Eerrno_ecat@system@boost@@YAXXZ
text$yc	SEGMENT
??__Eerrno_ecat@system@boost@@YAXXZ PROC		; boost::system::`dynamic initializer for 'errno_ecat'', COMDAT

; 212  :     static const error_category &  errno_ecat     = get_generic_category();

	call	?get_generic_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_generic_category
	mov	DWORD PTR _errno_ecat, eax
	ret	0
??__Eerrno_ecat@system@boost@@YAXXZ ENDP		; boost::system::`dynamic initializer for 'errno_ecat''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__Enative_ecat@system@boost@@YAXXZ
text$yc	SEGMENT
??__Enative_ecat@system@boost@@YAXXZ PROC		; boost::system::`dynamic initializer for 'native_ecat'', COMDAT

; 213  :     static const error_category &  native_ecat    = get_system_category();

	call	?get_system_category@system@boost@@YAABVerror_category@12@XZ ; boost::system::get_system_category
	mov	DWORD PTR _native_ecat, eax
	ret	0
??__Enative_ecat@system@boost@@YAXXZ ENDP		; boost::system::`dynamic initializer for 'native_ecat''
PUBLIC	?id@?$codecvt@DDH@std@@2V0locale@2@A		; std::codecvt<char,char,int>::id
_posix_category DD 01H DUP (?)
_generic_category DD 01H DUP (?)
_system_category DD 01H DUP (?)
_native_ecat DD	01H DUP (?)
_errno_ecat DD	01H DUP (?)
;	COMDAT ?id@?$codecvt@DDH@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDH@std@@2V0locale@2@A DD 01H DUP (?)	; std::codecvt<char,char,int>::id
_system_category$initializer$ DD FLAT:??__Esystem_category@system@boost@@YAXXZ
_generic_category$initializer$ DD FLAT:??__Egeneric_category@system@boost@@YAXXZ
_posix_category$initializer$ DD FLAT:??__Eposix_category@system@boost@@YAXXZ
_errno_ecat$initializer$ DD FLAT:??__Eerrno_ecat@system@boost@@YAXXZ
_native_ecat$initializer$ DD FLAT:??__Enative_ecat@system@boost@@YAXXZ
END
