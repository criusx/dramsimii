; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\CriuS\Documents\Visual Studio 2008\Projects\DRAMsimIIhg\src\SettingsXML.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@ ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8 ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8 ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8 ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@@8 ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > `RTTI Type Descriptor'
PUBLIC	??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8 ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8 ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@typed_value_base@program_options@boost@@8 ; boost::program_options::typed_value_base::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8 ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@@8 ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char> `RTTI Type Descriptor'
PUBLIC	??_R4abstract_variables_map@program_options@boost@@6B@ ; boost::program_options::abstract_variables_map::`RTTI Complete Object Locator'
PUBLIC	??_R3abstract_variables_map@program_options@boost@@8 ; boost::program_options::abstract_variables_map::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2abstract_variables_map@program_options@boost@@8 ; boost::program_options::abstract_variables_map::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@abstract_variables_map@program_options@boost@@8 ; boost::program_options::abstract_variables_map::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVabstract_variables_map@program_options@boost@@@8 ; boost::program_options::abstract_variables_map `RTTI Type Descriptor'
PUBLIC	??_R4typed_value_base@program_options@boost@@6B@ ; boost::program_options::typed_value_base::`RTTI Complete Object Locator'
PUBLIC	??_R3typed_value_base@program_options@boost@@8	; boost::program_options::typed_value_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2typed_value_base@program_options@boost@@8	; boost::program_options::typed_value_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@typed_value_base@program_options@boost@@8 ; boost::program_options::typed_value_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVtyped_value_base@program_options@boost@@@8 ; boost::program_options::typed_value_base `RTTI Type Descriptor'
PUBLIC	??_R4?$value_semantic_codecvt_helper@D@program_options@boost@@6B@ ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$value_semantic_codecvt_helper@D@program_options@boost@@8 ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$value_semantic_codecvt_helper@D@program_options@boost@@8 ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$value_semantic_codecvt_helper@D@program_options@boost@@8 ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$value_semantic_codecvt_helper@D@program_options@boost@@@8 ; boost::program_options::value_semantic_codecvt_helper<char> `RTTI Type Descriptor'
PUBLIC	??_R4value_semantic@program_options@boost@@6B@	; boost::program_options::value_semantic::`RTTI Complete Object Locator'
PUBLIC	??_R3value_semantic@program_options@boost@@8	; boost::program_options::value_semantic::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2value_semantic@program_options@boost@@8	; boost::program_options::value_semantic::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@value_semantic@program_options@boost@@8 ; boost::program_options::value_semantic::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVvalue_semantic@program_options@boost@@@8 ; boost::program_options::value_semantic `RTTI Type Descriptor'
PUBLIC	??_R4placeholder@any@boost@@6B@			; boost::any::placeholder::`RTTI Complete Object Locator'
PUBLIC	??_R3placeholder@any@boost@@8			; boost::any::placeholder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2placeholder@any@boost@@8			; boost::any::placeholder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@placeholder@any@boost@@8		; boost::any::placeholder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVplaceholder@any@boost@@@8		; boost::any::placeholder `RTTI Type Descriptor'
PUBLIC	??_R4bad_function_call@boost@@6B@		; boost::bad_function_call::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_function_call@boost@@8			; boost::bad_function_call::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_function_call@boost@@8			; boost::bad_function_call::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_function_call@boost@@8	; boost::bad_function_call::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABW4FileIOToken@DRAMsimII@@@Z ; std::_Tree<std::_Tmap_traits<enum DRAMsimII::FileIOToken,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<enum DRAMsimII::FileIOToken>,std::allocator<std::pair<enum DRAMsimII::FileIOToken const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::find
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<enum DRAMsimII::FileIOToken,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<enum DRAMsimII::FileIOToken>,std::allocator<std::pair<enum DRAMsimII::FileIOToken const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator->
PUBLIC	?detokenize@Settings@DRAMsimII@@SA_NW4FileIOToken@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::detokenize
PUBLIC	?check_coverage@?$lcast_src_length@DI@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,unsigned int>::check_coverage
PUBLIC	??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NI@Z ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,0,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
PUBLIC	?check_coverage@?$lcast_src_length@DW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::Address::AddressMappingScheme>::check_coverage
PUBLIC	??$lcast_get_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@YAHPAW4AddressMappingScheme@Address@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::Address::AddressMappingScheme>
PUBLIC	??$lcast_set_precision@W4AddressMappingScheme@Address@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4AddressMappingScheme@Address@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::Address::AddressMappingScheme,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4AddressMappingScheme@Address@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::operator<<
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme>
PUBLIC	?check_coverage@?$lcast_src_length@DW4RowBufferPolicy@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::RowBufferPolicy>::check_coverage
PUBLIC	??$lcast_get_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RowBufferPolicy@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::RowBufferPolicy>
PUBLIC	??$lcast_set_precision@W4RowBufferPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RowBufferPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::RowBufferPolicy,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RowBufferPolicy@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::operator<<
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy>
PUBLIC	?check_coverage@?$lcast_src_length@DW4RefreshPolicy@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::RefreshPolicy>::check_coverage
PUBLIC	??$lcast_get_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RefreshPolicy@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::RefreshPolicy>
PUBLIC	??$lcast_set_precision@W4RefreshPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RefreshPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::RefreshPolicy,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RefreshPolicy@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::operator<<
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy>
PUBLIC	?check_coverage@?$lcast_src_length@DW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::CommandOrderingAlgorithm>::check_coverage
PUBLIC	??$lcast_get_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4CommandOrderingAlgorithm@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::CommandOrderingAlgorithm>
PUBLIC	??$lcast_set_precision@W4CommandOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4CommandOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::CommandOrderingAlgorithm,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4CommandOrderingAlgorithm@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::operator<<
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm>
PUBLIC	?check_coverage@?$lcast_src_length@DW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::TransactionOrderingAlgorithm>::check_coverage
PUBLIC	??$lcast_get_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4TransactionOrderingAlgorithm@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::TransactionOrderingAlgorithm>
PUBLIC	??$lcast_set_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4TransactionOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::TransactionOrderingAlgorithm,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::operator<<
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm>
PUBLIC	?check_coverage@?$lcast_src_length@DW4SystemConfigurationType@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::SystemConfigurationType>::check_coverage
PUBLIC	??$lcast_get_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@YAHPAW4SystemConfigurationType@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::SystemConfigurationType>
PUBLIC	??$lcast_set_precision@W4SystemConfigurationType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4SystemConfigurationType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::SystemConfigurationType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4SystemConfigurationType@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::operator<<
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType>
PUBLIC	?check_coverage@?$lcast_src_length@DM@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,float>::check_coverage
PUBLIC	??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
PUBLIC	??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::lcast_put<float>
PUBLIC	??6?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NM@Z ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::operator<<
PUBLIC	??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::operator>><std::allocator<char> >
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float,0,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
PUBLIC	?check_coverage@?$lcast_src_length@DW4OutputFileType@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::OutputFileType>::check_coverage
PUBLIC	??$lcast_get_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@YAHPAW4OutputFileType@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::OutputFileType>
PUBLIC	??$lcast_set_precision@W4OutputFileType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4OutputFileType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::OutputFileType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4OutputFileType@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::operator<<
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType>
PUBLIC	?check_coverage@?$lcast_src_length@D_J@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,__int64>::check_coverage
PUBLIC	??$lcast_to_unsigned@_J@detail@boost@@YA_K_J@Z	; boost::detail::lcast_to_unsigned<__int64>
PUBLIC	??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned __int64,char>
PUBLIC	??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_N_J@Z ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64,0,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_J@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64>
PUBLIC	?check_coverage@?$lcast_src_length@DW4InputType@InputStream@DRAMsimII@@@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,enum DRAMsimII::InputStream::InputType>::check_coverage
PUBLIC	??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
PUBLIC	??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::basic_iostream<char,std::char_traits<char> >::basic_iostream<char,std::char_traits<char> >
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$lcast_get_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lcast_get_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$lcast_get_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@YAHPAW4InputType@InputStream@DRAMsimII@@@Z ; boost::detail::lcast_get_precision<enum DRAMsimII::InputStream::InputType>
PUBLIC	??$lcast_set_precision@W4InputType@InputStream@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4InputType@InputStream@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; boost::detail::lcast_set_precision<enum DRAMsimII::InputStream::InputType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >
PUBLIC	??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
PUBLIC	??_D?$basic_iostream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_iostream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??_G?$basic_iostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_iostream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_iostream<char,std::char_traits<char> >::~basic_iostream<char,std::char_traits<char> >
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ; std::basic_streambuf<char,std::char_traits<char> >::setp
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >
PUBLIC	??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4InputType@InputStream@DRAMsimII@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::operator<<
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::operator>>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,1,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType>
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
PUBLIC	??1?$_Vector_val@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ; std::_Vector_val<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~_Vector_val<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
PUBLIC	?deallocate@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@I@Z ; std::allocator<boost::shared_ptr<boost::program_options::option_description> >::deallocate
PUBLIC	??$_Ptr_cat@PAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z ; std::_Ptr_cat<boost::shared_ptr<boost::program_options::option_description> *,boost::shared_ptr<boost::program_options::option_description> *>
PUBLIC	??1?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::program_options::option_description>::~shared_ptr<boost::program_options::option_description>
PUBLIC	??_G?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAEPAXI@Z ; boost::shared_ptr<boost::program_options::option_description>::`scalar deleting destructor'
PUBLIC	??$_Destroy@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z ; std::_Destroy<boost::shared_ptr<boost::program_options::option_description> >
PUBLIC	?destroy@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z ; std::allocator<boost::shared_ptr<boost::program_options::option_description> >::destroy
PUBLIC	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
PUBLIC	?_Destroy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::_Tidy
PUBLIC	??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@D@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<char> >::~_Container_base_aux_alloc_real<std::allocator<char> >
PUBLIC	??1?$_Vector_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_Vector_val<char,std::allocator<char> >::~_Vector_val<char,std::allocator<char> >
PUBLIC	??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<char> >
PUBLIC	??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@@Z ; std::_Destroy_range<std::allocator<char> >
PUBLIC	?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IAEXPAD0@Z ; std::vector<char,std::allocator<char> >::_Destroy
PUBLIC	?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IAEXXZ ; std::vector<char,std::allocator<char> >::_Tidy
PUBLIC	??1?$vector@DV?$allocator@D@std@@@std@@QAE@XZ	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
PUBLIC	??1?$_Vector_val@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ; std::_Vector_val<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~_Vector_val<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
PUBLIC	?deallocate@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@I@Z ; std::allocator<boost::shared_ptr<boost::program_options::options_description> >::deallocate
PUBLIC	??$_Ptr_cat@PAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z ; std::_Ptr_cat<boost::shared_ptr<boost::program_options::options_description> *,boost::shared_ptr<boost::program_options::options_description> *>
PUBLIC	??1?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::program_options::options_description>::~shared_ptr<boost::program_options::options_description>
PUBLIC	??_G?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAEPAXI@Z ; boost::shared_ptr<boost::program_options::options_description>::`scalar deleting destructor'
PUBLIC	??$_Destroy@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z ; std::_Destroy<boost::shared_ptr<boost::program_options::options_description> >
PUBLIC	?destroy@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z ; std::allocator<boost::shared_ptr<boost::program_options::options_description> >::destroy
PUBLIC	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
PUBLIC	?_Destroy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::_Tidy
PUBLIC	??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
PUBLIC	??1options_description@program_options@boost@@QAE@XZ ; boost::program_options::options_description::~options_description
PUBLIC	?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Myval
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Key
PUBLIC	??0?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Eqrange
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::equal_range
PUBLIC	??$_Iter_cat@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>
PUBLIC	??$_Distance2@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>
PUBLIC	??$_Distance@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>
PUBLIC	?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::count
PUBLIC	??_Gabstract_variables_map@program_options@boost@@UAEPAXI@Z ; boost::program_options::abstract_variables_map::`scalar deleting destructor'
PUBLIC	??1abstract_variables_map@program_options@boost@@UAE@XZ ; boost::program_options::abstract_variables_map::~abstract_variables_map
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >
PUBLIC	??1?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@QAE@XZ ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>::~_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>
PUBLIC	??1?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
PUBLIC	??1?$_Tree_ptr@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node *>
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node *>::destroy
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::end
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Color
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@HPBU12@ABU12@@std@@QAE@XZ ; std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &>::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &>
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::const_iterator
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::iterator::iterator
PUBLIC	?_Make_iter@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Make_iter
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lrotate
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Max
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rrotate
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Mynode
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>::deallocate
PUBLIC	??1?$shared_ptr@$$CBVvalue_semantic@program_options@boost@@@boost@@QAE@XZ ; boost::shared_ptr<boost::program_options::value_semantic const >::~shared_ptr<boost::program_options::value_semantic const >
PUBLIC	??1variable_value@program_options@boost@@QAE@XZ	; boost::program_options::variable_value::~variable_value
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>
PUBLIC	??1_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node::~_Node
PUBLIC	??_G_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node::`scalar deleting destructor'
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>::destroy
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Erase
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lmost
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Root
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::clear
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Parent
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Right
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Isnil
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Left
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Min
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator++
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator++
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator==
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator!=
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Tidy
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >
PUBLIC	??1?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@QAE@XZ ; std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>::~_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>
PUBLIC	??1?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
PUBLIC	??1?$_Tree_ptr@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_ptr<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_ptr<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
PUBLIC	??1?$_Tree_val@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_val<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node *>
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node *>::destroy
PUBLIC	?begin@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::end
PUBLIC	?_Color@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Color
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Bidit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ; std::_Bidit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Bidit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??0const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::const_iterator
PUBLIC	??0iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::iterator::iterator
PUBLIC	?_Make_iter@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Make_iter
PUBLIC	?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lrotate
PUBLIC	?_Max@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Max
PUBLIC	?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rrotate
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Mynode
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>::deallocate
PUBLIC	??1_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node::~_Node
PUBLIC	??_G_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node::`scalar deleting destructor'
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>::destroy
PUBLIC	?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Erase
PUBLIC	?_Lmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lmost
PUBLIC	?_Rmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Root
PUBLIC	?clear@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::clear
PUBLIC	?_Parent@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Parent
PUBLIC	?_Right@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Right
PUBLIC	?_Isnil@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Isnil
PUBLIC	?_Left@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Left
PUBLIC	?_Min@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Min
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Inc
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator++
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator++
PUBLIC	??8const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator==
PUBLIC	??9const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator!=
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase
PUBLIC	?_Tidy@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Tidy
PUBLIC	??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
PUBLIC	??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1variables_map@program_options@boost@@UAE@XZ	; boost::program_options::variables_map::~variables_map
PUBLIC	??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::setKeyValue
PUBLIC	??0any@boost@@QAE@XZ				; boost::any::any
PUBLIC	??0value_semantic@program_options@boost@@QAE@XZ	; boost::program_options::value_semantic::value_semantic
PUBLIC	??_G?$value_semantic_codecvt_helper@D@program_options@boost@@UAEPAXI@Z ; boost::program_options::value_semantic_codecvt_helper<char>::`scalar deleting destructor'
PUBLIC	??0?$value_semantic_codecvt_helper@D@program_options@boost@@QAE@XZ ; boost::program_options::value_semantic_codecvt_helper<char>::value_semantic_codecvt_helper<char>
PUBLIC	??0typed_value_base@program_options@boost@@QAE@XZ ; boost::program_options::typed_value_base::typed_value_base
PUBLIC	??0?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::name
PUBLIC	?is_composing@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NXZ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::is_composing
PUBLIC	?min_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::min_tokens
PUBLIC	?max_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::max_tokens
PUBLIC	?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
PUBLIC	?xparse@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::xparse
PUBLIC	??0any@boost@@QAE@ABV01@@Z			; boost::any::any
PUBLIC	?empty@any@boost@@QBE_NXZ			; boost::any::empty
PUBLIC	?apply_default@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NAAVany@3@@Z ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::apply_default
PUBLIC	??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::operator()
PUBLIC	?nonnull@dummy@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::nonnull
PUBLIC	??B?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEP8dummy@01@AEXXZXZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::operator void (__thiscall boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::*)(void)
PUBLIC	?type@any@boost@@QBEABVtype_info@@XZ		; boost::any::type
PUBLIC	??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVany@0@@Z ; boost::any_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBVany@0@@Z ; boost::any_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	?notify@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXABVany@3@@Z ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::notify
PUBLIC	?value_type@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEABVtype_info@@XZ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::value_type
PUBLIC	??_Gvalue_semantic@program_options@boost@@UAEPAXI@Z ; boost::program_options::value_semantic::`scalar deleting destructor'
PUBLIC	??1value_semantic@program_options@boost@@UAE@XZ	; boost::program_options::value_semantic::~value_semantic
PUBLIC	??1?$value_semantic_codecvt_helper@D@program_options@boost@@UAE@XZ ; boost::program_options::value_semantic_codecvt_helper<char>::~value_semantic_codecvt_helper<char>
PUBLIC	??_Gtyped_value_base@program_options@boost@@UAEPAXI@Z ; boost::program_options::typed_value_base::`scalar deleting destructor'
PUBLIC	??1typed_value_base@program_options@boost@@UAE@XZ ; boost::program_options::typed_value_base::~typed_value_base
PUBLIC	?get_vtable@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@ABEPAU?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@2@XZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::get_vtable
PUBLIC	?clear@?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ; boost::detail::function::basic_vtable1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
PUBLIC	?clear@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
PUBLIC	??1?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::~typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>
PUBLIC	??_G?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAEPAXI@Z ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`scalar deleting destructor'
PUBLIC	??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@W3AEPAXI@Z ; [thunk]:boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vector deleting destructor'
PUBLIC	??0?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>
PUBLIC	??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YAPAV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@01@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::program_options::value<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1any@boost@@QAE@XZ				; boost::any::~any
PUBLIC	??$swap@PAVplaceholder@any@boost@@@std@@YAXAAPAVplaceholder@any@boost@@0@Z ; std::swap<boost::any::placeholder *>
PUBLIC	?swap@any@boost@@QAEAAV12@AAV12@@Z		; boost::any::swap
PUBLIC	??4any@boost@@QAEAAV01@V01@@Z			; boost::any::operator=
PUBLIC	??$?6V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<<std::allocator<char> >
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0placeholder@any@boost@@QAE@XZ		; boost::any::placeholder::placeholder
PUBLIC	?type@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEABVtype_info@@XZ ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::type
PUBLIC	?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::clone
PUBLIC	??_Gplaceholder@any@boost@@UAEPAXI@Z		; boost::any::placeholder::`scalar deleting destructor'
PUBLIC	??1placeholder@any@boost@@UAE@XZ		; boost::any::placeholder::~placeholder
PUBLIC	??1?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAE@XZ ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??_G?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAEPAXI@Z ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::any::any<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::default_value
PUBLIC	??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z ; boost::program_options::detail::make_vector<char,char * *>
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
PUBLIC	??G?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator-
PUBLIC	??Y?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+=
PUBLIC	??Y?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+
PUBLIC	?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z ; boost::program_options::to_internal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z ; boost::program_options::basic_command_line_parser<char>::basic_command_line_parser<char>
PUBLIC	?options@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@ABVoptions_description@23@@Z ; boost::program_options::basic_command_line_parser<char>::options
PUBLIC	?style@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@H@Z ; boost::program_options::basic_command_line_parser<char>::style
PUBLIC	?assign_to_own@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@AAEXABV12@@Z ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::assign_to_own
PUBLIC	??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@ABV01@@Z ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z ; boost::program_options::basic_command_line_parser<char>::extra_parser
PUBLIC	??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@XZ ; std::allocator<boost::program_options::basic_option<char> >::allocator<boost::program_options::basic_option<char> >
PUBLIC	??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??0?$basic_parsed_options@D@program_options@boost@@QAE@PBVoptions_description@12@@Z ; boost::program_options::basic_parsed_options<char>::basic_parsed_options<char>
PUBLIC	?capacity@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::capacity
PUBLIC	?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::begin
PUBLIC	?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::end
PUBLIC	??0?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	?_Make_iter@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Make_iter
PUBLIC	??8?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator!=
PUBLIC	?erase@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@0@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::erase
PUBLIC	?clear@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::clear
PUBLIC	??$_Iter_random@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_option@D@program_options@boost@@0@Z ; std::_Iter_random<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
PUBLIC	??4?$basic_option@D@program_options@boost@@QAEAAV012@ABV012@@Z ; boost::program_options::basic_option<char>::operator=
PUBLIC	??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@Uforward_iterator_tag@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::forward_iterator_tag>
PUBLIC	??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
PUBLIC	??$unchecked_copy@PAV?$basic_option@D@program_options@boost@@PAV123@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00@Z ; stdext::unchecked_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
PUBLIC	??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<boost::program_options::basic_option<char> *>
PUBLIC	??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@@Z ; std::_Checked_base<boost::program_options::basic_option<char> *>
PUBLIC	??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??$unchecked_uninitialized_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@std@@@Z ; stdext::unchecked_uninitialized_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??$_Ucopy@PAV?$basic_option@D@program_options@boost@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@PAV234@00@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<boost::program_options::basic_option<char> *>
PUBLIC	??4?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator=
PUBLIC	??1?$basic_parsed_options@D@program_options@boost@@QAE@XZ ; boost::program_options::basic_parsed_options<char>::~basic_parsed_options<char>
PUBLIC	??$?0V?$basic_option@D@program_options@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><boost::program_options::basic_option<char> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@ABV01@@Z ; std::allocator<boost::program_options::basic_option<char> >::allocator<boost::program_options::basic_option<char> >
PUBLIC	??0?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z ; std::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::begin
PUBLIC	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_option@D@program_options@boost@@HPBV345@ABV345@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::random_access_iterator_tag,boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Ranit@V?$basic_option@D@program_options@boost@@HPBV123@ABV123@@std@@QAE@XZ ; std::_Ranit<boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &>::_Ranit<boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &>
PUBLIC	??0?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::end
PUBLIC	?size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::size
PUBLIC	??$_Allocate@V?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@IPAV123@@Z ; std::_Allocate<boost::program_options::basic_option<char> >
PUBLIC	?allocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEPAV?$basic_option@D@program_options@boost@@I@Z ; std::allocator<boost::program_options::basic_option<char> >::allocate
PUBLIC	?max_size@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QBEIXZ ; std::allocator<boost::program_options::basic_option<char> >::max_size
PUBLIC	?max_size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::max_size
PUBLIC	?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Xlen
PUBLIC	?_Buy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE_NI@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Buy
PUBLIC	?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEPBV?$basic_option@D@program_options@boost@@XZ ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > > >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@AAPAV?$basic_option@D@program_options@boost@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,boost::program_options::basic_option<char> *>
PUBLIC	??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z ; boost::program_options::basic_option<char>::basic_option<char>
PUBLIC	??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z ; std::_Construct<boost::program_options::basic_option<char>,boost::program_options::basic_option<char> >
PUBLIC	?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z ; std::allocator<boost::program_options::basic_option<char> >::construct
PUBLIC	??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@2@@stdext@@YAPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@5@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@1@0PAV234@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > > >
PUBLIC	??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >::~_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??1?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ; std::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::~_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	?deallocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@I@Z ; std::allocator<boost::program_options::basic_option<char> >::deallocate
PUBLIC	??$_Ptr_cat@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_option@D@program_options@boost@@0@Z ; std::_Ptr_cat<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
PUBLIC	??1?$basic_option@D@program_options@boost@@QAE@XZ ; boost::program_options::basic_option<char>::~basic_option<char>
PUBLIC	??_G?$basic_option@D@program_options@boost@@QAEPAXI@Z ; boost::program_options::basic_option<char>::`scalar deleting destructor'
PUBLIC	??$_Destroy@V?$basic_option@D@program_options@boost@@@std@@YAXPAV?$basic_option@D@program_options@boost@@@Z ; std::_Destroy<boost::program_options::basic_option<char> >
PUBLIC	?destroy@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@@Z ; std::allocator<boost::program_options::basic_option<char> >::destroy
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@@Z ; std::_Destroy_range<std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	?_Destroy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXPAV?$basic_option@D@program_options@boost@@0@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy
PUBLIC	??1?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::~vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
PUBLIC	??0?$basic_parsed_options@D@program_options@boost@@QAE@ABV012@@Z ; boost::program_options::basic_parsed_options<char>::basic_parsed_options<char>
PUBLIC	?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ ; boost::program_options::basic_command_line_parser<char>::run
PUBLIC	?get_vtable@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@ABEPAU?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@2@XZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::get_vtable
PUBLIC	?clear@?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ; boost::detail::function::basic_vtable1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
PUBLIC	?clear@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAEXXZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
PUBLIC	??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	?get_vtable@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@ABEPAU?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@2@XZ ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::get_vtable
PUBLIC	?clear@?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ; boost::detail::function::basic_vtable1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::clear
PUBLIC	?clear@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAEXXZ ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::clear
PUBLIC	??1?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAE@XZ ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::~function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??1cmdline@detail@program_options@boost@@QAE@XZ	; boost::program_options::detail::cmdline::~cmdline
PUBLIC	??1?$basic_command_line_parser@D@program_options@boost@@QAE@XZ ; boost::program_options::basic_command_line_parser<char>::~basic_command_line_parser<char>
PUBLIC	??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z ; boost::program_options::parse_command_line<char>
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ifstream<char,std::char_traits<char> >::is_open
PUBLIC	??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??0is_classifiedF@detail@algorithm@boost@@QAE@FABVlocale@std@@@Z ; boost::algorithm::detail::is_classifiedF::is_classifiedF
PUBLIC	?is_space@algorithm@boost@@YA?AUis_classifiedF@detail@12@ABVlocale@std@@@Z ; boost::algorithm::is_space
PUBLIC	??F?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator--
PUBLIC	??F?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator--
PUBLIC	??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z ; boost::algorithm::detail::trim_end_iter_select<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
PUBLIC	??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z ; boost::algorithm::detail::trim_end<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
PUBLIC	??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ; boost::algorithm::trim_right_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	??0is_classifiedF@detail@algorithm@boost@@QAE@ABU0123@@Z ; boost::algorithm::detail::is_classifiedF::is_classifiedF
PUBLIC	??1is_classifiedF@detail@algorithm@boost@@QAE@XZ ; boost::algorithm::detail::is_classifiedF::~is_classifiedF
PUBLIC	??$?RD@is_classifiedF@detail@algorithm@boost@@QBE_ND@Z ; boost::algorithm::detail::is_classifiedF::operator()<char>
PUBLIC	??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z ; boost::algorithm::detail::trim_begin<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
PUBLIC	??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ; boost::algorithm::trim_left_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
PUBLIC	??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ; boost::algorithm::trim_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
PUBLIC	??$trim@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z ; boost::algorithm::trim<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?is_char_ptr@range_detail@boost@@YA_NPBD@Z	; boost::range_detail::is_char_ptr
PUBLIC	?length@range_detail@boost@@YAIPBD@Z		; boost::range_detail::length
PUBLIC	??$?0PBD@?$iterator_range@PBD@boost@@QAE@PBD0@Z	; boost::iterator_range<char const *>::iterator_range<char const *><char const *>
PUBLIC	??$make_range@$$CBD@range_detail@boost@@YA?AV?$iterator_range@PBD@1@QBD_N@Z ; boost::range_detail::make_range<char const >
PUBLIC	??$as_literal@D$01@boost@@YA?AV?$iterator_range@PBD@0@AAY01$$CBD@Z ; boost::as_literal<char,2>
PUBLIC	??$distance@PBD@std@@YAHPBD0@Z			; std::distance<char const *>
PUBLIC	??$distance@V?$iterator_range@PBD@boost@@@boost@@YAHABV?$iterator_range@PBD@0@@Z ; boost::distance<boost::iterator_range<char const *> >
PUBLIC	?begin@?$iterator_range@PBD@boost@@QBEPBDXZ	; boost::iterator_range<char const *>::begin
PUBLIC	??$range_begin@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z ; boost::range_detail::range_begin<boost::iterator_range<char const *> const >
PUBLIC	??$begin@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z ; boost::begin<boost::iterator_range<char const *> >
PUBLIC	?end@?$iterator_range@PBD@boost@@QBEPBDXZ	; boost::iterator_range<char const *>::end
PUBLIC	??$range_end@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z ; boost::range_detail::range_end<boost::iterator_range<char const *> const >
PUBLIC	??$end@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z ; boost::end<boost::iterator_range<char const *> >
PUBLIC	??$_Iter_random@PBDPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQBDABQAD@Z ; std::_Iter_random<char const *,char *>
PUBLIC	??$_Ptr_cat@PBDPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPBDAAPAD@Z ; std::_Ptr_cat<char const *,char *>
PUBLIC	??$_Copy_opt@PBDPADUrandom_access_iterator_tag@std@@@std@@YAPADPBD0PADUrandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<char const *,char *,std::random_access_iterator_tag>
PUBLIC	??$copy@PBDPAD@std@@YAPADPBD0PAD@Z		; std::copy<char const *,char *>
PUBLIC	??0?$pair@PADPAD@std@@QAE@ABQAD0@Z		; std::pair<char *,char *>::pair<char *,char *>
PUBLIC	??$_Med3@PAD@std@@YAXPAD00@Z			; std::_Med3<char *>
PUBLIC	??$_Median@PAD@std@@YAXPAD00@Z			; std::_Median<char *>
PUBLIC	??$iter_swap@PADPAD@std@@YAXPAD0@Z		; std::iter_swap<char *,char *>
PUBLIC	??$_Unguarded_partition@PAD@std@@YA?AU?$pair@PADPAD@0@PAD0@Z ; std::_Unguarded_partition<char *>
PUBLIC	??$_Make_heap@PADHD@std@@YAXPAD0PAH0@Z		; std::_Make_heap<char *,int,char>
PUBLIC	??$make_heap@PAD@std@@YAXPAD0@Z			; std::make_heap<char *>
PUBLIC	??$_Dist_type@PAD@std@@YAPAHPAD@Z		; std::_Dist_type<char *>
PUBLIC	??$_Push_heap@PADHD@std@@YAXPADHHD@Z		; std::_Push_heap<char *,int,char>
PUBLIC	??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z		; std::_Adjust_heap<char *,int,char>
PUBLIC	??$_Pop_heap@PADHD@std@@YAXPAD00DPAH@Z		; std::_Pop_heap<char *,int,char>
PUBLIC	??$_Pop_heap_0@PADD@std@@YAXPAD00@Z		; std::_Pop_heap_0<char *,char>
PUBLIC	??$pop_heap@PAD@std@@YAXPAD0@Z			; std::pop_heap<char *>
PUBLIC	??$_Sort_heap@PAD@std@@YAXPAD0@Z		; std::_Sort_heap<char *>
PUBLIC	??$sort_heap@PAD@std@@YAXPAD0@Z			; std::sort_heap<char *>
PUBLIC	??$_Val_type@PAD@std@@YAPADPAD@Z		; std::_Val_type<char *>
PUBLIC	??$_Ptr_cat@PADPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAD0@Z ; std::_Ptr_cat<char *,char *>
PUBLIC	??$_Checked_base@PAD@std@@YAPADAAPADU_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<char *>
PUBLIC	??$_Checked_base@PAD@std@@YAPADAAPAD@Z		; std::_Checked_base<char *>
PUBLIC	??$_Iter_random@PADPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD0@Z ; std::_Iter_random<char *,char *>
PUBLIC	??$_Copy_backward_opt@PADPADUrandom_access_iterator_tag@std@@@std@@YAPADPAD00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<char *,char *,std::random_access_iterator_tag>
PUBLIC	??$unchecked_copy_backward@PADPAD@stdext@@YAPADPAD00@Z ; stdext::unchecked_copy_backward<char *,char *>
PUBLIC	??$_Insertion_sort1@PADD@std@@YAXPAD00@Z	; std::_Insertion_sort1<char *,char>
PUBLIC	??$_Insertion_sort@PAD@std@@YAXPAD0@Z		; std::_Insertion_sort<char *>
PUBLIC	??$_Sort@PADH@std@@YAXPAD0H@Z			; std::_Sort<char *,int>
PUBLIC	??$sort@PAD@std@@YAXPAD0@Z			; std::sort<char *>
PUBLIC	??$?0V?$iterator_range@PBD@boost@@@?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABV?$iterator_range@PBD@3@@Z ; boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<char><boost::iterator_range<char const *> >
PUBLIC	??$is_any_of@$$BY01$$CBD@algorithm@boost@@YA?AU?$is_any_ofF@D@detail@01@AAY01$$CBD@Z ; boost::algorithm::is_any_of<char const [2]>
PUBLIC	??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::token_finderF<boost::algorithm::detail::is_any_ofF<char> >
PUBLIC	??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z ; boost::algorithm::token_finder<boost::algorithm::detail::is_any_ofF<char> >
PUBLIC	??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z ; std::swap<std::_Aux_cont *>
PUBLIC	??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z ; std::swap<std::_Aux_cont>
PUBLIC	?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z ; std::_Container_base_aux::_Swap_aux
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Checked_iterator_base
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Different_checked_iterator_base_type_tag>
PUBLIC	??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ; std::_Checked_base<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@0PAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
PUBLIC	??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
PUBLIC	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
PUBLIC	??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>
PUBLIC	??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$unchecked_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
PUBLIC	??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ; std::operator==<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$swap@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::swap<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	?swap@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXAAV12@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::swap
PUBLIC	??$function_requires@U?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@boost@@YAXPAU?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@@Z ; boost::function_requires<boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$range_end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; boost::range_detail::range_end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; boost::end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$range_begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; boost::range_detail::range_begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; boost::begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??_G?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAEPAXI@Z ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::`scalar deleting destructor'
PUBLIC	?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ; boost::detail::function::functor_manager_common<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage_small
PUBLIC	?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@U?$bool_@$00@mpl@4@@Z ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manager
PUBLIC	?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@Ufunction_obj_tag@234@@Z ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manager
PUBLIC	?manage@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage
PUBLIC	??$_Find_if@PADU?$is_any_ofF@D@detail@algorithm@boost@@@std@@YAPADPAD0U?$is_any_ofF@D@detail@algorithm@boost@@@Z ; std::_Find_if<char *,boost::algorithm::detail::is_any_ofF<char> >
PUBLIC	?_Checked_iterator_assign_from_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_Checked_iterator_assign_from_base
PUBLIC	??$_Checked_assign_from_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@std@@YAXAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABQAD@Z ; std::_Checked_assign_from_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,char *>
PUBLIC	??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z ; std::find_if<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >
PUBLIC	??$_Checked_base@PBD@std@@YAPBDAAPBDU_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<char const *>
PUBLIC	??$_Checked_base@PBD@std@@YAPBDAAPBD@Z		; std::_Checked_base<char const *>
PUBLIC	??$_Dist_type@PBD@std@@YAPAHPBD@Z		; std::_Dist_type<char const *>
PUBLIC	??$_Distance2@PBDH@std@@YAXPBD0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<char const *,int>
PUBLIC	??$_Distance@PBDH@std@@YAXPBD0AAH@Z		; std::_Distance<char const *,int>
PUBLIC	??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z ; std::_Iter_cat<char const *>
PUBLIC	??$_Advance@PBDH@std@@YAXAAPBDHUrandom_access_iterator_tag@0@@Z ; std::_Advance<char const *,int>
PUBLIC	??$advance@PBDH@std@@YAXAAPBDH@Z		; std::advance<char const *,int>
PUBLIC	??$_Lower_bound@PBDDH@std@@YAPBDPBD0ABDPAH@Z	; std::_Lower_bound<char const *,char,int>
PUBLIC	??$_Checked_assign_from_base@PBD@std@@YAXAAPBDABQBD@Z ; std::_Checked_assign_from_base<char const *>
PUBLIC	??$lower_bound@PBDD@std@@YAPBDPBD0ABD@Z		; std::lower_bound<char const *,char>
PUBLIC	??$binary_search@PBDD@std@@YA_NPBD0ABD@Z	; std::binary_search<char const *,char>
PUBLIC	??$?RD@?$is_any_ofF@D@detail@algorithm@boost@@QBE_ND@Z ; boost::algorithm::detail::is_any_ofF<char>::operator()<char>
PUBLIC	??$?RV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::operator()<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?invoke@?$function_obj_invoker2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V67@@function@detail@boost@@SA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@AATfunction_buffer@234@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ; boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::invoke
PUBLIC	?has_empty_target@function@detail@boost@@YA_NZZ	; boost::detail::function::has_empty_target
PUBLIC	?f@?$addressof_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@SAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AAU4253@J@Z ; boost::detail::addressof_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::f
PUBLIC	??0?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QAE@AAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@@Z ; boost::detail::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??B?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QBEAAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@XZ ; boost::detail::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::operator boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > &
PUBLIC	??$addressof@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@boost@@YAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@0@AAU1230@@Z ; boost::addressof<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::~token_finderF<boost::algorithm::detail::is_any_ofF<char> >
PUBLIC	??0?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABU0123@@Z ; boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<char>
PUBLIC	?use_fixed_storage@?$is_any_ofF@D@detail@algorithm@boost@@CA_NI@Z ; boost::algorithm::detail::is_any_ofF<char>::use_fixed_storage
PUBLIC	??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ ; boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF<char>
PUBLIC	??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@ABU0123@@Z ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::token_finderF<boost::algorithm::detail::is_any_ofF<char> >
PUBLIC	??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
PUBLIC	??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@31@@Z ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>
PUBLIC	??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z ; boost::make_transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	??0function_base@boost@@QAE@XZ			; boost::function_base::function_base
PUBLIC	?assign_to_own@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXABV12@@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to_own
PUBLIC	??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@ABV01@@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@ABV0123@@Z ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV01@@Z ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
PUBLIC	??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV01@@Z ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>
PUBLIC	??$_Iter_cat@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@std@@YA?AU?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@3@@Z ; std::_Iter_cat<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Ranit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ; std::_Ranit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Ranit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?_Reverse@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reverse
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$unchecked_uninitialized_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IABV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ufill
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
PUBLIC	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
PUBLIC	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Unchecked_uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; stdext::_Unchecked_uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z ; std::_Fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z ; std::fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Iter_random@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Iter_random<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Move_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Move_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
PUBLIC	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
PUBLIC	??$swap@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::swap<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Swap_adl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Swap_adl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>
PUBLIC	??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Unchecked_move_backward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z ; stdext::_Unchecked_move_backward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_n
PUBLIC	?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@ABEABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::derived
PUBLIC	??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator!=
PUBLIC	??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
PUBLIC	??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
PUBLIC	??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
PUBLIC	??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z ; std::_Distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
PUBLIC	??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$copy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; boost::copy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??R?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@@Z ; boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator()
PUBLIC	?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@ABEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::derived
PUBLIC	?dereference@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@XZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::dereference
PUBLIC	??$dereference@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z ; boost::iterator_core_access::dereference<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??D?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QBEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::operator*
PUBLIC	?dereference@?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@ABE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::dereference
PUBLIC	??$dereference@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z ; boost::iterator_core_access::dereference<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??D?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::operator*
PUBLIC	?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@AAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::derived
PUBLIC	?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@AAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::derived
PUBLIC	??4?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEAAV01@ABV01@@Z ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator=
PUBLIC	??0bad_function_call@boost@@QAE@XZ		; boost::bad_function_call::bad_function_call
PUBLIC	??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABVbad_function_call@2@@Z ; boost::exception_detail::error_info_injector<boost::bad_function_call>::error_info_injector<boost::bad_function_call>
PUBLIC	??$enable_error_info@Vbad_function_call@boost@@@boost@@YA?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@0@ABVbad_function_call@0@@Z ; boost::enable_error_info<boost::bad_function_call>
PUBLIC	??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >
PUBLIC	??$enable_current_exception@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vbad_function_call@boost@@@20@@Z ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::bad_function_call> >
PUBLIC	?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone
PUBLIC	?rethrow@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::rethrow
PUBLIC	??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WCI@AEPAXI@Z ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vector deleting destructor'
PUBLIC	??1?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::~clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >
PUBLIC	??_G?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`scalar deleting destructor'
PUBLIC	??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WDM@AEPAXI@Z ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vector deleting destructor'
PUBLIC	??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >
PUBLIC	??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>
PUBLIC	??_G?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAEPAXI@Z ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`scalar deleting destructor'
PUBLIC	??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@WCI@AEPAXI@Z ; [thunk]:boost::exception_detail::error_info_injector<boost::bad_function_call>::`vector deleting destructor'
PUBLIC	??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z ; boost::exception_detail::error_info_injector<boost::bad_function_call>::error_info_injector<boost::bad_function_call>
PUBLIC	??1bad_function_call@boost@@UAE@XZ		; boost::bad_function_call::~bad_function_call
PUBLIC	??_Gbad_function_call@boost@@UAEPAXI@Z		; boost::bad_function_call::`scalar deleting destructor'
PUBLIC	??0bad_function_call@boost@@QAE@ABV01@@Z	; boost::bad_function_call::bad_function_call
PUBLIC	??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z ; boost::throw_exception<boost::bad_function_call>
PUBLIC	??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator()
PUBLIC	?do_find@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::do_find
PUBLIC	??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment
PUBLIC	??$increment@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAXAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z ; boost::iterator_core_access::increment<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??E?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@XZ ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::operator++
PUBLIC	?increment@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@AAEXXZ ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::increment
PUBLIC	??$increment@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CAXAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z ; boost::iterator_core_access::increment<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??E?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@XZ ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::operator++
PUBLIC	?has_trivial_copy_and_destroy@function_base@boost@@QBE_NXZ ; boost::function_base::has_trivial_copy_and_destroy
PUBLIC	?get_vtable@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@ABEPAU?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@2@XZ ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::get_vtable
PUBLIC	?clear@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::clear
PUBLIC	?clear@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAEXXZ ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::clear
PUBLIC	??1?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@XZ ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::~iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
PUBLIC	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::~transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>
PUBLIC	?base@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QBEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::base
PUBLIC	??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==
PUBLIC	?empty@function_base@boost@@QBE_NXZ		; boost::function_base::empty
PUBLIC	?is_null@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE_NXZ ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::is_null
PUBLIC	?eof@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QBE_NXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::eof
PUBLIC	??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Iter_cat<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
PUBLIC	??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,int>
PUBLIC	??$distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAHV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$distance@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YAHABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; boost::distance<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Equal@PADPADUforward_iterator_tag@std@@@std@@YA_NPAD00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<char *,char *,std::forward_iterator_tag>
PUBLIC	??$_Equal@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_NPAD0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$equal@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA_NV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@00@Z ; std::equal<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$equal@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V12@@iterator_range_detail@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0@Z ; boost::iterator_range_detail::equal<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$?8V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ; boost::operator==<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
PUBLIC	??$equal@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@iterator_core_access@boost@@CA_NABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@0U?$bool_@$00@mpl@1@@Z ; boost::iterator_core_access::equal<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$?8V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@Uforward_traversal_tag@2@ABV32@HV012@$$CBV32@U42@ABV32@H@boost@@YA_NABV?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@0@0@Z ; boost::operator==<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>
PUBLIC	??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@ABE_NABV01@@Z ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::equal<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
PUBLIC	??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@iterator_core_access@boost@@CA_NABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@0U?$bool_@$00@mpl@1@@Z ; boost::iterator_core_access::equal<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??$?9V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@1@V23@HV01@V23@U41@V23@H@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@0@0@Z ; boost::operator!=<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>
PUBLIC	??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Construct<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > ><boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
PUBLIC	??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z ; boost::algorithm::iter_split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
PUBLIC	??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z ; boost::algorithm::split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >
PUBLIC	?check_coverage@?$lcast_src_length@DH@detail@boost@@SAXXZ ; boost::detail::lcast_src_length<char,int>::check_coverage
PUBLIC	??0?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE@PAD0@Z ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >
PUBLIC	??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned int,char>
PUBLIC	??$lcast_to_unsigned@H@detail@boost@@YAIH@Z	; boost::detail::lcast_to_unsigned<int>
PUBLIC	??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NH@Z ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?_Same_container@_Iterator_base_secure@std@@QBE_NABV12@@Z ; std::_Iterator_base_secure::_Same_container
PUBLIC	??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
PUBLIC	?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@KAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Pdif
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	??$_Iter_cat@PAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD@Z ; std::_Iter_cat<char *>
PUBLIC	??$_Distance2@PADI@std@@YAXPAD0AAIUrandom_access_iterator_tag@0@@Z ; std::_Distance2<char *,unsigned int>
PUBLIC	??$_Distance@PADI@std@@YAXPAD0AAI@Z		; std::_Distance<char *,unsigned int>
PUBLIC	??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<char *>
PUBLIC	??$?0PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *>
PUBLIC	??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Replace<char *>
PUBLIC	??$replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace<char *>
PUBLIC	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>
PUBLIC	??$assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<char *>
PUBLIC	??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator>><std::allocator<char> >
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,0,char>
PUBLIC	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>
PUBLIC	??_R0X@8					; void `RTTI Type Descriptor'
PUBLIC	??_C@_0BO@HKHPGMPA@call?5to?5empty?5boost?3?3function?$AA@ ; `string'
PUBLIC	?args@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@2HB ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::args
PUBLIC	?arity@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@2HB ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::arity
PUBLIC	?args@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@2HB ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::args
PUBLIC	?arity@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@2HB ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::arity
PUBLIC	??_C@_0BI@JMDKEDFB@Problem?5updating?5nodes?4?$AA@ ; `string'
PUBLIC	??_C@_02CBLDBPFN@?1?1?$AA@			; `string'
PUBLIC	??_C@_0BM@LALLMIH@Problem?5creating?5node?5path?4?$AA@ ; `string'
PUBLIC	??_C@_0EG@LMCFMIEN@Invalid?5memory?5override?5format?0?5@ ; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_0CE@HNIHGFH@warn?3?5Unrecognized?5key?1value?5pai@ ; `string'
PUBLIC	??_C@_01NEMOKFLO@?$DN?$AA@			; `string'
PUBLIC	??_C@_0P@FMHKABDI@note?3?5setting?5?$AA@	; `string'
PUBLIC	??_C@_03HLLJOCDO@1?40?$AA@			; `string'
PUBLIC	??_C@_0N@OJLPDPMO@dramspec?4dtd?$AA@		; `string'
PUBLIC	??_C@_05LABDNII@setup?$AA@			; `string'
PUBLIC	??_C@_05BDNCCAMC@cache?$AA@			; `string'
PUBLIC	??_C@_06BKDGJKBE@timing?$AA@			; `string'
PUBLIC	??_C@_05PLIADJJL@power?$AA@			; `string'
PUBLIC	??_C@_05BEKNGNCE@IDD5A?$AA@			; `string'
PUBLIC	??_C@_0BF@BJCAOBGA@simulationParameters?$AA@	; `string'
PUBLIC	??_C@_05EGJIMALK@UTF?98?$AA@			; `string'
PUBLIC	??_C@_0O@FJLGGDEL@Basic?5options?$AA@		; `string'
PUBLIC	?args@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@2HB ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::args
PUBLIC	?arity@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@2HB ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::arity
PUBLIC	??_C@_0N@ENNAEJOL@help?5message?$AA@		; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	??_C@_0BH@PHJLBNCG@The?5configuration?5file?$AA@ ; `string'
PUBLIC	??_C@_0M@MLABGBKK@config?9file?$AA@		; `string'
PUBLIC	??_C@_0BP@IINMPII@Modifiers?5to?5the?5settings?5file?$AA@ ; `string'
PUBLIC	??_C@_09OECJJJAK@modifiers?$AA@			; `string'
PUBLIC	??_C@_0FB@KEBNCEPP@?$CI?9?9help?5?$HM?5?9?9config?9file?5?$DMconfigu@ ; `string'
PUBLIC	??_C@_07CKBCDPF@Usage?3?5?$AA@			; `string'
PUBLIC	??_C@_0DF@BJCJMHJ@Where?5modifiers?5strings?5look?5lik@ ; `string'
PUBLIC	??_C@_0EC@BJNOIJIK@A?5configuration?5file?5MUST?5be?5spe@ ; `string'
PUBLIC	??_C@_0BP@PKIIIEGC@Unable?5to?5open?5settings?5file?5?$CC?$AA@ ; `string'
PUBLIC	??_C@_0BF@MNDKCPDC@?$CC?5does?5not?5validate?4?$AA@ ; `string'
PUBLIC	??_C@_09LAEKLCGB@inputType?$AA@			; `string'
PUBLIC	??_C@_0M@EPOHBJHA@outFileType?$AA@		; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_0CE@HHLPPEMJ@There?5was?5an?5error?5reading?1parsi@ ; `string'
PUBLIC	?is_const@?$cv_traits_imp@PAY01$$CBD@detail@boost@@2_NB ; boost::detail::cv_traits_imp<char const (*)[2]>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAY01$$CBD@detail@boost@@2_NB ; boost::detail::cv_traits_imp<char const (*)[2]>::is_volatile
PUBLIC	?is_const@?$cv_traits_imp@PAD@detail@boost@@2_NB ; boost::detail::cv_traits_imp<char *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAD@detail@boost@@2_NB ; boost::detail::cv_traits_imp<char *>::is_volatile
PUBLIC	?is_const@?$cv_traits_imp@PAW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::Address::AddressMappingScheme *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::Address::AddressMappingScheme *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	?value@?$result_@W4AddressMappingScheme@Address@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	?value@?$is_pointer_impl@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	?value@?$is_arithmetic_impl@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	?value@?$lcast_src_length@DW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	?is_const@?$cv_traits_imp@PAW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::RowBufferPolicy *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::RowBufferPolicy *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	?value@?$result_@W4RowBufferPolicy@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	?value@?$is_pointer_impl@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	?value@?$is_arithmetic_impl@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	?value@?$lcast_src_length@DW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	?is_const@?$cv_traits_imp@PAW4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::RefreshPolicy *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::RefreshPolicy *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::RefreshPolicy>::value
PUBLIC	?value@?$result_@W4RefreshPolicy@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::RefreshPolicy>::value
PUBLIC	?value@?$is_pointer_impl@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::RefreshPolicy>::value
PUBLIC	?value@?$is_arithmetic_impl@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::RefreshPolicy>::value
PUBLIC	?value@?$lcast_src_length@DW4RefreshPolicy@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::RefreshPolicy>::value
PUBLIC	?is_const@?$cv_traits_imp@PAW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::CommandOrderingAlgorithm *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::CommandOrderingAlgorithm *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	?value@?$result_@W4CommandOrderingAlgorithm@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	?value@?$is_pointer_impl@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	?value@?$is_arithmetic_impl@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	?value@?$lcast_src_length@DW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	?is_const@?$cv_traits_imp@PAW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::TransactionOrderingAlgorithm *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::TransactionOrderingAlgorithm *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	?value@?$result_@W4TransactionOrderingAlgorithm@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	?value@?$is_pointer_impl@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	?value@?$is_arithmetic_impl@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	?value@?$lcast_src_length@DW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	?is_const@?$cv_traits_imp@PAW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::SystemConfigurationType *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::SystemConfigurationType *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	?value@?$result_@W4SystemConfigurationType@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	?value@?$is_pointer_impl@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	?value@?$is_arithmetic_impl@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	?value@?$lcast_src_length@DW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	?value@?$ice_or@$0A@$00$0A@$0A@$0A@$0A@$0A@@type_traits@boost@@2_NB ; boost::type_traits::ice_or<0,1,0,0,0,0,0>::value
PUBLIC	?value@?$is_arithmetic_impl@M@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<float>::value
PUBLIC	?is_const@?$cv_traits_imp@PAW4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::OutputFileType *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::OutputFileType *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::OutputFileType>::value
PUBLIC	?value@?$result_@W4OutputFileType@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::OutputFileType>::value
PUBLIC	?value@?$is_pointer_impl@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::OutputFileType>::value
PUBLIC	?value@?$is_arithmetic_impl@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::OutputFileType>::value
PUBLIC	?value@?$lcast_src_length@DW4OutputFileType@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::OutputFileType>::value
PUBLIC	?is_const@?$cv_traits_imp@PAW4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::InputStream::InputType *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAW4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<enum DRAMsimII::InputStream::InputType *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<enum DRAMsimII::InputStream::InputType>::value
PUBLIC	?value@?$result_@W4InputType@InputStream@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::InputStream::InputType>::value
PUBLIC	?value@?$is_pointer_impl@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<enum DRAMsimII::InputStream::InputType>::value
PUBLIC	?value@?$is_arithmetic_impl@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<enum DRAMsimII::InputStream::InputType>::value
PUBLIC	?value@?$lcast_src_length@DW4InputType@InputStream@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_src_length<char,enum DRAMsimII::InputStream::InputType>::value
PUBLIC	??_C@_02DIDHHIJL@?$CJ?$FN?$AA@			; `string'
PUBLIC	??_C@_07OBNIPEJI@?$FL?$DNarg?$CI?$DN?$AA@	; `string'
PUBLIC	??_C@_03CCDPNADL@?5?$CI?$DN?$AA@		; `string'
PUBLIC	?value@?$lcast_streambuf_for_target@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_target<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	?value@?$lcast_streambuf_for_source@I@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<unsigned int>::value
PUBLIC	?value@?$lcast_streambuf_for_source@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	??_R0?AW4AddressMappingScheme@Address@DRAMsimII@@@8 ; enum DRAMsimII::Address::AddressMappingScheme `RTTI Type Descriptor'
PUBLIC	?value@?$lcast_streambuf_for_source@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	??_R0?AW4RowBufferPolicy@DRAMsimII@@@8		; enum DRAMsimII::RowBufferPolicy `RTTI Type Descriptor'
PUBLIC	?value@?$lcast_streambuf_for_source@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::RefreshPolicy>::value
PUBLIC	??_R0?AW4RefreshPolicy@DRAMsimII@@@8		; enum DRAMsimII::RefreshPolicy `RTTI Type Descriptor'
PUBLIC	?value@?$lcast_streambuf_for_source@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	??_R0?AW4CommandOrderingAlgorithm@DRAMsimII@@@8	; enum DRAMsimII::CommandOrderingAlgorithm `RTTI Type Descriptor'
PUBLIC	?value@?$lcast_streambuf_for_source@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	??_R0?AW4TransactionOrderingAlgorithm@DRAMsimII@@@8 ; enum DRAMsimII::TransactionOrderingAlgorithm `RTTI Type Descriptor'
PUBLIC	?value@?$lcast_streambuf_for_source@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	??_R0?AW4SystemConfigurationType@DRAMsimII@@@8	; enum DRAMsimII::SystemConfigurationType `RTTI Type Descriptor'
PUBLIC	?value@?$lcast_streambuf_for_source@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::OutputFileType>::value
PUBLIC	??_R0?AW4OutputFileType@DRAMsimII@@@8		; enum DRAMsimII::OutputFileType `RTTI Type Descriptor'
PUBLIC	?value@?$lcast_streambuf_for_source@_J@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<__int64>::value
PUBLIC	?value@?$lcast_streambuf_for_source@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::InputStream::InputType>::value
PUBLIC	??_R0?AW4InputType@InputStream@DRAMsimII@@@8	; enum DRAMsimII::InputStream::InputType `RTTI Type Descriptor'
PUBLIC	?is_const@?$cv_traits_imp@PBV?$iterator_range@PBD@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> const *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PBV?$iterator_range@PBD@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> const *>::is_volatile
PUBLIC	?is_volatile@?$cv_traits_imp@PAV?$iterator_range@PBD@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> *>::is_volatile
PUBLIC	?is_const@?$cv_traits_imp@PAV?$iterator_range@PBD@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> *>::is_const
PUBLIC	?is_const@?$cv_traits_imp@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>::is_volatile
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,std::input_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,std::input_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,std::output_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,std::output_iterator_tag>::value
PUBLIC	?p@?$assert_arg_pred_not@U?$is_iterator_category@Uforward_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<boost::forward_traversal_tag> >::p
PUBLIC	?mpl_assertion_in_line_43@?$facade_iterator_category_impl@Uforward_traversal_tag@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@ABV32@@detail@boost@@2IB ; boost::detail::facade_iterator_category_impl<boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &>::mpl_assertion_in_line_43
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::forward_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::random_access_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::random_access_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Ubidirectional_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::bidirectional_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Ubidirectional_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::bidirectional_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::forward_iterator_tag,boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::forward_iterator_tag,std::random_access_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::forward_iterator_tag,std::bidirectional_iterator_tag>::value
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,std::forward_iterator_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_iterator_tag@std@@U12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::forward_iterator_tag,std::forward_iterator_tag>::value
PUBLIC	?value@?$is_arithmetic_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
PUBLIC	?value@?$is_pointer_helper@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
PUBLIC	?value@?$result_@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
PUBLIC	?value@?$is_pointer_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
PUBLIC	?value@?$is_scalar_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB ; boost::detail::is_scalar_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
PUBLIC	?value@?$is_pod_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB ; boost::detail::is_pod_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
PUBLIC	?args@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@2HB ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::args
PUBLIC	?arity@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@2HB ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::arity
PUBLIC	?mpl_assertion_in_line_43@?$facade_iterator_category_impl@Uforward_traversal_tag@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@detail@boost@@2IB ; boost::detail::facade_iterator_category_impl<boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::mpl_assertion_in_line_43
PUBLIC	?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Usingle_pass_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::single_pass_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Usingle_pass_traversal_tag@2@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::single_pass_traversal_tag>::value
PUBLIC	?value@?$is_abstract_imp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	?value@?$is_convertible_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	?value@?$is_scalar_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::is_scalar_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	?value@?$is_pod_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::is_pod_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	?value@?$is_arithmetic_impl@U?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag> >::value
PUBLIC	?p@?$assert_arg_pred_not@U?$is_convertible@Usingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@boost@@@mpl@boost@@2_NB ; boost::mpl::assert_arg_pred_not<boost::is_convertible<boost::single_pass_traversal_tag,boost::forward_traversal_tag> >::p
PUBLIC	?mpl_assertion_in_line_39@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_39
PUBLIC	?p@?$assert_arg_pred_not@U?$is_iterator_category@Uinput_iterator_tag@std@@@detail@boost@@@mpl@boost@@2_NB ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<std::input_iterator_tag> >::p
PUBLIC	?mpl_assertion_in_line_40@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_40
PUBLIC	?mpl_assertion_in_line_41@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_41
PUBLIC	?p@?$assert_arg_pred_not@U?$is_iterator_traversal@Uinput_iterator_tag@std@@@detail@boost@@@mpl@boost@@2_NB ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_traversal<std::input_iterator_tag> >::p
PUBLIC	?mpl_assertion_in_line_42@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_42
PUBLIC	?value@?$is_convertible_basic_impl@AAU?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@Uincrementable_traversal_tag@3@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag> &,boost::incrementable_traversal_tag>::value
PUBLIC	?value@?$is_convertible_impl@U?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@Uincrementable_traversal_tag@3@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>,boost::incrementable_traversal_tag>::value
PUBLIC	?is_volatile@?$cv_traits_imp@PAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > *>::is_volatile
PUBLIC	?is_const@?$cv_traits_imp@PAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > *>::is_const
PUBLIC	?value@?$lcast_streambuf_for_source@H@detail@boost@@2_NB ; boost::detail::lcast_streambuf_for_source<int>::value
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
PUBLIC	?value@?$is_ununsigned_helper@_J@detail@boost@@2_NB ; boost::detail::is_ununsigned_helper<__int64>::value
PUBLIC	?value@?$is_unsigned_imp@_J@detail@boost@@2_NB	; boost::detail::is_unsigned_imp<__int64>::value
PUBLIC	??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> > `RTTI Type Descriptor'
PUBLIC	??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::error_info_injector<boost::bad_function_call> `RTTI Type Descriptor'
PUBLIC	??_R0?AVbad_function_call@boost@@@8		; boost::bad_function_call `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z64
PUBLIC	__CT??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z60
PUBLIC	__CT??_R0?AVbad_function_call@boost@@@8??0bad_function_call@boost@@QAE@ABV01@@Z40
PUBLIC	__CTA7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@
PUBLIC	__TI7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@
PUBLIC	?value@?$not_satisfied@U?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@concept@boost@@2_NB ; boost::concept::not_satisfied<boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
PUBLIC	?value@?$is_abstract_imp@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::precision_bin
PUBLIC	?value@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::value
PUBLIC	?use_default_precision@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2HB ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2IB ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2KB ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::precision_bin
PUBLIC	?value@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2HB ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
PUBLIC	?value@?$is_abstract_imp@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::precision_bin
PUBLIC	?value@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::value
PUBLIC	?value@?$is_abstract_imp@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::RefreshPolicy>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::precision_bin
PUBLIC	?value@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::value
PUBLIC	?value@?$is_abstract_imp@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::precision_bin
PUBLIC	?value@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::value
PUBLIC	?value@?$is_abstract_imp@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::precision_bin
PUBLIC	?value@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::value
PUBLIC	?value@?$is_abstract_imp@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::precision_bin
PUBLIC	?value@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::value
PUBLIC	?value@?$is_abstract_imp@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::OutputFileType>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::precision_bin
PUBLIC	?value@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::value
PUBLIC	?value@?$is_abstract_imp@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<enum DRAMsimII::InputStream::InputType>::value
PUBLIC	?use_default_precision@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::use_default_precision
PUBLIC	?is_specialized_bin@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::is_specialized_bin
PUBLIC	?is_specialized_dec@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::is_specialized_dec
PUBLIC	?streamsize_max@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::streamsize_max
PUBLIC	?precision_dec@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2IB ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::precision_dec
PUBLIC	?precision_bin@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2KB ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::precision_bin
PUBLIC	?value@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2HB ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::value
PUBLIC	?is_const@?$cv_traits_imp@PAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > *>::is_const
PUBLIC	?is_volatile@?$cv_traits_imp@PAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::cv_traits_imp<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > *>::is_volatile
PUBLIC	?value@?$is_pointer_helper@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_helper<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$result_@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$is_pointer_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::is_pointer_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?stored_vtable@?1???$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@2@@Z@4U?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@42@A ; `boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >'::`2'::stored_vtable
PUBLIC	?value@?$is_arithmetic_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$is_scalar_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::is_scalar_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$is_pod_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::is_pod_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$has_trivial_copy_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::has_trivial_copy_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$has_trivial_dtor_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::has_trivial_dtor_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$alignment_of_impl@Tfunction_buffer@function@detail@boost@@@detail@boost@@2IB ; boost::detail::alignment_of_impl<boost::detail::function::function_buffer>::value
PUBLIC	?value@?$alignment_of_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2IB ; boost::detail::alignment_of_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$function_allows_small_object_optimization@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@2_NB ; boost::detail::function::function_allows_small_object_optimization<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
PUBLIC	?value@?$is_arithmetic_impl@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
PUBLIC	?value@?$is_abstract_imp@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> &,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
PUBLIC	?value@?$is_convertible_impl@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
PUBLIC	??_R0?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@8 ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > `RTTI Type Descriptor'
PUBLIC	?value@?$is_arithmetic_impl@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::is_arithmetic_impl<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
PUBLIC	?value@?$is_abstract_imp@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@detail@boost@@2_NB ; boost::detail::is_abstract_imp<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
PUBLIC	?value@?$is_convertible_basic_impl@AAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_basic_impl<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > &,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
PUBLIC	?value@?$is_convertible_impl@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@detail@boost@@2_NB ; boost::detail::is_convertible_impl<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
PUBLIC	??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ostream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ostream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_iostream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_iostream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_iostream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7bad_function_call@boost@@6B@		; boost::bad_function_call::`vftable'
PUBLIC	??_7placeholder@any@boost@@6B@			; boost::any::placeholder::`vftable'
PUBLIC	??_7value_semantic@program_options@boost@@6B@	; boost::program_options::value_semantic::`vftable'
PUBLIC	??_7?$value_semantic_codecvt_helper@D@program_options@boost@@6B@ ; boost::program_options::value_semantic_codecvt_helper<char>::`vftable'
PUBLIC	??_7typed_value_base@program_options@boost@@6B@	; boost::program_options::typed_value_base::`vftable'
PUBLIC	??_7abstract_variables_map@program_options@boost@@6B@ ; boost::program_options::abstract_variables_map::`vftable'
PUBLIC	??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vftable'
PUBLIC	??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vftable'
PUBLIC	??_7?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@ ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`vftable'
PUBLIC	??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`vftable'
PUBLIC	??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`vftable'
PUBLIC	??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vftable'
PUBLIC	??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vftable'
PUBLIC	??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vftable'
EXTRN	_xmlNodeSetContent:PROC
EXTRN	_xmlXPathFreeObject:PROC
EXTRN	_xmlXPathNewContext:PROC
EXTRN	_xmlXPathFreeContext:PROC
EXTRN	_xmlXPathEvalExpression:PROC
EXTRN	_xmlCreateIntSubset:PROC
EXTRN	_xmlNewDoc:PROC
EXTRN	_xmlNewProp:PROC
EXTRN	_xmlNewNode:PROC
EXTRN	_xmlNewChild:PROC
EXTRN	_xmlDocSetRootElement:PROC
EXTRN	_xmlDocDumpFormatMemoryEnc:PROC
EXTRN	??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ostream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_iostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_iostream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??Roptions_description_easy_init@program_options@boost@@QAEAAV012@PBD0@Z:PROC ; boost::program_options::options_description_easy_init::operator()
EXTRN	??Roptions_description_easy_init@program_options@boost@@QAEAAV012@PBDPBVvalue_semantic@12@0@Z:PROC ; boost::program_options::options_description_easy_init::operator()
EXTRN	?m_default_line_length@options_description@program_options@boost@@2IB:DWORD ; boost::program_options::options_description::m_default_line_length
EXTRN	??0options_description@program_options@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z:PROC ; boost::program_options::options_description::options_description
EXTRN	?add_options@options_description@program_options@boost@@QAE?AVoptions_description_easy_init@23@XZ:PROC ; boost::program_options::options_description::add_options
EXTRN	?store@program_options@boost@@YAXABV?$basic_parsed_options@D@12@AAVvariables_map@12@_N@Z:PROC ; boost::program_options::store
EXTRN	?notify@program_options@boost@@YAXAAVvariables_map@12@@Z:PROC ; boost::program_options::notify
EXTRN	??0variables_map@program_options@boost@@QAE@XZ:PROC ; boost::program_options::variables_map::variables_map
EXTRN	??_Eabstract_variables_map@program_options@boost@@UAEPAXI@Z:PROC ; boost::program_options::abstract_variables_map::`vector deleting destructor'
EXTRN	_xmlFreeDoc:PROC
EXTRN	_xmlDocDumpMemory:PROC
EXTRN	_xmlMemoryDump:PROC
EXTRN	_xmlCleanupParser:PROC
EXTRN	_xmlParseFile:PROC
EXTRN	__imp__xmlFree:DWORD
EXTRN	_xmlFreeTextReader:PROC
EXTRN	_xmlTextReaderRead:PROC
EXTRN	_xmlTextReaderNodeType:PROC
EXTRN	_xmlTextReaderConstName:PROC
EXTRN	_xmlTextReaderConstValue:PROC
EXTRN	_xmlTextReaderGetAttribute:PROC
EXTRN	_xmlTextReaderIsValid:PROC
EXTRN	_xmlReaderForFile:PROC
EXTRN	??_E?$value_semantic_codecvt_helper@D@program_options@boost@@UAEPAXI@Z:PROC ; boost::program_options::value_semantic_codecvt_helper<char>::`vector deleting destructor'
EXTRN	?parse@?$value_semantic_codecvt_helper@D@program_options@boost@@EBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z:PROC ; boost::program_options::value_semantic_codecvt_helper<char>::parse
EXTRN	?arg@program_options@boost@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; boost::program_options::arg
EXTRN	?validate@program_options@boost@@YAXAAVany@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@H@Z:PROC ; boost::program_options::validate
EXTRN	??_Evalue_semantic@program_options@boost@@UAEPAXI@Z:PROC ; boost::program_options::value_semantic::`vector deleting destructor'
EXTRN	??_Etyped_value_base@program_options@boost@@UAEPAXI@Z:PROC ; boost::program_options::typed_value_base::`vector deleting destructor'
EXTRN	??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAEPAXI@Z:PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vector deleting destructor'
EXTRN	??_Eplaceholder@any@boost@@UAEPAXI@Z:PROC	; boost::any::placeholder::`vector deleting destructor'
EXTRN	??_E?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAEPAXI@Z:PROC ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`vector deleting destructor'
EXTRN	??0cmdline@detail@program_options@boost@@QAE@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z:PROC ; boost::program_options::detail::cmdline::cmdline
EXTRN	?to_internal@program_options@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@@Z:PROC ; boost::program_options::to_internal
EXTRN	?set_options_description@cmdline@detail@program_options@boost@@QAEXABVoptions_description@34@@Z:PROC ; boost::program_options::detail::cmdline::set_options_description
EXTRN	?style@cmdline@detail@program_options@boost@@QAEXH@Z:PROC ; boost::program_options::detail::cmdline::style
EXTRN	?set_additional_parser@cmdline@detail@program_options@boost@@QAEXV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@4@@Z:PROC ; boost::program_options::detail::cmdline::set_additional_parser
EXTRN	?run@cmdline@detail@program_options@boost@@QAE?AV?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@XZ:PROC ; boost::program_options::detail::cmdline::run
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??8type_info@@QBE_NABV0@@Z:PROC			; type_info::operator==
EXTRN	??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z:PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vector deleting destructor'
EXTRN	??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAEPAXI@Z:PROC ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`vector deleting destructor'
EXTRN	??_Ebad_function_call@boost@@UAEPAXI@Z:PROC	; boost::bad_function_call::`vector deleting destructor'
;	COMDAT ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
CONST	SEGMENT
??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ DD FLAT:??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vftable'
	DD	FLAT:?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	DD	FLAT:?rethrow@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ
	DD	FLAT:??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WDM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
rdata$r	SEGMENT
??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@ DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Complete Object Locator'
	DD	03cH
	DD	00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
CONST	SEGMENT
??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ DD FLAT:??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vftable'
	DD	FLAT:??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WCI@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
rdata$r	SEGMENT
??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@ DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
CONST	SEGMENT
??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ DD FLAT:??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vftable'
	DD	FLAT:??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
	DD	FLAT:?what@runtime_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
rdata$r	SEGMENT
??_R4?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R3?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8 DD 00H ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	FLAT:??_R2?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R2?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8 DD FLAT:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
	DD	FLAT:??_R1A@?0A@EA@bad_function_call@boost@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
	DD	FLAT:??_R1CI@?0A@EA@exception@boost@@8
	DD	FLAT:??_R1DM@?0A@EA@clone_base@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8 DD FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@
CONST	SEGMENT
??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@ DD FLAT:??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`vftable'
	DD	FLAT:??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@WCI@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@
rdata$r	SEGMENT
??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@ DD 00H ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
CONST	SEGMENT
??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ DD FLAT:??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`vftable'
	DD	FLAT:??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAEPAXI@Z
	DD	FLAT:?what@runtime_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
rdata$r	SEGMENT
??_R4?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@ DD 00H ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8
	DD	FLAT:??_R3?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R3?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8 DD 00H ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R2?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8 DD FLAT:??_R1A@?0A@EA@?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8 ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_function_call@boost@@8
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
	DD	FLAT:??_R1CI@?0A@EA@exception@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8 DD FLAT:??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8 ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@
CONST	SEGMENT
??_7?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@ DD FLAT:??_R4?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@ ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`vftable'
	DD	FLAT:??_E?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAEPAXI@Z
	DD	FLAT:?type@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEABVtype_info@@XZ
	DD	FLAT:?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ
CONST	ENDS
;	COMDAT ??_R4?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@
rdata$r	SEGMENT
??_R4?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@ DD 00H ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@@8
	DD	FLAT:??_R3?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8
rdata$r	SEGMENT
??_R3?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8 DD 00H ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8
rdata$r	SEGMENT
??_R2?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8 DD FLAT:??_R1A@?0A@EA@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8 ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@placeholder@any@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8 DD FLAT:??_R0?AV?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@@8 ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@@8
_DATA	SEGMENT
??_R0?AV?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$a'
	DB	'llocator@D@2@@std@@@any@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@
CONST	SEGMENT
??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@ DD FLAT:??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vftable'
	DD	FLAT:?value_type@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEABVtype_info@@XZ
	DD	FLAT:??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@W3AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@
rdata$r	SEGMENT
??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@ DD 00H ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@@8
	DD	FLAT:??_R3?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@
CONST	SEGMENT
??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@ DD FLAT:??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vftable'
	DD	FLAT:?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?min_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ
	DD	FLAT:?max_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ
	DD	FLAT:?is_composing@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NXZ
	DD	FLAT:?parse@?$value_semantic_codecvt_helper@D@program_options@boost@@EBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z
	DD	FLAT:?apply_default@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NAAVany@3@@Z
	DD	FLAT:?notify@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXABVany@3@@Z
	DD	FLAT:??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAEPAXI@Z
	DD	FLAT:?xparse@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
CONST	ENDS
;	COMDAT ??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@
rdata$r	SEGMENT
??_R4?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@ DD 00H ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@@8
	DD	FLAT:??_R3?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8
rdata$r	SEGMENT
??_R3?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8 DD 00H ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8
rdata$r	SEGMENT
??_R2?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8 DD FLAT:??_R1A@?0A@EA@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8 ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$value_semantic_codecvt_helper@D@program_options@boost@@8
	DD	FLAT:??_R1A@?0A@EA@value_semantic@program_options@boost@@8
	DD	FLAT:??_R13?0A@EA@typed_value_base@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@typed_value_base@program_options@boost@@8
rdata$r	SEGMENT
??_R13?0A@EA@typed_value_base@program_options@boost@@8 DD FLAT:??_R0?AVtyped_value_base@program_options@boost@@@8 ; boost::program_options::typed_value_base::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3typed_value_base@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8 DD FLAT:??_R0?AV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@@8 ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@@8
_DATA	SEGMENT
??_R0?AV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$typed_value@V?$basic_string@DU?$char_traits@D@std@'
	DB	'@V?$allocator@D@2@@std@@D@program_options@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7abstract_variables_map@program_options@boost@@6B@
CONST	SEGMENT
??_7abstract_variables_map@program_options@boost@@6B@ DD FLAT:??_R4abstract_variables_map@program_options@boost@@6B@ ; boost::program_options::abstract_variables_map::`vftable'
	DD	FLAT:??_Eabstract_variables_map@program_options@boost@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4abstract_variables_map@program_options@boost@@6B@
rdata$r	SEGMENT
??_R4abstract_variables_map@program_options@boost@@6B@ DD 00H ; boost::program_options::abstract_variables_map::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVabstract_variables_map@program_options@boost@@@8
	DD	FLAT:??_R3abstract_variables_map@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3abstract_variables_map@program_options@boost@@8
rdata$r	SEGMENT
??_R3abstract_variables_map@program_options@boost@@8 DD 00H ; boost::program_options::abstract_variables_map::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2abstract_variables_map@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2abstract_variables_map@program_options@boost@@8
rdata$r	SEGMENT
??_R2abstract_variables_map@program_options@boost@@8 DD FLAT:??_R1A@?0A@EA@abstract_variables_map@program_options@boost@@8 ; boost::program_options::abstract_variables_map::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@abstract_variables_map@program_options@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@abstract_variables_map@program_options@boost@@8 DD FLAT:??_R0?AVabstract_variables_map@program_options@boost@@@8 ; boost::program_options::abstract_variables_map::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3abstract_variables_map@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVabstract_variables_map@program_options@boost@@@8
_DATA	SEGMENT
??_R0?AVabstract_variables_map@program_options@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::program_options::abstract_variables_map `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVabstract_variables_map@program_options@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7typed_value_base@program_options@boost@@6B@
CONST	SEGMENT
??_7typed_value_base@program_options@boost@@6B@ DD FLAT:??_R4typed_value_base@program_options@boost@@6B@ ; boost::program_options::typed_value_base::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:??_Etyped_value_base@program_options@boost@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4typed_value_base@program_options@boost@@6B@
rdata$r	SEGMENT
??_R4typed_value_base@program_options@boost@@6B@ DD 00H	; boost::program_options::typed_value_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVtyped_value_base@program_options@boost@@@8
	DD	FLAT:??_R3typed_value_base@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3typed_value_base@program_options@boost@@8
rdata$r	SEGMENT
??_R3typed_value_base@program_options@boost@@8 DD 00H	; boost::program_options::typed_value_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2typed_value_base@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2typed_value_base@program_options@boost@@8
rdata$r	SEGMENT
??_R2typed_value_base@program_options@boost@@8 DD FLAT:??_R1A@?0A@EA@typed_value_base@program_options@boost@@8 ; boost::program_options::typed_value_base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@typed_value_base@program_options@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@typed_value_base@program_options@boost@@8 DD FLAT:??_R0?AVtyped_value_base@program_options@boost@@@8 ; boost::program_options::typed_value_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3typed_value_base@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVtyped_value_base@program_options@boost@@@8
_DATA	SEGMENT
??_R0?AVtyped_value_base@program_options@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::program_options::typed_value_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVtyped_value_base@program_options@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$value_semantic_codecvt_helper@D@program_options@boost@@6B@
CONST	SEGMENT
??_7?$value_semantic_codecvt_helper@D@program_options@boost@@6B@ DD FLAT:??_R4?$value_semantic_codecvt_helper@D@program_options@boost@@6B@ ; boost::program_options::value_semantic_codecvt_helper<char>::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?parse@?$value_semantic_codecvt_helper@D@program_options@boost@@EBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_E?$value_semantic_codecvt_helper@D@program_options@boost@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4?$value_semantic_codecvt_helper@D@program_options@boost@@6B@
rdata$r	SEGMENT
??_R4?$value_semantic_codecvt_helper@D@program_options@boost@@6B@ DD 00H ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$value_semantic_codecvt_helper@D@program_options@boost@@@8
	DD	FLAT:??_R3?$value_semantic_codecvt_helper@D@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3?$value_semantic_codecvt_helper@D@program_options@boost@@8
rdata$r	SEGMENT
??_R3?$value_semantic_codecvt_helper@D@program_options@boost@@8 DD 00H ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$value_semantic_codecvt_helper@D@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2?$value_semantic_codecvt_helper@D@program_options@boost@@8
rdata$r	SEGMENT
??_R2?$value_semantic_codecvt_helper@D@program_options@boost@@8 DD FLAT:??_R1A@?0A@EA@?$value_semantic_codecvt_helper@D@program_options@boost@@8 ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@value_semantic@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$value_semantic_codecvt_helper@D@program_options@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$value_semantic_codecvt_helper@D@program_options@boost@@8 DD FLAT:??_R0?AV?$value_semantic_codecvt_helper@D@program_options@boost@@@8 ; boost::program_options::value_semantic_codecvt_helper<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$value_semantic_codecvt_helper@D@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$value_semantic_codecvt_helper@D@program_options@boost@@@8
_DATA	SEGMENT
??_R0?AV?$value_semantic_codecvt_helper@D@program_options@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::program_options::value_semantic_codecvt_helper<char> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$value_semantic_codecvt_helper@D@program_options@bo'
	DB	'ost@@', 00H
_DATA	ENDS
;	COMDAT ??_7value_semantic@program_options@boost@@6B@
CONST	SEGMENT
??_7value_semantic@program_options@boost@@6B@ DD FLAT:??_R4value_semantic@program_options@boost@@6B@ ; boost::program_options::value_semantic::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_Evalue_semantic@program_options@boost@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4value_semantic@program_options@boost@@6B@
rdata$r	SEGMENT
??_R4value_semantic@program_options@boost@@6B@ DD 00H	; boost::program_options::value_semantic::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVvalue_semantic@program_options@boost@@@8
	DD	FLAT:??_R3value_semantic@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3value_semantic@program_options@boost@@8
rdata$r	SEGMENT
??_R3value_semantic@program_options@boost@@8 DD 00H	; boost::program_options::value_semantic::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2value_semantic@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2value_semantic@program_options@boost@@8
rdata$r	SEGMENT
??_R2value_semantic@program_options@boost@@8 DD FLAT:??_R1A@?0A@EA@value_semantic@program_options@boost@@8 ; boost::program_options::value_semantic::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@value_semantic@program_options@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@value_semantic@program_options@boost@@8 DD FLAT:??_R0?AVvalue_semantic@program_options@boost@@@8 ; boost::program_options::value_semantic::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3value_semantic@program_options@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVvalue_semantic@program_options@boost@@@8
_DATA	SEGMENT
??_R0?AVvalue_semantic@program_options@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::program_options::value_semantic `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVvalue_semantic@program_options@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7placeholder@any@boost@@6B@
CONST	SEGMENT
??_7placeholder@any@boost@@6B@ DD FLAT:??_R4placeholder@any@boost@@6B@ ; boost::any::placeholder::`vftable'
	DD	FLAT:??_Eplaceholder@any@boost@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4placeholder@any@boost@@6B@
rdata$r	SEGMENT
??_R4placeholder@any@boost@@6B@ DD 00H			; boost::any::placeholder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVplaceholder@any@boost@@@8
	DD	FLAT:??_R3placeholder@any@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3placeholder@any@boost@@8
rdata$r	SEGMENT
??_R3placeholder@any@boost@@8 DD 00H			; boost::any::placeholder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2placeholder@any@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2placeholder@any@boost@@8
rdata$r	SEGMENT
??_R2placeholder@any@boost@@8 DD FLAT:??_R1A@?0A@EA@placeholder@any@boost@@8 ; boost::any::placeholder::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@placeholder@any@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@placeholder@any@boost@@8 DD FLAT:??_R0?AVplaceholder@any@boost@@@8 ; boost::any::placeholder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3placeholder@any@boost@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVplaceholder@any@boost@@@8
_DATA	SEGMENT
??_R0?AVplaceholder@any@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::any::placeholder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVplaceholder@any@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_7bad_function_call@boost@@6B@
CONST	SEGMENT
??_7bad_function_call@boost@@6B@ DD FLAT:??_R4bad_function_call@boost@@6B@ ; boost::bad_function_call::`vftable'
	DD	FLAT:??_Ebad_function_call@boost@@UAEPAXI@Z
	DD	FLAT:?what@runtime_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4bad_function_call@boost@@6B@
rdata$r	SEGMENT
??_R4bad_function_call@boost@@6B@ DD 00H		; boost::bad_function_call::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_function_call@boost@@@8
	DD	FLAT:??_R3bad_function_call@boost@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_function_call@boost@@8
rdata$r	SEGMENT
??_R3bad_function_call@boost@@8 DD 00H			; boost::bad_function_call::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_function_call@boost@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_function_call@boost@@8
rdata$r	SEGMENT
??_R2bad_function_call@boost@@8 DD FLAT:??_R1A@?0A@EA@bad_function_call@boost@@8 ; boost::bad_function_call::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@runtime_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_function_call@boost@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_function_call@boost@@8 DD FLAT:??_R0?AVbad_function_call@boost@@@8 ; boost::bad_function_call::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_function_call@boost@@8
rdata$r	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	058H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	04cH
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	054H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	054H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R17?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?_Xsgetn_s@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADIH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`vbtable'
	DD	0cH
CONST	ENDS
;	COMDAT ??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_iostream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_iostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R17?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	03H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`vbtable'
	DD	04H
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ostream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R13A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$is_convertible_impl@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > &,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
CONST	ENDS
;	COMDAT ??_R0?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@8
_DATA	SEGMENT
??_R0?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boo'
	DB	'st@@@detail@algorithm@boost@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$is_convertible_impl@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> &,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >::value
CONST	ENDS
;	COMDAT ?value@?$function_allows_small_object_optimization@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@2_NB
CONST	SEGMENT
?value@?$function_allows_small_object_optimization@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@2_NB DB 01H ; boost::detail::function::function_allows_small_object_optimization<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$alignment_of_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$alignment_of_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2IB DD 04H ; boost::detail::alignment_of_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$alignment_of_impl@Tfunction_buffer@function@detail@boost@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$alignment_of_impl@Tfunction_buffer@function@detail@boost@@@detail@boost@@2IB DD 08H ; boost::detail::alignment_of_impl<boost::detail::function::function_buffer>::value
CONST	ENDS
;	COMDAT ?value@?$has_trivial_dtor_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$has_trivial_dtor_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::has_trivial_dtor_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$has_trivial_copy_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$has_trivial_copy_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::has_trivial_copy_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pod_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pod_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pod_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_scalar_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_scalar_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_scalar_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?stored_vtable@?1???$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@2@@Z@4U?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@42@A
_DATA	SEGMENT
?stored_vtable@?1???$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@2@@Z@4U?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@42@A DD FLAT:?manage@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ; `boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >'::`2'::stored_vtable
	DD	FLAT:?invoke@?$function_obj_invoker2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V67@@function@detail@boost@@SA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@AATfunction_buffer@234@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
_DATA	ENDS
;	COMDAT ?value@?$is_pointer_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$result_@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > *>::is_const
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::InputStream::InputType>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::OutputFileType>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::SystemConfigurationType>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::TransactionOrderingAlgorithm>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::CommandOrderingAlgorithm>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::RefreshPolicy>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::RowBufferPolicy>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?value@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2HB DD 06H ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?precision_bin@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2KB
CONST	SEGMENT
?precision_bin@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2KB DD 02H ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::precision_bin
CONST	ENDS
;	COMDAT ?precision_dec@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?precision_dec@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2IB DD 01H ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::precision_dec
CONST	ENDS
;	COMDAT ?streamsize_max@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2HB
CONST	SEGMENT
?streamsize_max@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2HB DD 07fffffffH ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::streamsize_max
CONST	ENDS
;	COMDAT ?is_specialized_dec@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_dec@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::is_specialized_dec
CONST	ENDS
;	COMDAT ?is_specialized_bin@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_specialized_bin@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::is_specialized_bin
CONST	ENDS
;	COMDAT ?use_default_precision@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?use_default_precision@?$lcast_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 01H ; boost::detail::lcast_precision<enum DRAMsimII::Address::AddressMappingScheme>::use_default_precision
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?value@?$not_satisfied@U?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@concept@boost@@2_NB
CONST	SEGMENT
?value@?$not_satisfied@U?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@concept@boost@@2_NB DB 01H ; boost::concept::not_satisfied<boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
CONST	ENDS
;	COMDAT __TI7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@
xdata$x	SEGMENT
__TI7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@ DD 00H
	DD	FLAT:??1?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@
xdata$x	ENDS
;	COMDAT __CTA7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@
xdata$x	SEGMENT
__CTA7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@ DD 07H
	DD	FLAT:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z64
	DD	FLAT:__CT??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z60
	DD	FLAT:__CT??_R0?AVbad_function_call@boost@@@8??0bad_function_call@boost@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2040
	DD	FLAT:__CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z460
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_function_call@boost@@@8??0bad_function_call@boost@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVbad_function_call@boost@@@8??0bad_function_call@boost@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVbad_function_call@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0bad_function_call@boost@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z60
xdata$x	SEGMENT
__CT??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z60 DD 00H
	DD	FLAT:??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	03cH
	DD	FLAT:??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z64
xdata$x	SEGMENT
__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z64 DD 00H
	DD	FLAT:??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	040H
	DD	FLAT:??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_function_call@boost@@@8
_DATA	SEGMENT
??_R0?AVbad_function_call@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::bad_function_call `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_function_call@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8
_DATA	SEGMENT
??_R0?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::exception_detail::error_info_injector<boost::bad_function_call> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$error_info_injector@Vbad_function_call@boost@@@exc'
	DB	'eption_detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8
_DATA	SEGMENT
??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@@8 DD FLAT:??_7type_info@@6B@ ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$clone_impl@U?$error_info_injector@Vbad_function_ca'
	DB	'll@boost@@@exception_detail@boost@@@exception_detail@boost@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$is_unsigned_imp@_J@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_unsigned_imp@_J@detail@boost@@2_NB DB 00H	; boost::detail::is_unsigned_imp<__int64>::value
CONST	ENDS
;	COMDAT ?value@?$is_ununsigned_helper@_J@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_ununsigned_helper@_J@detail@boost@@2_NB DB 00H ; boost::detail::is_ununsigned_helper<__int64>::value
CONST	ENDS
;	COMDAT ??_R0H@8
_DATA	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@H@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@H@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<int>::value
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > *>::is_const
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > *>::is_volatile
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@U?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@Uincrementable_traversal_tag@3@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@U?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@Uincrementable_traversal_tag@3@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAU?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@Uincrementable_traversal_tag@3@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAU?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@Uincrementable_traversal_tag@3@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag> &,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_42@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_42@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB DD 04H ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_42
CONST	ENDS
;	COMDAT ?p@?$assert_arg_pred_not@U?$is_iterator_traversal@Uinput_iterator_tag@std@@@detail@boost@@@mpl@boost@@2_NB
CONST	SEGMENT
?p@?$assert_arg_pred_not@U?$is_iterator_traversal@Uinput_iterator_tag@std@@@detail@boost@@@mpl@boost@@2_NB DB 01H ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_traversal<std::input_iterator_tag> >::p
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_41@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_41@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB DD 04H ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_41
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_40@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_40@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB DD 04H ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_40
CONST	ENDS
;	COMDAT ?p@?$assert_arg_pred_not@U?$is_iterator_category@Uinput_iterator_tag@std@@@detail@boost@@@mpl@boost@@2_NB
CONST	SEGMENT
?p@?$assert_arg_pred_not@U?$is_iterator_category@Uinput_iterator_tag@std@@@detail@boost@@@mpl@boost@@2_NB DB 00H ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<std::input_iterator_tag> >::p
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_39@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_39@?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@2IB DD 04H ; boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag>::mpl_assertion_in_line_39
CONST	ENDS
;	COMDAT ?p@?$assert_arg_pred_not@U?$is_convertible@Usingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@boost@@@mpl@boost@@2_NB
CONST	SEGMENT
?p@?$assert_arg_pred_not@U?$is_convertible@Usingle_pass_traversal_tag@boost@@Uforward_traversal_tag@2@@boost@@@mpl@boost@@2_NB DB 01H ; boost::mpl::assert_arg_pred_not<boost::is_convertible<boost::single_pass_traversal_tag,boost::forward_traversal_tag> >::p
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@U?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@U?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::detail::iterator_category_with_traversal<std::input_iterator_tag,boost::forward_traversal_tag> >::value
CONST	ENDS
;	COMDAT ?value@?$is_pod_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pod_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pod_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_scalar_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_scalar_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_scalar_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_abstract_imp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_abstract_imp@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_abstract_imp<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Usingle_pass_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Usingle_pass_traversal_tag@2@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::single_pass_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Usingle_pass_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Usingle_pass_traversal_tag@2@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::single_pass_traversal_tag>::value
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_43@?$facade_iterator_category_impl@Uforward_traversal_tag@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_43@?$facade_iterator_category_impl@Uforward_traversal_tag@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@detail@boost@@2IB DD 04H ; boost::detail::facade_iterator_category_impl<boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::mpl_assertion_in_line_43
CONST	ENDS
;	COMDAT ?arity@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@2HB
CONST	SEGMENT
?arity@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@2HB DD 02H ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::arity
CONST	ENDS
;	COMDAT ?args@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@2HB
CONST	SEGMENT
?args@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@2HB DD 02H ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::args
CONST	ENDS
;	COMDAT ?value@?$is_pod_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pod_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pod_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_scalar_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_scalar_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_scalar_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
CONST	ENDS
;	COMDAT ?value@?$result_@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const >::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_iterator_tag@std@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_iterator_tag@std@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<std::forward_iterator_tag,std::forward_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,std::forward_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::forward_iterator_tag,std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Ubidirectional_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,std::bidirectional_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::forward_iterator_tag,std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Urandom_access_iterator_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,std::random_access_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<std::forward_iterator_tag,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_iterator_tag@std@@Uincrementable_traversal_tag@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<std::forward_iterator_tag &,boost::incrementable_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Ubidirectional_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Ubidirectional_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::bidirectional_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Ubidirectional_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Ubidirectional_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::bidirectional_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::random_access_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Urandom_access_traversal_tag@2@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::random_access_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@U12@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@U12@@detail@boost@@2_NB DB 01H ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,boost::forward_traversal_tag>::value
CONST	ENDS
;	COMDAT ?mpl_assertion_in_line_43@?$facade_iterator_category_impl@Uforward_traversal_tag@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@ABV32@@detail@boost@@2IB
CONST	SEGMENT
?mpl_assertion_in_line_43@?$facade_iterator_category_impl@Uforward_traversal_tag@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@ABV32@@detail@boost@@2IB DD 04H ; boost::detail::facade_iterator_category_impl<boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &>::mpl_assertion_in_line_43
CONST	ENDS
;	COMDAT ?p@?$assert_arg_pred_not@U?$is_iterator_category@Uforward_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB
CONST	SEGMENT
?p@?$assert_arg_pred_not@U?$is_iterator_category@Uforward_traversal_tag@boost@@@detail@boost@@@mpl@boost@@2_NB DB 01H ; boost::mpl::assert_arg_pred_not<boost::detail::is_iterator_category<boost::forward_traversal_tag> >::p
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Uoutput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,std::output_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_impl@Uforward_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_impl<boost::forward_traversal_tag,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_convertible_basic_impl@AAUforward_traversal_tag@boost@@Uinput_iterator_tag@std@@@detail@boost@@2_NB DB 00H ; boost::detail::is_convertible_basic_impl<boost::forward_traversal_tag &,std::input_iterator_tag>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>::is_const
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAV?$iterator_range@PBD@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAV?$iterator_range@PBD@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> *>::is_const
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAV?$iterator_range@PBD@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAV?$iterator_range@PBD@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> *>::is_volatile
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PBV?$iterator_range@PBD@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PBV?$iterator_range@PBD@boost@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> const *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PBV?$iterator_range@PBD@boost@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PBV?$iterator_range@PBD@boost@@@detail@boost@@2_NB DB 01H ; boost::detail::cv_traits_imp<boost::iterator_range<char const *> const *>::is_const
CONST	ENDS
;	COMDAT ??_R0?AW4InputType@InputStream@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4InputType@InputStream@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::InputStream::InputType `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4InputType@InputStream@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@_J@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@_J@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<__int64>::value
CONST	ENDS
;	COMDAT ??_R0?AW4OutputFileType@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4OutputFileType@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::OutputFileType `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4OutputFileType@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ??_R0?AW4SystemConfigurationType@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4SystemConfigurationType@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::SystemConfigurationType `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4SystemConfigurationType@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ??_R0?AW4TransactionOrderingAlgorithm@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4TransactionOrderingAlgorithm@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::TransactionOrderingAlgorithm `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4TransactionOrderingAlgorithm@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ??_R0?AW4CommandOrderingAlgorithm@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4CommandOrderingAlgorithm@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::CommandOrderingAlgorithm `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4CommandOrderingAlgorithm@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ??_R0?AW4RefreshPolicy@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4RefreshPolicy@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::RefreshPolicy `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4RefreshPolicy@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ??_R0?AW4RowBufferPolicy@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4RowBufferPolicy@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::RowBufferPolicy `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4RowBufferPolicy@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ??_R0?AW4AddressMappingScheme@Address@DRAMsimII@@@8
_DATA	SEGMENT
??_R0?AW4AddressMappingScheme@Address@DRAMsimII@@@8 DD FLAT:??_7type_info@@6B@ ; enum DRAMsimII::Address::AddressMappingScheme `RTTI Type Descriptor'
	DD	00H
	DB	'.?AW4AddressMappingScheme@Address@DRAMsimII@@', 00H
_DATA	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_source@I@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_source@I@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_source<unsigned int>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_streambuf_for_target@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$lcast_streambuf_for_target@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB DB 00H ; boost::detail::lcast_streambuf_for_target<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::value
CONST	ENDS
;	COMDAT ??_C@_03CCDPNADL@?5?$CI?$DN?$AA@
CONST	SEGMENT
??_C@_03CCDPNADL@?5?$CI?$DN?$AA@ DB ' (=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OBNIPEJI@?$FL?$DNarg?$CI?$DN?$AA@
CONST	SEGMENT
??_C@_07OBNIPEJI@?$FL?$DNarg?$CI?$DN?$AA@ DB '[=arg(=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DIDHHIJL@?$CJ?$FN?$AA@
CONST	SEGMENT
??_C@_02DIDHHIJL@?$CJ?$FN?$AA@ DB ')]', 00H		; `string'
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4InputType@InputStream@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4InputType@InputStream@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4InputType@InputStream@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4InputType@InputStream@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::InputStream::InputType>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::InputStream::InputType *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4InputType@InputStream@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::InputStream::InputType *>::is_const
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4OutputFileType@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4OutputFileType@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4OutputFileType@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4OutputFileType@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::OutputFileType>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::OutputFileType *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4OutputFileType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4OutputFileType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::OutputFileType *>::is_const
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@M@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@M@detail@boost@@2_NB DB 01H	; boost::detail::is_arithmetic_impl<float>::value
CONST	ENDS
;	COMDAT ?value@?$ice_or@$0A@$00$0A@$0A@$0A@$0A@$0A@@type_traits@boost@@2_NB
CONST	SEGMENT
?value@?$ice_or@$0A@$00$0A@$0A@$0A@$0A@$0A@@type_traits@boost@@2_NB DB 01H ; boost::type_traits::ice_or<0,1,0,0,0,0,0>::value
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4SystemConfigurationType@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4SystemConfigurationType@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::SystemConfigurationType>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::SystemConfigurationType *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4SystemConfigurationType@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::SystemConfigurationType *>::is_const
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4TransactionOrderingAlgorithm@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4TransactionOrderingAlgorithm@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::TransactionOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::TransactionOrderingAlgorithm *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::TransactionOrderingAlgorithm *>::is_const
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4CommandOrderingAlgorithm@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4CommandOrderingAlgorithm@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::CommandOrderingAlgorithm>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::CommandOrderingAlgorithm *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::CommandOrderingAlgorithm *>::is_const
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4RefreshPolicy@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4RefreshPolicy@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4RefreshPolicy@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4RefreshPolicy@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::RefreshPolicy>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::RefreshPolicy *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4RefreshPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::RefreshPolicy *>::is_const
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4RowBufferPolicy@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4RowBufferPolicy@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::RowBufferPolicy>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::RowBufferPolicy *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4RowBufferPolicy@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::RowBufferPolicy *>::is_const
CONST	ENDS
;	COMDAT ?value@?$lcast_src_length@DW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2IB
CONST	SEGMENT
?value@?$lcast_src_length@DW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2IB DD 00H ; boost::detail::lcast_src_length<char,enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?value@?$is_arithmetic_impl@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_arithmetic_impl@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_arithmetic_impl<enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_impl@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_impl@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_impl<enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?value@?$result_@W4AddressMappingScheme@Address@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$result_@W4AddressMappingScheme@Address@DRAMsimII@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB DB 00H ; boost::detail::is_mem_fun_pointer_select<0>::result_<enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?value@?$is_pointer_helper@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?value@?$is_pointer_helper@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::is_pointer_helper<enum DRAMsimII::Address::AddressMappingScheme>::value
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::Address::AddressMappingScheme *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<enum DRAMsimII::Address::AddressMappingScheme *>::is_const
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAD@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAD@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<char *>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAD@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAD@detail@boost@@2_NB DB 00H	; boost::detail::cv_traits_imp<char *>::is_const
CONST	ENDS
;	COMDAT ?is_volatile@?$cv_traits_imp@PAY01$$CBD@detail@boost@@2_NB
CONST	SEGMENT
?is_volatile@?$cv_traits_imp@PAY01$$CBD@detail@boost@@2_NB DB 00H ; boost::detail::cv_traits_imp<char const (*)[2]>::is_volatile
CONST	ENDS
;	COMDAT ?is_const@?$cv_traits_imp@PAY01$$CBD@detail@boost@@2_NB
CONST	SEGMENT
?is_const@?$cv_traits_imp@PAY01$$CBD@detail@boost@@2_NB DB 01H ; boost::detail::cv_traits_imp<char const (*)[2]>::is_const
CONST	ENDS
;	COMDAT ??_C@_0CE@HHLPPEMJ@There?5was?5an?5error?5reading?1parsi@
CONST	SEGMENT
??_C@_0CE@HHLPPEMJ@There?5was?5an?5error?5reading?1parsi@ DB 'There was a'
	DB	'n error reading/parsing ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EPOHBJHA@outFileType?$AA@
CONST	SEGMENT
??_C@_0M@EPOHBJHA@outFileType?$AA@ DB 'outFileType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LAEKLCGB@inputType?$AA@
CONST	SEGMENT
??_C@_09LAEKLCGB@inputType?$AA@ DB 'inputType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MNDKCPDC@?$CC?5does?5not?5validate?4?$AA@
CONST	SEGMENT
??_C@_0BF@MNDKCPDC@?$CC?5does?5not?5validate?4?$AA@ DB '" does not valida'
	DB	'te.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PKIIIEGC@Unable?5to?5open?5settings?5file?5?$CC?$AA@
CONST	SEGMENT
??_C@_0BP@PKIIIEGC@Unable?5to?5open?5settings?5file?5?$CC?$AA@ DB 'Unable'
	DB	' to open settings file "', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@BJNOIJIK@A?5configuration?5file?5MUST?5be?5spe@
CONST	SEGMENT
??_C@_0EC@BJNOIJIK@A?5configuration?5file?5MUST?5be?5spe@ DB 'A configura'
	DB	'tion file MUST be specified (--config-file <filename>)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BJCJMHJ@Where?5modifiers?5strings?5look?5lik@
CONST	SEGMENT
??_C@_0DF@BJCJMHJ@Where?5modifiers?5strings?5look?5lik@ DB 'Where modifie'
	DB	'rs strings look like (parameter value)+', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CKBCDPF@Usage?3?5?$AA@
CONST	SEGMENT
??_C@_07CKBCDPF@Usage?3?5?$AA@ DB 'Usage: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@KEBNCEPP@?$CI?9?9help?5?$HM?5?9?9config?9file?5?$DMconfigu@
CONST	SEGMENT
??_C@_0FB@KEBNCEPP@?$CI?9?9help?5?$HM?5?9?9config?9file?5?$DMconfigu@ DB '('
	DB	'--help | --config-file <configuration file> {--modifiers "<mo'
	DB	'difiers string>}")', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09OECJJJAK@modifiers?$AA@
CONST	SEGMENT
??_C@_09OECJJJAK@modifiers?$AA@ DB 'modifiers', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IINMPII@Modifiers?5to?5the?5settings?5file?$AA@
CONST	SEGMENT
??_C@_0BP@IINMPII@Modifiers?5to?5the?5settings?5file?$AA@ DB 'Modifiers t'
	DB	'o the settings file', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLABGBKK@config?9file?$AA@
CONST	SEGMENT
??_C@_0M@MLABGBKK@config?9file?$AA@ DB 'config-file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PHJLBNCG@The?5configuration?5file?$AA@
CONST	SEGMENT
??_C@_0BH@PHJLBNCG@The?5configuration?5file?$AA@ DB 'The configuration fi'
	DB	'le', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENNAEJOL@help?5message?$AA@
CONST	SEGMENT
??_C@_0N@ENNAEJOL@help?5message?$AA@ DB 'help message', 00H ; `string'
CONST	ENDS
;	COMDAT ?arity@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@2HB
CONST	SEGMENT
?arity@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@2HB DD 01H ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::arity
CONST	ENDS
;	COMDAT ?args@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@2HB
CONST	SEGMENT
?args@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@2HB DD 01H ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::args
CONST	ENDS
;	COMDAT ??_C@_0O@FJLGGDEL@Basic?5options?$AA@
CONST	SEGMENT
??_C@_0O@FJLGGDEL@Basic?5options?$AA@ DB 'Basic options', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EGJIMALK@UTF?98?$AA@
CONST	SEGMENT
??_C@_05EGJIMALK@UTF?98?$AA@ DB 'UTF-8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BJCAOBGA@simulationParameters?$AA@
CONST	SEGMENT
??_C@_0BF@BJCAOBGA@simulationParameters?$AA@ DB 'simulationParameters', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BEKNGNCE@IDD5A?$AA@
CONST	SEGMENT
??_C@_05BEKNGNCE@IDD5A?$AA@ DB 'IDD5A', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLIADJJL@power?$AA@
CONST	SEGMENT
??_C@_05PLIADJJL@power?$AA@ DB 'power', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BKDGJKBE@timing?$AA@
CONST	SEGMENT
??_C@_06BKDGJKBE@timing?$AA@ DB 'timing', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BDNCCAMC@cache?$AA@
CONST	SEGMENT
??_C@_05BDNCCAMC@cache?$AA@ DB 'cache', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LABDNII@setup?$AA@
CONST	SEGMENT
??_C@_05LABDNII@setup?$AA@ DB 'setup', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OJLPDPMO@dramspec?4dtd?$AA@
CONST	SEGMENT
??_C@_0N@OJLPDPMO@dramspec?4dtd?$AA@ DB 'dramspec.dtd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLLJOCDO@1?40?$AA@
CONST	SEGMENT
??_C@_03HLLJOCDO@1?40?$AA@ DB '1.0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FMHKABDI@note?3?5setting?5?$AA@
CONST	SEGMENT
??_C@_0P@FMHKABDI@note?3?5setting?5?$AA@ DB 'note: setting ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NEMOKFLO@?$DN?$AA@
CONST	SEGMENT
??_C@_01NEMOKFLO@?$DN?$AA@ DB '=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HNIHGFH@warn?3?5Unrecognized?5key?1value?5pai@
CONST	SEGMENT
??_C@_0CE@HNIHGFH@warn?3?5Unrecognized?5key?1value?5pai@ DB 'warn: Unreco'
	DB	'gnized key/value pair (', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@LMCFMIEN@Invalid?5memory?5override?5format?0?5@
CONST	SEGMENT
??_C@_0EG@LMCFMIEN@Invalid?5memory?5override?5format?0?5@ DB 'Invalid mem'
	DB	'ory override format, should be {<parameter name> <value>}+', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LALLMIH@Problem?5creating?5node?5path?4?$AA@
CONST	SEGMENT
??_C@_0BM@LALLMIH@Problem?5creating?5node?5path?4?$AA@ DB 'Problem creati'
	DB	'ng node path.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02CBLDBPFN@?1?1?$AA@
CONST	SEGMENT
??_C@_02CBLDBPFN@?1?1?$AA@ DB '//', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JMDKEDFB@Problem?5updating?5nodes?4?$AA@
CONST	SEGMENT
??_C@_0BI@JMDKEDFB@Problem?5updating?5nodes?4?$AA@ DB 'Problem updating n'
	DB	'odes.', 00H					; `string'
CONST	ENDS
;	COMDAT ?arity@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@2HB
CONST	SEGMENT
?arity@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@2HB DD 01H ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::arity
CONST	ENDS
;	COMDAT ?args@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@2HB
CONST	SEGMENT
?args@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@2HB DD 01H ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::args
CONST	ENDS
;	COMDAT ?arity@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@2HB
CONST	SEGMENT
?arity@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@2HB DD 01H ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::arity
CONST	ENDS
;	COMDAT ?args@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@2HB
CONST	SEGMENT
?args@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@2HB DD 01H ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::args
CONST	ENDS
;	COMDAT ??_C@_0BO@HKHPGMPA@call?5to?5empty?5boost?3?3function?$AA@
CONST	SEGMENT
??_C@_0BO@HKHPGMPA@call?5to?5empty?5boost?3?3function?$AA@ DB 'call to em'
	DB	'pty boost::function', 00H			; `string'
CONST	ENDS
;	COMDAT ??_R0X@8
_DATA	SEGMENT
??_R0X@8 DD	FLAT:??_7type_info@@6B@			; void `RTTI Type Descriptor'
	DD	00H
	DB	'.X', 00H
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
; Function compile flags: /Odtpy
;	COMDAT ??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WCI@AEPAXI@Z PROC ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vector deleting destructor', COMDAT
	sub	ecx, 40					; 00000028H
	jmp	??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WCI@AEPAXI@Z ENDP ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WDM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WDM@AEPAXI@Z PROC ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vector deleting destructor', COMDAT
	sub	ecx, 60					; 0000003cH
	jmp	??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
??_E?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@WDM@AEPAXI@Z ENDP ; [thunk]:boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@WCI@AEPAXI@Z PROC ; [thunk]:boost::exception_detail::error_info_injector<boost::bad_function_call>::`vector deleting destructor', COMDAT
	sub	ecx, 40					; 00000028H
	jmp	??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAEPAXI@Z
??_E?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@WCI@AEPAXI@Z ENDP ; [thunk]:boost::exception_detail::error_info_injector<boost::bad_function_call>::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@W3AEPAXI@Z PROC ; [thunk]:boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vector deleting destructor', COMDAT
	sub	ecx, 4
	jmp	??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAEPAXI@Z
??_E?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@W3AEPAXI@Z ENDP ; [thunk]:boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Equal@PADPADUforward_iterator_tag@std@@@std@@YA_NPAD00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 1
??$_Equal@PADPADUforward_iterator_tag@std@@@std@@YA_NPAD00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Equal<char *,char *,std::forward_iterator_tag>, COMDAT
; __First1$ = eax
; __Last1$ = esi
; __First2$ = ecx

; 2992 : 	for (; _First1 != _Last1; ++_First1, ++_First2)

	cmp	eax, esi
	je	SHORT $LN2@Equal@2
$LL4@Equal@2:

; 2993 : 		if (!(*_First1 == *_First2))

	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN8@Equal@2
	inc	eax
	inc	ecx
	cmp	eax, esi
	jne	SHORT $LL4@Equal@2
$LN2@Equal@2:

; 2995 : 	return (true);

	mov	al, 1

; 2996 : 	}

	ret	0
$LN8@Equal@2:

; 2994 : 			return (false);

	xor	al, al

; 2996 : 	}

	ret	0
??$_Equal@PADPADUforward_iterator_tag@std@@@std@@YA_NPAD00Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Equal<char *,char *,std::forward_iterator_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance2@PADI@std@@YAXPAD0AAIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@PADI@std@@YAXPAD0AAIUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<char *,unsigned int>, COMDAT

; 1867 : 
; 1868 :  #if _HAS_ITERATOR_DEBUGGING
; 1869 : 	if (_First != _Last)
; 1870 : 		{	// check for null pointers
; 1871 : 		_DEBUG_POINTER(_First);
; 1872 : 		_DEBUG_POINTER(_Last);
; 1873 : 		}
; 1874 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1875 : 
; 1876 : 	_Off += _Last - _First;

	mov	ecx, DWORD PTR __Last$[esp-4]
	sub	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Off$[esp-4]
	add	DWORD PTR [eax], ecx

; 1877 : 	}

	ret	0
??$_Distance2@PADI@std@@YAXPAD0AAIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<char *,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Iter_cat<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Iter_cat<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Advance@PBDH@std@@YAXAAPBDHUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Advance@PBDH@std@@YAXAAPBDHUrandom_access_iterator_tag@0@@Z PROC ; std::_Advance<char const *,int>, COMDAT
; __Where$ = eax
; __Off$ = ecx

; 1822 : 	_Where += _Off;

	add	DWORD PTR [eax], ecx

; 1823 : 	}

	ret	0
??$_Advance@PBDH@std@@YAXAAPBDHUrandom_access_iterator_tag@0@@Z ENDP ; std::_Advance<char const *,int>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\utility\addressof.hpp
_TEXT	ENDS
;	COMDAT ??B?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QBEAAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@XZ
_TEXT	SEGMENT
??B?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QBEAAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@XZ PROC ; boost::detail::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::operator boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > &, COMDAT
; _this$ = eax

; 29   :     inline operator T& () const { return v_; }

	mov	eax, DWORD PTR [eax]
	ret	0
??B?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QBEAAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@XZ ENDP ; boost::detail::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::operator boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > &
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QAE@AAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@@Z
_TEXT	SEGMENT
??0?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QAE@AAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@@Z PROC ; boost::detail::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _this$ = eax
; _v$ = ecx

; 28   :     inline addr_impl_ref( T & v ): v_( v ) {}

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$addr_impl_ref@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@QAE@AAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@1algorithm@2@@Z ENDP ; boost::detail::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::addr_impl_ref<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?f@?$addressof_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@SAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AAU4253@J@Z
_TEXT	SEGMENT
?f@?$addressof_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@SAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AAU4253@J@Z PROC ; boost::detail::addressof_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::f, COMDAT
; _v$ = eax

; 39   :         return reinterpret_cast<T*>(
; 40   :             &const_cast<char&>(reinterpret_cast<const volatile char &>(v)));
; 41   :     }

	ret	0
?f@?$addressof_impl@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@detail@boost@@SAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AAU4253@J@Z ENDP ; boost::detail::addressof_impl<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::f
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$addressof@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@boost@@YAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@0@AAU1230@@Z
_TEXT	SEGMENT
??$addressof@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@boost@@YAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@0@AAU1230@@Z PROC ; boost::addressof<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _v$ = eax

; 53   : #if defined( __BORLANDC__ ) && BOOST_WORKAROUND( __BORLANDC__, BOOST_TESTED_AT( 0x610 ) )
; 54   : 
; 55   :     return boost::detail::addressof_impl<T>::f( v, 0 );
; 56   : 
; 57   : #else
; 58   : 
; 59   :     return boost::detail::addressof_impl<T>::f( boost::detail::addr_impl_ref<T>( v ), 0 );
; 60   : 
; 61   : #endif
; 62   : }

	ret	0
??$addressof@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@boost@@YAPAU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@0@AAU1230@@Z ENDP ; boost::addressof<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ?dereference@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@XZ
_TEXT	SEGMENT
?dereference@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@XZ PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::dereference, COMDAT
; _this$ = eax

; 291  :                 return m_Match;

	add	eax, 32					; 00000020H

; 292  :             }

	ret	0
?dereference@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@XZ ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::dereference
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
_TEXT	ENDS
;	COMDAT ??$dereference@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z
_TEXT	SEGMENT
??$dereference@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z PROC ; boost::iterator_core_access::dereference<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _f$ = eax

; 516  :           return f.dereference();

	add	eax, 32					; 00000020H

; 517  :       }

	ret	0
??$dereference@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z ENDP ; boost::iterator_core_access::dereference<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Checked_assign_from_base@PBD@std@@YAXAAPBDABQBD@Z
_TEXT	SEGMENT
??$_Checked_assign_from_base@PBD@std@@YAXAAPBDABQBD@Z PROC ; std::_Checked_assign_from_base<char const *>, COMDAT
; __Dest$ = edx
; __Src$ = eax

; 1181 : 		_Dest = _Src;

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 1182 : 	}

	ret	0
??$_Checked_assign_from_base@PBD@std@@YAXAAPBDABQBD@Z ENDP ; std::_Checked_assign_from_base<char const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Dist_type@PBD@std@@YAPAHPBD@Z
_TEXT	SEGMENT
??$_Dist_type@PBD@std@@YAPAHPBD@Z PROC			; std::_Dist_type<char const *>, COMDAT

; 1831 : 	return (0);

	xor	eax, eax

; 1832 : 	}

	ret	0
??$_Dist_type@PBD@std@@YAPAHPBD@Z ENDP			; std::_Dist_type<char const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PADPADUrandom_access_iterator_tag@std@@@std@@YAPADPAD00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PADPADUrandom_access_iterator_tag@std@@@std@@YAPADPAD00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<char *,char *,std::random_access_iterator_tag>, COMDAT

; 2699 : 
; 2700 :  #if _HAS_ITERATOR_DEBUGGING
; 2701 : 	_DEBUG_RANGE(_First, _Last);
; 2702 : 	if (_First != _Last)
; 2703 : 		_DEBUG_POINTER(_Dest);
; 2704 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2705 : 
; 2706 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	esi

; 2707 : 	/* if _OutIt is range checked, this will make sure there is enough space for 
; 2708 : 	 * the memmove
; 2709 : 	 */
; 2710 : 	_OutIt _Result = _Dest - _Off;

	mov	esi, DWORD PTR __Dest$[esp]
	sub	eax, ecx
	sub	esi, eax

; 2711 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_backw@3

; 2712 : 		_CRT_SECURE_MEMMOVE(&*_Result, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	eax
	push	ecx
	push	eax
	push	esi
	call	_memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_backw@3:

; 2713 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2714 : 	}

	ret	0
??$_Copy_backward_opt@PADPADUrandom_access_iterator_tag@std@@@std@@YAPADPAD00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<char *,char *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PADPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PADPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD0@Z PROC ; std::_Iter_random<char *,char *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PADPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD0@Z ENDP ; std::_Iter_random<char *,char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Push_heap@PADHD@std@@YAXPADHHD@Z
_TEXT	SEGMENT
__Top$ = 8						; size = 4
__Val$ = 12						; size = 1
??$_Push_heap@PADHD@std@@YAXPADHHD@Z PROC		; std::_Push_heap<char *,int,char>, COMDAT
; __First$ = edi
; __Hole$ = eax

; 1972 : 	{	// percolate _Hole to _Top or where _Val belongs, using operator<

	push	ebx
	mov	bl, BYTE PTR __Val$[esp]
	push	ebp
	mov	ebp, DWORD PTR __Top$[esp+4]
	push	esi
	mov	esi, eax

; 1973 : 	for (_Diff _Idx = (_Hole - 1) / 2;

	lea	eax, DWORD PTR [esi-1]
	cdq
	sub	eax, edx
	sar	eax, 1

; 1974 : 		_Top < _Hole && _DEBUG_LT(*(_First + _Idx), _Val);
; 1975 : 		_Idx = (_Hole - 1) / 2)

	cmp	ebp, esi
	jge	SHORT $LN9@Push_heap
	npad	7
$LL3@Push_heap:
	mov	cl, BYTE PTR [eax+edi]
	cmp	cl, bl
	jge	SHORT $LN9@Push_heap

; 1976 : 		{	// move _Hole up to parent
; 1977 : 		*(_First + _Hole) = *(_First + _Idx);

	mov	BYTE PTR [edi+esi], cl

; 1978 : 		_Hole = _Idx;

	mov	esi, eax
	dec	eax
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	ebp, esi
	jl	SHORT $LL3@Push_heap
$LN9@Push_heap:

; 1979 : 		}
; 1980 : 
; 1981 : 	*(_First + _Hole) = _Val;	// drop _Val into final hole

	mov	BYTE PTR [edi+esi], bl
	pop	esi
	pop	ebp
	pop	ebx

; 1982 : 	}

	ret	0
??$_Push_heap@PADHD@std@@YAXPADHHD@Z ENDP		; std::_Push_heap<char *,int,char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
_TEXT	ENDS
;	COMDAT ?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@ABEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ
_TEXT	SEGMENT
?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@ABEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ PROC ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::derived, COMDAT
; _this$ = eax

; 613  :           return *static_cast<Derived const*>(this);
; 614  :       }

	ret	0
?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@ABEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ ENDP ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::derived
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@AAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ
_TEXT	SEGMENT
?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@AAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ PROC ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::derived, COMDAT
; _this$ = eax

; 608  :           return *static_cast<Derived*>(this);
; 609  :       }

	ret	0
?derived@?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@AAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ ENDP ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::derived
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QBEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ
_TEXT	SEGMENT
??D?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QBEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ PROC ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::operator*, COMDAT
; _this$ = eax

; 634  :           return iterator_core_access::dereference(this->derived());

	add	eax, 32					; 00000020H

; 635  :       }

	ret	0
??D?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QBEABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ ENDP ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::operator*
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_adaptor.hpp
_TEXT	ENDS
;	COMDAT ?base@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QBEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ
_TEXT	SEGMENT
?base@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QBEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ PROC ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::base, COMDAT
; _this$ = eax

; 289  :         { return m_iterator; }

	ret	0
?base@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QBEABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@XZ ENDP ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z
_TEXT	SEGMENT
__Hole$ = 8						; size = 4
__Val$ = 12						; size = 1
??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z PROC		; std::_Adjust_heap<char *,int,char>, COMDAT
; __First$ = ecx
; __Bottom$ = eax

; 2055 : 	{	// percolate _Hole to _Bottom, then push _Val, using operator<

	push	ebx
	mov	bl, BYTE PTR __Val$[esp]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR __Hole$[esp+12]
	mov	esi, eax

; 2056 : 	_Diff _Top = _Hole;
; 2057 : 	_Diff _Idx = 2 * _Hole + 2;

	lea	eax, DWORD PTR [edi+edi+2]

; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	cmp	eax, esi
	mov	ebp, edi
	jge	SHORT $LN19@Adjust_hea
	npad	8
$LL5@Adjust_hea:

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	dl, BYTE PTR [eax+ecx]
	cmp	dl, BYTE PTR [ecx+eax-1]
	jge	SHORT $LN2@Adjust_hea

; 2062 : 			--_Idx;

	dec	eax
$LN2@Adjust_hea:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	dl, BYTE PTR [eax+ecx]
	mov	BYTE PTR [ecx+edi], dl
	mov	edi, eax
	lea	eax, DWORD PTR [eax+eax+2]
	cmp	eax, esi
	jl	SHORT $LL5@Adjust_hea
$LN19@Adjust_hea:

; 2064 : 		}
; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	jne	SHORT $LN1@Adjust_hea

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	al, BYTE PTR [ecx+esi-1]
	mov	BYTE PTR [ecx+edi], al

; 2069 : 		_Hole = _Bottom - 1;

	lea	edi, DWORD PTR [esi-1]
$LN1@Adjust_hea:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	lea	eax, DWORD PTR [edi-1]
	cdq
	sub	eax, edx
	mov	esi, eax
	sar	esi, 1
	cmp	ebp, edi
	jge	SHORT $LN18@Adjust_hea
$LL10@Adjust_hea:
	mov	al, BYTE PTR [esi+ecx]
	cmp	al, bl
	jge	SHORT $LN18@Adjust_hea
	mov	BYTE PTR [edi+ecx], al
	lea	eax, DWORD PTR [esi-1]
	cdq
	sub	eax, edx
	mov	edi, esi
	sar	eax, 1
	cmp	ebp, edi
	mov	esi, eax
	jl	SHORT $LL10@Adjust_hea
$LN18@Adjust_hea:
	mov	BYTE PTR [edi+ecx], bl
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2072 : 	}

	ret	0
??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z ENDP		; std::_Adjust_heap<char *,int,char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
_TEXT	ENDS
;	COMDAT ?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@ABEABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ
_TEXT	SEGMENT
?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@ABEABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ PROC ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::derived, COMDAT
; _this$ = eax

; 613  :           return *static_cast<Derived const*>(this);
; 614  :       }

	ret	0
?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@ABEABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ ENDP ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::derived
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@AAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ
_TEXT	SEGMENT
?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@AAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ PROC ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::derived, COMDAT
; _this$ = eax

; 608  :           return *static_cast<Derived*>(this);
; 609  :       }

	ret	0
?derived@?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@AAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@2@XZ ENDP ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::derived
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEPBV?$basic_option@D@program_options@boost@@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEPBV?$basic_option@D@program_options@boost@@XZ PROC ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Checked_iterator_base, COMDAT
; _this$ = ecx

; 47   : 		return _Myptr;

	mov	eax, DWORD PTR [ecx+4]

; 48   : 	}

	ret	0
?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEPBV?$basic_option@D@program_options@boost@@XZ ENDP ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Checked_iterator_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_assign_from_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD@Z
_TEXT	SEGMENT
?_Checked_iterator_assign_from_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_Checked_iterator_assign_from_base, COMDAT
; _this$ = eax
; __Base$ = ecx

; 363  : 		this->_Myptr = _Base;

	mov	DWORD PTR [eax+4], ecx

; 364  : 	}

	ret	0
?_Checked_iterator_assign_from_base@?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_Checked_iterator_assign_from_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Checked_assign_from_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@std@@YAXAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABQAD@Z
_TEXT	SEGMENT
??$_Checked_assign_from_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@std@@YAXAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABQAD@Z PROC ; std::_Checked_assign_from_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,char *>, COMDAT
; __Dest$ = edx
; __Src$ = eax

; 1174 : 		_Dest._Checked_iterator_assign_from_base(_Src);

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], ecx

; 1175 : 	}

	ret	0
??$_Checked_assign_from_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAD@std@@YAXAAV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABQAD@Z ENDP ; std::_Checked_assign_from_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::_Different_checked_iterator_base_type_tag>, COMDAT

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Make_heap@PADHD@std@@YAXPAD0PAH0@Z
_TEXT	SEGMENT
__Last$ = 8						; size = 4
??$_Make_heap@PADHD@std@@YAXPAD0PAH0@Z PROC		; std::_Make_heap<char *,int,char>, COMDAT
; __First$ = edi

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebx
	mov	ebx, DWORD PTR __Last$[esp]

; 2165 : 	_Diff _Bottom = _Last - _First;

	sub	ebx, edi

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, ebx
	cdq
	sub	eax, edx
	push	esi
	mov	esi, eax
	sar	esi, 1
	test	esi, esi
	jle	SHORT $LN1@Make_heap
$LL2@Make_heap:

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;
; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	movzx	eax, BYTE PTR [esi+edi-1]
	dec	esi
	push	eax
	push	esi
	mov	eax, ebx
	mov	ecx, edi
	call	??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z	; std::_Adjust_heap<char *,int,char>
	add	esp, 8
	test	esi, esi
	jg	SHORT $LL2@Make_heap
$LN1@Make_heap:
	pop	esi
	pop	ebx

; 2172 : 		}
; 2173 : 	}

	ret	0
??$_Make_heap@PADHD@std@@YAXPAD0PAH0@Z ENDP		; std::_Make_heap<char *,int,char>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAD@std@@YAPADPAD@Z
_TEXT	SEGMENT
??$_Val_type@PAD@std@@YAPADPAD@Z PROC			; std::_Val_type<char *>, COMDAT

; 1766 : 	return (0);

	xor	eax, eax

; 1767 : 	}

	ret	0
??$_Val_type@PAD@std@@YAPADPAD@Z ENDP			; std::_Val_type<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Dist_type@PAD@std@@YAPAHPAD@Z
_TEXT	SEGMENT
??$_Dist_type@PAD@std@@YAPAHPAD@Z PROC			; std::_Dist_type<char *>, COMDAT

; 1831 : 	return (0);

	xor	eax, eax

; 1832 : 	}

	ret	0
??$_Dist_type@PAD@std@@YAPAHPAD@Z ENDP			; std::_Dist_type<char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@PADPAD@std@@QAE@ABQAD0@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??0?$pair@PADPAD@std@@QAE@ABQAD0@Z PROC			; std::pair<char *,char *>::pair<char *,char *>, COMDAT
; _this$ = eax
; __Val1$ = ecx

; 50   : 		{	// construct from specified values

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	4
??0?$pair@PADPAD@std@@QAE@ABQAD0@Z ENDP			; std::pair<char *,char *>::pair<char *,char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Move_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Move_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Move_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1147 : 		return _It;

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax]

; 1148 : 	}

	ret	0
??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@U_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@U_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<boost::program_options::basic_option<char> *>, COMDAT

; 1147 : 		return _It;

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax]

; 1148 : 	}

	ret	0
??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@U_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<boost::program_options::basic_option<char> *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@AAPAV?$basic_option@D@program_options@boost@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@AAPAV?$basic_option@D@program_options@boost@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,boost::program_options::basic_option<char> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@AAPAV?$basic_option@D@program_options@boost@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,boost::program_options::basic_option<char> *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > > >, COMDAT

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@std@@YAPBV?$basic_option@D@program_options@boost@@AAV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAD@std@@YAPADAAPADU_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@PAD@std@@YAPADAAPADU_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<char *>, COMDAT

; 1147 : 		return _It;

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax]

; 1148 : 	}

	ret	0
??$_Checked_base@PAD@std@@YAPADAAPADU_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PBD@std@@YAPBDAAPBDU_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@PBD@std@@YAPBDAAPBDU_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<char const *>, COMDAT
; __It$ = eax

; 1147 : 		return _It;

	mov	eax, DWORD PTR [eax]

; 1148 : 	}

	ret	0
??$_Checked_base@PBD@std@@YAPBDAAPBDU_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<char const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance2@PBDH@std@@YAXPBD0AAHUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Distance2@PBDH@std@@YAXPBD0AAHUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<char const *,int>, COMDAT
; __Last$ = eax
; __Off$ = ecx

; 1867 : 
; 1868 :  #if _HAS_ITERATOR_DEBUGGING
; 1869 : 	if (_First != _Last)
; 1870 : 		{	// check for null pointers
; 1871 : 		_DEBUG_POINTER(_First);
; 1872 : 		_DEBUG_POINTER(_Last);
; 1873 : 		}
; 1874 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1875 : 
; 1876 : 	_Off += _Last - _First;

	sub	eax, DWORD PTR __First$[esp-4]
	add	DWORD PTR [ecx], eax

; 1877 : 	}

	ret	0
??$_Distance2@PBDH@std@@YAXPBD0AAHUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<char const *,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z
_TEXT	SEGMENT
??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z PROC ; std::_Iter_cat<char const *>, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z ENDP ; std::_Iter_cat<char const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@PAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD@Z PROC ; std::_Iter_cat<char *>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@PAD@std@@YA?AUrandom_access_iterator_tag@0@ABQAD@Z ENDP ; std::_Iter_cat<char *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ?end@?$iterator_range@PBD@boost@@QBEPBDXZ
_TEXT	SEGMENT
?end@?$iterator_range@PBD@boost@@QBEPBDXZ PROC		; boost::iterator_range<char const *>::end, COMDAT
; _this$ = eax

; 281  :                 BOOST_ASSERT( !is_singular() );
; 282  :                 return m_End; 

	mov	eax, DWORD PTR [eax+4]

; 283  :             } 

	ret	0
?end@?$iterator_range@PBD@boost@@QBEPBDXZ ENDP		; boost::iterator_range<char const *>::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$iterator_range@PBD@boost@@QBEPBDXZ
_TEXT	SEGMENT
?begin@?$iterator_range@PBD@boost@@QBEPBDXZ PROC	; boost::iterator_range<char const *>::begin, COMDAT
; _this$ = eax

; 275  :                 BOOST_ASSERT( !is_singular() );
; 276  :                 return m_Begin; 

	mov	eax, DWORD PTR [eax]

; 277  :             }

	ret	0
?begin@?$iterator_range@PBD@boost@@QBEPBDXZ ENDP	; boost::iterator_range<char const *>::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Checked_iterator_base, COMDAT
; _this$ = ecx

; 47   : 		return _Myptr;

	mov	eax, DWORD PTR [ecx+4]

; 48   : 	}

	ret	0
?_Checked_iterator_base@?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Checked_iterator_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Iter_random<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Iter_random<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z PROC ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax]

; 1166 : 	}

	ret	0
??$_Checked_base@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z ENDP ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\detail\lcast_precision.hpp
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@YAHPAW4InputType@InputStream@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@YAHPAW4InputType@InputStream@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::InputStream::InputType>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4InputType@InputStream@DRAMsimII@@@detail@boost@@YAHPAW4InputType@InputStream@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::InputStream::InputType>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@YAHPAW4OutputFileType@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@YAHPAW4OutputFileType@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::OutputFileType>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4OutputFileType@DRAMsimII@@@detail@boost@@YAHPAW4OutputFileType@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::OutputFileType>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@YAHPAW4SystemConfigurationType@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@YAHPAW4SystemConfigurationType@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::SystemConfigurationType>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4SystemConfigurationType@DRAMsimII@@@detail@boost@@YAHPAW4SystemConfigurationType@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::SystemConfigurationType>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4TransactionOrderingAlgorithm@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4TransactionOrderingAlgorithm@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::TransactionOrderingAlgorithm>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4TransactionOrderingAlgorithm@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::TransactionOrderingAlgorithm>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4CommandOrderingAlgorithm@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4CommandOrderingAlgorithm@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::CommandOrderingAlgorithm>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@YAHPAW4CommandOrderingAlgorithm@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::CommandOrderingAlgorithm>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RefreshPolicy@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RefreshPolicy@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::RefreshPolicy>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4RefreshPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RefreshPolicy@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::RefreshPolicy>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RowBufferPolicy@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RowBufferPolicy@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::RowBufferPolicy>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4RowBufferPolicy@DRAMsimII@@@detail@boost@@YAHPAW4RowBufferPolicy@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::RowBufferPolicy>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lcast_get_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lcast_get_precision<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_get_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@YAHPAW4AddressMappingScheme@Address@DRAMsimII@@@Z
_TEXT	SEGMENT
??$lcast_get_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@YAHPAW4AddressMappingScheme@Address@DRAMsimII@@@Z PROC ; boost::detail::lcast_get_precision<enum DRAMsimII::Address::AddressMappingScheme>, COMDAT

; 101  : #ifndef BOOST_LCAST_NO_COMPILE_TIME_PRECISION
; 102  :     return lcast_precision<T>::value;

	mov	eax, 6

; 103  : #else // Follow lcast_precision algorithm at run-time:
; 104  : 
; 105  : #ifdef BOOST_NO_IS_ABSTRACT
; 106  :     typedef std::numeric_limits<T> limits; // No fix for SF:1358600.
; 107  : #else
; 108  :     typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_<
; 109  :         boost::is_abstract<T>
; 110  :       , std::numeric_limits<lcast_abstract_stub>
; 111  :       , std::numeric_limits<T>
; 112  :       >::type limits;
; 113  : #endif
; 114  : 
; 115  :     bool const use_default_precision =
; 116  :         !limits::is_specialized || limits::is_exact;
; 117  : 
; 118  :     if(!use_default_precision)
; 119  :     { // Includes all built-in floating-point types, float, double ...
; 120  :       // and UDT types for which digits (significand bits) is defined (not zero)
; 121  : 
; 122  :         bool const is_specialized_bin =
; 123  :             limits::radix == 2 && limits::digits > 0;
; 124  :         bool const is_specialized_dec =
; 125  :             limits::radix == 10 && limits::digits10 > 0;
; 126  :         std::streamsize const streamsize_max =
; 127  :             (boost::integer_traits<std::streamsize>::max)();
; 128  : 
; 129  :         if(is_specialized_bin)
; 130  :         { // Floating-point types with
; 131  :           // limits::digits defined by the specialization.
; 132  : 
; 133  :             unsigned long const digits = limits::digits;
; 134  :             unsigned long const precision = 2UL + digits * 30103UL / 100000UL;
; 135  :             // unsigned long is selected because it is at least 32-bits
; 136  :             // and thus ULONG_MAX / 30103UL is big enough for all types.
; 137  :             BOOST_ASSERT(
; 138  :                     digits < ULONG_MAX / 30103UL &&
; 139  :                     precision > limits::digits10 + 0UL &&
; 140  :                     precision <= streamsize_max + 0UL
; 141  :                 );
; 142  :             return precision;
; 143  :         }
; 144  :         else if(is_specialized_dec)
; 145  :         {   // Decimal Floating-point type, most likely a User Defined Type
; 146  :             // rather than a real floating-point hardware type.
; 147  :             unsigned int const precision = limits::digits10 + 1U;
; 148  :             BOOST_ASSERT(precision <= streamsize_max + 0UL);
; 149  :             return precision;
; 150  :         }
; 151  :     }
; 152  : 
; 153  :     // Integral type (for which precision has no effect)
; 154  :     // or type T for which limits is NOT specialized,
; 155  :     // so assume stream precision remains the default 6 decimal digits.
; 156  :     // Warning: if your User-defined Floating-point type T is NOT specialized,
; 157  :     // then you may lose accuracy by only using 6 decimal digits.
; 158  :     // To avoid this, you need to specialize T with either
; 159  :     // radix == 2 and digits == the number of significand bits,
; 160  :     // OR
; 161  :     // radix = 10 and digits10 == the number of decimal digits.
; 162  : 
; 163  :     return 6;
; 164  : #endif
; 165  : }

	ret	0
??$lcast_get_precision@W4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@YAHPAW4AddressMappingScheme@Address@DRAMsimII@@@Z ENDP ; boost::detail::lcast_get_precision<enum DRAMsimII::Address::AddressMappingScheme>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_option@D@program_options@boost@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_option@D@program_options@boost@@0@Z PROC ; std::_Iter_random<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_option@D@program_options@boost@@0@Z ENDP ; std::_Iter_random<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@@Z PROC ; std::_Checked_base<boost::program_options::basic_option<char> *>, COMDAT

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax]

; 1166 : 	}

	ret	0
??$_Checked_base@PAV?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@AAPAV123@@Z ENDP ; std::_Checked_base<boost::program_options::basic_option<char> *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Different_checked_iterator_base_type_tag>, COMDAT

; 1139 : 		return _It._Checked_iterator_base();

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax+4]

; 1140 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U_Different_checked_iterator_base_type_tag@2@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@U_Different_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Different_checked_iterator_base_type_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@std@@YA?AU?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@3@@Z
_TEXT	SEGMENT
??$_Iter_cat@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@std@@YA?AU?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@3@@Z PROC ; std::_Iter_cat<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

	ret	0
??$_Iter_cat@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@std@@YA?AU?$iterator_category_with_traversal@Uinput_iterator_tag@std@@Uforward_traversal_tag@boost@@@detail@boost@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@3@@Z ENDP ; std::_Iter_cat<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
_Begin$ = 8						; size = 8
_End$ = 16						; size = 8
??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 189  :             {}

	mov	ecx, DWORD PTR _Begin$[esp-4]
	mov	edx, DWORD PTR _Begin$[esp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _End$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _End$[esp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	16					; 00000010H
??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAD@std@@YAPADAAPAD@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Checked_base@PAD@std@@YAPADAAPAD@Z PROC		; std::_Checked_base<char *>, COMDAT

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax]

; 1166 : 	}

	ret	0
??$_Checked_base@PAD@std@@YAPADAAPAD@Z ENDP		; std::_Checked_base<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PBDPADUrandom_access_iterator_tag@std@@@std@@YAPADPBD0PADUrandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Copy_opt@PBDPADUrandom_access_iterator_tag@std@@@std@@YAPADPBD0PADUrandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<char const *,char *,std::random_access_iterator_tag>, COMDAT
; __Last$ = eax
; __Dest$ = ecx

; 2494 : 	{	// copy [_First, _Last) to [_Dest, ...), pointers to scalars

	mov	edx, DWORD PTR __First$[esp-4]

; 2495 : 
; 2496 :  #if _HAS_ITERATOR_DEBUGGING
; 2497 : 	_DEBUG_RANGE(_First, _Last);
; 2498 : 	if (_First != _Last)
; 2499 : 		_DEBUG_POINTER(_Dest);
; 2500 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2501 : 
; 2502 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	sub	eax, edx
	push	esi

; 2503 : 	// if _OutIt is range checked, this will make sure there is enough space for the memmove
; 2504 : 	_OutIt _Result = _Dest + _Off;

	lea	esi, DWORD PTR [eax+ecx]

; 2505 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_opt@3

; 2506 : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	eax
	push	edx
	push	eax
	push	ecx
	call	_memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_opt@3:

; 2507 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2508 : 	}

	ret	0
??$_Copy_opt@PBDPADUrandom_access_iterator_tag@std@@@std@@YAPADPBD0PADUrandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<char const *,char *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PBDPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPBDAAPAD@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Ptr_cat@PBDPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPBDAAPAD@Z PROC ; std::_Ptr_cat<char const *,char *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PBDPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPBDAAPAD@Z ENDP ; std::_Ptr_cat<char const *,char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PBDPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQBDABQAD@Z
_TEXT	SEGMENT
??$_Iter_random@PBDPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQBDABQAD@Z PROC ; std::_Iter_random<char const *,char *>, COMDAT
; ___$ReturnUdt$ = eax

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);
; 998  : 	}

	ret	0
??$_Iter_random@PBDPAD@std@@YA?AUrandom_access_iterator_tag@0@ABQBDABQAD@Z ENDP ; std::_Iter_random<char const *,char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PBD@std@@YAPBDAAPBD@Z
_TEXT	SEGMENT
??$_Checked_base@PBD@std@@YAPBDAAPBD@Z PROC		; std::_Checked_base<char const *>, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR [eax]

; 1166 : 	}

	ret	0
??$_Checked_base@PBD@std@@YAPBDAAPBD@Z ENDP		; std::_Checked_base<char const *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
_TEXT	ENDS
;	COMDAT ??$range_end@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z
_TEXT	SEGMENT
??$range_end@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z PROC ; boost::range_detail::range_end<boost::iterator_range<char const *> const >, COMDAT
; _c$ = eax

; 45   :             //
; 46   :             // If you get a compile-error here, it is most likely because
; 47   :             // you have not implemented range_begin() properly in
; 48   :             // the namespace of C
; 49   :             //
; 50   :             return c.end();

	mov	eax, DWORD PTR [eax+4]

; 51   :         }

	ret	0
??$range_end@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z ENDP ; boost::range_detail::range_end<boost::iterator_range<char const *> const >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$range_begin@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z
_TEXT	SEGMENT
??$range_begin@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z PROC ; boost::range_detail::range_begin<boost::iterator_range<char const *> const >, COMDAT
; _c$ = eax

; 44   :         //
; 45   :         // If you get a compile-error here, it is most likely because
; 46   :         // you have not implemented range_begin() properly in
; 47   :         // the namespace of C
; 48   :         //
; 49   :         return c.begin();

	mov	eax, DWORD PTR [eax]

; 50   :     }

	ret	0
??$range_begin@$$CBV?$iterator_range@PBD@boost@@@range_detail@boost@@YAPBDABV?$iterator_range@PBD@1@@Z ENDP ; boost::range_detail::range_begin<boost::iterator_range<char const *> const >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$distance@PBD@std@@YAHPBD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$distance@PBD@std@@YAHPBD0@Z PROC			; std::distance<char const *>, COMDAT
; __Last$ = eax

; 1883 : 	typename iterator_traits<_InIt>::difference_type _Off = 0;
; 1884 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	sub	eax, DWORD PTR __First$[esp-4]

; 1885 : 	return (_Off);
; 1886 : 	}

	ret	0
??$distance@PBD@std@@YAHPBD0@Z ENDP			; std::distance<char const *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ??$?0PBD@?$iterator_range@PBD@boost@@QAE@PBD0@Z
_TEXT	SEGMENT
??$?0PBD@?$iterator_range@PBD@boost@@QAE@PBD0@Z PROC	; boost::iterator_range<char const *>::iterator_range<char const *><char const *>, COMDAT
; _this$ = eax
; _End$ = ecx

; 189  :             {}

	mov	DWORD PTR [eax], OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	DWORD PTR [eax+4], ecx
	ret	0
??$?0PBD@?$iterator_range@PBD@boost@@QAE@PBD0@Z ENDP	; boost::iterator_range<char const *>::iterator_range<char const *><char const *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
_TEXT	ENDS
;	COMDAT ??$lcast_to_unsigned@H@detail@boost@@YAIH@Z
_TEXT	SEGMENT
??$lcast_to_unsigned@H@detail@boost@@YAIH@Z PROC	; boost::detail::lcast_to_unsigned<int>, COMDAT
; _value$ = eax

; 490  :             typedef BOOST_DEDUCED_TYPENAME make_unsigned<T>::type result_type;
; 491  :             result_type uvalue = static_cast<result_type>(value);
; 492  :             return value < 0 ? -uvalue : uvalue;

	test	eax, eax
	jge	SHORT $LN4@lcast_to_u
	neg	eax
$LN4@lcast_to_u:

; 493  :         }

	ret	0
??$lcast_to_unsigned@H@detail@boost@@YAIH@Z ENDP	; boost::detail::lcast_to_unsigned<int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_to_unsigned@_J@detail@boost@@YA_K_J@Z
_TEXT	SEGMENT
_value$ = 8						; size = 8
??$lcast_to_unsigned@_J@detail@boost@@YA_K_J@Z PROC	; boost::detail::lcast_to_unsigned<__int64>, COMDAT

; 490  :             typedef BOOST_DEDUCED_TYPENAME make_unsigned<T>::type result_type;
; 491  :             result_type uvalue = static_cast<result_type>(value);
; 492  :             return value < 0 ? -uvalue : uvalue;

	mov	ecx, DWORD PTR _value$[esp]
	mov	eax, DWORD PTR _value$[esp-4]
	test	ecx, ecx
	jg	SHORT $LN3@lcast_to_u@2
	jl	SHORT $LN5@lcast_to_u@2
	test	eax, eax
	jae	SHORT $LN3@lcast_to_u@2
$LN5@lcast_to_u@2:
	neg	eax
	adc	ecx, 0
	neg	ecx
$LN3@lcast_to_u@2:
	mov	edx, ecx

; 493  :         }

	ret	0
??$lcast_to_unsigned@_J@detail@boost@@YA_K_J@Z ENDP	; boost::detail::lcast_to_unsigned<__int64>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_option@D@program_options@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0V?$basic_option@D@program_options@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><boost::program_options::basic_option<char> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0V?$basic_option@D@program_options@boost@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><boost::program_options::basic_option<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT

; 175  : 	return (true);

	mov	al, 1

; 176  : 	}

	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$swap@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
??$swap@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::swap<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 18   : 	if (&_Left != &_Right)

	cmp	ecx, eax
	je	SHORT $LN1@swap

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [ecx]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [eax], edx
	pop	esi
$LN1@swap:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::swap<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z
_TEXT	SEGMENT
??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z PROC ; std::operator==<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 175  : 	return (true);

	mov	al, 1

; 176  : 	}

	ret	0
??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ENDP ; std::operator==<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z PROC ; std::_Checked_base<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

	mov	eax, DWORD PTR __It$[esp-4]
	mov	eax, DWORD PTR [eax+4]

; 1166 : 	}

	ret	0
??$_Checked_base@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ENDP ; std::_Checked_base<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\concept_check.hpp
_TEXT	ENDS
;	COMDAT ??$function_requires@U?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@boost@@YAXPAU?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@@Z
_TEXT	SEGMENT
??$function_requires@U?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@boost@@YAXPAU?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@@Z PROC ; boost::function_requires<boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 43   :       BOOST_CONCEPT_ASSERT((Model));
; 44   :   }    

	ret	0
??$function_requires@U?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@boost@@YAXPAU?$FinderConcept@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@@Z ENDP ; boost::function_requires<boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$copy@PBDPAD@std@@YAPADPBD0PAD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$copy@PBDPAD@std@@YAPADPBD0PAD@Z PROC			; std::copy<char const *,char *>, COMDAT
; __Last$ = eax
; __Dest$ = ecx

; 2577 : 	{	// copy [_First, _Last) to [_Dest, ...)

	mov	edx, DWORD PTR __First$[esp-4]

; 2578 : 	return (_Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest, 
; 2579 : 		_Iter_random(_First, _Dest), _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag()));

	sub	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+ecx]
	test	eax, eax
	jle	SHORT $LN18@copy
	push	eax
	push	edx
	push	eax
	push	ecx
	call	_memmove_s
	add	esp, 16					; 00000010H
$LN18@copy:
	mov	eax, esi
	pop	esi

; 2580 : 	}

	ret	0
??$copy@PBDPAD@std@@YAPADPBD0PAD@Z ENDP			; std::copy<char const *,char *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
_TEXT	ENDS
;	COMDAT ??$end@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z
_TEXT	SEGMENT
??$end@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z PROC ; boost::end<boost::iterator_range<char const *> >, COMDAT
; _r$ = eax

; 105  : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 106  :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 107  :     /**/
; 108  :     using namespace range_detail;
; 109  : #endif
; 110  :     return range_end( r );

	mov	eax, DWORD PTR [eax+4]

; 111  : }

	ret	0
??$end@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z ENDP ; boost::end<boost::iterator_range<char const *> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$begin@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z
_TEXT	SEGMENT
??$begin@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z PROC ; boost::begin<boost::iterator_range<char const *> >, COMDAT
; _r$ = eax

; 109  : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 110  :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 111  :     /**/
; 112  :     using namespace range_detail;
; 113  : #endif
; 114  :     return range_begin( r );

	mov	eax, DWORD PTR [eax]

; 115  : }

	ret	0
??$begin@V?$iterator_range@PBD@boost@@@boost@@YAPBDABV?$iterator_range@PBD@0@@Z ENDP ; boost::begin<boost::iterator_range<char const *> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\distance.hpp
_TEXT	ENDS
;	COMDAT ??$distance@V?$iterator_range@PBD@boost@@@boost@@YAHABV?$iterator_range@PBD@0@@Z
_TEXT	SEGMENT
??$distance@V?$iterator_range@PBD@boost@@@boost@@YAHABV?$iterator_range@PBD@0@@Z PROC ; boost::distance<boost::iterator_range<char const *> >, COMDAT
; _r$ = ecx

; 29   :         return std::distance( boost::begin( r ), boost::end( r ) );

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]

; 30   :     }

	ret	0
??$distance@V?$iterator_range@PBD@boost@@@boost@@YAHABV?$iterator_range@PBD@0@@Z ENDP ; boost::distance<boost::iterator_range<char const *> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?clear@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z
_TEXT	SEGMENT
?clear@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z PROC ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::clear, COMDAT
; _this$ = eax
; _functor$ = ecx

; 503  :           if (base.manager)

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1@clear

; 504  :             base.manager(functor, functor, destroy_functor_tag);

	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN1@clear:

; 505  :         }

	ret	0
?clear@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ENDP ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get_vtable@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@ABEPAU?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@2@XZ
_TEXT	SEGMENT
?get_vtable@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@ABEPAU?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@2@XZ PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::get_vtable, COMDAT
; _this$ = eax

; 679  :       return reinterpret_cast<vtable_type*>(
; 680  :                reinterpret_cast<std::size_t>(vtable) & ~(std::size_t)0x01);

	mov	eax, DWORD PTR [eax]
	and	eax, -2					; fffffffeH

; 681  :     }

	ret	0
?get_vtable@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@ABEPAU?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@2@XZ ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::get_vtable
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
_TEXT	ENDS
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx

; 318  : 		_Strstate _State = (_Strstate)0;
; 319  : 		if (!(_Mode & ios_base::in))

	mov	cl, BYTE PTR __Mode$[esp-4]
	xor	eax, eax
	test	cl, 1
	jne	SHORT $LN4@Getstate

; 320  : 			_State |= _Noread;

	mov	eax, 4
$LN4@Getstate:

; 321  : 		if (!(_Mode & ios_base::out))

	test	cl, 2
	jne	SHORT $LN3@Getstate

; 322  : 			_State |= _Constant;

	or	eax, 2
$LN3@Getstate:

; 323  : 		if (_Mode & ios_base::app)

	test	cl, 8
	je	SHORT $LN2@Getstate

; 324  : 			_State |= _Append;

	or	eax, 8
$LN2@Getstate:

; 325  : 		if (_Mode & ios_base::ate)

	test	cl, 4
	je	SHORT $LN1@Getstate

; 326  : 			_State |= _Atend;

	or	eax, 16					; 00000010H
$LN1@Getstate:

; 327  : 		return (_State);
; 328  : 		}

	ret	4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QBEIXZ PROC ; std::allocator<boost::program_options::basic_option<char> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 51130563				; 030c30c3H

; 167  : 		}

	ret	0
?max_size@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QBEIXZ ENDP ; std::allocator<boost::program_options::basic_option<char> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@XZ PROC ; std::allocator<boost::program_options::basic_option<char> >::allocator<boost::program_options::basic_option<char> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@XZ ENDP ; std::allocator<boost::program_options::basic_option<char> >::allocator<boost::program_options::basic_option<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 51130563				; 030c30c3H

; 732  : 		}

	ret	0
?max_size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	jne	SHORT $LN3@capacity@5

; 636  : 		}

	ret	0
$LN3@capacity@5:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+20]
	sub	ecx, eax
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@ABV01@@Z PROC ; std::allocator<boost::program_options::basic_option<char> >::allocator<boost::program_options::basic_option<char> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<boost::program_options::basic_option<char> >::allocator<boost::program_options::basic_option<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR [ecx+12]
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 727  : 		}

	ret	0
?size@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	jne	SHORT $LN3@capacity@6

; 636  : 		}

	ret	0
$LN3@capacity@6:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+20]
	sub	ecx, eax
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBEIXZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::capacity
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
_TEXT	ENDS
;	COMDAT ?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Next$ = 12						; size = 4
__Last$ = 16						; size = 4
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::setp, COMDAT
; _this$ = ecx

; 264  : 		*_IPfirst = _First;

	mov	eax, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	DWORD PTR [eax], edx

; 265  : 		*_IPnext = _Next;

	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR __Next$[esp-4]
	mov	DWORD PTR [edx], eax

; 266  : 		*_IPcount = (int)(_Last - _Next);

	mov	edx, DWORD PTR __Last$[esp-4]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+52]
	mov	DWORD PTR [eax], edx

; 267  : 		}

	ret	12					; 0000000cH
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::setp
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
_sta$ = 8						; size = 4
_fin$ = 12						; size = 4
??0?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 712  :             {}

	mov	edx, DWORD PTR _fin$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _sta$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_option@D@program_options@boost@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_option@D@program_options@boost@@0@Z PROC ; std::_Ptr_cat<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_option@D@program_options@boost@@0@Z ENDP ; std::_Ptr_cat<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z PROC ; std::_Ptr_cat<boost::shared_ptr<boost::program_options::options_description> *,boost::shared_ptr<boost::program_options::options_description> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z ENDP ; std::_Ptr_cat<boost::shared_ptr<boost::program_options::options_description> *,boost::shared_ptr<boost::program_options::options_description> *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<char> >, COMDAT

; 242  : 	}

	ret	0
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PADPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAD0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PADPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAD0@Z PROC ; std::_Ptr_cat<char *,char *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PADPAD@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAD0@Z ENDP ; std::_Ptr_cat<char *,char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z PROC ; std::_Ptr_cat<boost::shared_ptr<boost::program_options::option_description> *,boost::shared_ptr<boost::program_options::option_description> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z ENDP ; std::_Ptr_cat<boost::shared_ptr<boost::program_options::option_description> *,boost::shared_ptr<boost::program_options::option_description> *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\parsers.hpp
_TEXT	ENDS
;	COMDAT ?style@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@H@Z
_TEXT	SEGMENT
?style@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@H@Z PROC ; boost::program_options::basic_command_line_parser<char>::style, COMDAT
; _this$ = esi

; 69   :         detail::cmdline::style(style);

	push	0
	mov	ecx, esi
	call	?style@cmdline@detail@program_options@boost@@QAEXH@Z ; boost::program_options::detail::cmdline::style

; 70   :         return *this;

	mov	eax, esi

; 71   :     }

	ret	0
?style@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@H@Z ENDP ; boost::program_options::basic_command_line_parser<char>::style
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?options@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@ABVoptions_description@23@@Z
_TEXT	SEGMENT
?options@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@ABVoptions_description@23@@Z PROC ; boost::program_options::basic_command_line_parser<char>::options, COMDAT
; _this$ = esi
; _desc$ = edi

; 51   :        detail::cmdline::set_options_description(desc);

	push	edi
	mov	ecx, esi
	call	?set_options_description@cmdline@detail@program_options@boost@@QAEXABVoptions_description@34@@Z ; boost::program_options::detail::cmdline::set_options_description

; 52   :         m_desc = &desc;

	mov	DWORD PTR [esi+104], edi

; 53   :         return *this;

	mov	eax, esi

; 54   :     }

	ret	0
?options@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@ABVoptions_description@23@@Z ENDP ; boost::program_options::basic_command_line_parser<char>::options
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?clear@?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z
_TEXT	SEGMENT
?clear@?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z PROC ; boost::detail::function::basic_vtable1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear, COMDAT
; _this$ = eax
; _functor$ = ecx

; 503  :           if (base.manager)

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1@clear@2

; 504  :             base.manager(functor, functor, destroy_functor_tag);

	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN1@clear@2:

; 505  :         }

	ret	0
?clear@?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ENDP ; boost::detail::function::basic_vtable1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get_vtable@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@ABEPAU?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@2@XZ
_TEXT	SEGMENT
?get_vtable@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@ABEPAU?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@2@XZ PROC ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::get_vtable, COMDAT
; _this$ = eax

; 679  :       return reinterpret_cast<vtable_type*>(
; 680  :                reinterpret_cast<std::size_t>(vtable) & ~(std::size_t)0x01);

	mov	eax, DWORD PTR [eax]
	and	eax, -2					; fffffffeH

; 681  :     }

	ret	0
?get_vtable@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@ABEPAU?$basic_vtable1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@function@detail@2@XZ ENDP ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::get_vtable
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z
_TEXT	SEGMENT
_functor$ = 8						; size = 4
?clear@?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z PROC ; boost::detail::function::basic_vtable1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::clear, COMDAT
; _this$ = ecx

; 503  :           if (base.manager)

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN1@clear@3

; 504  :             base.manager(functor, functor, destroy_functor_tag);

	mov	ecx, DWORD PTR _functor$[esp-4]
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN1@clear@3:

; 505  :         }

	ret	4
?clear@?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ENDP ; boost::detail::function::basic_vtable1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get_vtable@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@ABEPAU?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@2@XZ
_TEXT	SEGMENT
?get_vtable@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@ABEPAU?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@2@XZ PROC ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::get_vtable, COMDAT
; _this$ = ecx

; 679  :       return reinterpret_cast<vtable_type*>(
; 680  :                reinterpret_cast<std::size_t>(vtable) & ~(std::size_t)0x01);

	mov	eax, DWORD PTR [ecx]
	and	eax, -2					; fffffffeH

; 681  :     }

	ret	0
?get_vtable@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@ABEPAU?$basic_vtable1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@function@detail@2@XZ ENDP ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::get_vtable
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?nonnull@dummy@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ
_TEXT	SEGMENT
?nonnull@dummy@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ PROC ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::nonnull, COMDAT
; _this$ = ecx

; 867  :       void nonnull() {};

	ret	0
?nonnull@dummy@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ ENDP ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::nonnull
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0placeholder@any@boost@@QAE@XZ
_TEXT	SEGMENT
??0placeholder@any@boost@@QAE@XZ PROC			; boost::any::placeholder::placeholder, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7placeholder@any@boost@@6B@
	ret	0
??0placeholder@any@boost@@QAE@XZ ENDP			; boost::any::placeholder::placeholder
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0typed_value_base@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
??0typed_value_base@program_options@boost@@QAE@XZ PROC	; boost::program_options::typed_value_base::typed_value_base, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7typed_value_base@program_options@boost@@6B@
	ret	0
??0typed_value_base@program_options@boost@@QAE@XZ ENDP	; boost::program_options::typed_value_base::typed_value_base
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\any.hpp
_TEXT	ENDS
;	COMDAT ?type@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
?type@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEABVtype_info@@XZ PROC ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::type, COMDAT
; _this$ = ecx

; 118  :                 return typeid(ValueType);

	mov	eax, OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8

; 119  :             }

	ret	0
?type@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEABVtype_info@@XZ ENDP ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::type
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4InputType@InputStream@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4InputType@InputStream@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::InputStream::InputType>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4InputType@InputStream@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::InputStream::InputType>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4OutputFileType@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4OutputFileType@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::OutputFileType>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4OutputFileType@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::OutputFileType>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4SystemConfigurationType@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4SystemConfigurationType@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::SystemConfigurationType>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4SystemConfigurationType@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::SystemConfigurationType>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::TransactionOrderingAlgorithm>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4TransactionOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::TransactionOrderingAlgorithm>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::CommandOrderingAlgorithm>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4CommandOrderingAlgorithm@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::CommandOrderingAlgorithm>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4RefreshPolicy@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4RefreshPolicy@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::RefreshPolicy>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4RefreshPolicy@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::RefreshPolicy>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4RowBufferPolicy@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4RowBufferPolicy@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::RowBufferPolicy>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4RowBufferPolicy@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::RowBufferPolicy>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,enum DRAMsimII::Address::AddressMappingScheme>::check_coverage, COMDAT

; 216  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DW4AddressMappingScheme@Address@DRAMsimII@@@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,enum DRAMsimII::Address::AddressMappingScheme>::check_coverage
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@@Z PROC ; std::_Destroy_range<std::allocator<char> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPAD0AAV?$allocator@D@0@@Z ENDP ; std::_Destroy_range<std::allocator<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$swap@PAVplaceholder@any@boost@@@std@@YAXAAPAVplaceholder@any@boost@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAVplaceholder@any@boost@@@std@@YAXAAPAVplaceholder@any@boost@@0@Z PROC ; std::swap<boost::any::placeholder *>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap@2

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap@2:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAVplaceholder@any@boost@@@std@@YAXAAPAVplaceholder@any@boost@@0@Z ENDP ; std::swap<boost::any::placeholder *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z PROC ; std::swap<std::_Aux_cont>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap@3

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap@3:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z ENDP ; std::swap<std::_Aux_cont>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z PROC ; std::swap<std::_Aux_cont *>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap@4

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap@4:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z ENDP ; std::swap<std::_Aux_cont *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@3@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 410  : 			return (_Ptr);

	mov	eax, DWORD PTR [ecx+4]

; 411  : 			}

	ret	0
?_Mynode@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@3@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 410  : 			return (_Ptr);

	mov	eax, DWORD PTR [ecx+4]

; 411  : 			}

	ret	0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Isnil, COMDAT

; 157  : 		return ((_Charref)(*_Pnode)._Isnil);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 41					; 00000029H

; 158  : 		}

	ret	0
?_Isnil@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Isnil
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Color, COMDAT

; 152  : 		return ((_Charref)(*_Pnode)._Color);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 40					; 00000028H

; 153  : 		}

	ret	0
?_Color@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Color
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>::_Kfn, COMDAT

; 65   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[esp-4]

; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Myval, COMDAT

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 12					; 0000000cH

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Myval
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Color, COMDAT

; 152  : 		return ((_Charref)(*_Pnode)._Color);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 56					; 00000038H

; 153  : 		}

	ret	0
?_Color@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Color
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], ecx

; 51   : 		}

	ret	8
??0?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@std@@QAE@ABVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>::pair<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Key, COMDAT

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 12					; 0000000cH

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Key
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Isnil, COMDAT

; 157  : 		return ((_Charref)(*_Pnode)._Isnil);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 57					; 00000039H

; 158  : 		}

	ret	0
?_Isnil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Isnil
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 153391689				; 09249249H

; 167  : 		}

	ret	0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?clear@?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z
_TEXT	SEGMENT
_functor$ = 8						; size = 4
?clear@?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z PROC ; boost::detail::function::basic_vtable1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear, COMDAT
; _this$ = ecx

; 503  :           if (base.manager)

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN1@clear@4

; 504  :             base.manager(functor, functor, destroy_functor_tag);

	mov	ecx, DWORD PTR _functor$[esp-4]
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN1@clear@4:

; 505  :         }

	ret	4
?clear@?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@boost@@QAEXAATfunction_buffer@234@@Z ENDP ; boost::detail::function::basic_vtable1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@I@Z PROC ; std::allocator<boost::program_options::basic_option<char> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@I@Z ENDP ; std::allocator<boost::program_options::basic_option<char> >::deallocate
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?get_vtable@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@ABEPAU?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@2@XZ
_TEXT	SEGMENT
?get_vtable@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@ABEPAU?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@2@XZ PROC ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::get_vtable, COMDAT
; _this$ = ecx

; 679  :       return reinterpret_cast<vtable_type*>(
; 680  :                reinterpret_cast<std::size_t>(vtable) & ~(std::size_t)0x01);

	mov	eax, DWORD PTR [ecx]
	and	eax, -2					; fffffffeH

; 681  :     }

	ret	0
?get_vtable@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@ABEPAU?$basic_vtable1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@function@detail@2@XZ ENDP ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::get_vtable
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node *>::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Right, COMDAT

; 177  : 		return ((_Nodepref)(*_Pnode)._Right);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8

; 178  : 		}

	ret	0
?_Right@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Right
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Parent, COMDAT

; 172  : 		return ((_Nodepref)(*_Pnode)._Parent);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4

; 173  : 		}

	ret	0
?_Parent@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Parent
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Left, COMDAT

; 167  : 		return ((_Nodepref)(*_Pnode)._Left);

	mov	eax, DWORD PTR __Pnode$[esp-4]

; 168  : 		}

	ret	0
?_Left@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Left
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node *>::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Right, COMDAT

; 177  : 		return ((_Nodepref)(*_Pnode)._Right);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8

; 178  : 		}

	ret	0
?_Right@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Right
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Parent, COMDAT

; 172  : 		return ((_Nodepref)(*_Pnode)._Parent);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4

; 173  : 		}

	ret	0
?_Parent@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Parent
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Left, COMDAT

; 167  : 		return ((_Nodepref)(*_Pnode)._Left);

	mov	eax, DWORD PTR __Pnode$[esp-4]

; 168  : 		}

	ret	0
?_Left@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Left
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@I@Z PROC ; std::allocator<boost::shared_ptr<boost::program_options::options_description> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@I@Z ENDP ; std::allocator<boost::shared_ptr<boost::program_options::options_description> >::deallocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IAEXPAD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IAEXPAD0@Z PROC ; std::vector<char,std::allocator<char> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IAEXPAD0@Z ENDP ; std::vector<char,std::allocator<char> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@I@Z PROC ; std::allocator<boost::shared_ptr<boost::program_options::option_description> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@I@Z ENDP ; std::allocator<boost::shared_ptr<boost::program_options::option_description> >::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 153391689				; 09249249H

; 732  : 		}

	ret	0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
_TEXT	ENDS
;	COMDAT ?use_fixed_storage@?$is_any_ofF@D@detail@algorithm@boost@@CA_NI@Z
_TEXT	SEGMENT
_size$ = 8						; size = 4
?use_fixed_storage@?$is_any_ofF@D@detail@algorithm@boost@@CA_NI@Z PROC ; boost::algorithm::detail::is_any_ofF<char>::use_fixed_storage, COMDAT

; 229  :                     return size<=sizeof(set_value_type*)*2;

	mov	eax, 8
	cmp	eax, DWORD PTR _size$[esp-4]
	sbb	eax, eax
	inc	eax

; 230  :                 }

	ret	0
?use_fixed_storage@?$is_any_ofF@D@detail@algorithm@boost@@CA_NI@Z ENDP ; boost::algorithm::detail::is_any_ofF<char>::use_fixed_storage
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
_TEXT	ENDS
;	COMDAT ??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ PROC	; boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF<char>, COMDAT
; _this$ = eax

; 135  :                     if(!use_fixed_storage(m_Size) && m_Storage.m_dynSet!=0)

	cmp	DWORD PTR [eax+8], 8
	jbe	SHORT $LN1@is_any_ofF
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1@is_any_ofF

; 136  :                     {
; 137  :                         delete [] m_Storage.m_dynSet;

	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
$LN1@is_any_ofF:

; 138  :                     }
; 139  :                 }

	ret	0
??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ ENDP	; boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF<char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\value_semantic.hpp
_TEXT	ENDS
;	COMDAT ?value_type@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEABVtype_info@@XZ
_TEXT	SEGMENT
?value_type@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEABVtype_info@@XZ PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::value_type, COMDAT
; _this$ = ecx

; 325  :             return typeid(T);

	mov	eax, OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8

; 326  :         }

	ret	0
?value_type@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEABVtype_info@@XZ ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::value_type
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ
_TEXT	SEGMENT
?max_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::max_tokens, COMDAT
; _this$ = ecx

; 286  :             if (m_multitoken) {

	cmp	BYTE PTR [ecx+78], 0
	je	SHORT $LN4@max_tokens

; 287  :                 return 32000;

	mov	eax, 32000				; 00007d00H

; 289  :                 return 0;
; 290  :             } else {
; 291  :                 return 1;
; 292  :             }
; 293  :         }

	ret	0
$LN4@max_tokens:

; 288  :             } else if (m_zero_tokens) {

	xor	eax, eax
	cmp	BYTE PTR [ecx+79], al
	sete	al

; 289  :                 return 0;
; 290  :             } else {
; 291  :                 return 1;
; 292  :             }
; 293  :         }

	ret	0
?max_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::max_tokens
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?is_composing@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NXZ
_TEXT	SEGMENT
?is_composing@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NXZ PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::is_composing, COMDAT
; _this$ = ecx

; 274  :         bool is_composing() const { return m_composing; }

	mov	al, BYTE PTR [ecx+76]
	ret	0
?is_composing@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NXZ ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::is_composing
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx

; 725  : 		{	// return length of sequence

	push	esi

; 726  : 		return (_Mylast - _Myfirst);

	mov	esi, DWORD PTR [ecx+16]
	sub	esi, DWORD PTR [ecx+12]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi

; 727  : 		}

	ret	0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 63   : 		{	// destroy the object

	mov	eax, DWORD PTR [ecx-4]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-4], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@

; 64   : 		}

	ret	0
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::~basic_ostream<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\variables_map.hpp
_TEXT	ENDS
;	COMDAT ??1abstract_variables_map@program_options@boost@@UAE@XZ
_TEXT	SEGMENT
??1abstract_variables_map@program_options@boost@@UAE@XZ PROC ; boost::program_options::abstract_variables_map::~abstract_variables_map, COMDAT
; _this$ = ecx

; 105  :         virtual ~abstract_variables_map() {}

	mov	DWORD PTR [ecx], OFFSET ??_7abstract_variables_map@program_options@boost@@6B@
	ret	0
??1abstract_variables_map@program_options@boost@@UAE@XZ ENDP ; boost::program_options::abstract_variables_map::~abstract_variables_map
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\value_semantic.hpp
_TEXT	ENDS
;	COMDAT ??1typed_value_base@program_options@boost@@UAE@XZ
_TEXT	SEGMENT
??1typed_value_base@program_options@boost@@UAE@XZ PROC	; boost::program_options::typed_value_base::~typed_value_base, COMDAT
; _this$ = ecx

; 166  :         virtual ~typed_value_base() {}

	mov	DWORD PTR [ecx], OFFSET ??_7typed_value_base@program_options@boost@@6B@
	ret	0
??1typed_value_base@program_options@boost@@UAE@XZ ENDP	; boost::program_options::typed_value_base::~typed_value_base
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0value_semantic@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
??0value_semantic@program_options@boost@@QAE@XZ PROC	; boost::program_options::value_semantic::value_semantic, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7value_semantic@program_options@boost@@6B@
	ret	0
??0value_semantic@program_options@boost@@QAE@XZ ENDP	; boost::program_options::value_semantic::value_semantic
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1value_semantic@program_options@boost@@UAE@XZ
_TEXT	SEGMENT
??1value_semantic@program_options@boost@@UAE@XZ PROC	; boost::program_options::value_semantic::~value_semantic, COMDAT
; _this$ = ecx

; 66   :         virtual ~value_semantic() {}

	mov	DWORD PTR [ecx], OFFSET ??_7value_semantic@program_options@boost@@6B@
	ret	0
??1value_semantic@program_options@boost@@UAE@XZ ENDP	; boost::program_options::value_semantic::~value_semantic
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DM@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DM@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,float>::check_coverage, COMDAT

; 406  :             static void check_coverage() {}

	ret	0
?check_coverage@?$lcast_src_length@DM@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,float>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@D_J@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@D_J@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,__int64>::check_coverage, COMDAT

; 370  :         BOOST_LCAST_DEF(boost::long_long_type )

	ret	0
?check_coverage@?$lcast_src_length@D_J@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,__int64>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DI@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DI@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,unsigned int>::check_coverage, COMDAT

; 365  :         BOOST_LCAST_DEF(unsigned int)

	ret	0
?check_coverage@?$lcast_src_length@DI@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,unsigned int>::check_coverage
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?check_coverage@?$lcast_src_length@DH@detail@boost@@SAXXZ
_TEXT	SEGMENT
?check_coverage@?$lcast_src_length@DH@detail@boost@@SAXXZ PROC ; boost::detail::lcast_src_length<char,int>::check_coverage, COMDAT

; 364  :         BOOST_LCAST_DEF(int)

	ret	0
?check_coverage@?$lcast_src_length@DH@detail@boost@@SAXXZ ENDP ; boost::detail::lcast_src_length<char,int>::check_coverage
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\any.hpp
_TEXT	ENDS
;	COMDAT ??1placeholder@any@boost@@UAE@XZ
_TEXT	SEGMENT
??1placeholder@any@boost@@UAE@XZ PROC			; boost::any::placeholder::~placeholder, COMDAT
; _this$ = ecx

; 93   :             {

	mov	DWORD PTR [ecx], OFFSET ??_7placeholder@any@boost@@6B@

; 94   :             }

	ret	0
??1placeholder@any@boost@@UAE@XZ ENDP			; boost::any::placeholder::~placeholder
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?type@any@boost@@QBEABVtype_info@@XZ
_TEXT	SEGMENT
?type@any@boost@@QBEABVtype_info@@XZ PROC		; boost::any::type, COMDAT
; _this$ = ecx

; 79   :             return content ? content->type() : typeid(void);

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN3@type
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	jmp	edx
$LN3@type:
	mov	eax, OFFSET ??_R0X@8

; 80   :         }

	ret	0
?type@any@boost@@QBEABVtype_info@@XZ ENDP		; boost::any::type
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?empty@any@boost@@QBE_NXZ
_TEXT	SEGMENT
?empty@any@boost@@QBE_NXZ PROC				; boost::any::empty, COMDAT
; _this$ = ecx

; 74   :             return !content;

	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	sete	al

; 75   :         }

	ret	0
?empty@any@boost@@QBE_NXZ ENDP				; boost::any::empty
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?swap@any@boost@@QAEAAV12@AAV12@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?swap@any@boost@@QAEAAV12@AAV12@@Z PROC			; boost::any::swap, COMDAT
; _this$ = ecx

; 52   :         {

	mov	eax, ecx

; 53   :             std::swap(content, rhs.content);

	mov	ecx, DWORD PTR _rhs$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@swap@5
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [ecx], edx
	pop	esi
$LN3@swap@5:

; 54   :             return *this;
; 55   :         }

	ret	4
?swap@any@boost@@QAEAAV12@AAV12@@Z ENDP			; boost::any::swap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1any@boost@@QAE@XZ
_TEXT	SEGMENT
??1any@boost@@QAE@XZ PROC				; boost::any::~any, COMDAT
; _this$ = ecx

; 46   :             delete content;

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN3@any
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN3@any:

; 47   :         }

	ret	0
??1any@boost@@QAE@XZ ENDP				; boost::any::~any
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0any@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
_other$ = 8						; size = 4
??0any@boost@@QAE@ABV01@@Z PROC				; boost::any::any, COMDAT
; _this$ = ecx

; 41   :         {

	mov	eax, DWORD PTR _other$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@any@2
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	DWORD PTR [esi], eax

; 42   :         }

	mov	eax, esi
	pop	esi
	ret	4
$LN3@any@2:

; 41   :         {

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 42   :         }

	mov	eax, esi
	pop	esi
	ret	4
??0any@boost@@QAE@ABV01@@Z ENDP				; boost::any::any
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0any@boost@@QAE@XZ
_TEXT	SEGMENT
??0any@boost@@QAE@XZ PROC				; boost::any::any, COMDAT
; _this$ = ecx

; 30   :         {

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 31   :         }

	ret	0
??0any@boost@@QAE@XZ ENDP				; boost::any::any
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_base.hpp
_TEXT	ENDS
;	COMDAT ?has_empty_target@function@detail@boost@@YA_NZZ
_TEXT	SEGMENT
?has_empty_target@function@detail@boost@@YA_NZZ PROC	; boost::detail::function::has_empty_target, COMDAT

; 888  :       return false;

	xor	al, al

; 889  :     }

	ret	0
?has_empty_target@function@detail@boost@@YA_NZZ ENDP	; boost::detail::function::has_empty_target
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?has_trivial_copy_and_destroy@function_base@boost@@QBE_NXZ
_TEXT	SEGMENT
?has_trivial_copy_and_destroy@function_base@boost@@QBE_NXZ PROC ; boost::function_base::has_trivial_copy_and_destroy, COMDAT
; _this$ = ecx

; 720  :     return reinterpret_cast<std::size_t>(vtable) & 0x01;

	mov	eax, DWORD PTR [ecx]
	and	eax, 1

; 721  :   }

	ret	0
?has_trivial_copy_and_destroy@function_base@boost@@QBE_NXZ ENDP ; boost::function_base::has_trivial_copy_and_destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?empty@function_base@boost@@QBE_NXZ
_TEXT	SEGMENT
?empty@function_base@boost@@QBE_NXZ PROC		; boost::function_base::empty, COMDAT
; _this$ = ecx

; 628  :   bool empty() const { return !vtable; }

	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	sete	al
	ret	0
?empty@function_base@boost@@QBE_NXZ ENDP		; boost::function_base::empty
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0function_base@boost@@QAE@XZ
_TEXT	SEGMENT
??0function_base@boost@@QAE@XZ PROC			; boost::function_base::function_base, COMDAT
; _this$ = ecx

; 625  :   function_base() : vtable(0) { }

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0function_base@boost@@QAE@XZ ENDP			; boost::function_base::function_base
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\time.inl
_TEXT	ENDS
_TEXT	SEGMENT
_time	PROC

; 135  :     return _time64(_Time);

	push	0
	call	__time64
	add	esp, 4

; 136  : }

	ret	0
_time	ENDP
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\as_literal.hpp
_TEXT	ENDS
;	COMDAT ?is_char_ptr@range_detail@boost@@YA_NPBD@Z
_TEXT	SEGMENT
?is_char_ptr@range_detail@boost@@YA_NPBD@Z PROC		; boost::range_detail::is_char_ptr, COMDAT

; 61   :             return true;

	mov	al, 1

; 62   :         }

	ret	0
?is_char_ptr@range_detail@boost@@YA_NPBD@Z ENDP		; boost::range_detail::is_char_ptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?length@range_detail@boost@@YAIPBD@Z
_TEXT	SEGMENT
?length@range_detail@boost@@YAIPBD@Z PROC		; boost::range_detail::length, COMDAT

; 38   :             return strlen( s );

	mov	eax, OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	edx, DWORD PTR [eax+1]
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx

; 39   :         }

	ret	0
?length@range_detail@boost@@YAIPBD@Z ENDP		; boost::range_detail::length
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ?_Same_container@_Iterator_base_secure@std@@QBE_NABV12@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
?_Same_container@_Iterator_base_secure@std@@QBE_NABV12@@Z PROC ; std::_Iterator_base_secure::_Same_container, COMDAT
; _this$ = ecx

; 577  : 		return _Mycont == _Other._Mycont;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Other$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 578  : 		}

	ret	4
?_Same_container@_Iterator_base_secure@std@@QBE_NABV12@@Z ENDP ; std::_Iterator_base_secure::_Same_container
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z PROC	; std::_Container_base_aux::_Swap_aux, COMDAT
; _this$ = ecx

; 397  : 		_STD swap(_Myownedaux, _Right._Myownedaux);

	mov	eax, DWORD PTR __Right$[esp-4]
	push	esi
	cmp	ecx, eax
	je	SHORT $LN3@Swap_aux
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [eax], edx
$LN3@Swap_aux:

; 398  : 		_STD swap(*_Myownedaux, *_Right._Myownedaux);

	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, eax
	je	SHORT $LN6@Swap_aux
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [eax], edx
$LN6@Swap_aux:
	pop	esi

; 399  : 		}

	ret	4
?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z ENDP	; std::_Container_base_aux::_Swap_aux
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT

; 430  : 		return (_Left == _Right);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	eax, eax
	cmp	cl, BYTE PTR [edx]
	sete	al

; 431  : 		}

	ret	0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\find_iterator.hpp
;	COMDAT ?is_null@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE_NXZ
_TEXT	SEGMENT
?is_null@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE_NXZ PROC ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::is_null, COMDAT
; _this$ = ecx

; 74   :                     return m_Finder.empty();

	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	sete	al

; 75   :                 }

	ret	0
?is_null@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE_NXZ ENDP ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::is_null
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ?eof@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QBE_NXZ
_TEXT	SEGMENT
?eof@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QBE_NXZ PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::eof, COMDAT
; _this$ = eax

; 337  :                 return this->is_null() || m_bEof;

	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@eof
	cmp	BYTE PTR [eax+64], 0
	jne	SHORT $LN3@eof
	xor	eax, eax

; 338  :             }

	ret	0
$LN3@eof:

; 337  :                 return this->is_null() || m_bEof;

	mov	eax, 1

; 338  :             }

	ret	0
?eof@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QBE_NXZ ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::eof
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Distance@PADI@std@@YAXPAD0AAI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@PADI@std@@YAXPAD0AAI@Z PROC		; std::_Distance<char *,unsigned int>, COMDAT

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	ecx, DWORD PTR __Last$[esp-4]
	sub	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Off$[esp-4]
	add	DWORD PTR [eax], ecx

; 1894 : 	}

	ret	0
??$_Distance@PADI@std@@YAXPAD0AAI@Z ENDP		; std::_Distance<char *,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$advance@PBDH@std@@YAXAAPBDH@Z
_TEXT	SEGMENT
??$advance@PBDH@std@@YAXAAPBDH@Z PROC			; std::advance<char const *,int>, COMDAT
; __Where$ = eax
; __Off$ = ecx

; 1774 : 	_Advance(_Where, _Off, _Iter_cat(_Where));

	add	DWORD PTR [eax], ecx

; 1775 : 	}

	ret	0
??$advance@PBDH@std@@YAXAAPBDH@Z ENDP			; std::advance<char const *,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance@PBDH@std@@YAXPBD0AAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$_Distance@PBDH@std@@YAXPBD0AAH@Z PROC		; std::_Distance<char const *,int>, COMDAT
; __Last$ = eax
; __Off$ = ecx

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	sub	eax, DWORD PTR __First$[esp-4]
	add	DWORD PTR [ecx], eax

; 1894 : 	}

	ret	0
??$_Distance@PBDH@std@@YAXPBD0AAH@Z ENDP		; std::_Distance<char const *,int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Pop_heap@PADHD@std@@YAXPAD00DPAH@Z
_TEXT	SEGMENT
__Last$ = 8						; size = 4
__Val$ = 12						; size = 1
??$_Pop_heap@PADHD@std@@YAXPAD00DPAH@Z PROC		; std::_Pop_heap<char *,int,char>, COMDAT
; __First$ = ecx
; __Dest$ = edx

; 2080 : 	*_Dest = *_First;

	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR [edx], al

; 2081 : 	std::_Adjust_heap(_First, _Diff(0), _Diff(_Last - _First), _Val);

	mov	eax, DWORD PTR __Last$[esp-4]
	sub	eax, ecx
	mov	DWORD PTR __Last$[esp-4], 0
	jmp	??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z	; std::_Adjust_heap<char *,int,char>
??$_Pop_heap@PADHD@std@@YAXPAD00DPAH@Z ENDP		; std::_Pop_heap<char *,int,char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Lower_bound@PBDDH@std@@YAPBDPBD0ABDPAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$_Lower_bound@PBDDH@std@@YAPBDPBD0ABDPAH@Z PROC	; std::_Lower_bound<char const *,char,int>, COMDAT
; __Last$ = ecx
; __Val$ = eax

; 2252 : 	{	// find first element not before _Val, using operator<

	push	esi
	mov	esi, DWORD PTR __First$[esp]

; 2253 : 	_DEBUG_ORDER_SINGLE(_First, _Last, true);
; 2254 : 	_Diff _Count = 0;
; 2255 : 	_Distance(_First, _Last, _Count);

	sub	ecx, esi

; 2256 : 
; 2257 : 	for (; 0 < _Count; )

	test	ecx, ecx
	jle	SHORT $LN20@Lower_boun
	push	ebx
	mov	bl, BYTE PTR [eax]
	npad	2
$LL4@Lower_boun:

; 2258 : 		{	// divide and conquer, find half that contains answer
; 2259 : 		_Diff _Count2 = _Count / 2;

	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1

; 2260 : 		_FwdIt _Mid = _First;
; 2261 : 		std::advance(_Mid, _Count2);
; 2262 : 		_DEBUG_ORDER_SINGLE(_Mid, _Last, false);
; 2263 : 
; 2264 : 		if (_DEBUG_LT(*_Mid, _Val))

	cmp	BYTE PTR [eax+esi], bl
	jge	SHORT $LN2@Lower_boun

; 2265 : 			_First = ++_Mid, _Count -= _Count2 + 1;

	or	edx, -1
	sub	edx, eax
	lea	esi, DWORD PTR [eax+esi+1]
	add	ecx, edx

; 2266 : 		else

	jmp	SHORT $LN1@Lower_boun
$LN2@Lower_boun:

; 2267 : 			_Count = _Count2;

	mov	ecx, eax
$LN1@Lower_boun:

; 2256 : 
; 2257 : 	for (; 0 < _Count; )

	test	ecx, ecx
	jg	SHORT $LL4@Lower_boun
	pop	ebx
$LN20@Lower_boun:

; 2268 : 		}
; 2269 : 	return (_First);

	mov	eax, esi
	pop	esi

; 2270 : 	}

	ret	0
??$_Lower_bound@PBDDH@std@@YAPBDPBD0ABDPAH@Z ENDP	; std::_Lower_bound<char const *,char,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Pop_heap_0@PADD@std@@YAXPAD00@Z
_TEXT	SEGMENT
$T338279 = -4						; size = 1
??$_Pop_heap_0@PADD@std@@YAXPAD00@Z PROC		; std::_Pop_heap_0<char *,char>, COMDAT
; __First$ = ecx
; __Last$ = eax

; 2087 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ecx

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	movzx	edx, BYTE PTR [eax-1]
	mov	BYTE PTR $T338279[esp+4], dl
	movzx	edx, BYTE PTR [ecx]
	mov	BYTE PTR [eax-1], dl
	mov	edx, DWORD PTR $T338279[esp+4]
	push	edx
	sub	eax, ecx
	dec	eax
	push	0
	call	??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z	; std::_Adjust_heap<char *,int,char>

; 2090 : 	}

	add	esp, 12					; 0000000cH
	ret	0
??$_Pop_heap_0@PADD@std@@YAXPAD00@Z ENDP		; std::_Pop_heap_0<char *,char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lower_bound@PBDD@std@@YAPBDPBD0ABD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$lower_bound@PBDD@std@@YAPBDPBD0ABD@Z PROC		; std::lower_bound<char const *,char>, COMDAT
; __First$ = eax
; __Last$ = ecx

; 2276 : 	_ASSIGN_FROM_BASE(_First,

	push	eax
	mov	eax, DWORD PTR __Val$[esp]
	call	??$_Lower_bound@PBDDH@std@@YAPBDPBD0ABDPAH@Z ; std::_Lower_bound<char const *,char,int>
	add	esp, 4

; 2277 : 		_Lower_bound(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val, _Dist_type(_First)));
; 2278 : 	return _First;
; 2279 : 	}

	ret	0
??$lower_bound@PBDD@std@@YAPBDPBD0ABD@Z ENDP		; std::lower_bound<char const *,char>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$unchecked_copy_backward@PADPAD@stdext@@YAPADPAD00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$unchecked_copy_backward@PADPAD@stdext@@YAPADPAD00@Z PROC ; stdext::unchecked_copy_backward<char *,char *>, COMDAT
; __Last$ = eax
; __Dest$ = ecx

; 3636 : 	{	// copy [_First, _Last) backwards to [..., _Dest)

	mov	edx, DWORD PTR __First$[esp-4]

; 3637 : 		return (_STD _Copy_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3638 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	sub	eax, edx
	sub	ecx, eax
	push	esi
	mov	esi, ecx
	test	eax, eax
	jle	SHORT $LN18@unchecked_@24
	push	eax
	push	edx
	push	eax
	push	esi
	call	_memmove_s
	add	esp, 16					; 00000010H
$LN18@unchecked_@24:
	mov	eax, esi
	pop	esi

; 3639 : 	}

	ret	0
??$unchecked_copy_backward@PADPAD@stdext@@YAPADPAD00@Z ENDP ; stdext::unchecked_copy_backward<char *,char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$pop_heap@PAD@std@@YAXPAD0@Z
_TEXT	SEGMENT
$T338383 = -4						; size = 1
??$pop_heap@PAD@std@@YAXPAD0@Z PROC			; std::pop_heap<char *>, COMDAT
; __First$ = esi
; __Last$ = edx

; 2094 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ecx

; 2095 : 	_DEBUG_RANGE(_First, _Last);
; 2096 : 	_DEBUG_HEAP(_First, _Last);
; 2097 : 	if (1 < _Last - _First)

	mov	eax, edx
	sub	eax, esi
	cmp	eax, 1
	jle	SHORT $LN18@pop_heap

; 2098 : 		_Pop_heap_0(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val_type(_First));

	movzx	ecx, BYTE PTR [edx-1]
	mov	BYTE PTR $T338383[esp+4], cl
	movzx	ecx, BYTE PTR [esi]
	mov	BYTE PTR [edx-1], cl
	mov	edx, DWORD PTR $T338383[esp+4]
	push	edx
	dec	eax
	push	0
	mov	ecx, esi
	call	??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z	; std::_Adjust_heap<char *,int,char>
	add	esp, 8
$LN18@pop_heap:

; 2099 : 	}

	pop	ecx
	ret	0
??$pop_heap@PAD@std@@YAXPAD0@Z ENDP			; std::pop_heap<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$binary_search@PBDD@std@@YA_NPBD0ABD@Z
_TEXT	SEGMENT
??$binary_search@PBDD@std@@YA_NPBD0ABD@Z PROC		; std::binary_search<char const *,char>, COMDAT
; __First$ = eax
; __Last$ = esi
; __Val$ = edi

; 2488 : 	_First = std::lower_bound(_First, _Last, _Val);

	push	eax
	mov	eax, edi
	mov	ecx, esi
	call	??$_Lower_bound@PBDDH@std@@YAPBDPBD0ABDPAH@Z ; std::_Lower_bound<char const *,char,int>
	add	esp, 4

; 2489 : 	return (_First != _Last && !(_Val < *_First));

	cmp	eax, esi
	je	SHORT $LN3@binary_sea
	mov	cl, BYTE PTR [edi]
	cmp	cl, BYTE PTR [eax]
	jl	SHORT $LN3@binary_sea
	mov	eax, 1

; 2490 : 	}

	ret	0
$LN3@binary_sea:

; 2489 : 	return (_First != _Last && !(_Val < *_First));

	xor	eax, eax

; 2490 : 	}

	ret	0
??$binary_search@PBDD@std@@YA_NPBD0ABD@Z ENDP		; std::binary_search<char const *,char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort1@PADD@std@@YAXPAD00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Insertion_sort1@PADD@std@@YAXPAD00@Z PROC		; std::_Insertion_sort1<char *,char>, COMDAT

; 2968 : 	if (_First != _Last)
; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	edx, DWORD PTR __First$[esp-4]
	push	ebp
	lea	ebp, DWORD PTR [edx+1]
	cmp	ebp, DWORD PTR __Last$[esp]
	je	SHORT $LN6@Insertion_
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	sub	edi, edx
$LL7@Insertion_:

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;
; 2972 : 			_Ty _Val = *_Next;

	mov	bl, BYTE PTR [ebp]

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	cmp	bl, BYTE PTR [edx]
	mov	esi, ebp
	jge	SHORT $LN5@Insertion_

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	test	edi, edi
	jle	SHORT $LN34@Insertion_
	push	edi
	push	edx
	mov	eax, ebp
	sub	eax, edi
	inc	eax
	push	edi
	push	eax
	call	_memmove_s
	mov	edx, DWORD PTR __First$[esp+28]
	add	esp, 16					; 00000010H
$LN34@Insertion_:

; 2977 : 				*_First = _Val;

	mov	BYTE PTR [edx], bl

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_
$LN5@Insertion_:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;
; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	mov	cl, BYTE PTR [edx+edi-1]
	cmp	bl, cl
	lea	eax, DWORD PTR [edx+edi-1]
	jge	SHORT $LN1@Insertion_
$LL3@Insertion_:

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	BYTE PTR [esi], cl
	mov	cl, BYTE PTR [eax-1]
	mov	esi, eax
	dec	eax
	cmp	bl, cl
	jl	SHORT $LL3@Insertion_
$LN1@Insertion_:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	BYTE PTR [esi], bl
$LN4@Insertion_:

; 2968 : 	if (_First != _Last)
; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	inc	ebp
	inc	edi
	cmp	ebp, DWORD PTR __Last$[esp+12]
	jne	SHORT $LL7@Insertion_
	pop	edi
	pop	esi
	pop	ebx
$LN6@Insertion_:
	pop	ebp

; 2986 : 				}
; 2987 : 			}
; 2988 : 	}

	ret	0
??$_Insertion_sort1@PADD@std@@YAXPAD00@Z ENDP		; std::_Insertion_sort1<char *,char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Sort_heap@PAD@std@@YAXPAD0@Z
_TEXT	SEGMENT
$T338554 = -4						; size = 1
??$_Sort_heap@PAD@std@@YAXPAD0@Z PROC			; std::_Sort_heap<char *>, COMDAT
; __First$ = edi
; __Last$ = eax

; 2214 : 	{	// order heap by repeatedly popping, using operator<

	push	ecx
	push	esi

; 2215 : 	_DEBUG_RANGE(_First, _Last);
; 2216 : 	_DEBUG_HEAP(_First, _Last);
; 2217 : 	for (; 1 < _Last - _First; --_Last)

	mov	esi, eax
	sub	esi, edi
	cmp	esi, 1
	jle	SHORT $LN1@Sort_heap
$LN28@Sort_heap:

; 2218 : 		std::pop_heap(_First, _Last);

	mov	al, BYTE PTR [edi+esi-1]
	mov	cl, BYTE PTR [edi]
	mov	BYTE PTR $T338554[esp+8], al
	mov	edx, DWORD PTR $T338554[esp+8]
	push	edx
	mov	BYTE PTR [edi+esi-1], cl
	lea	eax, DWORD PTR [esi-1]
	push	0
	mov	ecx, edi
	call	??$_Adjust_heap@PADHD@std@@YAXPADHHD@Z	; std::_Adjust_heap<char *,int,char>
	dec	esi
	add	esp, 8
	cmp	esi, 1
	jg	SHORT $LN28@Sort_heap
$LN1@Sort_heap:
	pop	esi

; 2219 : 	}

	pop	ecx
	ret	0
??$_Sort_heap@PAD@std@@YAXPAD0@Z ENDP			; std::_Sort_heap<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$iter_swap@PADPAD@std@@YAXPAD0@Z
_TEXT	SEGMENT
??$iter_swap@PADPAD@std@@YAXPAD0@Z PROC			; std::iter_swap<char *,char *>, COMDAT
; __Left$ = ecx
; __Right$ = eax

; 594  : 	swap(*_Left, *_Right);

	cmp	ecx, eax
	je	SHORT $LN3@iter_swap
	mov	dl, BYTE PTR [ecx]
	push	ebx
	mov	bl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], bl
	mov	BYTE PTR [eax], dl
	pop	ebx
$LN3@iter_swap:

; 595  : 	}

	ret	0
??$iter_swap@PADPAD@std@@YAXPAD0@Z ENDP			; std::iter_swap<char *,char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??F?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator--, COMDAT
; _this$ = ecx

; 151  : 		{	// predecrement

	push	esi
	mov	esi, ecx

; 152  : 		if (this->_Mycont != _IGNORE_MYCONT)

	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN1@operator@68

; 153  : 		{
; 154  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	test	eax, eax
	jne	SHORT $LN2@operator@68
	call	__invalid_parameter_noinfo
$LN2@operator@68:

; 155  : 			_SCL_SECURE_VALIDATE_RANGE(_Myptr > ((_Mystring *)this->_Mycont)->_Myptr());

	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN10@operator@68
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN11@operator@68
$LN10@operator@68:
	add	eax, 4
$LN11@operator@68:
	cmp	DWORD PTR [esi+4], eax
	ja	SHORT $LN1@operator@68
	call	__invalid_parameter_noinfo
$LN1@operator@68:

; 156  : 		}
; 157  : 		--_Myptr;

	dec	DWORD PTR [esi+4]

; 158  : 		return (*this);

	mov	eax, esi
	pop	esi

; 159  : 		}

	ret	0
??F?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator--
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??F?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator--, COMDAT
; _this$ = ecx

; 391  : 		{	// predecrement

	push	esi
	mov	esi, ecx

; 392  : 		--(*(_Mybase *)this);

	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN3@operator@69
	test	eax, eax
	jne	SHORT $LN4@operator@69
	call	__invalid_parameter_noinfo
$LN4@operator@69:
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN12@operator@69
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN13@operator@69
$LN12@operator@69:
	add	eax, 4
$LN13@operator@69:
	cmp	DWORD PTR [esi+4], eax
	ja	SHORT $LN3@operator@69
	call	__invalid_parameter_noinfo
$LN3@operator@69:
	dec	DWORD PTR [esi+4]

; 393  : 		return (*this);

	mov	eax, esi
	pop	esi

; 394  : 		}

	ret	0
??F?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator--
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
_TEXT	ENDS
;	COMDAT ??$?RD@?$is_any_ofF@D@detail@algorithm@boost@@QBE_ND@Z
_TEXT	SEGMENT
_Ch$ = 8						; size = 1
??$?RD@?$is_any_ofF@D@detail@algorithm@boost@@QBE_ND@Z PROC ; boost::algorithm::detail::is_any_ofF<char>::operator()<char>, COMDAT
; _this$ = eax

; 216  :                 bool operator()( Char2T Ch ) const

	push	ebx
	mov	bl, BYTE PTR _Ch$[esp]
	push	esi
	mov	esi, eax

; 217  :                 {
; 218  :                     const set_value_type* Storage=
; 219  :                         (use_fixed_storage(m_Size))
; 220  :                         ? &m_Storage.m_fixSet[0]
; 221  :                         : m_Storage.m_dynSet;

	mov	eax, DWORD PTR [esi+8]
	cmp	eax, 8
	jbe	SHORT $LN4@operator@70
	mov	esi, DWORD PTR [esi]
$LN4@operator@70:
	push	edi

; 222  : 
; 223  :                     return ::std::binary_search(Storage, Storage+m_Size, Ch);

	lea	edi, DWORD PTR [eax+esi]
	mov	ecx, edi
	sub	ecx, esi
	test	ecx, ecx
	jle	SHORT $LN25@operator@70
	npad	2
$LL26@operator@70:
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	BYTE PTR [eax+esi], bl
	jge	SHORT $LN24@operator@70
	or	edx, -1
	sub	edx, eax
	lea	esi, DWORD PTR [eax+esi+1]
	add	ecx, edx
	jmp	SHORT $LN23@operator@70
$LN24@operator@70:
	mov	ecx, eax
$LN23@operator@70:
	test	ecx, ecx
	jg	SHORT $LL26@operator@70
$LN25@operator@70:
	cmp	esi, edi
	pop	edi
	je	SHORT $LN9@operator@70
	cmp	bl, BYTE PTR [esi]
	jl	SHORT $LN9@operator@70
	pop	esi
	mov	eax, 1
	pop	ebx

; 224  :                 }

	ret	4

; 222  : 
; 223  :                     return ::std::binary_search(Storage, Storage+m_Size, Ch);

$LN9@operator@70:
	pop	esi
	xor	eax, eax
	pop	ebx

; 224  :                 }

	ret	4
??$?RD@?$is_any_ofF@D@detail@algorithm@boost@@QBE_ND@Z ENDP ; boost::algorithm::detail::is_any_ofF<char>::operator()<char>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort@PAD@std@@YAXPAD0@Z
_TEXT	SEGMENT
??$_Insertion_sort@PAD@std@@YAXPAD0@Z PROC		; std::_Insertion_sort<char *>, COMDAT
; __First$ = ecx
; __Last$ = eax

; 2993 : 	std::_Insertion_sort1(_First, _Last, _Val_type(_First));

	cmp	ecx, eax
	je	SHORT $LN12@Insertion_@2
	push	eax
	push	ecx
	call	??$_Insertion_sort1@PADD@std@@YAXPAD00@Z ; std::_Insertion_sort1<char *,char>
	add	esp, 8
$LN12@Insertion_@2:

; 2994 : 	}

	ret	0
??$_Insertion_sort@PAD@std@@YAXPAD0@Z ENDP		; std::_Insertion_sort<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$sort_heap@PAD@std@@YAXPAD0@Z
_TEXT	SEGMENT
??$sort_heap@PAD@std@@YAXPAD0@Z PROC			; std::sort_heap<char *>, COMDAT
; __First$ = edi
; __Last$ = eax

; 2224 : 	_DEBUG_HEAP(_First, _Last);
; 2225 : 	_Sort_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last));

	jmp	??$_Sort_heap@PAD@std@@YAXPAD0@Z	; std::_Sort_heap<char *>
??$sort_heap@PAD@std@@YAXPAD0@Z ENDP			; std::sort_heap<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$make_heap@PAD@std@@YAXPAD0@Z
_TEXT	SEGMENT
??$make_heap@PAD@std@@YAXPAD0@Z PROC			; std::make_heap<char *>, COMDAT
; __First$ = ecx
; __Last$ = eax

; 2177 : 	{	// make [_First, _Last) into a heap, using operator<

	push	edi
	mov	edi, ecx

; 2178 : 	_DEBUG_RANGE(_First, _Last);
; 2179 : 	if (1 < _Last - _First)

	mov	ecx, eax
	sub	ecx, edi
	cmp	ecx, 1
	jle	SHORT $LN1@make_heap

; 2180 : 		_Make_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last),
; 2181 : 			_Dist_type(_First), _Val_type(_First));

	push	eax
	call	??$_Make_heap@PADHD@std@@YAXPAD0PAH0@Z	; std::_Make_heap<char *,int,char>
	add	esp, 4
$LN1@make_heap:
	pop	edi

; 2182 : 	}

	ret	0
??$make_heap@PAD@std@@YAXPAD0@Z ENDP			; std::make_heap<char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++, COMDAT
; _this$ = ecx

; 133  : 		{	// preincrement

	push	esi
	mov	esi, ecx

; 134  : 		if (this->_Mycont != _IGNORE_MYCONT)

	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN1@operator@71

; 135  : 		{
; 136  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	test	eax, eax
	jne	SHORT $LN2@operator@71
	call	__invalid_parameter_noinfo
$LN2@operator@71:

; 137  : 			_SCL_SECURE_VALIDATE_RANGE(_Myptr < (((_Mystring *)this->_Mycont)->_Myptr() + ((_Mystring *)this->_Mycont)->_Mysize));

	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN10@operator@71
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN11@operator@71
$LN10@operator@71:
	lea	ecx, DWORD PTR [eax+4]
$LN11@operator@71:
	mov	eax, DWORD PTR [eax+20]
	add	eax, ecx
	cmp	DWORD PTR [esi+4], eax
	jb	SHORT $LN1@operator@71
	call	__invalid_parameter_noinfo
$LN1@operator@71:

; 138  : 		}
; 139  : 		++_Myptr;

	inc	DWORD PTR [esi+4]

; 140  : 		return (*this);

	mov	eax, esi
	pop	esi

; 141  : 		}

	ret	0
??E?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++, COMDAT
; _this$ = esi

; 379  : 		++(*(_Mybase *)this);

	mov	eax, DWORD PTR [esi]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN3@operator@72
	test	eax, eax
	jne	SHORT $LN4@operator@72
	call	__invalid_parameter_noinfo
$LN4@operator@72:
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN12@operator@72
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN13@operator@72
$LN12@operator@72:
	lea	ecx, DWORD PTR [eax+4]
$LN13@operator@72:
	mov	eax, DWORD PTR [eax+20]
	add	eax, ecx
	cmp	DWORD PTR [esi+4], eax
	jb	SHORT $LN3@operator@72
	call	__invalid_parameter_noinfo
$LN3@operator@72:
	inc	DWORD PTR [esi+4]

; 380  : 		return (*this);

	mov	eax, esi

; 381  : 		}

	ret	0
??E?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@XZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator++
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$range_begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
??$range_begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; boost::range_detail::range_begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _c$ = ecx

; 44   :         //
; 45   :         // If you get a compile-error here, it is most likely because
; 46   :         // you have not implemented range_begin() properly in
; 47   :         // the namespace of C
; 48   :         //
; 49   :         return c.begin();

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 50   :     }

	ret	0
??$range_begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; boost::range_detail::range_begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
_TEXT	ENDS
;	COMDAT ??$range_end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
??$range_end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; boost::range_detail::range_end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _c$ = ecx

; 45   :             //
; 46   :             // If you get a compile-error here, it is most likely because
; 47   :             // you have not implemented range_begin() properly in
; 48   :             // the namespace of C
; 49   :             //
; 50   :             return c.end();

	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 51   :         }

	ret	0
??$range_end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@range_detail@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; boost::range_detail::range_end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??G?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator-, COMDAT
; _this$ = ecx

; 186  : 		{	// return difference of iterators

	push	esi
	mov	esi, ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN1@operator@73
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@operator@73
$LN1@operator@73:
	call	__invalid_parameter_noinfo
$LN2@operator@73:

; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	ecx, DWORD PTR [esi+4]
	sub	ecx, DWORD PTR [edi+4]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	pop	edi
	add	eax, edx
	pop	esi

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator-
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-, COMDAT
; _this$ = ecx

; 199  : 		{	// return difference of iterators

	push	esi
	mov	esi, ecx

; 200  : 
; 201  :  #if _HAS_ITERATOR_DEBUGGING
; 202  : 		_Compat(_Right);
; 203  :  #else
; 204  : 		if (this->_Mycont != _IGNORE_MYCONT)

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN2@operator@74

; 205  : 		{
; 206  : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	test	eax, eax
	je	SHORT $LN1@operator@74
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@operator@74
$LN1@operator@74:
	call	__invalid_parameter_noinfo
$LN2@operator@74:

; 207  : 		}
; 208  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 209  : 
; 210  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [esi+4]
	sub	eax, DWORD PTR [edi+4]
	pop	edi
	pop	esi

; 211  : 		}

	ret	4
??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ??4?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??4?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEAAV01@ABV01@@Z PROC ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator=, COMDAT
; _this$ = eax
; _r$ = ecx

; 230  :                 m_Begin  = r.begin(); 

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 231  :                 m_End    = r.end();

	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx

; 232  : 
; 233  :                 #ifndef NDEBUG
; 234  :                 singular = r.singular;
; 235  :                 #endif
; 236  :                 return *this;
; 237  :             }

	ret	0
??4?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEAAV01@ABV01@@Z ENDP ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator=
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==, COMDAT
; _this$ = ecx

; 219  : 		{	// test for iterator equality

	push	esi
	mov	esi, ecx

; 220  : 
; 221  :  #if _HAS_ITERATOR_DEBUGGING
; 222  : 		_Compat(_Right);
; 223  :  #else
; 224  : 		if (this->_Mycont != _IGNORE_MYCONT)

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN2@operator@75

; 225  : 		{
; 226  : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	test	eax, eax
	je	SHORT $LN1@operator@75
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@operator@75
$LN1@operator@75:
	call	__invalid_parameter_noinfo
$LN2@operator@75:

; 227  : 		}
; 228  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 229  : 
; 230  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	sete	cl
	mov	al, cl
	pop	esi

; 231  : 		}

	ret	4
??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@KAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__P2$ = 8						; size = 8
__P1$ = 16						; size = 8
?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@KAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Pdif, COMDAT

; 2143 : 		return (_STR_ITER_BASE(_P2) == 0 ? 0 : _P2 - _P1);

	mov	eax, DWORD PTR __P2$[esp]
	test	eax, eax
	jne	SHORT $LN3@Pdif

; 2144 : 		}

	ret	0
$LN3@Pdif:

; 2143 : 		return (_STR_ITER_BASE(_P2) == 0 ? 0 : _P2 - _P1);

	mov	ecx, DWORD PTR __P2$[esp-4]
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN6@Pdif
	test	ecx, ecx
	je	SHORT $LN5@Pdif
	cmp	ecx, DWORD PTR __P1$[esp-4]
	je	SHORT $LN6@Pdif
$LN5@Pdif:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __P2$[esp]
$LN6@Pdif:
	sub	eax, DWORD PTR __P1$[esp]

; 2144 : 		}

	ret	0
?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@KAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Pdif
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx

; 759  : 		{	// subscript nonmutable sequence

	push	esi
	mov	esi, ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	push	edi
	mov	edi, DWORD PTR __Pos$[esp+4]
	add	eax, edx
	cmp	edi, eax
	jb	SHORT $LN1@operator@76
	call	__invalid_parameter_noinfo
$LN1@operator@76:

; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	edx, DWORD PTR [esi+12]
	lea	ecx, DWORD PTR [edi*8]
	sub	ecx, edi
	pop	edi
	lea	eax, DWORD PTR [edx+ecx*4]
	pop	esi

; 771  : 		}

	ret	4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@IPAV123@@Z
_TEXT	SEGMENT
$T339022 = -12						; size = 12
$T339026 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@IPAV123@@Z PROC ; std::_Allocate<boost::program_options::basic_option<char> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@14

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@14:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	imul	ecx, 84					; 00000054H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@14:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 84					; 00000054H
	jae	SHORT $LN1@Allocate@14

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T339026[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T339022[esp+16]
	mov	DWORD PTR $T339026[esp+12], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T339022[esp+16]
	push	ecx
	mov	DWORD PTR $T339022[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@14:
$LN8@Allocate@14:
	int	3
??$_Allocate@V?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@IPAV123@@Z ENDP ; std::_Allocate<boost::program_options::basic_option<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\detail\lcast_precision.hpp
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4InputType@InputStream@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4InputType@InputStream@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4InputType@InputStream@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4InputType@InputStream@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::InputStream::InputType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4InputType@InputStream@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4InputType@InputStream@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::InputStream::InputType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4OutputFileType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4OutputFileType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4OutputFileType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4OutputFileType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::OutputFileType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4OutputFileType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4OutputFileType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::OutputFileType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4SystemConfigurationType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4SystemConfigurationType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4SystemConfigurationType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4SystemConfigurationType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::SystemConfigurationType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4SystemConfigurationType@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4SystemConfigurationType@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::SystemConfigurationType,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4TransactionOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4TransactionOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::TransactionOrderingAlgorithm,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4TransactionOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4TransactionOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::TransactionOrderingAlgorithm,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4CommandOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4CommandOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4CommandOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4CommandOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::CommandOrderingAlgorithm,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4CommandOrderingAlgorithm@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4CommandOrderingAlgorithm@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::CommandOrderingAlgorithm,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4RefreshPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RefreshPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4RefreshPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RefreshPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::RefreshPolicy,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4RefreshPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RefreshPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::RefreshPolicy,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4RowBufferPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RowBufferPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4RowBufferPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RowBufferPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::RowBufferPolicy,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4RowBufferPolicy@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4RowBufferPolicy@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::RowBufferPolicy,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lcast_set_precision@W4AddressMappingScheme@Address@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4AddressMappingScheme@Address@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
??$lcast_set_precision@W4AddressMappingScheme@Address@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4AddressMappingScheme@Address@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; boost::detail::lcast_set_precision<enum DRAMsimII::Address::AddressMappingScheme,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _stream$ = eax

; 176  :     std::streamsize const s = lcast_get_precision((Source*)0);
; 177  :     std::streamsize const t = lcast_get_precision((Target*)0);
; 178  :     stream.precision(s > t ? s : t);

	mov	DWORD PTR [eax+20], 6

; 179  : }

	ret	0
??$lcast_set_precision@W4AddressMappingScheme@Address@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@YAXAAVios_base@std@@PAW4AddressMappingScheme@Address@DRAMsimII@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; boost::detail::lcast_set_precision<enum DRAMsimII::Address::AddressMappingScheme,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\begin.hpp
_TEXT	ENDS
;	COMDAT ??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; boost::begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _r$ = ecx

; 98   : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 99   :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 100  :     /**/
; 101  :     using namespace range_detail;
; 102  : #endif
; 103  :     return range_begin( r );

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 104  : }

	ret	0
??$begin@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; boost::begin<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\end.hpp
_TEXT	ENDS
;	COMDAT ??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; boost::end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___$ReturnUdt$ = eax
; _r$ = ecx

; 94   : #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564)) && \
; 95   :     !BOOST_WORKAROUND(__GNUC__, < 3) \
; 96   :     /**/
; 97   :     using namespace range_detail;
; 98   : #endif
; 99   :     return range_end( r );

	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 100  : }

	ret	0
??$end@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; boost::end<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\as_literal.hpp
_TEXT	ENDS
;	COMDAT ??$make_range@$$CBD@range_detail@boost@@YA?AV?$iterator_range@PBD@1@QBD_N@Z
_TEXT	SEGMENT
??$make_range@$$CBD@range_detail@boost@@YA?AV?$iterator_range@PBD@1@QBD_N@Z PROC ; boost::range_detail::make_range<char const >, COMDAT
; ___$ReturnUdt$ = eax

; 86   :             return iterator_range<T*>( r, r + length(r) );

	mov	ecx, OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	esi
	lea	esi, DWORD PTR [ecx+1]
	npad	7
$LL7@make_range:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL7@make_range
	sub	ecx, esi
	lea	ecx, DWORD PTR ??_C@_01CLKCMJKC@?5?$AA@[ecx]
	mov	DWORD PTR [eax], OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	DWORD PTR [eax+4], ecx
	pop	esi

; 87   :         }

	ret	0
??$make_range@$$CBD@range_detail@boost@@YA?AV?$iterator_range@PBD@1@QBD_N@Z ENDP ; boost::range_detail::make_range<char const >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\any.hpp
_TEXT	ENDS
;	COMDAT ??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVany@0@@Z
_TEXT	SEGMENT
??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVany@0@@Z PROC ; boost::any_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _operand$ = esi

; 167  :         return operand && operand->type() == typeid(ValueType)
; 168  :                     ? &static_cast<any::holder<ValueType> *>(operand->content)->held
; 169  :                     : 0;

	test	esi, esi
	je	SHORT $LN3@any_cast
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN7@any_cast
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	jmp	SHORT $LN8@any_cast
$LN7@any_cast:
	mov	eax, OFFSET ??_R0X@8
$LN8@any_cast:
	push	OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	mov	ecx, eax
	call	??8type_info@@QBE_NABV0@@Z		; type_info::operator==
	test	al, al
	je	SHORT $LN3@any_cast
	mov	eax, DWORD PTR [esi]
	add	eax, 4

; 170  :     }

	ret	0
$LN3@any_cast:

; 167  :         return operand && operand->type() == typeid(ValueType)
; 168  :                     ? &static_cast<any::holder<ValueType> *>(operand->content)->held
; 169  :                     : 0;

	xor	eax, eax

; 170  :     }

	ret	0
??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVany@0@@Z ENDP ; boost::any_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	esi
	mov	esi, ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN1@operator@77
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@operator@77
$LN1@operator@77:
	call	__invalid_parameter_noinfo
$LN2@operator@77:

; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	sete	cl
	mov	al, cl
	pop	esi

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator==, COMDAT
; _this$ = ecx

; 203  : 		{	// test for iterator equality

	push	esi
	mov	esi, ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN1@operator@78
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@operator@78
$LN1@operator@78:
	call	__invalid_parameter_noinfo
$LN2@operator@78:

; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	sete	cl
	mov	al, cl
	pop	esi

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=, COMDAT
; _this$ = ecx

; 215  : 		{	// test for iterator inequality

	push	esi
	mov	esi, ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN3@operator@79
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN4@operator@79
$LN3@operator@79:
	call	__invalid_parameter_noinfo
$LN4@operator@79:
	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	setne	cl
	mov	al, cl
	pop	esi

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator!=, COMDAT
; _this$ = ecx

; 215  : 		{	// test for iterator inequality

	push	esi
	mov	esi, ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN3@operator@80
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN4@operator@80
$LN3@operator@80:
	call	__invalid_parameter_noinfo
$LN4@operator@80:
	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	setne	cl
	mov	al, cl
	pop	esi

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator!=
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?assign_to_own@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXABV12@@Z
_TEXT	SEGMENT
?assign_to_own@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXABV12@@Z PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to_own, COMDAT
; _this$ = ecx
; _f$ = edx

; 883  :       if (!f.empty()) {

	mov	eax, DWORD PTR [edx]
	test	eax, eax
	je	SHORT $LN1@assign_to_

; 884  :         this->vtable = f.vtable;

	mov	DWORD PTR [ecx], eax

; 885  :         if (this->has_trivial_copy_and_destroy())
; 886  :           this->functor = f.functor;

	add	ecx, 8
	test	al, 1
	je	SHORT $LN2@assign_to_
	movq	xmm0, QWORD PTR [edx+8]
	lea	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	movq	QWORD PTR [ecx+8], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 890  :       }
; 891  :     }

	ret	0
$LN2@assign_to_:

; 887  :         else
; 888  :           get_vtable()->base.manager(f.functor, this->functor,
; 889  :                                      boost::detail::function::clone_functor_tag);

	push	0
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	push	ecx
	add	edx, 8
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN1@assign_to_:

; 890  :       }
; 891  :     }

	ret	0
?assign_to_own@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXABV12@@Z ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to_own
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_option@D@program_options@boost@@HPBV345@ABV345@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_option@D@program_options@boost@@HPBV345@ABV345@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::random_access_iterator_tag,boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_option@D@program_options@boost@@HPBV345@ABV345@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::random_access_iterator_tag,boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Ranit@V?$basic_option@D@program_options@boost@@HPBV123@ABV123@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Ranit@V?$basic_option@D@program_options@boost@@HPBV123@ABV123@@std@@QAE@XZ PROC ; std::_Ranit<boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &>::_Ranit<boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Ranit@V?$basic_option@D@program_options@boost@@HPBV123@ABV123@@std@@QAE@XZ ENDP ; std::_Ranit<boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &>::_Ranit<boost::program_options::basic_option<char>,int,boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 76   : 	_Vector_const_iterator(_Tptr _Ptr, const _Container_base *_Pvector)

	push	ebx

; 77   : 		{	// construct with pointer _Ptr
; 78   : 		_SCL_SECURE_VALIDATE(_Pvector != NULL && ((_Myvec *)_Pvector)->_Myfirst <= _Ptr && _Ptr <= ((_Myvec *)_Pvector)->_Mylast);

	mov	ebx, DWORD PTR __Ptr$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Pvector$[esp+8]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	test	edi, edi
	je	SHORT $LN1@Vector_con@9
	cmp	DWORD PTR [edi+12], ebx
	ja	SHORT $LN1@Vector_con@9
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN2@Vector_con@9
$LN1@Vector_con@9:
	call	__invalid_parameter_noinfo
$LN2@Vector_con@9:

; 79   : 		this->_Set_container(_Pvector);

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	pop	edi

; 80   : 		_Myptr = _Ptr;

	mov	DWORD PTR [esi+4], ebx

; 81   : 		}

	mov	eax, esi
	pop	esi
	pop	ebx
	ret	8
??0?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?clear@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAEXXZ
_TEXT	SEGMENT
?clear@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAEXXZ PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::clear, COMDAT
; _this$ = esi

; 854  :       if (vtable) {

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@clear@6

; 855  :         if (!this->has_trivial_copy_and_destroy())

	test	al, 1
	jne	SHORT $LN9@clear@6

; 856  :           get_vtable()->clear(this->functor);

	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN9@clear@6
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN9@clear@6:

; 857  :         vtable = 0;

	mov	DWORD PTR [esi], 0
$LN2@clear@6:

; 858  :       }
; 859  :     }

	ret	0
?clear@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAEXXZ ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@ABV01@@Z PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi
; _f$ = ecx

; 748  :     {

	mov	DWORD PTR [esi], 0

; 749  :       this->assign_to_own(f);

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN16@function2
	mov	DWORD PTR [esi], eax
	test	al, 1
	je	SHORT $LN6@function2
	movq	xmm0, QWORD PTR [ecx+8]
	lea	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [esi+8], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	movq	QWORD PTR [esi+16], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [esi+24], xmm0

; 750  :     }

	mov	eax, esi
	ret	0

; 749  :       this->assign_to_own(f);

$LN6@function2:
	push	0
	lea	edx, DWORD PTR [esi+8]
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	push	edx
	add	ecx, 8
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN16@function2:

; 750  :     }

	mov	eax, esi
	ret	0
??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@ABV01@@Z ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 707  :     BOOST_FUNCTION_FUNCTION() : function_base() { }

	mov	DWORD PTR [eax], 0
	ret	0
??0?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEPAV?$basic_option@D@program_options@boost@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEPAV?$basic_option@D@program_options@boost@@I@Z PROC ; std::allocator<boost::program_options::basic_option<char> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@V?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@IPAV123@@Z ; std::_Allocate<boost::program_options::basic_option<char> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEPAV?$basic_option@D@program_options@boost@@I@Z ENDP ; std::allocator<boost::program_options::basic_option<char> >::allocate
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ??1?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi

; 752  :     ~BOOST_FUNCTION_FUNCTION() { clear(); }

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@function2@2
	test	al, 1
	jne	SHORT $LN11@function2@2
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN11@function2@2
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN11@function2@2:
	mov	DWORD PTR [esi], 0
$LN4@function2@2:
	ret	0
??1?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@XZ ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@ABV0123@@Z
_TEXT	SEGMENT
??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@ABV0123@@Z PROC ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi
; _Other$ = ecx

; 46   :                     m_Finder(Other.m_Finder) {}

	mov	DWORD PTR [esi], 0
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN19@find_itera
	mov	DWORD PTR [esi], eax
	test	al, 1
	je	SHORT $LN9@find_itera
	movq	xmm0, QWORD PTR [ecx+8]
	lea	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [esi+8], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	movq	QWORD PTR [esi+16], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [esi+24], xmm0
	mov	eax, esi
	ret	0
$LN9@find_itera:
	push	0
	lea	edx, DWORD PTR [esi+8]
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	push	edx
	add	ecx, 8
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN19@find_itera:
	mov	eax, esi
	ret	0
??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@ABV0123@@Z ENDP ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ
_TEXT	SEGMENT
??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ PROC ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 43   :                 find_iterator_base() {};

	mov	DWORD PTR [eax], 0
	ret	0
??0?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ ENDP ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 300  : 		{	// discard any allocated buffer and clear pointers

	push	esi
	mov	esi, ecx

; 301  : 		if (_Mystate & _Allocated)

	test	BYTE PTR [esi+64], 1
	je	SHORT $LN16@Tidy@14

; 302  : 			_Al.deallocate(_Mysb::eback(),
; 303  : 				(_Mysb::pptr() != 0 ? _Mysb::epptr()
; 304  : 					: _Mysb::egptr()) - _Mysb::eback());

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@Tidy@14:

; 305  : 		_Mysb::setg(0, 0, 0);

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], 0

; 306  : 		_Mysb::setp(0, 0);

	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], 0

; 307  : 		_Seekhigh = 0;
; 308  : 		_Mystate &= ~_Allocated;

	and	DWORD PTR [esi+64], -2			; fffffffeH
	mov	DWORD PTR [esi+60], 0
	pop	esi

; 309  : 		}

	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::end, COMDAT
; _this$ = ecx

; 655  : 		{	// return iterator for end of nonmutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 656  : 		return (const_iterator(_Mylast, this));

	mov	ebx, DWORD PTR [esi+16]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	DWORD PTR [esi+12], ebx
	jbe	SHORT $LN4@end@9
	call	__invalid_parameter_noinfo
$LN4@end@9:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 657  : 		}

	ret	4
?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::begin, COMDAT
; _this$ = ecx

; 645  : 		{	// return iterator for beginning of nonmutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 646  : 		return (const_iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [esi+12]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN4@begin@9
	call	__invalid_parameter_noinfo
$LN4@begin@9:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 647  : 		}

	ret	4
?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::begin
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ??1?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ
_TEXT	SEGMENT
??1?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ PROC ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi

; 54   :                 ~find_iterator_base() {}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN7@find_itera@2
	test	al, 1
	jne	SHORT $LN14@find_itera@2
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN14@find_itera@2
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN14@find_itera@2:
	mov	DWORD PTR [esi], 0
$LN7@find_itera@2:
	ret	0
??1?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ ENDP ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi
; _Other$ = edi

; 244  :             {}

	mov	DWORD PTR [esi], 0
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN11@split_iter
	mov	DWORD PTR [esi], eax
	test	al, 1
	je	SHORT $LN12@split_iter
	movq	xmm0, QWORD PTR [edi+8]
	movq	QWORD PTR [esi+8], xmm0
	movq	xmm0, QWORD PTR [edi+16]
	movq	QWORD PTR [esi+16], xmm0
	movq	xmm0, QWORD PTR [edi+24]
	movq	QWORD PTR [esi+24], xmm0
	jmp	SHORT $LN11@split_iter
$LN12@split_iter:
	push	0
	lea	ecx, DWORD PTR [esi+8]
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR [edi+8]
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN11@split_iter:
	movq	xmm0, QWORD PTR [edi+32]
	movq	QWORD PTR [esi+32], xmm0
	movq	xmm0, QWORD PTR [edi+40]
	movq	QWORD PTR [esi+40], xmm0
	mov	ecx, DWORD PTR [edi+48]
	mov	DWORD PTR [esi+48], ecx
	mov	edx, DWORD PTR [edi+52]
	mov	DWORD PTR [esi+52], edx
	mov	eax, DWORD PTR [edi+56]
	mov	DWORD PTR [esi+56], eax
	mov	ecx, DWORD PTR [edi+60]
	mov	DWORD PTR [esi+60], ecx
	mov	BYTE PTR [esi+64], 0
	mov	eax, esi
	ret	0
??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx

; 240  : 		streamoff _Off = (streamoff)_Ptr;

	mov	eax, DWORD PTR __Ptr$[esp-4]
	mov	edx, DWORD PTR __Ptr$[esp+4]
	push	ebp
	push	edi

; 241  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

	mov	edi, DWORD PTR [ecx+36]
	add	edx, eax
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN12@seekpos
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN12@seekpos

; 242  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

	mov	DWORD PTR [ecx+60], eax
$LN12@seekpos:

; 243  : 
; 244  : 		if (_Off == _BADOFF)

	mov	ebp, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF
	cmp	edx, ebp
	je	$LN56@seekpos
	push	ebx

; 245  : 			;
; 246  : 		else if (_Mode & ios_base::in && _Mysb::gptr() != 0)

	mov	bl, BYTE PTR __Mode$[esp+8]
	push	esi
	test	bl, 1
	je	SHORT $LN55@seekpos
	mov	eax, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [eax]
	test	esi, esi
	je	SHORT $LN55@seekpos

; 247  : 			{	// position within read buffer
; 248  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	test	edx, edx
	jl	SHORT $LN4@seekpos
	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]
	mov	edi, DWORD PTR [ecx+60]
	sub	edi, eax
	cmp	edx, edi
	jg	SHORT $LN4@seekpos

; 249  : 				{	// change read position
; 250  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

	sub	eax, esi
	mov	esi, DWORD PTR [ecx+48]
	add	eax, edx
	sub	DWORD PTR [esi], eax
	mov	esi, DWORD PTR [ecx+32]
	add	DWORD PTR [esi], eax

; 251  : 				if (_Mode & ios_base::out && _Mysb::pptr() != 0)

	test	bl, 2
	je	SHORT $LN57@seekpos
	mov	edi, DWORD PTR [ecx+36]
	mov	ebx, DWORD PTR [edi]
	test	ebx, ebx
	je	SHORT $LN57@seekpos

; 252  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),
; 253  : 						_Mysb::epptr());	// change write position to match

	mov	eax, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [eax]
	add	eax, ebx
	mov	DWORD PTR [edi], esi
	mov	ecx, DWORD PTR [ecx+52]
	sub	eax, esi
	mov	DWORD PTR [ecx], eax

; 254  : 				}
; 255  : 			else
; 256  : 				_Off = _BADOFF;

	jmp	SHORT $LN57@seekpos
$LN55@seekpos:

; 257  : 			}
; 258  : 		else if (_Mode & ios_base::out && _Mysb::pptr() != 0)

	test	bl, 2
	je	SHORT $LN4@seekpos
	mov	edi, DWORD PTR [edi]
	test	edi, edi
	je	SHORT $LN4@seekpos

; 259  : 			{	// position within write buffer
; 260  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	test	edx, edx
	jl	SHORT $LN4@seekpos
	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]
	mov	esi, DWORD PTR [ecx+60]
	sub	esi, eax
	cmp	edx, esi
	jg	SHORT $LN4@seekpos

; 261  : 				_Mysb::pbump((int)(_Mysb::eback()
; 262  : 					- _Mysb::pptr() + _Off));	// change write position

	mov	esi, DWORD PTR [ecx+52]
	sub	eax, edi
	add	eax, edx
	sub	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [ecx+36]
	add	DWORD PTR [ecx], eax

; 263  : 			else

	jmp	SHORT $LN57@seekpos
$LN4@seekpos:

; 264  : 				_Off = _BADOFF;
; 265  : 			}
; 266  : 		else
; 267  : 			_Off = _BADOFF;

	mov	edx, ebp
$LN57@seekpos:
	pop	esi
	pop	ebx
$LN56@seekpos:

; 268  : 		return (streampos(_Off));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	xor	ecx, ecx
	pop	edi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebp

; 269  : 		}

	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
__Way$ = 16						; size = 4
__Which$ = 20						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx

; 194  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx]
	test	eax, eax
	je	SHORT $LN20@seekoff
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN20@seekoff

; 195  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

	mov	DWORD PTR [ecx+60], eax
$LN20@seekoff:
	push	ebx

; 196  : 
; 197  : 		if (_Which & ios_base::in && _Mysb::gptr() != 0)

	mov	bl, BYTE PTR __Which$[esp]
	push	esi
	push	edi
	test	bl, 1
	je	$LN19@seekoff
	mov	eax, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [eax]
	test	esi, esi
	je	$LN19@seekoff

; 198  : 			{	// position within read buffer
; 199  : 			if (_Way == ios_base::end)

	mov	eax, DWORD PTR __Way$[esp+8]
	mov	edi, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF
	cmp	eax, 2
	jne	SHORT $LN18@seekoff

; 200  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [ecx+60]
	sub	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR __Off$[esp+8]
	add	edx, eax

; 201  : 			else if (_Way == ios_base::cur

	jmp	SHORT $LN14@seekoff
$LN18@seekoff:

; 202  : 				&& (_Which & ios_base::out) == 0)

	cmp	eax, 1
	jne	SHORT $LN16@seekoff
	test	bl, 2
	jne	SHORT $LN73@seekoff

; 203  : 				_Off += (off_type)(_Mysb::gptr() - _Mysb::eback());

	mov	edx, DWORD PTR [ecx+16]
	mov	eax, esi
	sub	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR __Off$[esp+8]
	add	edx, eax
	jmp	SHORT $LN14@seekoff
$LN16@seekoff:

; 204  : 			else if (_Way != ios_base::beg)

	test	eax, eax
	je	SHORT $LN74@seekoff
$LN73@seekoff:

; 205  : 				_Off = _BADOFF;

	mov	edx, edi
	jmp	SHORT $LN14@seekoff
$LN74@seekoff:
	mov	edx, DWORD PTR __Off$[esp+8]
$LN14@seekoff:

; 206  : 
; 207  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	test	edx, edx
	jl	$LN3@seekoff
	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]
	push	ebp
	mov	ebp, DWORD PTR [ecx+60]
	sub	ebp, eax
	cmp	edx, ebp
	pop	ebp
	jg	$LN3@seekoff

; 208  : 				{	// change read position
; 209  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

	sub	eax, esi
	mov	esi, DWORD PTR [ecx+48]
	add	eax, edx
	sub	DWORD PTR [esi], eax
	mov	esi, DWORD PTR [ecx+32]
	add	DWORD PTR [esi], eax

; 210  : 				if (_Which & ios_base::out && _Mysb::pptr() != 0)

	test	bl, 2
	je	$LN77@seekoff
	mov	edi, DWORD PTR [ecx+36]
	mov	ebx, DWORD PTR [edi]
	test	ebx, ebx
	je	$LN77@seekoff

; 211  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),
; 212  : 						_Mysb::epptr());	// change write position to match

	mov	eax, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR [eax]
	add	eax, ebx
	mov	DWORD PTR [edi], esi
	mov	ecx, DWORD PTR [ecx+52]
	sub	eax, esi
	mov	DWORD PTR [ecx], eax

; 213  : 				}
; 214  : 			else

	jmp	SHORT $LN77@seekoff
$LN19@seekoff:

; 215  : 				_Off = _BADOFF;
; 216  : 			}
; 217  : 		else if (_Which & ios_base::out && _Mysb::pptr() != 0)

	test	bl, 2
	je	SHORT $LN9@seekoff
	mov	esi, DWORD PTR [edx]
	test	esi, esi
	je	SHORT $LN9@seekoff

; 218  : 			{	// position within write buffer
; 219  : 			if (_Way == ios_base::end)

	mov	eax, DWORD PTR __Way$[esp+8]
	mov	edi, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF
	cmp	eax, 2
	jne	SHORT $LN8@seekoff

; 220  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [ecx+60]
	sub	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR __Off$[esp+8]
	add	edx, eax
	jmp	SHORT $LN4@seekoff
$LN8@seekoff:

; 221  : 			else if (_Way == ios_base::cur)

	cmp	eax, 1
	jne	SHORT $LN6@seekoff

; 222  : 				_Off += (off_type)(_Mysb::pptr() - _Mysb::eback());

	mov	edx, DWORD PTR [ecx+16]
	mov	eax, esi
	sub	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR __Off$[esp+8]
	add	edx, eax
	jmp	SHORT $LN4@seekoff
$LN6@seekoff:

; 223  : 			else if (_Way != ios_base::beg)
; 224  : 				_Off = _BADOFF;

	mov	edx, edi
	test	eax, eax
	jne	SHORT $LN4@seekoff
	mov	edx, DWORD PTR __Off$[esp+8]
$LN4@seekoff:

; 225  : 
; 226  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	test	edx, edx
	jl	SHORT $LN3@seekoff
	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]
	mov	ebx, DWORD PTR [ecx+60]
	sub	ebx, eax
	cmp	edx, ebx
	jg	SHORT $LN3@seekoff

; 227  : 				_Mysb::pbump((int)(_Mysb::eback()
; 228  : 					- _Mysb::pptr() + _Off));	// change write position

	sub	eax, esi
	mov	esi, DWORD PTR [ecx+52]
	add	eax, edx
	sub	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [ecx+36]
	add	DWORD PTR [ecx], eax

; 229  : 			else

	jmp	SHORT $LN77@seekoff
$LN3@seekoff:

; 230  : 				_Off = _BADOFF;

	mov	edx, edi

; 231  : 			}
; 232  : 		else

	jmp	SHORT $LN77@seekoff
$LN9@seekoff:

; 233  : 			_Off = _BADOFF;	// neither read nor write buffer selected, fail

	mov	edx, DWORD PTR ?_BADOFF@std@@3JB	; std::_BADOFF
$LN77@seekoff:

; 234  : 		return (pos_type(_Off));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	edi
	xor	ecx, ecx
	pop	esi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx

; 235  : 		}

	ret	16					; 00000010H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx

; 174  : 		if (_Mysb::gptr() == 0)

	mov	edx, DWORD PTR [ecx+32]
	push	esi
	mov	esi, DWORD PTR [edx]
	test	esi, esi
	jne	SHORT $LN8@underflow

; 175  : 			return (_Traits::eof());	// no character buffer, fail

	or	eax, -1
	pop	esi

; 187  : 			}
; 188  : 		}

	ret	0
$LN8@underflow:
	push	ebx
	push	edi

; 176  : 		else if (_Mysb::gptr() < _Mysb::egptr())

	mov	edi, DWORD PTR [ecx+48]
	mov	ebx, DWORD PTR [edi]
	mov	eax, esi
	add	ebx, eax
	cmp	eax, ebx
	jae	SHORT $LN6@underflow

; 177  : 			return (_Traits::to_int_type(*_Mysb::gptr()));	// return buffered

	movzx	eax, BYTE PTR [esi]
	pop	edi
	pop	ebx
	pop	esi

; 187  : 			}
; 188  : 		}

	ret	0
$LN6@underflow:

; 178  : 		else if (_Mystate & _Noread || _Mysb::pptr() == 0
; 179  : 			|| _Mysb::pptr() <= _Mysb::gptr() && _Seekhigh <= _Mysb::gptr())

	test	BYTE PTR [ecx+64], 4
	jne	SHORT $LN3@underflow
	mov	eax, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@underflow
	cmp	eax, esi
	ja	SHORT $LN4@underflow
	cmp	DWORD PTR [ecx+60], esi
	jbe	SHORT $LN3@underflow
$LN4@underflow:

; 181  : 		else
; 182  : 			{	// extend read buffer into written area, then return buffered
; 183  : 			if (_Seekhigh < _Mysb::pptr())

	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN1@underflow

; 184  : 				_Seekhigh = _Mysb::pptr();

	mov	DWORD PTR [ecx+60], eax
$LN1@underflow:

; 185  : 			_Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Seekhigh);

	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [ecx+60]
	sub	eax, edx
	mov	DWORD PTR [edi], eax

; 186  : 			return (_Traits::to_int_type(*_Mysb::gptr()));

	mov	ecx, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx]
	movzx	eax, BYTE PTR [edx]
	pop	edi
	pop	ebx
	pop	esi

; 187  : 			}
; 188  : 		}

	ret	0
$LN3@underflow:
	pop	edi
	pop	ebx

; 180  : 			return (_Traits::eof());	// can't read, fail

	or	eax, -1
	pop	esi

; 187  : 			}
; 188  : 		}

	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
_TEXT	ENDS
;	COMDAT ??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_iostream<char,std::char_traits<char> >::~basic_iostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 918  : 		{	// destroy the object

	mov	eax, DWORD PTR [ecx-12]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-12], OFFSET ??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@

; 919  : 		}

	mov	eax, DWORD PTR [ecx-4]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-4], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR [ecx-12]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-12], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	ret	0
??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_iostream<char,std::char_traits<char> >::~basic_iostream<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN10@split_iter@2
	test	al, 1
	jne	SHORT $LN17@split_iter@2
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN17@split_iter@2
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN17@split_iter@2:
	mov	DWORD PTR [esi], 0
$LN10@split_iter@2:
	ret	0
??1?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\as_literal.hpp
_TEXT	ENDS
;	COMDAT ??$as_literal@D$01@boost@@YA?AV?$iterator_range@PBD@0@AAY01$$CBD@Z
_TEXT	SEGMENT
??$as_literal@D$01@boost@@YA?AV?$iterator_range@PBD@0@AAY01$$CBD@Z PROC ; boost::as_literal<char,2>, COMDAT
; ___$ReturnUdt$ = eax

; 121  :         return range_detail::make_range( arr, range_detail::is_char_ptr(arr) );

	mov	ecx, OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	esi
	lea	esi, DWORD PTR [ecx+1]
	npad	7
$LL11@as_literal:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL11@as_literal
	sub	ecx, esi
	lea	ecx, DWORD PTR ??_C@_01CLKCMJKC@?5?$AA@[ecx]
	mov	DWORD PTR [eax], OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	DWORD PTR [eax+4], ecx
	pop	esi

; 122  :     }

	ret	0
??$as_literal@D$01@boost@@YA?AV?$iterator_range@PBD@0@AAY01$$CBD@Z ENDP ; boost::as_literal<char,2>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\any.hpp
_TEXT	ENDS
;	COMDAT ??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBVany@0@@Z
_TEXT	SEGMENT
??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBVany@0@@Z PROC ; boost::any_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; _operand$ = esi

; 175  :         return any_cast<ValueType>(const_cast<any *>(operand));

	test	esi, esi
	je	SHORT $LN5@any_cast@2
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN9@any_cast@2
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	jmp	SHORT $LN10@any_cast@2
$LN9@any_cast@2:
	mov	eax, OFFSET ??_R0X@8
$LN10@any_cast@2:
	push	OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	mov	ecx, eax
	call	??8type_info@@QBE_NABV0@@Z		; type_info::operator==
	test	al, al
	je	SHORT $LN5@any_cast@2
	mov	eax, DWORD PTR [esi]
	add	eax, 4

; 176  :     }

	ret	0

; 175  :         return any_cast<ValueType>(const_cast<any *>(operand));

$LN5@any_cast@2:
	xor	eax, eax

; 176  :     }

	ret	0
??$any_cast@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBVany@0@@Z ENDP ; boost::any_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?clear@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ
_TEXT	SEGMENT
?clear@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ PROC ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear, COMDAT
; _this$ = esi

; 854  :       if (vtable) {

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@clear@7

; 855  :         if (!this->has_trivial_copy_and_destroy())

	test	al, 1
	jne	SHORT $LN9@clear@7

; 856  :           get_vtable()->clear(this->functor);

	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN9@clear@7
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN9@clear@7:

; 857  :         vtable = 0;

	mov	DWORD PTR [esi], 0
$LN2@clear@7:

; 858  :       }
; 859  :     }

	ret	0
?clear@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ ENDP ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ PROC ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = esi

; 752  :     ~BOOST_FUNCTION_FUNCTION() { clear(); }

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@function1
	test	al, 1
	jne	SHORT $LN11@function1
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN11@function1
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN11@function1:
	mov	DWORD PTR [esi], 0
$LN4@function1:
	ret	0
??1?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ ENDP ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ PROC ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = eax

; 707  :     BOOST_FUNCTION_FUNCTION() : function_base() { }

	mov	DWORD PTR [eax], 0
	ret	0
??0?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ ENDP ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAEXXZ
_TEXT	SEGMENT
?clear@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAEXXZ PROC ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::clear, COMDAT
; _this$ = ecx

; 853  :     {

	push	esi
	mov	esi, ecx

; 854  :       if (vtable) {

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@clear@8

; 855  :         if (!this->has_trivial_copy_and_destroy())

	test	al, 1
	jne	SHORT $LN9@clear@8

; 856  :           get_vtable()->clear(this->functor);

	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN9@clear@8
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN9@clear@8:

; 857  :         vtable = 0;

	mov	DWORD PTR [esi], 0
$LN2@clear@8:
	pop	esi

; 858  :       }
; 859  :     }

	ret	0
?clear@?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAEXXZ ENDP ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?assign_to_own@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@AAEXABV12@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?assign_to_own@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@AAEXABV12@@Z PROC ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::assign_to_own, COMDAT
; _this$ = ecx

; 883  :       if (!f.empty()) {

	mov	edx, DWORD PTR _f$[esp-4]
	mov	eax, DWORD PTR [edx]
	test	eax, eax
	je	SHORT $LN1@assign_to_@2

; 884  :         this->vtable = f.vtable;

	mov	DWORD PTR [ecx], eax

; 885  :         if (this->has_trivial_copy_and_destroy())
; 886  :           this->functor = f.functor;

	add	ecx, 8
	test	al, 1
	je	SHORT $LN2@assign_to_@2
	movq	xmm0, QWORD PTR [edx+8]
	lea	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	movq	QWORD PTR [ecx+8], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 890  :       }
; 891  :     }

	ret	4
$LN2@assign_to_@2:

; 887  :         else
; 888  :           get_vtable()->base.manager(f.functor, this->functor,
; 889  :                                      boost::detail::function::clone_functor_tag);

	push	0
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	push	ecx
	add	edx, 8
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN1@assign_to_@2:

; 890  :       }
; 891  :     }

	ret	4
?assign_to_own@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@AAEXABV12@@Z ENDP ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::assign_to_own
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
_TEXT	ENDS
;	COMDAT ??0?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABU0123@@Z
_TEXT	SEGMENT
??0?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABU0123@@Z PROC ; boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<char>, COMDAT
; _this$ = esi
; _Other$ = edi

; 108  :                 {

	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax

; 109  :                     // Prepare storage
; 110  :                     m_Storage.m_dynSet=0;               

	mov	DWORD PTR [esi], 0

; 111  :                     const set_value_type* SrcStorage=0;
; 112  :                     set_value_type* DestStorage=0;
; 113  : 
; 114  :                     if(use_fixed_storage(m_Size))

	cmp	eax, 8
	ja	SHORT $LN2@is_any_ofF@2

; 124  :                         DestStorage=m_Storage.m_dynSet;
; 125  :                         SrcStorage=Other.m_Storage.m_dynSet;
; 126  :                     }
; 127  : 
; 128  :                     // Use fixed storage
; 129  :                     ::memcpy(DestStorage, SrcStorage, sizeof(set_value_type)*m_Size);

	mov	edx, DWORD PTR [esi+8]
	push	edx
	mov	ecx, edi
	mov	eax, esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 130  :                 }

	mov	eax, esi
	ret	0
$LN2@is_any_ofF@2:

; 115  :                     {
; 116  :                         // Use fixed storage
; 117  :                         DestStorage=&m_Storage.m_fixSet[0];
; 118  :                         SrcStorage=&Other.m_Storage.m_fixSet[0];
; 119  :                     }
; 120  :                     else
; 121  :                     {
; 122  :                         // Use dynamic storage
; 123  :                         m_Storage.m_dynSet=new set_value_type[m_Size];

	push	eax
	call	??_U@YAPAXI@Z				; operator new[]

; 124  :                         DestStorage=m_Storage.m_dynSet;
; 125  :                         SrcStorage=Other.m_Storage.m_dynSet;
; 126  :                     }
; 127  : 
; 128  :                     // Use fixed storage
; 129  :                     ::memcpy(DestStorage, SrcStorage, sizeof(set_value_type)*m_Size);

	mov	edx, DWORD PTR [esi+8]
	add	esp, 4
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 130  :                 }

	mov	eax, esi
	ret	0
??0?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABU0123@@Z ENDP ; boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ??B?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEP8dummy@01@AEXXZXZ
_TEXT	SEGMENT
??B?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEP8dummy@01@AEXXZXZ PROC ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::operator void (__thiscall boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::*)(void), COMDAT
; _this$ = eax

; 874  :       { return (this->empty())? 0 : &dummy::nonnull; }

	mov	eax, DWORD PTR [eax]
	neg	eax
	sbb	eax, eax
	and	eax, OFFSET ?nonnull@dummy@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::nonnull
	ret	0
??B?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEP8dummy@01@AEXXZXZ ENDP ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::operator void (__thiscall boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::*)(void)
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAE@XZ PROC ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::~function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT
; _this$ = ecx

; 752  :     ~BOOST_FUNCTION_FUNCTION() { clear(); }

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@function1@2
	test	al, 1
	jne	SHORT $LN11@function1@2
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN11@function1@2
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN11@function1@2:
	mov	DWORD PTR [esi], 0
$LN4@function1@2:
	pop	esi
	ret	0
??1?$function1@V?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@boost@@QAE@XZ ENDP ; boost::function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>::~function1<std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@ABV01@@Z PROC ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = esi
; _f$ = ecx

; 748  :     {

	mov	DWORD PTR [esi], 0

; 749  :       this->assign_to_own(f);

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN16@function1@3
	mov	DWORD PTR [esi], eax
	test	al, 1
	je	SHORT $LN6@function1@3
	movq	xmm0, QWORD PTR [ecx+8]
	lea	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [esi+8], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	movq	QWORD PTR [esi+16], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [esi+24], xmm0

; 750  :     }

	mov	eax, esi
	ret	0

; 749  :       this->assign_to_own(f);

$LN6@function1@3:
	push	0
	lea	edx, DWORD PTR [esi+8]
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	push	edx
	add	ecx, 8
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN16@function1@3:

; 750  :     }

	mov	eax, esi
	ret	0
??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@ABV01@@Z ENDP ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty, COMDAT
; _this$ = ecx

; 735  : 		{	// test if sequence is empty

	push	esi

; 736  : 		return (size() == 0);

	mov	esi, DWORD PTR [ecx+16]
	sub	esi, DWORD PTR [ecx+12]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	neg	eax
	sbb	eax, eax
	inc	eax
	pop	esi

; 737  : 		}

	ret	0
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ PROC ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::~token_finderF<boost::algorithm::detail::is_any_ofF<char> >, COMDAT
; _this$ = eax
	cmp	DWORD PTR [eax+8], 8
	jbe	SHORT $LN3@token_find
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@token_find
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
$LN3@token_find:
	ret	0
??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ ENDP ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::~token_finderF<boost::algorithm::detail::is_any_ofF<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T340191 = -12						; size = 12
$T340195 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@15

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@15:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	sub	edx, ecx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@15:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 28					; 0000001cH
	jae	SHORT $LN1@Allocate@15

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T340195[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T340191[esp+16]
	mov	DWORD PTR $T340195[esp+12], 0
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T340191[esp+16]
	push	ecx
	mov	DWORD PTR $T340191[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@15:
$LN8@Allocate@15:
	int	3
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Bidit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Bidit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ PROC ; std::_Bidit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Bidit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Bidit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ENDP ; std::_Bidit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Bidit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 234  : 			{	// construct with node pointer _Pnode

	mov	eax, DWORD PTR __Pnode$[esp-4]
	push	esi
	push	edi

; 235  : 			_SCL_SECURE_VALIDATE(_Plist != NULL);

	mov	edi, DWORD PTR __Plist$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN1@const_iter
	call	__invalid_parameter_noinfo
$LN1@const_iter:

; 236  : 			this->_Set_container(_Plist);

	mov	ecx, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [esi], ecx

; 237  : 			}

	mov	eax, esi
	pop	esi
	ret	8
??0const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Root, COMDAT
; _this$ = ecx

; 1325 : 		return (_Parent(_Myhead));

	mov	eax, DWORD PTR [ecx+24]
	add	eax, 4

; 1326 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Root
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1320 : 		return (_Right(_Myhead));

	mov	eax, DWORD PTR [ecx+24]
	add	eax, 8

; 1321 : 		}

	ret	0
?_Rmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rmost
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Min, COMDAT

; 1313 : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+41], 0
	jne	SHORT $LN1@Min
	npad	4
$LL2@Min:

; 1314 : 			_Pnode = _Left(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+41], 0
	je	SHORT $LL2@Min
$LN1@Min:

; 1315 : 		return (_Pnode);
; 1316 : 		}

	ret	0
?_Min@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Min
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Max, COMDAT

; 1306 : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+41], 0
	jne	SHORT $LN1@Max
	npad	3
$LL2@Max:

; 1307 : 			_Pnode = _Right(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+41], 0
	je	SHORT $LL2@Max
$LN1@Max:

; 1308 : 		return (_Pnode);
; 1309 : 		}

	ret	0
?_Max@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1286 : 		_Nodeptr _Pnode = _Right(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx+8]
	push	esi

; 1287 : 		_Right(_Wherenode) = _Left(_Pnode);

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], esi

; 1288 : 
; 1289 : 		if (!_Isnil(_Left(_Pnode)))

	mov	esi, DWORD PTR [eax]
	cmp	BYTE PTR [esi+41], 0
	jne	SHORT $LN5@Lrotate

; 1290 : 			_Parent(_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1291 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1292 : 
; 1293 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+24]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Lrotate

; 1294 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN4@Lrotate:

; 1295 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@Lrotate

; 1296 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN2@Lrotate:

; 1297 : 		else
; 1298 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lrotate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1320 : 		return (_Right(_Myhead));

	mov	eax, DWORD PTR [ecx+24]
	add	eax, 8

; 1321 : 		}

	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rmost
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Min, COMDAT

; 1313 : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+57], 0
	jne	SHORT $LN1@Min@2
	npad	4
$LL2@Min@2:

; 1314 : 			_Pnode = _Left(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+57], 0
	je	SHORT $LL2@Min@2
$LN1@Min@2:

; 1315 : 		return (_Pnode);
; 1316 : 		}

	ret	0
?_Min@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Min
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Max, COMDAT

; 1306 : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+57], 0
	jne	SHORT $LN1@Max@2
	npad	3
$LL2@Max@2:

; 1307 : 			_Pnode = _Right(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+57], 0
	je	SHORT $LL2@Max@2
$LN1@Max@2:

; 1308 : 		return (_Pnode);
; 1309 : 		}

	ret	0
?_Max@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Max
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@HPBU12@ABU12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@HPBU12@ABU12@@std@@QAE@XZ PROC ; std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &>::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Bidit@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@HPBU12@ABU12@@std@@QAE@XZ ENDP ; std::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &>::_Bidit<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> const &>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 299  : 			{	// test for iterator equality

	push	esi
	mov	esi, ecx

; 300  : 
; 301  :  #if _HAS_ITERATOR_DEBUGGING
; 302  : 			if (this->_Mycont == 0 || this->_Mycont != _Right._Mycont)
; 303  : 				{
; 304  : 				_DEBUG_ERROR("map/set iterators incompatible");
; 305  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 306  : 				}
; 307  :  #else
; 308  : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN1@operator@81
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@operator@81
$LN1@operator@81:
	call	__invalid_parameter_noinfo
$LN2@operator@81:

; 309  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 310  : 
; 311  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	sete	cl
	mov	al, cl
	pop	esi

; 312  : 			}

	ret	4
??8const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 451  : 			{	// construct with node pointer _Pnode

	mov	eax, DWORD PTR __Pnode$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Plist$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN3@iterator
	call	__invalid_parameter_noinfo
$LN3@iterator:
	mov	ecx, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [esi], ecx

; 452  : 			}

	mov	eax, esi
	pop	esi
	ret	8
??0iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::iterator::iterator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 299  : 			{	// test for iterator equality

	push	esi
	mov	esi, ecx

; 300  : 
; 301  :  #if _HAS_ITERATOR_DEBUGGING
; 302  : 			if (this->_Mycont == 0 || this->_Mycont != _Right._Mycont)
; 303  : 				{
; 304  : 				_DEBUG_ERROR("map/set iterators incompatible");
; 305  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 306  : 				}
; 307  :  #else
; 308  : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN1@operator@82
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@operator@82
$LN1@operator@82:
	call	__invalid_parameter_noinfo
$LN2@operator@82:

; 309  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 310  : 
; 311  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	sete	cl
	mov	al, cl
	pop	esi

; 312  : 			}

	ret	4
??8const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 234  : 			{	// construct with node pointer _Pnode

	mov	eax, DWORD PTR __Pnode$[esp-4]
	push	esi
	push	edi

; 235  : 			_SCL_SECURE_VALIDATE(_Plist != NULL);

	mov	edi, DWORD PTR __Plist$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN1@const_iter@2
	call	__invalid_parameter_noinfo
$LN1@const_iter@2:

; 236  : 			this->_Set_container(_Plist);

	mov	ecx, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [esi], ecx

; 237  : 			}

	mov	eax, esi
	pop	esi
	ret	8
??0const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1281 : 		return (_Left(_Myhead));

	mov	eax, DWORD PTR [ecx+24]

; 1282 : 		}

	ret	0
?_Lmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lmost
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 575  : 		{	// make iterator from const_iterator

	push	esi
	mov	esi, ecx
	push	edi

; 576  : 		return (iterator(_TREE_ITERATOR(_Where._Ptr)));

	mov	edi, DWORD PTR __Where$[esp+8]
	test	esi, esi
	jne	SHORT $LN5@Make_iter@4
	call	__invalid_parameter_noinfo
$LN5@Make_iter@4:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], edi

; 577  : 		}

	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi
	ret	12					; 0000000cH
?_Make_iter@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1325 : 		return (_Parent(_Myhead));

	mov	eax, DWORD PTR [ecx+24]
	add	eax, 4

; 1326 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Root
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1281 : 		return (_Left(_Myhead));

	mov	eax, DWORD PTR [ecx+24]

; 1282 : 		}

	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lmost
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Ranit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Ranit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ PROC ; std::_Ranit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Ranit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Ranit@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ENDP ; std::_Ranit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::_Ranit<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 76   : 	_Vector_const_iterator(_Tptr _Ptr, const _Container_base *_Pvector)

	push	ebx

; 77   : 		{	// construct with pointer _Ptr
; 78   : 		_SCL_SECURE_VALIDATE(_Pvector != NULL && ((_Myvec *)_Pvector)->_Myfirst <= _Ptr && _Ptr <= ((_Myvec *)_Pvector)->_Mylast);

	mov	ebx, DWORD PTR __Ptr$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Pvector$[esp+8]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	test	edi, edi
	je	SHORT $LN1@Vector_con@10
	cmp	DWORD PTR [edi+12], ebx
	ja	SHORT $LN1@Vector_con@10
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN2@Vector_con@10
$LN1@Vector_con@10:
	call	__invalid_parameter_noinfo
$LN2@Vector_con@10:

; 79   : 		this->_Set_container(_Pvector);

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	pop	edi

; 80   : 		_Myptr = _Ptr;

	mov	DWORD PTR [esi+4], ebx

; 81   : 		}

	mov	eax, esi
	pop	esi
	pop	ebx
	ret	8
??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::end, COMDAT
; _this$ = ecx

; 566  : 		return (_TREE_ITERATOR(_Myhead));

	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 567  : 		}

	ret	4
?end@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::begin, COMDAT
; _this$ = ecx

; 556  : 		return (_TREE_ITERATOR(_Lmost()));

	mov	eax, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 557  : 		}

	ret	4
?begin@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >::~_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >::~_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?clear@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAEXXZ
_TEXT	SEGMENT
?clear@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAEXXZ PROC ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear, COMDAT
; _this$ = ecx

; 853  :     {

	push	esi
	mov	esi, ecx

; 854  :       if (vtable) {

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@clear@9

; 855  :         if (!this->has_trivial_copy_and_destroy())

	test	al, 1
	jne	SHORT $LN9@clear@9

; 856  :           get_vtable()->clear(this->functor);

	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN9@clear@9
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN9@clear@9:

; 857  :         vtable = 0;

	mov	DWORD PTR [esi], 0
$LN2@clear@9:
	pop	esi

; 858  :       }
; 859  :     }

	ret	0
?clear@?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAEXXZ ENDP ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::clear
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >, COMDAT
; _this$ = ecx

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >, COMDAT
; _this$ = ecx

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@D@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@D@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<char> >::~_Container_base_aux_alloc_real<std::allocator<char> >, COMDAT
; _this$ = ecx

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@D@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<char> >::~_Container_base_aux_alloc_real<std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IAEXXZ PROC	; std::vector<char,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN4@Tidy@15

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@15:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IAEXXZ ENDP	; std::vector<char,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >, COMDAT
; _this$ = ecx

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~_Container_base_aux_alloc_real<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 440  : 		}

	ret	0
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx

; 655  : 		{	// return iterator for end of nonmutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 656  : 		return (const_iterator(_Mylast, this));

	mov	ebx, DWORD PTR [esi+16]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	DWORD PTR [esi+12], ebx
	jbe	SHORT $LN4@end@10
	call	__invalid_parameter_noinfo
$LN4@end@10:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 657  : 		}

	ret	4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 645  : 		{	// return iterator for beginning of nonmutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 646  : 		return (const_iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [esi+12]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN4@begin@10
	call	__invalid_parameter_noinfo
$LN4@begin@10:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 647  : 		}

	ret	4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@QAE@XZ PROC ; std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>::~_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@QAE@XZ ENDP ; std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>::~_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@QAE@XZ PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>::~_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@QAE@XZ ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>::~_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tree_ptr@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_ptr@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_ptr<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_ptr<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tree_ptr@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_ptr<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_ptr<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tree_ptr@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_ptr@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tree_ptr@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::~_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::~_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_val<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tree_val@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree_val<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~_Vector_val<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Vector_val@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~_Vector_val<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Vector_val<char,std::allocator<char> >::~_Vector_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Vector_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<char,std::allocator<char> >::~_Vector_val<char,std::allocator<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~_Vector_val<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Vector_val@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~_Vector_val<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
_TEXT	ENDS
;	COMDAT ?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::is_open, COMDAT
; _this$ = ecx

; 652  : 		return (_Filebuffer.is_open());

	xor	eax, eax
	cmp	DWORD PTR [ecx+84], eax
	setne	al

; 653  : 		}

	ret	0
?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::is_open
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\value_semantic.hpp
_TEXT	ENDS
;	COMDAT ?min_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ
_TEXT	SEGMENT
?min_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::min_tokens, COMDAT
; _this$ = ecx

; 278  :             if (m_zero_tokens || !m_implicit_value.empty()) {

	cmp	BYTE PTR [ecx+79], 0
	jne	SHORT $LN2@min_tokens
	cmp	DWORD PTR [ecx+44], 0
	jne	SHORT $LN2@min_tokens

; 280  :             } else {
; 281  :                 return 1;

	mov	eax, 1

; 282  :             }
; 283  :         }

	ret	0
$LN2@min_tokens:

; 279  :                 return 0;

	xor	eax, eax

; 282  :             }
; 283  :         }

	ret	0
?min_tokens@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEIXZ ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::min_tokens
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ PROC ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = ecx

; 752  :     ~BOOST_FUNCTION_FUNCTION() { clear(); }

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@function1@4
	test	al, 1
	jne	SHORT $LN11@function1@4
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN11@function1@4
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN11@function1@4:
	mov	DWORD PTR [esi], 0
$LN4@function1@4:
	pop	esi
	ret	0
??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ENDP ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ PROC ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = ecx

; 707  :     BOOST_FUNCTION_FUNCTION() : function_base() { }

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	ret	0
??0?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ENDP ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$vector@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN6@vector@8
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@8:

; 560  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	ret	0
??1?$vector@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx

; 774  : 		{	// subscript mutable sequence

	push	esi
	mov	esi, ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	push	edi
	mov	edi, DWORD PTR __Pos$[esp+4]
	add	eax, edx
	cmp	edi, eax
	jb	SHORT $LN1@operator@83
	call	__invalid_parameter_noinfo
$LN1@operator@83:

; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	edx, DWORD PTR [esi+12]
	lea	ecx, DWORD PTR [edi*8]
	sub	ecx, edi
	pop	edi
	lea	eax, DWORD PTR [edx+ecx*4]
	pop	esi

; 786  : 		}

	ret	4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gabstract_variables_map@program_options@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gabstract_variables_map@program_options@boost@@UAEPAXI@Z PROC ; boost::program_options::abstract_variables_map::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7abstract_variables_map@program_options@boost@@6B@
	je	SHORT $LN6@scalar@6
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@6:
	mov	eax, esi
	pop	esi
	ret	4
??_Gabstract_variables_map@program_options@boost@@UAEPAXI@Z ENDP ; boost::program_options::abstract_variables_map::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gtyped_value_base@program_options@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gtyped_value_base@program_options@boost@@UAEPAXI@Z PROC ; boost::program_options::typed_value_base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7typed_value_base@program_options@boost@@6B@
	je	SHORT $LN6@scalar@7
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@7:
	mov	eax, esi
	pop	esi
	ret	4
??_Gtyped_value_base@program_options@boost@@UAEPAXI@Z ENDP ; boost::program_options::typed_value_base::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$value_semantic_codecvt_helper@D@program_options@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$value_semantic_codecvt_helper@D@program_options@boost@@UAE@XZ PROC ; boost::program_options::value_semantic_codecvt_helper<char>::~value_semantic_codecvt_helper<char>, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7value_semantic@program_options@boost@@6B@
	ret	0
??1?$value_semantic_codecvt_helper@D@program_options@boost@@UAE@XZ ENDP ; boost::program_options::value_semantic_codecvt_helper<char>::~value_semantic_codecvt_helper<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$value_semantic_codecvt_helper@D@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$value_semantic_codecvt_helper@D@program_options@boost@@QAE@XZ PROC ; boost::program_options::value_semantic_codecvt_helper<char>::value_semantic_codecvt_helper<char>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7?$value_semantic_codecvt_helper@D@program_options@boost@@6B@
	ret	0
??0?$value_semantic_codecvt_helper@D@program_options@boost@@QAE@XZ ENDP ; boost::program_options::value_semantic_codecvt_helper<char>::value_semantic_codecvt_helper<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gvalue_semantic@program_options@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gvalue_semantic@program_options@boost@@UAEPAXI@Z PROC ; boost::program_options::value_semantic::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7value_semantic@program_options@boost@@6B@
	je	SHORT $LN6@scalar@8
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@8:
	mov	eax, esi
	pop	esi
	ret	4
??_Gvalue_semantic@program_options@boost@@UAEPAXI@Z ENDP ; boost::program_options::value_semantic::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gplaceholder@any@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gplaceholder@any@boost@@UAEPAXI@Z PROC		; boost::any::placeholder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7placeholder@any@boost@@6B@
	je	SHORT $LN6@scalar@9
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@9:
	mov	eax, esi
	pop	esi
	ret	4
??_Gplaceholder@any@boost@@UAEPAXI@Z ENDP		; boost::any::placeholder::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\any.hpp
_TEXT	ENDS
;	COMDAT ??4any@boost@@QAEAAV01@V01@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??4any@boost@@QAEAAV01@V01@@Z PROC			; boost::any::operator=, COMDAT
; _this$ = ecx

; 65   :         {

	push	esi
	mov	esi, ecx

; 66   :             rhs.swap(*this);

	lea	eax, DWORD PTR _rhs$[esp]
	cmp	eax, esi
	je	SHORT $LN14@operator@84
	mov	eax, DWORD PTR _rhs$[esp]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR _rhs$[esp], ecx
	mov	DWORD PTR [esi], eax
	jmp	SHORT $LN6@operator@84
$LN14@operator@84:
	mov	ecx, DWORD PTR _rhs$[esp]
$LN6@operator@84:

; 67   :             return *this;

	test	ecx, ecx
	je	SHORT $LN13@operator@84
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN13@operator@84:
	mov	eax, esi
	pop	esi

; 68   :         }

	ret	4
??4any@boost@@QAEAAV01@V01@@Z ENDP			; boost::any::operator=
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-, COMDAT
; _this$ = ecx
; __Right$ = edi

; 428  : 		return ((_Mybase)*this - _Right);

	mov	eax, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN4@operator@207
	test	eax, eax
	je	SHORT $LN3@operator@207
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN4@operator@207
$LN3@operator@207:
	call	__invalid_parameter_noinfo
$LN4@operator@207:
	mov	eax, esi
	sub	eax, DWORD PTR [edi+4]

; 429  : 		}

	pop	esi
	ret	0
??G?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
$T386663 = -8						; size = 8
___formal$ = 8						; size = 1
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>, COMDAT
; __Off$ = edi

; 1866 : 	{	// add to _Off distance between random-access iterators

	sub	esp, 12					; 0000000cH

; 1867 : 
; 1868 :  #if _HAS_ITERATOR_DEBUGGING
; 1869 : 	if (_First != _Last)
; 1870 : 		{	// check for null pointers
; 1871 : 		_DEBUG_POINTER(_First);
; 1872 : 		_DEBUG_POINTER(_Last);
; 1873 : 		}
; 1874 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1875 : 
; 1876 : 	_Off += _Last - _First;

	mov	eax, DWORD PTR __Last$[esp+8]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+16]
	mov	DWORD PTR $T386663[esp+16], eax
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN6@Distance2
	test	eax, eax
	je	SHORT $LN5@Distance2
	cmp	eax, DWORD PTR __First$[esp+12]
	je	SHORT $LN6@Distance2
$LN5@Distance2:
	call	__invalid_parameter_noinfo
$LN6@Distance2:
	sub	esi, DWORD PTR __First$[esp+16]
	add	DWORD PTR [edi], esi

; 1877 : 	}

	pop	esi
	add	esp, 12					; 0000000cH
	ret	0
??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z
_TEXT	SEGMENT
$T386715 = -8						; size = 8
$T386727 = -8						; size = 8
__Off$ = 8						; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z PROC ; std::_Distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>, COMDAT

; 1892 : 	{	// add to _Off distance between iterators

	sub	esp, 12					; 0000000cH

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	eax, DWORD PTR __Last$[esp+8]
	mov	ecx, DWORD PTR __First$[esp+8]
	push	ebx
	mov	ebx, DWORD PTR __Off$[esp+12]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+20]
	push	edi
	mov	edi, DWORD PTR __First$[esp+24]
	mov	DWORD PTR $T386727[esp+24], ecx
	mov	DWORD PTR $T386715[esp+24], eax
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN10@Distance
	test	eax, eax
	je	SHORT $LN9@Distance
	cmp	eax, ecx
	je	SHORT $LN10@Distance
$LN9@Distance:
	call	__invalid_parameter_noinfo
$LN10@Distance:
	sub	esi, edi
	add	DWORD PTR [ebx], esi

; 1894 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	0
??$_Distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAI@Z ENDP ; std::_Distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Med3@PAD@std@@YAXPAD00@Z
_TEXT	SEGMENT
??$_Med3@PAD@std@@YAXPAD00@Z PROC			; std::_Med3<char *>, COMDAT
; __First$ = esi
; __Mid$ = eax
; __Last$ = edi

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	cl, BYTE PTR [eax]
	mov	dl, BYTE PTR [esi]
	cmp	cl, dl
	jge	SHORT $LN8@Med3

; 3000 : 		std::iter_swap(_Mid, _First);

	cmp	eax, esi
	je	SHORT $LN8@Med3
	mov	BYTE PTR [eax], dl
	mov	BYTE PTR [esi], cl
$LN8@Med3:

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

	mov	cl, BYTE PTR [edi]
	mov	dl, BYTE PTR [eax]
	cmp	cl, dl
	jge	SHORT $LN13@Med3

; 3002 : 		std::iter_swap(_Last, _Mid);

	cmp	edi, eax
	je	SHORT $LN13@Med3
	mov	BYTE PTR [edi], dl
	mov	BYTE PTR [eax], cl
$LN13@Med3:

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	cl, BYTE PTR [eax]
	mov	dl, BYTE PTR [esi]
	cmp	cl, dl
	jge	SHORT $LN18@Med3

; 3004 : 		std::iter_swap(_Mid, _First);

	cmp	eax, esi
	je	SHORT $LN18@Med3
	mov	BYTE PTR [eax], dl
	mov	BYTE PTR [esi], cl
$LN18@Med3:

; 3005 : 	}

	ret	0
??$_Med3@PAD@std@@YAXPAD00@Z ENDP			; std::_Med3<char *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAEPAXI@Z
_TEXT	SEGMENT
??_G?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAEPAXI@Z PROC ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::`scalar deleting destructor', COMDAT
; _this$ = esi
	cmp	DWORD PTR [esi+8], 8
	jbe	SHORT $LN12@scalar@29
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN12@scalar@29
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN12@scalar@29:
	mov	eax, esi
	ret	0
??_G?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAEPAXI@Z ENDP ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Find_if@PADU?$is_any_ofF@D@detail@algorithm@boost@@@std@@YAPADPAD0U?$is_any_ofF@D@detail@algorithm@boost@@@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 12
??$_Find_if@PADU?$is_any_ofF@D@detail@algorithm@boost@@@std@@YAPADPAD0U?$is_any_ofF@D@detail@algorithm@boost@@@Z PROC ; std::_Find_if<char *,boost::algorithm::detail::is_any_ofF<char> >, COMDAT
; __First$ = ecx
; __Last$ = edi

; 83   : 	{	// find first satisfying _Pred

	push	esi
	mov	esi, ecx

; 84   : 	_DEBUG_RANGE(_First, _Last);
; 85   : 	_DEBUG_POINTER(_Pred);
; 86   : 	for (; _First != _Last; ++_First)

	cmp	esi, edi
	je	SHORT $LN13@Find_if
$LL4@Find_if:

; 87   : 		if (_Pred(*_First))

	movzx	eax, BYTE PTR [esi]
	push	eax
	lea	eax, DWORD PTR __Pred$[esp+4]
	call	??$?RD@?$is_any_ofF@D@detail@algorithm@boost@@QBE_ND@Z ; boost::algorithm::detail::is_any_ofF<char>::operator()<char>
	test	al, al
	jne	SHORT $LN13@Find_if
	inc	esi
	cmp	esi, edi
	jne	SHORT $LL4@Find_if
$LN13@Find_if:

; 88   : 			break;
; 89   : 	return (_First);

	cmp	DWORD PTR __Pred$[esp+8], 8
	jbe	SHORT $LN16@Find_if
	mov	eax, DWORD PTR __Pred$[esp]
	test	eax, eax
	je	SHORT $LN16@Find_if
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN16@Find_if:
	mov	eax, esi
	pop	esi

; 90   : 	}

	ret	0
??$_Find_if@PADU?$is_any_ofF@D@detail@algorithm@boost@@@std@@YAPADPAD0U?$is_any_ofF@D@detail@algorithm@boost@@@Z ENDP ; std::_Find_if<char *,boost::algorithm::detail::is_any_ofF<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Median@PAD@std@@YAXPAD00@Z
_TEXT	SEGMENT
tv260 = -4						; size = 4
__Last$ = 8						; size = 4
??$_Median@PAD@std@@YAXPAD00@Z PROC			; std::_Median<char *>, COMDAT
; __First$ = eax
; __Mid$ = ecx

; 3009 : 	{	// sort median element to middle

	push	ecx
	push	esi
	push	edi

; 3010 : 	if (40 < _Last - _First)

	mov	edi, DWORD PTR __Last$[esp+8]
	mov	esi, eax
	mov	eax, edi
	sub	eax, esi
	cmp	eax, 40					; 00000028H
	jle	$LN2@Median

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	inc	eax
	cdq
	and	edx, 7
	add	eax, edx

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	dl, BYTE PTR [esi]
	push	ebx
	mov	edi, eax
	sar	edi, 3
	mov	al, BYTE PTR [edi+esi]
	push	ebp
	lea	ebx, DWORD PTR [edi+edi]
	lea	ebp, DWORD PTR [edi+esi]
	mov	DWORD PTR tv260[esp+20], ebx
	add	ebx, esi
	cmp	al, dl
	jge	SHORT $LN12@Median
	cmp	ebp, esi
	je	SHORT $LN12@Median
	mov	BYTE PTR [ebp], dl
	mov	BYTE PTR [esi], al
$LN12@Median:
	mov	al, BYTE PTR [ebx]
	mov	dl, BYTE PTR [ebp]
	cmp	al, dl
	jge	SHORT $LN17@Median
	cmp	ebx, ebp
	je	SHORT $LN17@Median
	mov	BYTE PTR [ebx], dl
	mov	BYTE PTR [ebp], al
$LN17@Median:
	mov	al, BYTE PTR [ebp]
	mov	dl, BYTE PTR [esi]
	cmp	al, dl
	jge	SHORT $LN22@Median
	cmp	ebp, esi
	je	SHORT $LN22@Median
	mov	BYTE PTR [ebp], dl
	mov	BYTE PTR [esi], al
$LN22@Median:

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	al, BYTE PTR [ecx]
	mov	esi, ecx
	sub	esi, edi
	mov	dl, BYTE PTR [esi]
	cmp	al, dl
	lea	ebx, DWORD PTR [edi+ecx]
	jge	SHORT $LN32@Median
	cmp	ecx, esi
	je	SHORT $LN32@Median
	mov	BYTE PTR [ecx], dl
	mov	BYTE PTR [esi], al
$LN32@Median:
	mov	al, BYTE PTR [ebx]
	mov	dl, BYTE PTR [ecx]
	cmp	al, dl
	jge	SHORT $LN37@Median
	cmp	ebx, ecx
	je	SHORT $LN37@Median
	mov	BYTE PTR [ebx], dl
	mov	BYTE PTR [ecx], al
$LN37@Median:
	mov	al, BYTE PTR [ecx]
	mov	dl, BYTE PTR [esi]
	cmp	al, dl
	jge	SHORT $LN42@Median
	cmp	ecx, esi
	je	SHORT $LN42@Median
	mov	BYTE PTR [ecx], dl
	mov	BYTE PTR [esi], al
$LN42@Median:

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	ebx, DWORD PTR __Last$[esp+16]
	mov	esi, ebx
	sub	esi, edi
	mov	al, BYTE PTR [esi]
	mov	edi, ebx
	sub	edi, DWORD PTR tv260[esp+20]
	mov	dl, BYTE PTR [edi]
	cmp	al, dl
	jge	SHORT $LN52@Median
	cmp	esi, edi
	je	SHORT $LN52@Median
	mov	BYTE PTR [esi], dl
	mov	BYTE PTR [edi], al
$LN52@Median:
	mov	al, BYTE PTR [ebx]
	mov	dl, BYTE PTR [esi]
	cmp	al, dl
	jge	SHORT $LN57@Median
	cmp	ebx, esi
	je	SHORT $LN57@Median
	mov	BYTE PTR [ebx], dl
	mov	BYTE PTR [esi], al
$LN57@Median:
	mov	al, BYTE PTR [esi]
	mov	dl, BYTE PTR [edi]
	cmp	al, dl
	jge	SHORT $LN62@Median
	cmp	esi, edi
	je	SHORT $LN62@Median
	mov	BYTE PTR [esi], dl
	mov	BYTE PTR [edi], al
$LN62@Median:

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	al, BYTE PTR [ecx]
	mov	dl, BYTE PTR [ebp]
	cmp	al, dl
	jge	SHORT $LN72@Median
	cmp	ecx, ebp
	je	SHORT $LN72@Median
	mov	BYTE PTR [ecx], dl
	mov	BYTE PTR [ebp], al
$LN72@Median:
	mov	al, BYTE PTR [esi]
	mov	dl, BYTE PTR [ecx]
	cmp	al, dl
	jge	SHORT $LN77@Median
	cmp	esi, ecx
	je	SHORT $LN77@Median
	mov	BYTE PTR [esi], dl
	mov	BYTE PTR [ecx], al
$LN77@Median:
	mov	al, BYTE PTR [ecx]
	mov	dl, BYTE PTR [ebp]
	cmp	al, dl
	jge	SHORT $LN105@Median
	cmp	ecx, ebp
	je	SHORT $LN105@Median
	mov	BYTE PTR [ecx], dl
	mov	BYTE PTR [ebp], al
$LN105@Median:
	pop	ebp
	pop	ebx

; 3017 : 		}
; 3018 : 	else
; 3019 : 		std::_Med3(_First, _Mid, _Last);

$LN102@Median:
	pop	edi
	pop	esi

; 3020 : 	}

	pop	ecx
	ret	0
$LN2@Median:

; 3017 : 		}
; 3018 : 	else
; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	al, BYTE PTR [ecx]
	mov	dl, BYTE PTR [esi]
	cmp	al, dl
	jge	SHORT $LN92@Median
	cmp	ecx, esi
	je	SHORT $LN92@Median
	mov	BYTE PTR [ecx], dl
	mov	BYTE PTR [esi], al
$LN92@Median:
	mov	al, BYTE PTR [edi]
	mov	dl, BYTE PTR [ecx]
	cmp	al, dl
	jge	SHORT $LN97@Median
	cmp	edi, ecx
	je	SHORT $LN97@Median
	mov	BYTE PTR [edi], dl
	mov	BYTE PTR [ecx], al
$LN97@Median:
	mov	al, BYTE PTR [ecx]
	mov	dl, BYTE PTR [esi]
	cmp	al, dl
	jge	SHORT $LN102@Median
	cmp	ecx, esi
	je	SHORT $LN102@Median
	mov	BYTE PTR [ecx], dl
	pop	edi
	mov	BYTE PTR [esi], al
	pop	esi

; 3020 : 	}

	pop	ecx
	ret	0
??$_Median@PAD@std@@YAXPAD00@Z ENDP			; std::_Median<char *>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z$0
__ehfuncinfo$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z
_TEXT	SEGMENT
$T387211 = -24						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Pred$ = 28						; size = 12
??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z PROC ; std::find_if<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >, COMDAT

; 95   : 	{	// find first satisfying _Pred

	push	-1
	push	__ehhandler$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR __$EHRec$[esp+48], 0

; 96   : 	_ASSIGN_FROM_BASE(_First,

	mov	eax, DWORD PTR __Pred$[esp+44]
	mov	esi, eax
	mov	DWORD PTR $T387211[esp+48], esi
	mov	DWORD PTR $T387211[esp+40], 0
	cmp	eax, 8
	ja	SHORT $LN6@find_if
	lea	eax, DWORD PTR $T387211[esp+40]
	lea	ecx, DWORD PTR __Pred$[esp+36]
	jmp	SHORT $LN5@find_if
$LN6@find_if:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	ecx, DWORD PTR __Pred$[esp+40]
	add	esp, 4
	mov	DWORD PTR $T387211[esp+40], eax
$LN5@find_if:
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	mov	esi, DWORD PTR __First$[esp+52]
	mov	edi, DWORD PTR __Last$[esp+52]
	add	esp, 12					; 0000000cH
	cmp	esi, edi
	je	SHORT $LN44@find_if
	npad	5
$LL26@find_if:
	movzx	eax, BYTE PTR [esi]
	push	eax
	lea	eax, DWORD PTR $T387211[esp+44]
	call	??$?RD@?$is_any_ofF@D@detail@algorithm@boost@@QBE_ND@Z ; boost::algorithm::detail::is_any_ofF<char>::operator()<char>
	test	al, al
	jne	SHORT $LN44@find_if
	inc	esi
	cmp	esi, edi
	jne	SHORT $LL26@find_if
$LN44@find_if:
	mov	edi, 8
	cmp	DWORD PTR $T387211[esp+48], edi
	jbe	SHORT $LN29@find_if
	mov	eax, DWORD PTR $T387211[esp+40]
	test	eax, eax
	je	SHORT $LN29@find_if
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN29@find_if:

; 97   : 		_Find_if(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Pred));
; 98   : 	return (_First);

	mov	ecx, DWORD PTR __First$[esp+36]
	mov	DWORD PTR __First$[esp+40], esi
	mov	DWORD PTR [ebx], ecx
	mov	DWORD PTR [ebx+4], esi
	cmp	DWORD PTR __Pred$[esp+44], edi
	jbe	SHORT $LN47@find_if
	mov	eax, DWORD PTR __Pred$[esp+36]
	test	eax, eax
	je	SHORT $LN47@find_if
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN47@find_if:
	mov	eax, ebx

; 99   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z$0:
	lea	eax, DWORD PTR __Pred$[ebp-4]
	jmp	??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ ; boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF<char>
__ehhandler$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-24]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z ENDP ; std::find_if<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unguarded_partition@PAD@std@@YA?AU?$pair@PADPAD@0@PAD0@Z
_TEXT	SEGMENT
__Tmp$387301 = -5					; size = 1
__Glast$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAD@std@@YA?AU?$pair@PADPAD@0@PAD0@Z PROC ; std::_Unguarded_partition<char *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	sub	esp, 8
	push	ebx

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	ebx, DWORD PTR __First$[esp+8]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR __Last$[esp+20]
	mov	eax, edi
	sub	eax, ebx
	cdq
	sub	eax, edx
	mov	esi, eax
	sar	esi, 1

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	lea	eax, DWORD PTR [edi-1]
	add	esi, ebx
	push	eax
	mov	ecx, esi
	mov	eax, ebx
	call	??$_Median@PAD@std@@YAXPAD00@Z		; std::_Median<char *>
	add	esp, 4

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	eax, esi

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	lea	ebp, DWORD PTR [esi+1]

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	cmp	ebx, esi
	jae	SHORT $LN69@Unguarded_
$LL27@Unguarded_:
	mov	cl, BYTE PTR [eax-1]
	mov	dl, BYTE PTR [eax]
	cmp	dl, cl
	jg	SHORT $LN69@Unguarded_
	jl	SHORT $LN69@Unguarded_
	dec	eax
	cmp	ebx, eax
	jb	SHORT $LL27@Unguarded_
$LN69@Unguarded_:

; 3033 : 		--_Pfirst;
; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	cmp	ebp, edi
	jae	SHORT $LN24@Unguarded_
	mov	dl, BYTE PTR [eax]
	npad	5
$LL25@Unguarded_:
	mov	cl, BYTE PTR [ebp]
	cmp	dl, cl
	jg	SHORT $LN24@Unguarded_
	jl	SHORT $LN24@Unguarded_

; 3037 : 		++_Plast;

	inc	ebp
	cmp	ebp, edi
	jb	SHORT $LL25@Unguarded_
$LN24@Unguarded_:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;
; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	ebx, eax
	mov	esi, ebp
	mov	DWORD PTR __Glast$[esp+24], ebx

; 3065 : 			++_Plast;
; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	jmp	SHORT $LL23@Unguarded_
$LL82@Unguarded_:
	mov	edi, DWORD PTR __Last$[esp+20]
	npad	4
$LL23@Unguarded_:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	cmp	esi, edi
	jae	SHORT $LN73@Unguarded_
$LL21@Unguarded_:

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	dl, BYTE PTR [esi]
	mov	cl, BYTE PTR [eax]
	cmp	dl, cl
	jg	SHORT $LN20@Unguarded_

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

	jl	SHORT $LN73@Unguarded_

; 3048 : 				break;
; 3049 : 			else
; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	ecx, ebp
	inc	ebp
	cmp	ecx, esi
	je	SHORT $LN20@Unguarded_
	mov	bl, BYTE PTR [ecx]
	mov	edi, DWORD PTR __Last$[esp+20]
	mov	BYTE PTR [ecx], dl
	mov	BYTE PTR [esi], bl
	mov	ebx, DWORD PTR __Glast$[esp+24]
$LN20@Unguarded_:
	inc	esi
	cmp	esi, edi
	jb	SHORT $LL21@Unguarded_
$LN73@Unguarded_:

; 3051 : 		for (; _First < _Glast; --_Glast)

	cmp	ebx, DWORD PTR __First$[esp+20]
	jbe	SHORT $LN89@Unguarded_
	lea	edi, DWORD PTR [ebx-1]
$LL14@Unguarded_:

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	cl, BYTE PTR [edi]
	mov	dl, BYTE PTR [eax]
	cmp	dl, cl
	jg	SHORT $LN13@Unguarded_

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

	jl	SHORT $LN85@Unguarded_

; 3055 : 				break;
; 3056 : 			else
; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	dec	eax
	cmp	eax, edi
	je	SHORT $LN13@Unguarded_
	mov	dl, BYTE PTR [edi]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [eax], dl
	mov	BYTE PTR [edi], cl
$LN13@Unguarded_:
	dec	ebx
	dec	edi
	cmp	DWORD PTR __First$[esp+20], ebx
	jb	SHORT $LL14@Unguarded_
$LN85@Unguarded_:

; 3051 : 		for (; _First < _Glast; --_Glast)

	mov	edi, DWORD PTR __Last$[esp+20]

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	cmp	ebx, DWORD PTR __First$[esp+20]
	mov	DWORD PTR __Glast$[esp+24], ebx
$LN89@Unguarded_:
	jne	SHORT $LN6@Unguarded_
	cmp	esi, edi
	je	SHORT $LN75@Unguarded_

; 3060 : 
; 3061 : 		if (_Glast == _First)
; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	cmp	ebp, esi
	je	SHORT $LN44@Unguarded_

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	cmp	eax, ebp
	je	SHORT $LN44@Unguarded_
	mov	dl, BYTE PTR [ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [eax], dl
	mov	BYTE PTR [ebp], cl
$LN44@Unguarded_:

; 3065 : 			++_Plast;
; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	ecx, esi
	mov	edi, eax
	inc	ebp
	inc	eax
	inc	esi
	cmp	edi, ecx
	je	$LL82@Unguarded_
	movzx	edx, BYTE PTR [edi]
	mov	BYTE PTR __Tmp$387301[esp+24], dl
	movzx	edx, BYTE PTR [ecx]
	mov	BYTE PTR [edi], dl
	movzx	edx, BYTE PTR __Tmp$387301[esp+24]
	mov	BYTE PTR [ecx], dl
	jmp	$LL82@Unguarded_
$LN6@Unguarded_:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)
; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	dec	ebx
	mov	DWORD PTR __Glast$[esp+24], ebx
	cmp	esi, edi
	jne	SHORT $LN3@Unguarded_
	dec	eax
	cmp	ebx, eax
	je	SHORT $LN54@Unguarded_

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	dl, BYTE PTR [eax]
	mov	cl, BYTE PTR [ebx]
	mov	BYTE PTR [ebx], dl
	mov	BYTE PTR [eax], cl
$LN54@Unguarded_:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	dec	ebp
	cmp	eax, ebp
	je	$LL23@Unguarded_
	mov	dl, BYTE PTR [ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [eax], dl
	mov	BYTE PTR [ebp], cl

; 3073 : 			}
; 3074 : 		else

	jmp	$LL23@Unguarded_
$LN3@Unguarded_:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	cmp	esi, ebx
	je	SHORT $LN64@Unguarded_
	mov	dl, BYTE PTR [ebx]
	mov	cl, BYTE PTR [esi]
	mov	edi, DWORD PTR __Last$[esp+20]
	mov	BYTE PTR [esi], dl
	mov	BYTE PTR [ebx], cl
$LN64@Unguarded_:
	inc	esi

; 3076 : 		}

	jmp	$LL23@Unguarded_
$LN75@Unguarded_:

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	ecx, DWORD PTR ___$ReturnUdt$[esp+20]
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx+4], ebp
	pop	ebp
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	pop	ebx

; 3077 : 	}

	add	esp, 8
	ret	0
??$_Unguarded_partition@PAD@std@@YA?AU?$pair@PADPAD@0@PAD0@Z ENDP ; std::_Unguarded_partition<char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator!=, COMDAT
; _this$ = ecx

; 234  : 		{	// test for iterator inequality

	push	esi
	mov	esi, ecx

; 235  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN4@operator@208
	test	eax, eax
	je	SHORT $LN3@operator@208
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN4@operator@208
$LN3@operator@208:
	call	__invalid_parameter_noinfo
$LN4@operator@208:
	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	setne	cl
	mov	al, cl
	pop	esi

; 236  : 		}

	ret	4
??9?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator!=
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\finder.hpp
_TEXT	ENDS
;	COMDAT ??$?RV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
_It$ = -12						; size = 8
_this$ = 8						; size = 4
$T387391 = 12						; size = 4
___$ReturnUdt$ = 12					; size = 4
_Begin$ = 16						; size = 8
_End$ = 24						; size = 8
??$?RV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::operator()<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 563  :                 iterator_range<ForwardIteratorT>

	sub	esp, 12					; 0000000cH
	push	ebx
	mov	ebx, DWORD PTR _this$[esp+12]

; 564  :                 operator()(
; 565  :                     ForwardIteratorT Begin,
; 566  :                     ForwardIteratorT End ) const
; 567  :                 {
; 568  :                     typedef iterator_range<ForwardIteratorT> result_type;
; 569  : 
; 570  :                     ForwardIteratorT It=std::find_if( Begin, End, m_Pred );

	mov	eax, DWORD PTR [ebx+8]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+16]
	push	esi
	push	edi
	sub	esp, 12					; 0000000cH
	mov	esi, esp
	mov	DWORD PTR $T387391[esp+36], esp
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN11@operator@209
	mov	eax, esi
	mov	ecx, ebx
	jmp	SHORT $LN10@operator@209
$LN11@operator@209:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [ebx]
	add	esp, 4
$LN10@operator@209:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _End$[esp+52]
	mov	ecx, DWORD PTR _End$[esp+48]
	mov	edx, DWORD PTR _Begin$[esp+52]
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _Begin$[esp+40]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR _It$[esp+56]
	push	ecx
	call	??$find_if@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$is_any_ofF@D@detail@algorithm@boost@@@std@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V10@0U?$is_any_ofF@D@detail@algorithm@boost@@@Z ; std::find_if<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >

; 571  : 
; 572  :                     if( It==End )

	mov	esi, DWORD PTR _It$[esp+60]
	add	esp, 32					; 00000020H
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN17@operator@209
	test	esi, esi
	je	SHORT $LN16@operator@209
	cmp	esi, DWORD PTR _End$[esp+24]
	je	SHORT $LN17@operator@209
$LN16@operator@209:
	call	__invalid_parameter_noinfo
$LN17@operator@209:
	mov	edi, DWORD PTR _It$[esp+32]
	mov	eax, DWORD PTR _End$[esp+28]
	cmp	edi, eax
	jne	SHORT $LN6@operator@209

; 573  :                     {
; 574  :                         return result_type( End, End );

	mov	ecx, DWORD PTR _End$[esp+24]
	mov	DWORD PTR [ebp+12], eax

; 589  :                         }
; 590  : 
; 591  :                         return result_type( It, It2 );

	mov	DWORD PTR [ebp+4], eax
	mov	DWORD PTR [ebp], ecx
	mov	DWORD PTR [ebp+8], ecx
	mov	eax, ebp

; 592  :                     }
; 593  :                 }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	24					; 00000018H
$LN6@operator@209:

; 575  :                     }
; 576  :                     else
; 577  :                     {
; 578  :                         ForwardIteratorT It2=It;
; 579  : 
; 580  :                         if( m_eCompress==token_compress_on )

	cmp	DWORD PTR [ebx+12], 0
	jne	$LN4@operator@209
$LL3@operator@209:

; 581  :                         {
; 582  :                             // Find first non-matching character
; 583  :                             while( It2!=End && m_Pred(*It2) ) ++It2;

	cmp	esi, -4					; fffffffcH
	je	SHORT $LN30@operator@209
	test	esi, esi
	je	SHORT $LN29@operator@209
	cmp	esi, DWORD PTR _End$[esp+24]
	je	SHORT $LN30@operator@209
$LN29@operator@209:
	call	__invalid_parameter_noinfo
$LN30@operator@209:
	cmp	edi, DWORD PTR _End$[esp+28]
	je	$LN69@operator@209
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN40@operator@209
	test	esi, esi
	jne	SHORT $LN41@operator@209
	call	__invalid_parameter_noinfo
$LN41@operator@209:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN49@operator@209
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN50@operator@209
$LN49@operator@209:
	lea	eax, DWORD PTR [esi+4]
$LN50@operator@209:
	mov	edx, DWORD PTR [esi+20]
	add	edx, eax
	cmp	edi, edx
	jb	SHORT $LN40@operator@209
	call	__invalid_parameter_noinfo
$LN40@operator@209:
	movzx	eax, BYTE PTR [edi]
	push	eax
	mov	eax, ebx
	call	??$?RD@?$is_any_ofF@D@detail@algorithm@boost@@QBE_ND@Z ; boost::algorithm::detail::is_any_ofF<char>::operator()<char>
	test	al, al
	je	SHORT $LN69@operator@209
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN53@operator@209
	test	esi, esi
	jne	SHORT $LN54@operator@209
	call	__invalid_parameter_noinfo
$LN54@operator@209:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN62@operator@209
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN63@operator@209
$LN62@operator@209:
	lea	eax, DWORD PTR [esi+4]
$LN63@operator@209:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	edi, ecx
	jb	SHORT $LN53@operator@209
	call	__invalid_parameter_noinfo
$LN53@operator@209:
	inc	edi
	jmp	$LL3@operator@209
$LN4@operator@209:

; 584  :                         }
; 585  :                         else
; 586  :                         {
; 587  :                             // Advance by one position
; 588  :                             ++It2;

	cmp	esi, -4					; fffffffcH
	je	SHORT $LN66@operator@209
	test	esi, esi
	jne	SHORT $LN67@operator@209
	call	__invalid_parameter_noinfo
$LN67@operator@209:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN75@operator@209
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN76@operator@209
$LN75@operator@209:
	lea	eax, DWORD PTR [esi+4]
$LN76@operator@209:
	mov	edx, DWORD PTR [esi+20]
	add	edx, eax
	cmp	DWORD PTR _It$[esp+32], edx
	jb	SHORT $LN66@operator@209
	call	__invalid_parameter_noinfo
$LN66@operator@209:
	mov	edi, DWORD PTR _It$[esp+32]
	inc	edi
$LN69@operator@209:

; 589  :                         }
; 590  : 
; 591  :                         return result_type( It, It2 );

	mov	eax, DWORD PTR _It$[esp+32]
	mov	DWORD PTR [ebp+12], edi

; 592  :                     }
; 593  :                 }

	pop	edi
	mov	DWORD PTR [ebp], esi
	mov	DWORD PTR [ebp+8], esi
	mov	DWORD PTR [ebp+4], eax
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	24					; 00000018H
??$?RV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::operator()<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$_Sort@PADH@std@@YAXPAD0H@Z
_TEXT	SEGMENT
__Mid$159590 = -8					; size = 8
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PADH@std@@YAXPAD0H@Z PROC			; std::_Sort<char *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	sub	esp, 8
	push	ebx

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	ebx, DWORD PTR __Last$[esp+8]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+20]
	mov	eax, ebx
	sub	eax, edi
	cmp	eax, 32					; 00000020H
	jle	SHORT $LN3@Sort
	mov	esi, DWORD PTR __Ideal$[esp+20]
$LN7@Sort:
	test	esi, esi
	jle	SHORT $LN6@Sort

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	push	ebx
	lea	eax, DWORD PTR __Mid$159590[esp+28]
	push	edi
	push	eax
	call	??$_Unguarded_partition@PAD@std@@YA?AU?$pair@PADPAD@0@PAD0@Z ; std::_Unguarded_partition<char *>

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions
; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ebp, DWORD PTR __Mid$159590[esp+40]
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, eax
	cdq
	sub	eax, edx
	sar	eax, 1
	add	esi, eax
	mov	eax, DWORD PTR __Mid$159590[esp+36]
	mov	ecx, ebx
	mov	edx, eax
	add	esp, 12					; 0000000cH
	sub	ecx, ebp
	sub	edx, edi
	cmp	edx, ecx

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	push	esi
	jge	SHORT $LN5@Sort
	push	eax
	push	edi
	call	??$_Sort@PADH@std@@YAXPAD0H@Z		; std::_Sort<char *,int>

; 3093 : 			_First = _Mid.second;

	mov	edi, ebp

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN53@Sort
$LN5@Sort:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	push	ebx
	push	ebp
	call	??$_Sort@PADH@std@@YAXPAD0H@Z		; std::_Sort<char *,int>

; 3098 : 			_Last = _Mid.first;

	mov	ebx, DWORD PTR __Mid$159590[esp+36]
$LN53@Sort:
	mov	eax, ebx
	sub	eax, edi
	add	esp, 12					; 0000000cH
	cmp	eax, 32					; 00000020H
	jg	SHORT $LN7@Sort
$LN3@Sort:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	cmp	eax, 1
	jle	SHORT $LN46@Sort

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	cmp	edi, ebx
	je	SHORT $LN46@Sort
	push	ebx
	push	edi
	call	??$_Insertion_sort1@PADD@std@@YAXPAD00@Z ; std::_Insertion_sort1<char *,char>
	add	esp, 8
$LN46@Sort:

; 3109 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	0
$LN6@Sort:

; 3099 : 			}
; 3100 : 		}
; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	eax, 32					; 00000020H
	jle	SHORT $LN3@Sort

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	eax, ebx
	sub	eax, edi
	cmp	eax, 1
	jle	SHORT $LN10@Sort
	push	ebx
	call	??$_Make_heap@PADHD@std@@YAXPAD0PAH0@Z	; std::_Make_heap<char *,int,char>
	add	esp, 4
$LN10@Sort:

; 3105 : 		std::sort_heap(_First, _Last);

	mov	eax, ebx
	call	??$_Sort_heap@PAD@std@@YAXPAD0@Z	; std::_Sort_heap<char *>

; 3109 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	0
??$_Sort@PADH@std@@YAXPAD0H@Z ENDP			; std::_Sort<char *,int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	push	esi
	push	edi
	mov	edi, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	ecx, DWORD PTR [edi]
	test	ecx, ecx
	jne	SHORT $LN20@operator@210
	call	__invalid_parameter_noinfo

; 161  : 		_SCL_SECURE_VALIDATE_RANGE(

	mov	ecx, DWORD PTR [edi]
	test	ecx, ecx
	je	SHORT $LN10@operator@210
$LN20@operator@210:
	mov	edx, DWORD PTR [ecx]
	jmp	SHORT $LN11@operator@210
$LN10@operator@210:
	xor	edx, edx
$LN11@operator@210:
	mov	eax, DWORD PTR __Off$[esp+4]
	lea	esi, DWORD PTR [eax*8]
	sub	esi, eax
	mov	eax, DWORD PTR [edi+4]
	add	esi, esi
	add	esi, esi
	add	eax, esi
	cmp	eax, DWORD PTR [edx+16]
	ja	SHORT $LN1@operator@210
	test	ecx, ecx
	je	SHORT $LN16@operator@210
	mov	ecx, DWORD PTR [ecx]
	jmp	SHORT $LN17@operator@210
$LN16@operator@210:
	xor	ecx, ecx
$LN17@operator@210:
	cmp	eax, DWORD PTR [ecx+12]
	jae	SHORT $LN21@operator@210
$LN1@operator@210:

; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);

	call	__invalid_parameter_noinfo
$LN21@operator@210:

; 164  : 		_Myptr += _Off;

	add	DWORD PTR [edi+4], esi

; 165  : 		return (*this);

	mov	eax, edi
	pop	edi
	pop	esi

; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+=, COMDAT
; _this$ = ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??Y?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+=

; 376  : 		return (*this);

	mov	eax, esi
	pop	esi

; 377  : 		}

	ret	4
??Y?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+, COMDAT
; _this$ = ecx

; 380  : 		{	// return this + integer

	push	esi

; 381  : 		_Myt _Tmp = *this;

	mov	esi, DWORD PTR [ecx]
	push	edi
	mov	edi, DWORD PTR [ecx+4]

; 382  : 		return (_Tmp += _Off);

	test	esi, esi
	jne	SHORT $LN24@operator@211
	call	__invalid_parameter_noinfo
	xor	ecx, ecx
$LN15@operator@211:
	mov	eax, DWORD PTR __Off$[esp+4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	lea	edi, DWORD PTR [edi+edx*4]
	cmp	edi, DWORD PTR [ecx+16]
	ja	SHORT $LN5@operator@211
	test	esi, esi
	je	SHORT $LN20@operator@211
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN21@operator@211
$LN24@operator@211:
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN15@operator@211
$LN20@operator@211:
	xor	eax, eax
$LN21@operator@211:
	cmp	edi, DWORD PTR [eax+12]
	jae	SHORT $LN6@operator@211
$LN5@operator@211:
	call	__invalid_parameter_noinfo
$LN6@operator@211:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax+4], edi

; 383  : 		}

	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	ret	8
??H?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator+
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_adaptor.hpp
_TEXT	ENDS
;	COMDAT ??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z
_TEXT	SEGMENT
??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z PROC ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>, COMDAT
; _this$ = eax
; _iter$ = edi

; 283  :       {

	push	esi
	mov	esi, eax
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >

; 284  :       }

	mov	eax, esi
	pop	esi
	ret	0
??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z ENDP ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
$T387978 = -8						; size = 8
$T387977 = -8						; size = 8
$T387943 = -8						; size = 8
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1285 : 		{	// erase substring [_First, _Last)

	sub	esp, 8
	push	ebx

; 1286 : 		size_type _Count = _Pdif(_First, begin());

	mov	ebx, DWORD PTR _this$[esp+8]
	mov	ecx, DWORD PTR [ebx+24]
	push	ebp
	push	esi
	push	edi
	lea	ebp, DWORD PTR [ebx+4]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN7@erase@5
	mov	edi, DWORD PTR [ebp]
	jmp	SHORT $LN8@erase@5
$LN7@erase@5:
	mov	edi, ebp
$LN8@erase@5:
	test	edi, edi
	je	SHORT $LN11@erase@5
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN21@erase@5
	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN22@erase@5
$LN21@erase@5:
	mov	eax, ebp
$LN22@erase@5:
	cmp	eax, edi
	ja	SHORT $LN11@erase@5
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN25@erase@5
	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN26@erase@5
$LN25@erase@5:
	mov	eax, ebp
$LN26@erase@5:
	mov	ecx, DWORD PTR [ebx+20]
	add	ecx, eax
	cmp	edi, ecx
	jbe	SHORT $LN12@erase@5
$LN11@erase@5:
	call	__invalid_parameter_noinfo
$LN12@erase@5:
	mov	ecx, DWORD PTR __First$[esp+24]
	mov	eax, DWORD PTR __First$[esp+20]
	mov	DWORD PTR $T387943[esp+24], eax
	mov	esi, ecx
	test	ecx, ecx
	jne	SHORT $LN29@erase@5
	xor	ebx, ebx
	jmp	SHORT $LN30@erase@5
$LN29@erase@5:
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN32@erase@5
	test	eax, eax
	je	SHORT $LN31@erase@5
	cmp	eax, ebx
	je	SHORT $LN32@erase@5
$LN31@erase@5:
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR __First$[esp+24]
	mov	eax, DWORD PTR __First$[esp+20]
$LN32@erase@5:
	sub	esi, edi
	mov	ebx, esi
$LN30@erase@5:

; 1287 : 		erase(_Count, _Pdif(_Last, _First));

	mov	edx, DWORD PTR __Last$[esp+20]
	mov	edi, ecx
	mov	ecx, DWORD PTR __Last$[esp+24]
	mov	DWORD PTR $T387978[esp+24], eax
	mov	DWORD PTR $T387977[esp+24], edx
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN43@erase@5
$LN42@erase@5:
	cmp	edx, -4					; fffffffcH
	je	SHORT $LN45@erase@5
	test	edx, edx
	je	SHORT $LN44@erase@5
	cmp	edx, eax
	je	SHORT $LN45@erase@5
$LN44@erase@5:
	call	__invalid_parameter_noinfo
$LN45@erase@5:
	sub	esi, edi
$LN43@erase@5:
	mov	edi, DWORD PTR _this$[esp+20]
	push	esi
	push	ebx
	mov	ecx, edi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 1288 : 		return (_STRING_ITERATOR(_Myptr() + _Count));

	mov	ecx, DWORD PTR [edi+24]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN55@erase@5
	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN56@erase@5
$LN55@erase@5:
	mov	eax, ebp
$LN56@erase@5:
	lea	esi, DWORD PTR [eax+ebx]
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+20]
	mov	DWORD PTR [ebx], 0
	test	esi, esi
	je	SHORT $LN59@erase@5
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN69@erase@5
	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN70@erase@5
$LN69@erase@5:
	mov	eax, ebp
$LN70@erase@5:
	cmp	eax, esi
	ja	SHORT $LN59@erase@5
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN73@erase@5
	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN74@erase@5
$LN73@erase@5:
	mov	eax, ebp
$LN74@erase@5:
	mov	edx, DWORD PTR [edi+20]
	add	edx, eax
	cmp	esi, edx
	jbe	SHORT $LN60@erase@5
$LN59@erase@5:
	call	__invalid_parameter_noinfo
$LN60@erase@5:
	mov	DWORD PTR [ebx], edi

; 1289 : 		}

	pop	edi
	mov	DWORD PTR [ebx+4], esi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
	add	esp, 8
	ret	24					; 00000018H
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::program_options::options_description>::~shared_ptr<boost::program_options::options_description>, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	test	esi, esi
	je	SHORT $LN10@shared_ptr@2
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN10@shared_ptr@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN10@shared_ptr@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	pop	esi
	jmp	edx
$LN10@shared_ptr@2:
	pop	esi
	ret	0
??1?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::program_options::options_description>::~shared_ptr<boost::program_options::options_description>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::program_options::option_description>::~shared_ptr<boost::program_options::option_description>, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	test	esi, esi
	je	SHORT $LN10@shared_ptr@3
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN10@shared_ptr@3
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN10@shared_ptr@3
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	pop	esi
	jmp	edx
$LN10@shared_ptr@3:
	pop	esi
	ret	0
??1?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::program_options::option_description>::~shared_ptr<boost::program_options::option_description>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAEPAXI@Z PROC ; boost::shared_ptr<boost::program_options::options_description>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN13@scalar@30
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN13@scalar@30
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN13@scalar@30
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN13@scalar@30:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN16@scalar@30
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@scalar@30:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??_G?$shared_ptr@Voptions_description@program_options@boost@@@boost@@QAEPAXI@Z ENDP ; boost::shared_ptr<boost::program_options::options_description>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAEPAXI@Z PROC ; boost::shared_ptr<boost::program_options::option_description>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN13@scalar@31
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN13@scalar@31
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN13@scalar@31
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN13@scalar@31:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN16@scalar@31
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@scalar@31:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??_G?$shared_ptr@Voption_description@program_options@boost@@@boost@@QAEPAXI@Z ENDP ; boost::shared_ptr<boost::program_options::option_description>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN20@scalar@32
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@scalar@32:
	xor	eax, eax
	test	BYTE PTR ___flags$[esp], 1
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], eax
	mov	BYTE PTR [esi+4], al
	je	SHORT $LN30@scalar@32
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@scalar@32:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z PROC ; std::_Destroy<boost::shared_ptr<boost::program_options::options_description> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN15@Destroy@5
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN15@Destroy@5
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN15@Destroy@5
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN15@Destroy@5:
	pop	esi

; 60   : 	}

	ret	0
??$_Destroy@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z ENDP ; std::_Destroy<boost::shared_ptr<boost::program_options::options_description> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z PROC ; std::_Destroy<boost::shared_ptr<boost::program_options::option_description> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN15@Destroy@6
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN15@Destroy@6
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN15@Destroy@6
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	pop	esi
	jmp	eax
$LN15@Destroy@6:
	pop	esi

; 60   : 	}

	ret	0
??$_Destroy@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z ENDP ; std::_Destroy<boost::shared_ptr<boost::program_options::option_description> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 58   : 	{	// destroy object at _Ptr

	push	esi

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	esi, DWORD PTR __Ptr$[esp]
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN22@Destroy@7
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@Destroy@7:
	xor	eax, eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], eax
	mov	BYTE PTR [esi+4], al
	pop	esi

; 60   : 	}

	ret	0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\algorithm
_TEXT	ENDS
;	COMDAT ??$sort@PAD@std@@YAXPAD0@Z
_TEXT	SEGMENT
??$sort@PAD@std@@YAXPAD0@Z PROC				; std::sort<char *>, COMDAT
; __First$ = ecx
; __Last$ = eax

; 3113 : 	{	// order [_First, _Last), using operator<

	push	ecx

; 3114 : 	_DEBUG_RANGE(_First, _Last);
; 3115 : 	std::_Sort(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Last - _First);

	mov	edx, eax
	sub	edx, ecx
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PADH@std@@YAXPAD0H@Z		; std::_Sort<char *,int>
	add	esp, 12					; 0000000cH
	pop	ecx

; 3116 : 	}

	ret	0
??$sort@PAD@std@@YAXPAD0@Z ENDP				; std::sort<char *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
_TEXT	ENDS
;	COMDAT ??$?6V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
??$?6V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<<std::allocator<char> >, COMDAT
; _this$ = edx
; _str$ = ecx

; 718  :             {
; 719  :                 start = const_cast<CharT*>(str.data());

	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN9@operator@212
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax

; 720  :                 finish = start + str.length();

	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, eax
	mov	DWORD PTR [edx+4], ecx

; 721  :                 return true;

	mov	al, 1

; 722  :             }

	ret	0

; 718  :             {
; 719  :                 start = const_cast<CharT*>(str.data());

$LN9@operator@212:
	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax

; 720  :                 finish = start + str.length();

	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, eax
	mov	DWORD PTR [edx+4], ecx

; 721  :                 return true;

	mov	al, 1

; 722  :             }

	ret	0
??$?6V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<<std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 327  : 		{	// construct with pointer _Ptr

	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Pvector$[esp+8]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	test	edi, edi
	je	SHORT $LN3@Vector_ite@15
	cmp	DWORD PTR [edi+12], ebx
	ja	SHORT $LN3@Vector_ite@15
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN4@Vector_ite@15
$LN3@Vector_ite@15:
	call	__invalid_parameter_noinfo
$LN4@Vector_ite@15:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	pop	edi
	mov	DWORD PTR [esi+4], ebx

; 328  : 		}

	mov	eax, esi
	pop	esi
	pop	ebx
	ret	8
??0?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter, COMDAT
; _this$ = ecx

; 660  : 		{	// make iterator from const_iterator

	push	esi
	push	edi

; 661  : 		return (iterator(_Where._Myptr, this));

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN5@Make_iter@8
	mov	eax, DWORD PTR __Where$[esp+8]
	cmp	DWORD PTR [esi+12], eax
	ja	SHORT $LN5@Make_iter@8
	cmp	eax, DWORD PTR [esi+16]
	jbe	SHORT $LN6@Make_iter@8
$LN5@Make_iter@8:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+8]
$LN6@Make_iter@8:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi], ecx
	mov	eax, edi
	pop	edi
	pop	esi

; 662  : 		}

	ret	12					; 0000000cH
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 327  : 		{	// construct with pointer _Ptr

	push	ebx
	mov	ebx, DWORD PTR __Ptr$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Pvector$[esp+8]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	test	edi, edi
	je	SHORT $LN3@Vector_ite@16
	cmp	DWORD PTR [edi+12], ebx
	ja	SHORT $LN3@Vector_ite@16
	cmp	ebx, DWORD PTR [edi+16]
	jbe	SHORT $LN4@Vector_ite@16
$LN3@Vector_ite@16:
	call	__invalid_parameter_noinfo
$LN4@Vector_ite@16:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	pop	edi
	mov	DWORD PTR [esi+4], ebx

; 328  : 		}

	mov	eax, esi
	pop	esi
	pop	ebx
	ret	8
??0?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@PAV?$basic_option@D@program_options@boost@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx

; 274  : 		_Seekhigh = 0;
; 275  : 		_Mystate = _State;

	mov	eax, DWORD PTR __State$[esp-4]
	push	ebx

; 276  : 
; 277  : 		if (_Count != 0
; 278  : 			&& (_Mystate & (_Noread | _Constant)) != (_Noread | _Constant))

	mov	ebx, DWORD PTR __Count$[esp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+60], 0
	mov	DWORD PTR [esi+64], eax
	test	ebx, ebx
	je	$LN4@Init@3
	and	eax, 6
	cmp	al, 6
	je	SHORT $LN4@Init@3
	push	edi

; 279  : 			{	// finite buffer that can be read or written, set it up
; 280  : 			_Elem *_Pnew = _Al.allocate(_Count);

	push	ebx
	lea	ecx, DWORD PTR [esi+68]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	edi, eax

; 281  : 			_Traits_helper::copy_s<_Traits>(_Pnew, _Count, _Ptr, _Count);

	mov	eax, DWORD PTR __Ptr$[esp+8]
	push	ebx
	push	eax
	push	ebx
	push	edi
	call	_memcpy_s
	add	esp, 16					; 00000010H

; 282  : 			_Seekhigh = _Pnew + _Count;
; 283  : 
; 284  : 			if (!(_Mystate & _Noread))

	test	BYTE PTR [esi+64], 4
	lea	eax, DWORD PTR [edi+ebx]
	mov	DWORD PTR [esi+60], eax
	jne	SHORT $LN17@Init@3

; 285  : 				_Mysb::setg(_Pnew, _Pnew,
; 286  : 					_Pnew + _Count);	// setup read buffer

	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], edi
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], edi
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], ebx
$LN17@Init@3:

; 287  : 			if (!(_Mystate & _Constant))

	mov	ecx, DWORD PTR [esi+64]
	test	cl, 2
	jne	SHORT $LN23@Init@3

; 288  : 				{	// setup write buffer, and maybe read buffer
; 289  : 				_Mysb::setp(_Pnew,
; 290  : 					(_Mystate & _Atend) ? _Pnew + _Count : _Pnew,
; 291  : 					_Pnew + _Count);

	test	cl, 16					; 00000010H
	jne	SHORT $LN8@Init@3
	mov	eax, edi
$LN8@Init@3:
	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [edx], edi
	mov	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR [ecx], eax
	mov	edx, edi
	sub	edx, eax
	mov	eax, DWORD PTR [esi+52]
	add	edx, ebx
	mov	DWORD PTR [eax], edx

; 292  : 				if (_Mysb::gptr() == 0)

	mov	ecx, DWORD PTR [esi+32]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN23@Init@3

; 293  : 					_Mysb::setg(_Pnew, 0, _Pnew);

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], edi
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], edi
$LN23@Init@3:

; 294  : 				}
; 295  : 			_Mystate |= _Allocated;

	or	DWORD PTR [esi+64], 1
	pop	edi
$LN4@Init@3:
	pop	esi
	pop	ebx

; 296  : 			}
; 297  : 		}

	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Make_iter, COMDAT
; _this$ = ecx

; 660  : 		{	// make iterator from const_iterator

	push	esi
	push	edi

; 661  : 		return (iterator(_Where._Myptr, this));

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN5@Make_iter@9
	mov	eax, DWORD PTR __Where$[esp+8]
	cmp	DWORD PTR [esi+12], eax
	ja	SHORT $LN5@Make_iter@9
	cmp	eax, DWORD PTR [esi+16]
	jbe	SHORT $LN6@Make_iter@9
$LN5@Make_iter@9:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __Where$[esp+8]
$LN6@Make_iter@9:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi], ecx
	mov	eax, edi
	pop	edi
	pop	esi

; 662  : 		}

	ret	12					; 0000000cH
?_Make_iter@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx

; 650  : 		{	// return iterator for end of mutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 651  : 		return (iterator(_Mylast, this));

	mov	ebx, DWORD PTR [esi+16]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	DWORD PTR [esi+12], ebx
	jbe	SHORT $LN6@end@35
	call	__invalid_parameter_noinfo
$LN6@end@35:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 652  : 		}

	ret	4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 640  : 		{	// return iterator for beginning of mutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 641  : 		return (iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [esi+12]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN6@begin@38
	call	__invalid_parameter_noinfo
$LN6@begin@38:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 642  : 		}

	ret	4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z$0
__ehfuncinfo$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
xdata$x	ENDS
;	COMDAT ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z
_TEXT	SEGMENT
$T388917 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
__Addit$ = 12						; size = 1
_$initVBases$ = 16					; size = 4
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 56   : 	__CLR_OR_THIS_CALL basic_ostream(_Uninitialized, bool _Addit = true)

	push	-1
	push	__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	xor	eax, eax
	mov	DWORD PTR $T388917[esp+28], eax
	cmp	DWORD PTR _$initVBases$[esp+24], eax
	je	SHORT $LN2@basic_ostr
	mov	DWORD PTR [esi], OFFSET ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR [esi+4], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+36], eax
	mov	DWORD PTR $T388917[esp+28], 1
$LN2@basic_ostr:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+edx], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@

; 57   : 		{	// construct uninitialized
; 58   : 		if (_Addit)

	cmp	BYTE PTR __Addit$[esp+24], al
	je	SHORT $LN13@basic_ostr

; 59   : 			ios_base::_Addstd(this);	// suppress for basic_iostream

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	add	eax, esi
	push	eax
	call	?_Addstd@ios_base@std@@SAXPAV12@@Z	; std::ios_base::_Addstd
	add	esp, 4
$LN13@basic_ostr:

; 60   : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z$0:
	mov	eax, DWORD PTR $T388917[ebp]
	and	eax, 1
	je	$LN8@basic_ostr
	and	DWORD PTR $T388917[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN8@basic_ostr:
	ret	0
__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@W4_Uninitialized@1@_N@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = eax

; 63   : 	__CLR_OR_THIS_CALL _String_const_iterator()

	mov	DWORD PTR [eax], 0

; 64   : 		{	// construct with null pointer
; 65   : 		_Myptr = 0;

	mov	DWORD PTR [eax+4], 0

; 66   : 		}

	ret	0
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 419  : 		{

	push	esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@15
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	pop	esi
	ret	4
$LN3@Container_@15:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >::_Container_base_aux_alloc_real<std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::end, COMDAT
; _this$ = ecx

; 650  : 		{	// return iterator for end of mutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 651  : 		return (iterator(_Mylast, this));

	mov	ebx, DWORD PTR [esi+16]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	DWORD PTR [esi+12], ebx
	jbe	SHORT $LN6@end@36
	call	__invalid_parameter_noinfo
$LN6@end@36:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 652  : 		}

	ret	4
?end@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::begin, COMDAT
; _this$ = ecx

; 640  : 		{	// return iterator for beginning of mutable sequence

	push	ebx
	push	esi
	mov	esi, ecx

; 641  : 		return (iterator(_Myfirst, this));

	mov	ebx, DWORD PTR [esi+12]
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	DWORD PTR [edi], 0
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN6@begin@39
	call	__invalid_parameter_noinfo
$LN6@begin@39:
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], ebx
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 642  : 		}

	ret	4
?begin@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@XZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = eax

; 325  : 	__CLR_OR_THIS_CALL _String_iterator()

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 326  : 		{	// construct with null string pointer
; 327  : 		}

	ret	0
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z PROC ; std::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	push	esi
	push	4
	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Vector_val@11
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	pop	esi
	ret	4

; 425  : 		{	// construct allocator from _Al

$LN8@Vector_val@11:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE@V?$allocator@V?$basic_option@D@program_options@boost@@@1@@Z ENDP ; std::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Vector_val<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_D?$basic_iostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_iostream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_iostream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	lea	eax, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [eax-12]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-12], OFFSET ??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR [eax-4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-4], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR [eax-12]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-12], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??_D?$basic_iostream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_iostream<char,std::char_traits<char> >::`vbase destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_iostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_iostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_iostream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	lea	esi, DWORD PTR [ecx-12]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [edx+eax-12], OFFSET ??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR [eax-4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-4], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR [eax-12]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-12], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN17@scalar@33
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN17@scalar@33:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_iostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_iostream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx

; 157  : 		if (_Mysb::gptr() == 0
; 158  : 			|| _Mysb::gptr() <= _Mysb::eback()
; 159  : 			|| !_Traits::eq_int_type(_Traits::eof(), _Meta)
; 160  : 			&& !_Traits::eq(_Traits::to_char_type(_Meta), _Mysb::gptr()[-1])
; 161  : 			&& _Mystate & _Constant)

	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@pbackfail
	mov	edx, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR [edx]
	jbe	SHORT $LN3@pbackfail
	mov	edx, DWORD PTR __Meta$[esp-4]
	cmp	edx, -1
	je	SHORT $LN4@pbackfail
	cmp	dl, BYTE PTR [eax-1]
	je	SHORT $LN4@pbackfail
	test	BYTE PTR [ecx+64], 2
	jne	SHORT $LN3@pbackfail
$LN4@pbackfail:

; 163  : 		else
; 164  : 			{	// back up one position and store put-back character
; 165  : 			_Mysb::gbump(-1);

	mov	eax, DWORD PTR [ecx+48]
	inc	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+32]
	dec	DWORD PTR [eax]

; 166  : 			if (!_Traits::eq_int_type(_Traits::eof(), _Meta))

	cmp	edx, -1
	je	SHORT $LN37@pbackfail

; 167  : 				*_Mysb::gptr() = _Traits::to_char_type(_Meta);

	mov	eax, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx], dl

; 168  : 			return (_Traits::not_eof(_Meta));

	mov	eax, edx

; 169  : 			}
; 170  : 		}

	ret	4

; 168  : 			return (_Traits::not_eof(_Meta));

$LN37@pbackfail:
	xor	eax, eax

; 169  : 			}
; 170  : 		}

	ret	4
$LN3@pbackfail:

; 162  : 			return (_Traits::eof());	// can't put back, fail

	or	eax, -1

; 169  : 			}
; 170  : 		}

	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
__Newsize$156436 = -4					; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx

; 87   : 		{	// put an element to stream

	push	ecx
	push	esi
	mov	esi, ecx

; 88   : 		if (_Mystate & _Append
; 89   : 			&& _Mysb::pptr() != 0 && _Mysb::pptr() < _Seekhigh)

	test	BYTE PTR [esi+64], 8
	push	edi
	je	SHORT $LN100@overflow@5
	mov	edi, DWORD PTR [esi+36]
	mov	edx, DWORD PTR [edi]
	test	edx, edx
	je	SHORT $LN100@overflow@5
	mov	ecx, DWORD PTR [esi+60]
	cmp	edx, ecx
	jae	SHORT $LN100@overflow@5

; 90   : 			_Mysb::setp(_Mysb::pbase(), _Seekhigh, _Mysb::epptr());

	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	add	eax, edx
	mov	DWORD PTR [edi], ecx
	sub	eax, ecx
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], eax
$LN100@overflow@5:

; 91   : 
; 92   : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	mov	eax, DWORD PTR __Meta$[esp+8]
	cmp	eax, -1
	jne	SHORT $LN17@overflow@5
	pop	edi

; 93   : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

	xor	eax, eax
	pop	esi

; 151  : 			return (_Meta);
; 152  : 			}
; 153  : 		}

	pop	ecx
	ret	4
$LN17@overflow@5:

; 94   : 		else if (_Mysb::pptr() != 0
; 95   : 			&& _Mysb::pptr() < _Mysb::epptr())

	mov	edx, DWORD PTR [esi+36]
	mov	edi, DWORD PTR [edx]
	push	ebx
	test	edi, edi
	je	SHORT $LN15@overflow@5
	mov	ecx, DWORD PTR [esi+52]
	mov	ebx, DWORD PTR [ecx]
	mov	edx, edi
	add	ebx, edx
	cmp	edx, ebx
	jae	SHORT $LN15@overflow@5

; 96   : 			{	// room in buffer, store it
; 97   : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	dec	DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+36]
	mov	ecx, DWORD PTR [esi]
	pop	ebx
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [esi], edx
	pop	edi
	mov	BYTE PTR [ecx], al
	pop	esi

; 151  : 			return (_Meta);
; 152  : 			}
; 153  : 		}

	pop	ecx
	ret	4
$LN15@overflow@5:

; 98   : 			return (_Meta);
; 99   : 			}
; 100  : 		else if (_Mystate & _Constant)

	test	BYTE PTR [esi+64], 2
	je	SHORT $LN13@overflow@5
	pop	ebx
	pop	edi

; 101  : 			return (_Traits::eof());	// array nonmutable, fail

	or	eax, -1
	pop	esi

; 151  : 			return (_Meta);
; 152  : 			}
; 153  : 		}

	pop	ecx
	ret	4
$LN13@overflow@5:
	push	ebp

; 102  : 		else
; 103  : 			{	// grow buffer and store element
; 104  : 			size_t _Oldsize = _Mysb::pptr() == 0
; 105  : 				? 0 : _Mysb::epptr() - _Mysb::eback();

	test	edi, edi
	jne	SHORT $LN21@overflow@5
	xor	ebp, ebp
	jmp	SHORT $LN22@overflow@5
$LN21@overflow@5:
	mov	eax, DWORD PTR [esi+52]
	mov	ecx, DWORD PTR [esi+16]
	mov	ebp, DWORD PTR [eax]
	sub	ebp, DWORD PTR [ecx]
	add	ebp, edi
$LN22@overflow@5:

; 106  : 			size_t _Newsize = _Oldsize;
; 107  : 			size_t _Inc = _Newsize / 2 < _MINSIZE
; 108  : 				? _MINSIZE : _Newsize / 2;	// grow by 50 per cent

	mov	eax, ebp
	shr	eax, 1
	cmp	eax, 32					; 00000020H
	jae	SHORT $LN23@overflow@5
	mov	eax, 32					; 00000020H
	jmp	SHORT $LL11@overflow@5
$LN23@overflow@5:

; 109  : 
; 110  : 			while (0 < _Inc && INT_MAX - _Inc < _Newsize)

	test	eax, eax
	jbe	SHORT $LN104@overflow@5
$LL11@overflow@5:
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, eax
	cmp	edx, ebp
	jae	SHORT $LN10@overflow@5

; 111  : 				_Inc /= 2;	// increment causes overflow, halve it

	shr	eax, 1

; 109  : 
; 110  : 			while (0 < _Inc && INT_MAX - _Inc < _Newsize)

	jne	SHORT $LL11@overflow@5
$LN10@overflow@5:

; 112  : 			if (_Inc == 0)

	test	eax, eax
$LN104@overflow@5:
	jne	SHORT $LN9@overflow@5
	pop	ebp
	pop	ebx
	pop	edi

; 113  : 				return (_Traits::eof());	// buffer can't grow, fail

	or	eax, -1
	pop	esi

; 151  : 			return (_Meta);
; 152  : 			}
; 153  : 		}

	pop	ecx
	ret	4
$LN9@overflow@5:

; 114  : 
; 115  : 			_Newsize += _Inc;

	add	eax, ebp

; 116  : 
; 117  : 			_Elem *_Newptr = _Al.allocate(_Newsize);

	push	eax
	lea	ecx, DWORD PTR [esi+68]
	mov	DWORD PTR __Newsize$156436[esp+24], eax
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	edi, eax

; 118  : 			_Elem *_Oldptr = _Mysb::eback();

	mov	eax, DWORD PTR [esi+16]
	mov	ebx, DWORD PTR [eax]

; 119  : 
; 120  : 			if (0 < _Oldsize)

	test	ebp, ebp
	jbe	SHORT $LN105@overflow@5

; 121  : 				_Traits_helper::copy_s<_Traits>(_Newptr, _Newsize, _Oldptr, _Oldsize);

	mov	ecx, DWORD PTR __Newsize$156436[esp+20]
	push	ebp
	push	ebx
	push	ecx
	push	edi
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 122  : 
; 123  : 			if (_Oldsize == 0)

	test	ebp, ebp
$LN105@overflow@5:
	jne	SHORT $LN7@overflow@5

; 124  : 				{	// first growth, set up pointers
; 125  : 				_Seekhigh = _Newptr;
; 126  : 				_Mysb::setp(_Newptr, _Newptr + _Newsize);

	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+60], edi
	mov	DWORD PTR [edx], edi
	mov	eax, DWORD PTR [esi+36]
	mov	edx, DWORD PTR __Newsize$156436[esp+20]
	mov	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], edx

; 127  : 				if (_Mystate & _Noread)
; 128  : 					_Mysb::setg(_Newptr, 0, _Newptr);

	mov	eax, DWORD PTR [esi+16]
	test	BYTE PTR [esi+64], 4
	mov	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR [esi+32]
	je	SHORT $LN6@overflow@5
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR [esi+48]
	mov	DWORD PTR [edx], edi

; 129  : 				else

	jmp	SHORT $LN87@overflow@5
$LN6@overflow@5:

; 130  : 					_Mysb::setg(_Newptr, _Newptr, _Newptr + 1);

	mov	DWORD PTR [ecx], edi
	mov	edx, DWORD PTR [esi+48]
	mov	DWORD PTR [edx], 1

; 131  : 				}
; 132  : 			else

	jmp	SHORT $LN87@overflow@5
$LN7@overflow@5:

; 133  : 				{	// not first growth, adjust pointers
; 134  : 				_Seekhigh = _Newptr + (_Seekhigh - _Oldptr);
; 135  : 				_Mysb::setp(_Newptr + (_Mysb::pbase() - _Oldptr),
; 136  : 					_Newptr + (_Mysb::pptr() - _Oldptr),
; 137  : 					_Newptr + _Newsize);

	mov	ecx, DWORD PTR [esi+36]
	mov	eax, edi
	sub	eax, ebx
	add	DWORD PTR [esi+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [esi+20]
	mov	edx, edi
	sub	edx, ebx
	add	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+36]
	sub	eax, ebx
	add	eax, edi
	mov	edx, edi
	sub	edx, eax
	add	edx, DWORD PTR __Newsize$156436[esp+20]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [esi+52]
	mov	DWORD PTR [eax], edx

; 138  : 				if (_Mystate & _Noread)

	test	BYTE PTR [esi+64], 4
	je	SHORT $LN3@overflow@5

; 139  : 					_Mysb::setg(_Newptr, 0, _Newptr);

	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], edi
	mov	edx, DWORD PTR [esi+32]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [esi+48]
	mov	DWORD PTR [eax], edi

; 140  : 				else

	jmp	SHORT $LN87@overflow@5
$LN3@overflow@5:

; 141  : 					_Mysb::setg(_Newptr,
; 142  : 						_Newptr + (_Mysb::gptr() - _Oldptr),
; 143  : 						_Mysb::pptr() + 1);

	mov	edx, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [esi+36]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [esi+16]
	sub	eax, ebx
	add	eax, edi
	mov	DWORD PTR [edx], edi
	mov	edx, DWORD PTR [esi+32]
	sub	ecx, eax
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [esi+48]
	inc	ecx
	mov	DWORD PTR [eax], ecx
$LN87@overflow@5:

; 144  : 				}
; 145  : 
; 146  : 			if (_Mystate & _Allocated)

	test	BYTE PTR [esi+64], 1
	je	SHORT $LN89@overflow@5

; 147  : 				_Al.deallocate(_Oldptr, _Oldsize);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN89@overflow@5:

; 148  : 			_Mystate |= _Allocated;
; 149  : 
; 150  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	mov	eax, DWORD PTR [esi+52]
	or	DWORD PTR [esi+64], 1
	dec	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+36]
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR __Meta$[esp+16]
	pop	ebp
	pop	ebx
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [esi], edx
	pop	edi
	mov	BYTE PTR [ecx], al
	pop	esi

; 151  : 			return (_Meta);
; 152  : 			}
; 153  : 		}

	pop	ecx
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z$0
__ehfuncinfo$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\finder.hpp
xdata$x	ENDS
;	COMDAT ??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_Pred$ = 8						; size = 12
_eCompress$ = 20					; size = 4
??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z PROC ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, COMDAT
; _this$ = esi

; 559  :                         m_Pred(Pred), m_eCompress(eCompress) {}

	push	-1
	push	__ehhandler$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	mov	eax, DWORD PTR _Pred$[esp+20]
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN6@token_find@2
	mov	eax, esi
	lea	ecx, DWORD PTR _Pred$[esp+12]
	jmp	SHORT $LN5@token_find@2
$LN6@token_find@2:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	ecx, DWORD PTR _Pred$[esp+16]
	add	esp, 4
	mov	DWORD PTR [esi], eax
$LN5@token_find@2:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _eCompress$[esp+24]
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR _Pred$[esp+20], 8
	mov	DWORD PTR [esi+12], eax
	jbe	SHORT $LN17@token_find@2
	mov	eax, DWORD PTR _Pred$[esp+12]
	test	eax, eax
	je	SHORT $LN17@token_find@2
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN17@token_find@2:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z$0:
	lea	eax, DWORD PTR _Pred$[ebp-4]
	jmp	??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ ; boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF<char>
__ehhandler$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z ENDP ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::token_finderF<boost::algorithm::detail::is_any_ofF<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z PROC ; std::allocator<boost::shared_ptr<boost::program_options::options_description> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN17@destroy@6
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN17@destroy@6
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN17@destroy@6
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	call	eax
$LN17@destroy@6:
	pop	esi

; 161  : 		}

	ret	4
?destroy@?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@Z ENDP ; std::allocator<boost::shared_ptr<boost::program_options::options_description> >::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z PROC ; std::allocator<boost::shared_ptr<boost::program_options::option_description> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN17@destroy@7
	lea	ecx, DWORD PTR [esi+4]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN17@destroy@7
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, esi
	call	edx
	lea	eax, DWORD PTR [esi+8]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN17@destroy@7
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, esi
	call	eax
$LN17@destroy@7:
	pop	esi

; 161  : 		}

	ret	4
?destroy@?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@@Z ENDP ; std::allocator<boost::shared_ptr<boost::program_options::option_description> >::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy, COMDAT
; _this$ = ecx

; 159  : 		{	// destroy object at _Ptr

	push	esi

; 160  : 		_Destroy(_Ptr);

	mov	esi, DWORD PTR __Ptr$[esp]
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN24@destroy@8
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@destroy@8:
	xor	eax, eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], eax
	mov	BYTE PTR [esi+4], al
	pop	esi

; 161  : 		}

	ret	4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV01@@Z PROC ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>, COMDAT
; _this$ = eax
; ___that$ = edi
	push	esi
	mov	esi, eax
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, esi
	pop	esi
	ret	0
??0?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@ABV01@@Z ENDP ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@XZ PROC ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::~iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>, COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@iterator_a
	test	al, 1
	jne	SHORT $LN20@iterator_a
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN20@iterator_a
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN20@iterator_a:
	mov	DWORD PTR [esi], 0
$LN13@iterator_a:
	ret	0
??1?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@QAE@XZ ENDP ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::~iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV01@@Z PROC ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>, COMDAT
; _this$ = eax
; ___that$ = edi
	push	esi
	mov	esi, eax
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, esi
	pop	esi
	ret	0
??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV01@@Z ENDP ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ PROC ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::~transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>, COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN16@transform_
	test	al, 1
	jne	SHORT $LN23@transform_
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN23@transform_
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN23@transform_:
	mov	DWORD PTR [esi], 0
$LN16@transform_:
	ret	0
??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ ENDP ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::~transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@ABU0123@@Z
_TEXT	SEGMENT
??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@ABU0123@@Z PROC ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, COMDAT
; _this$ = esi
; ___that$ = edi
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN5@token_find@3
	mov	eax, esi
	mov	ecx, edi
	jmp	SHORT $LN4@token_find@3
$LN5@token_find@3:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi]
	add	esp, 4
$LN4@token_find@3:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
	add	esp, 12					; 0000000cH
	mov	eax, esi
	ret	0
??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@ABU0123@@Z ENDP ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::token_finderF<boost::algorithm::detail::is_any_ofF<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0is_classifiedF@detail@algorithm@boost@@QAE@ABU0123@@Z
_TEXT	SEGMENT
__Lock$390070 = -4					; size = 4
??0is_classifiedF@detail@algorithm@boost@@QAE@ABU0123@@Z PROC ; boost::algorithm::detail::is_classifiedF::is_classifiedF, COMDAT
; _this$ = edi
; ___that$ = eax
	push	ecx
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edi], cx
	push	esi
	mov	esi, DWORD PTR [eax+4]
	push	0
	lea	ecx, DWORD PTR __Lock$390070[esp+12]
	mov	DWORD PTR [edi+4], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN5@is_classif
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN5@is_classif:
	lea	ecx, DWORD PTR __Lock$390070[esp+8]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	esi
	pop	ecx
	ret	0
??0is_classifiedF@detail@algorithm@boost@@QAE@ABU0123@@Z ENDP ; boost::algorithm::detail::is_classifiedF::is_classifiedF
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	push	ebx

; 233  : 	for (; _First != _Last; ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	cmp	edi, ebx
	je	SHORT $LN1@Destroy_ra@7
	push	esi
	npad	1
$LL3@Destroy_ra@7:

; 234  : 		_Al.destroy(_First);

	mov	esi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN22@Destroy_ra@7
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN22@Destroy_ra@7
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN22@Destroy_ra@7
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN22@Destroy_ra@7:
	add	edi, 8
	cmp	edi, ebx
	jne	SHORT $LL3@Destroy_ra@7
	pop	esi
$LN1@Destroy_ra@7:
	pop	edi
	pop	ebx

; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	push	ebx

; 233  : 	for (; _First != _Last; ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	cmp	edi, ebx
	je	SHORT $LN1@Destroy_ra@8
	push	esi
	npad	1
$LL3@Destroy_ra@8:

; 234  : 		_Al.destroy(_First);

	mov	esi, DWORD PTR [edi+4]
	test	esi, esi
	je	SHORT $LN22@Destroy_ra@8
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN22@Destroy_ra@8
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN22@Destroy_ra@8
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN22@Destroy_ra@8:
	add	edi, 8
	cmp	edi, ebx
	jne	SHORT $LL3@Destroy_ra@8
	pop	esi
$LN1@Destroy_ra@8:
	pop	edi
	pop	ebx

; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	push	esi

; 233  : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN1@Destroy_ra@9
	push	ebx
	xor	ebx, ebx
$LL3@Destroy_ra@9:

; 234  : 		_Al.destroy(_First);

	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN29@Destroy_ra@9
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN29@Destroy_ra@9:
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	mov	BYTE PTR [esi+4], bl
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Destroy_ra@9
	pop	ebx
$LN1@Destroy_ra@9:
	pop	edi
	pop	esi

; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z$2
__ehfuncinfo$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\finder.hpp
xdata$x	ENDS
;	COMDAT ??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z
_TEXT	SEGMENT
$T390491 = -32						; size = 4
$T390486 = -32						; size = 4
$T390485 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_Pred$ = 8						; size = 12
_eCompress$ = 20					; size = 4
??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z PROC ; boost::algorithm::token_finder<boost::algorithm::detail::is_any_ofF<char> >, COMDAT
; ___$ReturnUdt$ = edi

; 221  :         {

	push	-1
	push	__ehhandler$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T390491[esp+44], 0

; 222  :             return detail::token_finderF<PredicateT>( Pred, eCompress );

	mov	eax, DWORD PTR _eCompress$[esp+40]
	mov	DWORD PTR __$EHRec$[esp+52], 0
	mov	ecx, DWORD PTR _Pred$[esp+48]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	esi, esp
	mov	eax, ecx
	mov	DWORD PTR $T390486[esp+60], esp
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN9@token_find@4
	mov	eax, esi
	lea	ecx, DWORD PTR _Pred$[esp+56]
	jmp	SHORT $LN8@token_find@4
$LN9@token_find@4:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _Pred$[esp+60]
	add	esp, 4
$LN8@token_find@4:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	lea	esi, DWORD PTR $T390485[esp+60]
	call	??0?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@U?$is_any_ofF@D@123@W4token_compress_mode_type@23@@Z ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::token_finderF<boost::algorithm::detail::is_any_ofF<char> >
	mov	esi, eax
	mov	BYTE PTR __$EHRec$[esp+52], 1
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi], 0
	cmp	eax, 8
	ja	SHORT $LN18@token_find@4
	mov	eax, edi
	mov	ecx, esi
	jmp	SHORT $LN17@token_find@4
$LN18@token_find@4:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [edi], eax
	mov	ecx, DWORD PTR [esi]
	add	esp, 4
$LN17@token_find@4:
	mov	edx, DWORD PTR [edi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR [esi+12]
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR $T390485[esp+52], 8
	mov	DWORD PTR [edi+12], eax
	jbe	SHORT $LN25@token_find@4
	mov	eax, DWORD PTR $T390485[esp+44]
	test	eax, eax
	je	SHORT $LN25@token_find@4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN25@token_find@4:
	cmp	DWORD PTR _Pred$[esp+48], 8
	jbe	SHORT $LN36@token_find@4
	mov	eax, DWORD PTR _Pred$[esp+40]
	test	eax, eax
	je	SHORT $LN36@token_find@4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN36@token_find@4:
	mov	eax, edi

; 223  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z$0:
	lea	eax, DWORD PTR _Pred$[ebp-4]
	jmp	??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ ; boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF<char>
__unwindfunclet$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z$2:
	lea	eax, DWORD PTR $T390485[ebp]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z ENDP ; boost::algorithm::token_finder<boost::algorithm::detail::is_any_ofF<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
;	COMDAT ??$?0V?$iterator_range@PBD@boost@@@?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABV?$iterator_range@PBD@3@@Z
_TEXT	SEGMENT
_Range$ = 8						; size = 4
??$?0V?$iterator_range@PBD@boost@@@?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABV?$iterator_range@PBD@3@@Z PROC ; boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<char><boost::iterator_range<char const *> >, COMDAT
; _this$ = esi

; 81   :                 {

	push	ebx
	mov	ebx, DWORD PTR _Range$[esp]
	mov	DWORD PTR [esi+8], 0

; 82   :                     // Prepare storage
; 83   :                     m_Storage.m_dynSet=0;

	mov	DWORD PTR [esi], 0

; 84   : 
; 85   :                     std::size_t Size=::boost::distance(Range);

	mov	eax, DWORD PTR [ebx+4]
	sub	eax, DWORD PTR [ebx]
	push	edi

; 86   :                     m_Size=Size;

	mov	DWORD PTR [esi+8], eax

; 87   :                     set_value_type* Storage=0;
; 88   : 
; 89   :                     if(use_fixed_storage(m_Size))

	cmp	eax, 8
	ja	SHORT $LN2@is_any_ofF@3

; 90   :                     {
; 91   :                         // Use fixed storage
; 92   :                         Storage=&m_Storage.m_fixSet[0];

	mov	edi, esi

; 93   :                     }
; 94   :                     else

	jmp	SHORT $LN1@is_any_ofF@3
$LN2@is_any_ofF@3:

; 95   :                     {
; 96   :                         // Use dynamic storage
; 97   :                         m_Storage.m_dynSet=new set_value_type[m_Size];

	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR [esi], eax

; 98   :                         Storage=m_Storage.m_dynSet;

	mov	edi, eax
$LN1@is_any_ofF@3:

; 99   :                     }
; 100  : 
; 101  :                     // Use fixed storage
; 102  :                     ::std::copy(::boost::begin(Range), ::boost::end(Range), Storage);

	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [ebx+4]
	sub	eax, ecx
	test	eax, eax
	jle	SHORT $LN53@is_any_ofF@3
	push	eax
	push	ecx
	push	eax
	push	edi
	call	_memmove_s
	add	esp, 16					; 00000010H
$LN53@is_any_ofF@3:

; 103  :                     ::std::sort(Storage, Storage+m_Size);

	mov	eax, DWORD PTR [esi+8]
	add	eax, edi
	mov	ecx, eax
	sub	ecx, edi
	push	ecx
	push	eax
	push	edi
	call	??$_Sort@PADH@std@@YAXPAD0H@Z		; std::_Sort<char *,int>
	add	esp, 12					; 0000000cH

; 104  :                 }

	pop	edi
	mov	eax, esi
	pop	ebx
	ret	4
??$?0V?$iterator_range@PBD@boost@@@?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABV?$iterator_range@PBD@3@@Z ENDP ; boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<char><boost::iterator_range<char const *> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z$0
__ehfuncinfo$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\parsers.hpp
xdata$x	ENDS
;	COMDAT ?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z
_TEXT	SEGMENT
$T390796 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ext$ = 8						; size = 32
?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z PROC ; boost::program_options::basic_command_line_parser<char>::extra_parser, COMDAT
; _this$ = esi

; 76   :     {

	push	-1
	push	__ehhandler$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax

; 77   :         detail::cmdline::set_additional_parser(ext);

	sub	esp, 32					; 00000020H
	mov	DWORD PTR __$EHRec$[esp+60], 0
	mov	eax, esp
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _ext$[esp+48]
	mov	DWORD PTR $T390796[esp+52], esp
	test	ecx, ecx
	je	SHORT $LN9@extra_pars
	mov	DWORD PTR [eax], ecx
	test	cl, 1
	je	SHORT $LN10@extra_pars
	movq	xmm0, QWORD PTR _ext$[esp+56]
	movq	QWORD PTR [eax+8], xmm0
	movq	xmm0, QWORD PTR _ext$[esp+64]
	movq	QWORD PTR [eax+16], xmm0
	movq	xmm0, QWORD PTR _ext$[esp+72]
	movq	QWORD PTR [eax+24], xmm0
	jmp	SHORT $LN9@extra_pars
$LN10@extra_pars:
	mov	ecx, DWORD PTR _ext$[esp+48]
	add	eax, 8
	push	0
	push	eax
	and	ecx, -2					; fffffffeH
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR _ext$[esp+64]
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN9@extra_pars:
	mov	ecx, esi
	call	?set_additional_parser@cmdline@detail@program_options@boost@@QAEXV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@4@@Z ; boost::program_options::detail::cmdline::set_additional_parser

; 78   :         return *this;

	mov	DWORD PTR __$EHRec$[esp+28], -1
	mov	eax, DWORD PTR _ext$[esp+16]
	test	eax, eax
	je	SHORT $LN35@extra_pars
	test	al, 1
	jne	SHORT $LN35@extra_pars
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN35@extra_pars
	lea	ecx, DWORD PTR _ext$[esp+24]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN35@extra_pars:
	mov	eax, esi

; 79   :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z$0:
	lea	ecx, DWORD PTR _ext$[ebp-4]
	jmp	??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
__ehhandler$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z ENDP ; boost::program_options::basic_command_line_parser<char>::extra_parser
; Function compile flags: /Ogtpy
;	COMDAT ??1?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAE@XZ PROC ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+28], 16			; 00000010H
	jb	SHORT $LN19@holder
	mov	eax, DWORD PTR [esi+8]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@holder:
	xor	eax, eax
	mov	DWORD PTR [esi+28], 15			; 0000000fH
	mov	DWORD PTR [esi+24], eax
	mov	BYTE PTR [esi+8], al
	mov	DWORD PTR [esi], OFFSET ??_7placeholder@any@boost@@6B@
	pop	esi
	ret	0
??1?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAE@XZ ENDP ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$5
__ehfuncinfo$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::~typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>, COMDAT
	push	-1
	push	__ehhandler$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	mov	DWORD PTR __$EHRec$[esp+32], 5
	mov	eax, DWORD PTR [esi+80]
	xor	ebx, ebx
	cmp	eax, ebx
	je	SHORT $LN13@typed_valu
	test	al, 1
	jne	SHORT $LN20@typed_valu
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+88]
	cmp	eax, ebx
	je	SHORT $LN20@typed_valu
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN20@typed_valu:
	mov	DWORD PTR [esi+80], ebx
$LN13@typed_valu:
	cmp	DWORD PTR [esi+72], 16			; 00000010H
	jb	SHORT $LN39@typed_valu
	mov	eax, DWORD PTR [esi+52]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN39@typed_valu:
	mov	DWORD PTR [esi+72], 15			; 0000000fH
	mov	DWORD PTR [esi+68], ebx
	mov	BYTE PTR [esi+52], bl
	mov	BYTE PTR __$EHRec$[esp+32], 3
	mov	ecx, DWORD PTR [esi+44]
	cmp	ecx, ebx
	je	SHORT $LN51@typed_valu
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN51@typed_valu:
	cmp	DWORD PTR [esi+40], 16			; 00000010H
	jb	SHORT $LN69@typed_valu
	mov	eax, DWORD PTR [esi+20]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN69@typed_valu:
	mov	DWORD PTR [esi+40], 15			; 0000000fH
	mov	DWORD PTR [esi+36], ebx
	mov	BYTE PTR [esi+20], bl
	mov	BYTE PTR __$EHRec$[esp+32], 1
	mov	ecx, DWORD PTR [esi+12]
	cmp	ecx, ebx
	je	SHORT $LN89@typed_valu
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN89@typed_valu:
	mov	DWORD PTR [esi], OFFSET ??_7value_semantic@program_options@boost@@6B@
	mov	DWORD PTR [esi+4], OFFSET ??_7typed_value_base@program_options@boost@@6B@
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$value_semantic_codecvt_helper@D@program_options@boost@@UAE@XZ
__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 4
	jmp	??1typed_value_base@program_options@boost@@UAE@XZ ; boost::program_options::typed_value_base::~typed_value_base
__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 12					; 0000000cH
	jmp	??1any@boost@@QAE@XZ			; boost::any::~any
__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 44					; 0000002cH
	jmp	??1any@boost@@QAE@XZ			; boost::any::~any
__unwindfunclet$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 48					; 00000030H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::~typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAEPAXI@Z PROC ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+28], 16			; 00000010H
	jb	SHORT $LN22@scalar@34
	mov	eax, DWORD PTR [esi+8]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@scalar@34:
	xor	eax, eax
	test	BYTE PTR ___flags$[esp], 1
	mov	DWORD PTR [esi+28], 15			; 0000000fH
	mov	DWORD PTR [esi+24], eax
	mov	BYTE PTR [esi+8], al
	mov	DWORD PTR [esi], OFFSET ??_7placeholder@any@boost@@6B@
	je	SHORT $LN34@scalar@34
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN34@scalar@34:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UAEPAXI@Z ENDP ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAEPAXI@Z PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	push	esi
	call	??1?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@35
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@35:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UAEPAXI@Z ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\value_semantic.hpp
_TEXT	ENDS
;	COMDAT ??0?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
??0?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>, COMDAT
; _this$ = eax
; _store_to$ = ecx

; 181  :         {} 

	mov	DWORD PTR [eax+4], OFFSET ??_7typed_value_base@program_options@boost@@6B@
	mov	DWORD PTR [eax+8], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@
	mov	DWORD PTR [eax+4], OFFSET ??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	edx, 15					; 0000000fH
	mov	DWORD PTR [eax+40], edx
	mov	BYTE PTR [eax+20], cl
	mov	DWORD PTR [eax+44], ecx
	mov	DWORD PTR [eax+72], edx
	mov	DWORD PTR [eax+68], ecx
	mov	BYTE PTR [eax+52], cl
	mov	BYTE PTR [eax+76], cl
	mov	BYTE PTR [eax+78], cl
	mov	BYTE PTR [eax+79], cl
	mov	DWORD PTR [eax+80], ecx
	ret	0
??0?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN19@Node
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@Node:
	xor	eax, eax
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], eax
	mov	BYTE PTR [esi+16], al
	pop	esi
	ret	0
??1_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node::~_Node
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z PROC ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN22@scalar@36
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@scalar@36:
	xor	eax, eax
	test	BYTE PTR ___flags$[esp], 1
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], eax
	mov	BYTE PTR [esi+16], al
	je	SHORT $LN32@scalar@36
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN32@scalar@36:
	mov	eax, esi
	pop	esi
	ret	4
??_G_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z ENDP ; std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>, COMDAT

; 58   : 	{	// destroy object at _Ptr

	push	esi

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	esi, DWORD PTR __Ptr$[esp]
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN24@Destroy@8
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@Destroy@8:
	xor	eax, eax
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], eax
	mov	BYTE PTR [esi+16], al
	pop	esi

; 60   : 	}

	ret	0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@@Z
_TEXT	SEGMENT
__Cat$392222 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@@Z PROC ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	ecx

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Cat$392222[esp+4]
	mov	ecx, DWORD PTR __Al$[esp]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+4]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >

; 226  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@@Z
_TEXT	SEGMENT
__Cat$392230 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@@Z PROC ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	ecx

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Cat$392230[esp+4]
	mov	ecx, DWORD PTR __Al$[esp]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+4]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >

; 226  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$392238 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	ecx

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Cat$392238[esp+4]
	mov	ecx, DWORD PTR __Al$[esp]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+4]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 226  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\classification.hpp
_TEXT	ENDS
;	COMDAT ??$is_any_of@$$BY01$$CBD@algorithm@boost@@YA?AU?$is_any_ofF@D@detail@01@AAY01$$CBD@Z
_TEXT	SEGMENT
$T392243 = -12						; size = 4
_lit_set$ = -12						; size = 8
??$is_any_of@$$BY01$$CBD@algorithm@boost@@YA?AU?$is_any_ofF@D@detail@01@AAY01$$CBD@Z PROC ; boost::algorithm::is_any_of<char const [2]>, COMDAT
; ___$ReturnUdt$ = eax

; 204  :         {

	sub	esp, 16					; 00000010H
	push	esi
	mov	esi, eax

; 205  :             iterator_range<BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type> lit_set(as_literal(Set));

	mov	eax, OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	DWORD PTR $T392243[esp+20], 0
	lea	edx, DWORD PTR [eax+1]
$LL15@is_any_of:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL15@is_any_of
	sub	eax, edx

; 206  :             return detail::is_any_ofF<BOOST_STRING_TYPENAME range_value<RangeT>::type>(lit_set); 

	lea	ecx, DWORD PTR _lit_set$[esp+20]
	lea	eax, DWORD PTR ??_C@_01CLKCMJKC@?5?$AA@[eax]
	push	ecx
	mov	DWORD PTR _lit_set$[esp+24], OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	DWORD PTR _lit_set$[esp+28], eax
	call	??$?0V?$iterator_range@PBD@boost@@@?$is_any_ofF@D@detail@algorithm@boost@@QAE@ABV?$iterator_range@PBD@3@@Z ; boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<char><boost::iterator_range<char const *> >
	mov	eax, esi

; 207  :         }

	pop	esi
	add	esp, 16					; 00000010H
	ret	0
??$is_any_of@$$BY01$$CBD@algorithm@boost@@YA?AU?$is_any_ofF@D@detail@01@AAY01$$CBD@Z ENDP ; boost::algorithm::is_any_of<char const [2]>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\value_semantic.hpp
_TEXT	ENDS
;	COMDAT ?xparse@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_value_store$ = 8					; size = 4
$T392339 = 12						; size = 4
_new_tokens$ = 12					; size = 4
?xparse@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::xparse, COMDAT
; _this$ = ecx

; 162  :     {

	push	esi
	push	edi

; 163  :         // If no tokens were given, and the option accepts an implicit
; 164  :         // value, then assign the implicit value as the stored value;
; 165  :         // otherwise, validate the user-provided token(s).
; 166  :         if (new_tokens.empty() && !m_implicit_value.empty())

	mov	edi, DWORD PTR _new_tokens$[esp+4]
	mov	esi, DWORD PTR [edi+16]
	sub	esi, DWORD PTR [edi+12]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jne	SHORT $LN2@xparse
	cmp	DWORD PTR [ecx+44], eax
	je	SHORT $LN2@xparse

; 167  :             value_store = m_implicit_value;

	mov	ecx, DWORD PTR [ecx+44]
	test	ecx, ecx
	je	SHORT $LN14@xparse
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	jmp	SHORT $LN15@xparse
$LN14@xparse:
	xor	eax, eax
$LN15@xparse:
	mov	ecx, eax
	mov	eax, DWORD PTR _value_store$[esp+4]
	lea	edx, DWORD PTR $T392339[esp+4]
	cmp	edx, eax
	je	SHORT $LN21@xparse
	mov	edx, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax], edx
$LN21@xparse:
	test	ecx, ecx
	je	SHORT $LN1@xparse
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
	pop	edi
	pop	esi

; 170  :     }

	ret	8
$LN2@xparse:

; 168  :         else
; 169  :             validate(value_store, new_tokens, (T*)0, 0);

	mov	eax, DWORD PTR _value_store$[esp+4]
	push	0
	push	0
	push	edi
	push	eax
	call	?validate@program_options@boost@@YAXAAVany@2@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@H@Z ; boost::program_options::validate
	add	esp, 16					; 00000010H
$LN1@xparse:
	pop	edi
	pop	esi

; 170  :     }

	ret	8
?xparse@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXAAVany@3@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::xparse
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YAPAV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@01@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YAPAV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@01@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::program_options::value<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 184  :         typed_value<T>* r = new typed_value<T>(v);

	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN3@value@3
	mov	edx, DWORD PTR _v$[esp-4]
	mov	DWORD PTR [eax+4], OFFSET ??_7typed_value_base@program_options@boost@@6B@
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax], OFFSET ??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6B?$value_semantic_codecvt_helper@D@12@@
	mov	DWORD PTR [eax+4], OFFSET ??_7?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@6Btyped_value_base@12@@
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	edx, 15					; 0000000fH
	mov	DWORD PTR [eax+40], edx
	mov	BYTE PTR [eax+20], cl
	mov	DWORD PTR [eax+44], ecx
	mov	DWORD PTR [eax+72], edx
	mov	DWORD PTR [eax+68], ecx
	mov	BYTE PTR [eax+52], cl
	mov	BYTE PTR [eax+76], cl
	mov	BYTE PTR [eax+78], cl
	mov	BYTE PTR [eax+79], cl
	mov	DWORD PTR [eax+80], ecx

; 185  : 
; 186  :         return r;        
; 187  :     }

	ret	0
$LN3@value@3:

; 184  :         typed_value<T>* r = new typed_value<T>(v);

	xor	eax, eax

; 185  : 
; 186  :         return r;        
; 187  :     }

	ret	0
??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YAPAV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@01@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::program_options::value<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 377  : 			{	// move to node with next larger value

	push	esi
	mov	esi, ecx

; 378  : 
; 379  :  #if _HAS_ITERATOR_DEBUGGING
; 380  : 			if (this->_Mycont == 0
; 381  : 				|| _Ptr == 0
; 382  : 				|| _Isnil(_Ptr))
; 383  : 				{
; 384  : 				_DEBUG_ERROR("map/set iterator not incrementable");
; 385  : 				_SCL_SECURE_OUT_OF_RANGE;
; 386  : 				}
; 387  :  #else
; 388  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN7@Inc@2
	call	__invalid_parameter_noinfo
$LN7@Inc@2:

; 389  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+41], 0
	je	SHORT $LN6@Inc@2
	pop	esi

; 390  : 				{
; 391  : 				_SCL_SECURE_OUT_OF_RANGE;

	jmp	__invalid_parameter_noinfo
$LN6@Inc@2:

; 392  : 				// end() shouldn't be incremented, don't move if _SCL_SECURE is not turned on
; 393  : 				}
; 394  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 395  : 
; 396  : 			else if (!_Isnil(_Right(_Ptr)))

	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+41], 0
	jne	SHORT $LN37@Inc@2

; 397  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+41], 0
	jne	SHORT $LN20@Inc@2
	npad	3
$LL21@Inc@2:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+41], 0
	je	SHORT $LL21@Inc@2
$LN20@Inc@2:
	mov	DWORD PTR [esi+4], ecx
	pop	esi

; 405  : 				}
; 406  : 			}

	ret	0
$LN37@Inc@2:

; 398  : 			else
; 399  : 				{	// climb looking for right subtree
; 400  : 				_Nodeptr _Pnode;
; 401  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 402  : 					&& _Ptr == _Right(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+41], 0
	jne	SHORT $LN1@Inc@2
$LL2@Inc@2:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Inc@2

; 403  : 					_Ptr = _Pnode;	// ==> parent while right subtree

	mov	DWORD PTR [esi+4], eax
	mov	edx, eax
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+41], 0
	je	SHORT $LL2@Inc@2
$LN1@Inc@2:

; 404  : 				_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR [esi+4], eax
	pop	esi

; 405  : 				}
; 406  : 			}

	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Inc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 377  : 			{	// move to node with next larger value

	push	esi
	mov	esi, ecx

; 378  : 
; 379  :  #if _HAS_ITERATOR_DEBUGGING
; 380  : 			if (this->_Mycont == 0
; 381  : 				|| _Ptr == 0
; 382  : 				|| _Isnil(_Ptr))
; 383  : 				{
; 384  : 				_DEBUG_ERROR("map/set iterator not incrementable");
; 385  : 				_SCL_SECURE_OUT_OF_RANGE;
; 386  : 				}
; 387  :  #else
; 388  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN7@Inc@3
	call	__invalid_parameter_noinfo
$LN7@Inc@3:

; 389  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+57], 0
	je	SHORT $LN6@Inc@3
	pop	esi

; 390  : 				{
; 391  : 				_SCL_SECURE_OUT_OF_RANGE;

	jmp	__invalid_parameter_noinfo
$LN6@Inc@3:

; 392  : 				// end() shouldn't be incremented, don't move if _SCL_SECURE is not turned on
; 393  : 				}
; 394  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 395  : 
; 396  : 			else if (!_Isnil(_Right(_Ptr)))

	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+57], 0
	jne	SHORT $LN37@Inc@3

; 397  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+57], 0
	jne	SHORT $LN20@Inc@3
	npad	3
$LL21@Inc@3:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+57], 0
	je	SHORT $LL21@Inc@3
$LN20@Inc@3:
	mov	DWORD PTR [esi+4], ecx
	pop	esi

; 405  : 				}
; 406  : 			}

	ret	0
$LN37@Inc@3:

; 398  : 			else
; 399  : 				{	// climb looking for right subtree
; 400  : 				_Nodeptr _Pnode;
; 401  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 402  : 					&& _Ptr == _Right(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+57], 0
	jne	SHORT $LN1@Inc@3
$LL2@Inc@3:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Inc@3

; 403  : 					_Ptr = _Pnode;	// ==> parent while right subtree

	mov	DWORD PTR [esi+4], eax
	mov	edx, eax
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+57], 0
	je	SHORT $LL2@Inc@3
$LN1@Inc@3:

; 404  : 				_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR [esi+4], eax
	pop	esi

; 405  : 				}
; 406  : 			}

	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 273  : 			{	// preincrement

	push	esi
	mov	esi, ecx

; 274  : 			_Inc();

	call	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Inc

; 275  : 			return (*this);

	mov	eax, esi
	pop	esi

; 276  : 			}

	ret	0
??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 273  : 			{	// preincrement

	push	esi
	mov	esi, ecx

; 274  : 			_Inc();

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc

; 275  : 			return (*this);

	mov	eax, esi
	pop	esi

; 276  : 			}

	ret	0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator++
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 159  : 		{	// destroy object at _Ptr

	push	esi

; 160  : 		_Destroy(_Ptr);

	mov	esi, DWORD PTR __Ptr$[esp]
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN26@destroy@9
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@destroy@9:
	xor	eax, eax
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], eax
	mov	BYTE PTR [esi+16], al
	pop	esi

; 161  : 		}

	ret	4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Node>::destroy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1330 : 		_Nodeptr _Pnode = _Left(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx]
	push	esi

; 1331 : 		_Left(_Wherenode) = _Right(_Pnode);

	mov	esi, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], esi

; 1332 : 
; 1333 : 		if (!_Isnil(_Right(_Pnode)))

	mov	esi, DWORD PTR [eax+8]
	cmp	BYTE PTR [esi+41], 0
	jne	SHORT $LN5@Rrotate

; 1334 : 			_Parent(_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1335 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1336 : 
; 1337 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+24]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Rrotate

; 1338 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN4@Rrotate:

; 1339 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@Rrotate

; 1340 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN2@Rrotate:

; 1341 : 		else
; 1342 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rrotate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1166 : 		{	// free entire subtree, recursively

	push	ebx
	push	ebp
	push	esi

; 1167 : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	esi, DWORD PTR __Rootnode$[esp+8]
	xor	ebx, ebx
	push	edi
	mov	ebp, ecx
	mov	edi, esi
	cmp	BYTE PTR [esi+41], bl
	jne	SHORT $LN1@Erase@4
$LL3@Erase@4:

; 1168 : 			{	// free subtrees, then node
; 1169 : 			_Erase(_Right(_Pnode));

	mov	eax, DWORD PTR [edi+8]
	push	eax
	mov	ecx, ebp
	call	?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Erase

; 1170 : 			_Pnode = _Left(_Pnode);
; 1171 : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node

	cmp	DWORD PTR [esi+36], 16			; 00000010H
	mov	edi, DWORD PTR [edi]
	jb	SHORT $LN37@Erase@4
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@Erase@4:
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], ebx

; 1172 : 			this->_Alnod.deallocate(_Rootnode, 1);

	push	esi
	mov	BYTE PTR [esi+16], bl
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	esi, edi
	cmp	BYTE PTR [edi+41], bl
	je	SHORT $LL3@Erase@4
$LN1@Erase@4:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1173 : 			}
; 1174 : 		}

	ret	4
?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1330 : 		_Nodeptr _Pnode = _Left(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx]
	push	esi

; 1331 : 		_Left(_Wherenode) = _Right(_Pnode);

	mov	esi, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], esi

; 1332 : 
; 1333 : 		if (!_Isnil(_Right(_Pnode)))

	mov	esi, DWORD PTR [eax+8]
	cmp	BYTE PTR [esi+57], 0
	jne	SHORT $LN5@Rrotate@2

; 1334 : 			_Parent(_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Rrotate@2:

; 1335 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1336 : 
; 1337 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+24]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Rrotate@2

; 1338 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN4@Rrotate@2:

; 1339 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@Rrotate@2

; 1340 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN2@Rrotate@2:

; 1341 : 		else
; 1342 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rrotate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1286 : 		_Nodeptr _Pnode = _Right(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx+8]
	push	esi

; 1287 : 		_Right(_Wherenode) = _Left(_Pnode);

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], esi

; 1288 : 
; 1289 : 		if (!_Isnil(_Left(_Pnode)))

	mov	esi, DWORD PTR [eax]
	cmp	BYTE PTR [esi+57], 0
	jne	SHORT $LN5@Lrotate@5

; 1290 : 			_Parent(_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Lrotate@5:

; 1291 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1292 : 
; 1293 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+24]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Lrotate@5

; 1294 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN4@Lrotate@5:

; 1295 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@Lrotate@5

; 1296 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN2@Lrotate@5:

; 1297 : 		else
; 1298 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lrotate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 315  : 			{	// test for iterator inequality

	push	esi
	mov	esi, ecx

; 316  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN3@operator@213
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN4@operator@213
$LN3@operator@213:
	call	__invalid_parameter_noinfo
$LN4@operator@213:
	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	setne	cl
	mov	al, cl
	pop	esi

; 317  : 			}

	ret	4
??9const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 280  : 			const_iterator _Tmp = *this;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], edx

; 281  : 			++*this;

	call	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Inc

; 282  : 			return (_Tmp);

	mov	eax, esi
	pop	esi

; 283  : 			}

	ret	8
??Econst_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 451  : 			{	// construct with node pointer _Pnode

	mov	eax, DWORD PTR __Pnode$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Plist$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	test	edi, edi
	jne	SHORT $LN3@iterator@6
	call	__invalid_parameter_noinfo
$LN3@iterator@6:
	mov	ecx, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [esi], ecx

; 452  : 			}

	mov	eax, esi
	pop	esi
	ret	8
??0iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::iterator::iterator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 315  : 			{	// test for iterator inequality

	push	esi
	mov	esi, ecx

; 316  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	test	eax, eax
	je	SHORT $LN3@operator@214
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN4@operator@214
$LN3@operator@214:
	call	__invalid_parameter_noinfo
$LN4@operator@214:
	mov	eax, DWORD PTR [esi+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edi+4]
	pop	edi
	setne	cl
	mov	al, cl
	pop	esi

; 317  : 			}

	ret	4
??9const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 280  : 			const_iterator _Tmp = *this;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], edx

; 281  : 			++*this;

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc

; 282  : 			return (_Tmp);

	mov	eax, esi
	pop	esi

; 283  : 			}

	ret	8
??Econst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::clear, COMDAT
; _this$ = ecx

; 965  : 		{	// erase all

	push	esi
	mov	esi, ecx

; 966  : 
; 967  :  #if _HAS_ITERATOR_DEBUGGING
; 968  : 		this->_Orphan_ptr(*this, 0);
; 969  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 970  : 
; 971  : 		_Erase(_Root());

	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Erase

; 972  : 		_Root() = _Myhead, _Mysize = 0;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax

; 973  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [eax], eax
	mov	esi, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+8], esi
	pop	esi

; 974  : 		}

	ret	0
?clear@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 575  : 		{	// make iterator from const_iterator

	push	esi
	mov	esi, ecx
	push	edi

; 576  : 		return (iterator(_TREE_ITERATOR(_Where._Ptr)));

	mov	edi, DWORD PTR __Where$[esp+8]
	test	esi, esi
	jne	SHORT $LN5@Make_iter@10
	call	__invalid_parameter_noinfo
$LN5@Make_iter@10:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], edi

; 577  : 		}

	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi
	ret	12					; 0000000cH
?_Make_iter@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Make_iter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::end, COMDAT
; _this$ = ecx

; 566  : 		return (_TREE_ITERATOR(_Myhead));

	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 567  : 		}

	ret	4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::begin, COMDAT
; _this$ = ecx

; 556  : 		return (_TREE_ITERATOR(_Lmost()));

	mov	eax, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], ecx

; 557  : 		}

	ret	4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$393842 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z PROC ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	eax, DWORD PTR __Cat$393842[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	eax
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+4]
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
	add	esp, 16					; 00000010H

; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0@Z ENDP ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::_Destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$393859 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z PROC ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	eax, DWORD PTR __Cat$393859[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	eax
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+4]
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
	add	esp, 16					; 00000010H

; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0@Z ENDP ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 419  : 		{

	push	esi

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	push	4
	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@Container_@16
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	pop	esi
	ret	4
$LN3@Container_@16:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 421  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$393923 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	eax, DWORD PTR __Cat$393923[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	eax
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+4]
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H

; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$393952 = -4					; size = 1
?_Tidy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ PROC ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ecx
	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN10@Tidy@29

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR __Cat$393952[esp+8]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN10@Tidy@29:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	pop	esi

; 1135 : 		}

	pop	ecx
	ret	0
?_Tidy@?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ ENDP ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$393985 = -4					; size = 1
?_Tidy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ PROC ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ecx
	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN10@Tidy@30

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR __Cat$393985[esp+8]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN10@Tidy@30:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	pop	esi

; 1135 : 		}

	pop	ecx
	ret	0
?_Tidy@?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@IAEXXZ ENDP ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	push	esi
	push	4
	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Vector_val@12
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	pop	esi
	ret	4

; 425  : 		{	// construct allocator from _Al

$LN8@Vector_val@12:
	xor	eax, eax
	mov	DWORD PTR [esi], eax

; 426  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$394100 = -4					; size = 1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ecx
	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN10@Tidy@31

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR __Cat$394100[esp+8]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN10@Tidy@31:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	pop	esi

; 1135 : 		}

	pop	ecx
	ret	0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	lea	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax-4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax-4], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	pop	ecx
	ret	0
??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::`vbase destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	lea	esi, DWORD PTR [ecx-4]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+eax-4], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN13@scalar@37
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@scalar@37:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\value_semantic.hpp
_TEXT	ENDS
;	COMDAT ?apply_default@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NAAVany@3@@Z
_TEXT	SEGMENT
$T394213 = -4						; size = 4
_value_store$ = 8					; size = 4
?apply_default@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NAAVany@3@@Z PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::apply_default, COMDAT
; _this$ = ecx

; 307  :         {

	push	ecx

; 308  :             if (m_default_value.empty()) {

	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN2@apply_defa

; 309  :                 return false;

	xor	al, al

; 313  :             }
; 314  :         }

	pop	ecx
	ret	4
$LN2@apply_defa:

; 310  :             } else {
; 311  :                 value_store = m_default_value;

	mov	ecx, DWORD PTR [ecx+12]
	test	ecx, ecx
	je	SHORT $LN10@apply_defa
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	jmp	SHORT $LN11@apply_defa
$LN10@apply_defa:
	xor	eax, eax
$LN11@apply_defa:
	mov	ecx, eax
	mov	eax, DWORD PTR _value_store$[esp]
	lea	edx, DWORD PTR $T394213[esp+4]
	cmp	edx, eax
	je	SHORT $LN17@apply_defa
	mov	edx, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax], edx
$LN17@apply_defa:
	test	ecx, ecx
	je	SHORT $LN22@apply_defa
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN22@apply_defa:

; 312  :                 return true;

	mov	al, 1

; 313  :             }
; 314  :         }

	pop	ecx
	ret	4
?apply_default@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE_NAAVany@3@@Z ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::apply_default
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABW4FileIOToken@DRAMsimII@@@Z
_TEXT	SEGMENT
__Where$ = -20						; size = 8
$T394220 = -12						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABW4FileIOToken@DRAMsimII@@@Z PROC ; std::_Tree<std::_Tmap_traits<enum DRAMsimII::FileIOToken,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<enum DRAMsimII::FileIOToken>,std::allocator<std::pair<enum DRAMsimII::FileIOToken const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::find, COMDAT

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	ecx, DWORD PTR ?lookupMap@Settings@DRAMsimII@@0V?$map@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@@std@@A+24
	mov	eax, DWORD PTR [ecx+4]
	sub	esp, 20					; 00000014H
	cmp	BYTE PTR [eax+45], 0
	push	ebx
	mov	ebx, DWORD PTR __Keyval$[esp+20]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+24]
	push	esi
	push	edi
	mov	esi, ecx
	jne	SHORT $LN9@find@3
	mov	edx, DWORD PTR [ebx]
$LL10@find@3:
	cmp	DWORD PTR [eax+12], edx
	jge	SHORT $LN8@find@3
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@find@3
$LN8@find@3:
	mov	esi, eax
	mov	eax, DWORD PTR [eax]
$LN7@find@3:
	cmp	BYTE PTR [eax+45], 0
	je	SHORT $LL10@find@3
$LN9@find@3:
	mov	eax, DWORD PTR ?lookupMap@Settings@DRAMsimII@@0V?$map@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@@std@@A
	mov	DWORD PTR __Where$[esp+40], esi
	mov	DWORD PTR __Where$[esp+36], eax

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	edi, ecx
	test	eax, eax
	je	SHORT $LN59@find@3
	cmp	eax, eax
	je	SHORT $LN60@find@3
$LN59@find@3:
	call	__invalid_parameter_noinfo
	mov	ecx, DWORD PTR ?lookupMap@Settings@DRAMsimII@@0V?$map@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@@std@@A+24
	mov	eax, DWORD PTR ?lookupMap@Settings@DRAMsimII@@0V?$map@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@@std@@A
$LN60@find@3:
	cmp	esi, edi
	je	SHORT $LN3@find@3
	mov	edx, DWORD PTR [ebx]
	cmp	edx, DWORD PTR [esi+12]
	jl	SHORT $LN3@find@3
	lea	eax, DWORD PTR __Where$[esp+36]
	jmp	SHORT $LN4@find@3
$LN3@find@3:
	mov	DWORD PTR $T394220[esp+36], eax
	mov	DWORD PTR $T394220[esp+40], ecx
	lea	eax, DWORD PTR $T394220[esp+36]
$LN4@find@3:
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 983  : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], ecx
	mov	DWORD PTR [ebp+4], edx
	mov	eax, ebp
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
?find@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABW4FileIOToken@DRAMsimII@@@Z ENDP ; std::_Tree<std::_Tmap_traits<enum DRAMsimII::FileIOToken,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<enum DRAMsimII::FileIOToken>,std::allocator<std::pair<enum DRAMsimII::FileIOToken const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::find
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$394570 = -16					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ PROC ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	-1
	push	__ehhandler$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+36], edi

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+12]
	cmp	eax, edi
	je	SHORT $LN13@vector@30
	mov	ecx, DWORD PTR __Cat$394570[esp+28]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voptions_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN13@vector@30:

; 560  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ENDP ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$394647 = -16					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ PROC ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	-1
	push	__ehhandler$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+36], edi

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+12]
	cmp	eax, edi
	je	SHORT $LN13@vector@31
	mov	ecx, DWORD PTR __Cat$394647[esp+28]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@YAXPAV?$shared_ptr@Voption_description@program_options@boost@@@boost@@0AAV?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN13@vector@31:

; 560  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ENDP ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$394723 = -4					; size = 1
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ecx
	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN12@vector@32
	mov	ecx, DWORD PTR __Cat$394723[esp+8]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN12@vector@32:

; 560  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	pop	ecx
	ret	0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1options_description@program_options@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1options_description@program_options@boost@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1options_description@program_options@boost@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1options_description@program_options@boost@@QAE@XZ$2
__ehfuncinfo$??1options_description@program_options@boost@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1options_description@program_options@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1options_description@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1options_description@program_options@boost@@QAE@XZ PROC ; boost::program_options::options_description::~options_description, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1options_description@program_options@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	lea	ecx, DWORD PTR [esi+80]
	mov	DWORD PTR __$EHRec$[esp+36], 2
	call	??1?$vector@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voptions_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >::~vector<boost::shared_ptr<boost::program_options::options_description>,std::allocator<boost::shared_ptr<boost::program_options::options_description> > >
	mov	eax, DWORD PTR [esi+68]
	xor	ebx, ebx
	cmp	eax, ebx
	je	SHORT $LN12@options_de
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@options_de:
	mov	eax, DWORD PTR [esi+56]
	push	eax
	mov	DWORD PTR [esi+68], ebx
	mov	DWORD PTR [esi+72], ebx
	mov	DWORD PTR [esi+76], ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	lea	ecx, DWORD PTR [esi+32]
	mov	BYTE PTR __$EHRec$[esp+36], bl
	call	??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN38@options_de
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN38@options_de:
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	mov	BYTE PTR [esi+4], bl
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1options_description@program_options@boost@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??1options_description@program_options@boost@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$vector@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@V?$allocator@V?$shared_ptr@Voption_description@program_options@boost@@@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >::~vector<boost::shared_ptr<boost::program_options::option_description>,std::allocator<boost::shared_ptr<boost::program_options::option_description> > >
__unwindfunclet$??1options_description@program_options@boost@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1?$vector@DV?$allocator@D@std@@@std@@QAE@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
__ehhandler$??1options_description@program_options@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1options_description@program_options@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1options_description@program_options@boost@@QAE@XZ ENDP ; boost::program_options::options_description::~options_description
; Function compile flags: /Ogtpy
;	COMDAT ??1?$shared_ptr@$$CBVvalue_semantic@program_options@boost@@@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$shared_ptr@$$CBVvalue_semantic@program_options@boost@@@boost@@QAE@XZ PROC ; boost::shared_ptr<boost::program_options::value_semantic const >::~shared_ptr<boost::program_options::value_semantic const >, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	test	esi, esi
	je	SHORT $LN10@shared_ptr@4
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN10@shared_ptr@4
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN10@shared_ptr@4
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	pop	esi
	jmp	edx
$LN10@shared_ptr@4:
	pop	esi
	ret	0
??1?$shared_ptr@$$CBVvalue_semantic@program_options@boost@@@boost@@QAE@XZ ENDP ; boost::shared_ptr<boost::program_options::value_semantic const >::~shared_ptr<boost::program_options::value_semantic const >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$value_semantic_codecvt_helper@D@program_options@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$value_semantic_codecvt_helper@D@program_options@boost@@UAEPAXI@Z PROC ; boost::program_options::value_semantic_codecvt_helper<char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7value_semantic@program_options@boost@@6B@
	je	SHORT $LN8@scalar@38
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@38:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$value_semantic_codecvt_helper@D@program_options@boost@@UAEPAXI@Z ENDP ; boost::program_options::value_semantic_codecvt_helper<char>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1bad_function_call@boost@@UAE@XZ
_TEXT	SEGMENT
??1bad_function_call@boost@@UAE@XZ PROC			; boost::bad_function_call::~bad_function_call, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN21@bad_functi
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN21@bad_functi:
	xor	eax, eax
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], eax
	mov	BYTE PTR [esi+16], al
	mov	ecx, esi
	pop	esi
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1bad_function_call@boost@@UAE@XZ ENDP			; boost::bad_function_call::~bad_function_call
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gbad_function_call@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_function_call@boost@@UAEPAXI@Z PROC		; boost::bad_function_call::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN24@scalar@39
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@scalar@39:
	xor	eax, eax
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], eax
	mov	ecx, esi
	mov	BYTE PTR [esi+16], al
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN34@scalar@39
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN34@scalar@39:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_function_call@boost@@UAEPAXI@Z ENDP		; boost::bad_function_call::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1is_classifiedF@detail@algorithm@boost@@QAE@XZ
_TEXT	SEGMENT
__Lock$395320 = -4					; size = 4
??1is_classifiedF@detail@algorithm@boost@@QAE@XZ PROC	; boost::algorithm::detail::is_classifiedF::~is_classifiedF, COMDAT
; _this$ = eax
	push	ecx
	push	edi
	mov	edi, DWORD PTR [eax+4]
	test	edi, edi
	je	SHORT $LN6@is_classif@2
	push	0
	lea	ecx, DWORD PTR __Lock$395320[esp+12]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN8@is_classif@2
	cmp	eax, -1
	jae	SHORT $LN8@is_classif@2
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN8@is_classif@2:
	push	esi
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$395320[esp+12]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN11@is_classif@2
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN11@is_classif@2:
	pop	esi
$LN6@is_classif@2:
	pop	edi
	pop	ecx
	ret	0
??1is_classifiedF@detail@algorithm@boost@@QAE@XZ ENDP	; boost::algorithm::detail::is_classifiedF::~is_classifiedF
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
_TEXT	ENDS
;	COMDAT ??0is_classifiedF@detail@algorithm@boost@@QAE@FABVlocale@std@@@Z
_TEXT	SEGMENT
__Lock$395339 = -4					; size = 4
??0is_classifiedF@detail@algorithm@boost@@QAE@FABVlocale@std@@@Z PROC ; boost::algorithm::detail::is_classifiedF::is_classifiedF, COMDAT
; _this$ = edi
; _Loc$ = ecx

; 40   :                     m_Type(Type), m_Locale(Loc) {}

	push	ecx
	mov	eax, 72					; 00000048H
	push	esi
	mov	WORD PTR [edi], ax
	mov	esi, DWORD PTR [ecx]
	push	0
	lea	ecx, DWORD PTR __Lock$395339[esp+12]
	mov	DWORD PTR [edi+4], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN5@is_classif@3
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN5@is_classif@3:
	lea	ecx, DWORD PTR __Lock$395339[esp+8]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	esi
	pop	ecx
	ret	0
??0is_classifiedF@detail@algorithm@boost@@QAE@FABVlocale@std@@@Z ENDP ; boost::algorithm::detail::is_classifiedF::is_classifiedF
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAHUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
$T431897 = -8						; size = 8
___formal$ = 8						; size = 1
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAHUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,int>, COMDAT
; __Off$ = edi

; 1866 : 	{	// add to _Off distance between random-access iterators

	sub	esp, 12					; 0000000cH

; 1867 : 
; 1868 :  #if _HAS_ITERATOR_DEBUGGING
; 1869 : 	if (_First != _Last)
; 1870 : 		{	// check for null pointers
; 1871 : 		_DEBUG_POINTER(_First);
; 1872 : 		_DEBUG_POINTER(_Last);
; 1873 : 		}
; 1874 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1875 : 
; 1876 : 	_Off += _Last - _First;

	mov	eax, DWORD PTR __Last$[esp+8]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+16]
	mov	DWORD PTR $T431897[esp+16], eax
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN6@Distance2@3
	test	eax, eax
	je	SHORT $LN5@Distance2@3
	cmp	eax, DWORD PTR __First$[esp+12]
	je	SHORT $LN6@Distance2@3
$LN5@Distance2@3:
	call	__invalid_parameter_noinfo
$LN6@Distance2@3:
	sub	esi, DWORD PTR __First$[esp+16]
	add	DWORD PTR [edi], esi

; 1877 : 	}

	pop	esi
	add	esp, 12					; 0000000cH
	ret	0
??$_Distance2@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@YAXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAHUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Equal@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_NPAD0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Tmp$431920 = -12					; size = 8
___formal$ = 8						; size = 1
___formal$ = 12						; size = 1
__First2$ = 16						; size = 8
??$_Equal@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_NPAD0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Equal<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; __First1$ = esi
; __Last1$ = edi

; 3042 : 	{

	sub	esp, 12					; 0000000cH

; 3043 : 	// for range checked iterators, this will make sure there is enough space
; 3044 : 	_InIt2 _Last2 = _First2 + (_Last1 - _First1); (_Last2);

	mov	ecx, DWORD PTR __First2$[esp+12]
	mov	eax, DWORD PTR __First2$[esp+8]
	mov	edx, edi
	sub	edx, esi
	mov	DWORD PTR __Tmp$431920[esp+16], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$431920[esp+16]
	mov	DWORD PTR __Tmp$431920[esp+16], eax
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 3045 : 	return _Equal(_First1, _Last1, _CHECKED_BASE(_First2),
; 3046 : 		forward_iterator_tag(), _Range_checked_iterator_tag());

	mov	eax, esi
	cmp	esi, edi
	je	SHORT $LN14@Equal@10
	mov	ecx, DWORD PTR __First2$[esp+12]
	sub	ecx, esi
	npad	3
$LL16@Equal@10:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx+eax]
	jne	SHORT $LN20@Equal@10
	inc	eax
	cmp	eax, edi
	jne	SHORT $LL16@Equal@10
$LN14@Equal@10:
	mov	al, 1

; 3047 : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN20@Equal@10:

; 3045 : 	return _Equal(_First1, _Last1, _CHECKED_BASE(_First2),
; 3046 : 		forward_iterator_tag(), _Range_checked_iterator_tag());

	xor	al, al

; 3047 : 	}

	add	esp, 12					; 0000000cH
	ret	0
??$_Equal@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_NPAD0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Equal<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAHV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
$T431994 = -8						; size = 8
$T432005 = -8						; size = 8
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
??$distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAHV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1882 : 	{	// return distance between iterators

	sub	esp, 12					; 0000000cH

; 1883 : 	typename iterator_traits<_InIt>::difference_type _Off = 0;
; 1884 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	eax, DWORD PTR __Last$[esp+8]
	mov	ecx, DWORD PTR __First$[esp+8]
	push	esi
	mov	esi, DWORD PTR __First$[esp+16]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+20]
	mov	DWORD PTR $T432005[esp+20], ecx
	mov	DWORD PTR $T431994[esp+20], eax
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN10@distance
	test	eax, eax
	je	SHORT $LN9@distance
	cmp	eax, ecx
	je	SHORT $LN10@distance
$LN9@distance:
	call	__invalid_parameter_noinfo
$LN10@distance:
	mov	eax, edi

; 1885 : 	return (_Off);
; 1886 : 	}

	pop	edi
	sub	eax, esi
	pop	esi
	add	esp, 12					; 0000000cH
	ret	0
??$distance@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAHV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::distance<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$equal@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA_NV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@00@Z
_TEXT	SEGMENT
$T432010 = -4						; size = 1
__First1$ = 8						; size = 8
$T432011 = 16						; size = 1
__Last1$ = 16						; size = 8
__First2$ = 24						; size = 8
??$equal@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA_NV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@00@Z PROC ; std::equal<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 3055 : 	{	// compare [_First1, _Last1) to [First2, ...)

	push	ecx

; 3056 : 	return _Equal(_CHECKED_BASE(_First1), _CHECKED_BASE(_Last1), _First2,
; 3057 : 		_Iter_random(_First1, _First2), _STD _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __First2$[esp+4]
	mov	ecx, DWORD PTR __First2$[esp]
	push	esi
	mov	esi, DWORD PTR __First1$[esp+8]
	push	edi
	mov	edi, DWORD PTR __Last1$[esp+12]
	push	eax
	mov	eax, DWORD PTR $T432011[esp+12]
	push	ecx
	mov	BYTE PTR $T432010[esp+20], 0
	mov	edx, DWORD PTR $T432010[esp+20]
	push	edx
	push	eax
	call	??$_Equal@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_NPAD0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 16					; 00000010H

; 3058 : 	}

	pop	edi
	pop	esi
	pop	ecx
	ret	0
??$equal@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA_NV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@00@Z ENDP ; std::equal<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\distance.hpp
_TEXT	ENDS
;	COMDAT ??$distance@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YAHABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
??$distance@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YAHABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; boost::distance<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _r$ = eax

; 28   :     {

	push	ecx

; 29   :         return std::distance( boost::begin( r ), boost::end( r ) );

	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	push	edi
	mov	edi, DWORD PTR [eax+12]
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN24@distance@2
	test	ecx, ecx
	je	SHORT $LN23@distance@2
	cmp	ecx, edx
	je	SHORT $LN24@distance@2
$LN23@distance@2:
	call	__invalid_parameter_noinfo
$LN24@distance@2:
	mov	eax, edi

; 30   :     }

	pop	edi
	sub	eax, esi
	pop	esi
	pop	ecx
	ret	0
??$distance@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YAHABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; boost::distance<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
_TEXT	ENDS
;	COMDAT ??$equal@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V12@@iterator_range_detail@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0@Z
_TEXT	SEGMENT
$T432569 = -8						; size = 8
$T432400 = -8						; size = 8
$T432570 = -8						; size = 8
$T432550 = 8						; size = 1
$T432551 = 8						; size = 1
_r$ = 8							; size = 4
??$equal@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V12@@iterator_range_detail@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0@Z PROC ; boost::iterator_range_detail::equal<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _l$ = eax

; 81   :         {

	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _r$[esp+8]
	push	ebp
	push	esi
	mov	esi, eax

; 82   :             typedef BOOST_DEDUCED_TYPENAME boost::range_difference<Left>::type sz_type;
; 83   : 
; 84   :             sz_type l_size = boost::distance( l ),

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi]
	mov	ebp, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR [esi+12]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN27@equal
	test	eax, eax
	je	SHORT $LN26@equal
	cmp	eax, ecx
	je	SHORT $LN27@equal
$LN26@equal:
	call	__invalid_parameter_noinfo
$LN27@equal:

; 85   :                     r_size = boost::distance( r );

	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR $T432400[esp+28], eax
	mov	eax, DWORD PTR [ebx+8]
	sub	edi, ebp
	mov	ebp, DWORD PTR [ebx+12]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN58@equal
	test	eax, eax
	je	SHORT $LN57@equal
	cmp	eax, ecx
	je	SHORT $LN58@equal
$LN57@equal:
	call	__invalid_parameter_noinfo
$LN58@equal:
	sub	ebp, DWORD PTR $T432400[esp+28]

; 86   : 
; 87   :             if( l_size != r_size )

	cmp	edi, ebp
	je	SHORT $LN1@equal

; 88   :                 return false;

	xor	al, al

; 92   :         }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	0
$LN1@equal:

; 89   : 
; 90   :             return std::equal( boost::begin(l), boost::end(l), 
; 91   :                                boost::begin(r) );                

	mov	ecx, DWORD PTR [esi+8]
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+4]
	mov	edi, DWORD PTR [esi+12]
	mov	esi, DWORD PTR [esi+4]
	push	eax
	mov	DWORD PTR $T432570[esp+28], ecx
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR $T432569[esp+28], edx
	mov	BYTE PTR $T432550[esp+24], 0
	mov	edx, DWORD PTR $T432550[esp+24]
	mov	eax, DWORD PTR $T432551[esp+24]
	push	ecx
	push	edx
	push	eax
	call	??$_Equal@PADV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_NPAD0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@0@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Equal<char *,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 16					; 00000010H

; 92   :         }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	0
??$equal@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V12@@iterator_range_detail@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0@Z ENDP ; boost::iterator_range_detail::equal<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?8V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
??$?8V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z PROC ; boost::operator==<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _r$ = eax

; 483  :             return iterator_range_detail::equal( l, r );

	push	eax
	mov	eax, DWORD PTR _l$[esp]
	call	??$equal@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V12@@iterator_range_detail@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0@Z ; boost::iterator_range_detail::equal<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 4

; 484  :         }

	ret	0
??$?8V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ENDP ; boost::operator==<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z
_TEXT	SEGMENT
?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal, COMDAT
; _this$ = esi
; _Other$ = eax

; 315  :                 bool bEof=eof();

	cmp	DWORD PTR [esi], 0
	push	edi
	mov	edi, eax
	je	SHORT $LN9@equal@2
	cmp	BYTE PTR [esi+64], 0
	jne	SHORT $LN9@equal@2
	xor	dl, dl
	jmp	SHORT $LN10@equal@2
$LN9@equal@2:
	mov	dl, 1
$LN10@equal@2:

; 316  :                 bool bOtherEof=Other.eof();

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN17@equal@2
	cmp	BYTE PTR [edi+64], 0
	jne	SHORT $LN17@equal@2
	xor	cl, cl
	jmp	SHORT $LN18@equal@2
$LN17@equal@2:
	mov	cl, 1
$LN18@equal@2:

; 317  : 
; 318  :                 return bEof || bOtherEof ? bEof==bOtherEof :
; 319  :                     (
; 320  :                         m_Match==Other.m_Match &&
; 321  :                         m_Next==Other.m_Next &&
; 322  :                         m_End==Other.m_End
; 323  :                     );

	test	dl, dl
	jne	SHORT $LN3@equal@2
	test	cl, cl
	jne	SHORT $LN3@equal@2
	lea	eax, DWORD PTR [edi+32]
	push	eax
	lea	eax, DWORD PTR [esi+32]
	call	??$equal@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V12@@iterator_range_detail@boost@@YA_NABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0@Z ; boost::iterator_range_detail::equal<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 4
	test	al, al
	je	SHORT $LN4@equal@2
	lea	ecx, DWORD PTR [edi+48]
	push	ecx
	lea	ecx, DWORD PTR [esi+48]
	call	??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==
	test	al, al
	je	SHORT $LN4@equal@2
	add	edi, 56					; 00000038H
	push	edi
	lea	ecx, DWORD PTR [esi+56]
	call	??8?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator==
	test	al, al
	je	SHORT $LN4@equal@2
	mov	eax, 1

; 324  :             }

	pop	edi
	ret	0
$LN4@equal@2:

; 317  : 
; 318  :                 return bEof || bOtherEof ? bEof==bOtherEof :
; 319  :                     (
; 320  :                         m_Match==Other.m_Match &&
; 321  :                         m_Next==Other.m_Next &&
; 322  :                         m_End==Other.m_End
; 323  :                     );

	xor	eax, eax

; 324  :             }

	pop	edi
	ret	0
$LN3@equal@2:

; 317  : 
; 318  :                 return bEof || bOtherEof ? bEof==bOtherEof :
; 319  :                     (
; 320  :                         m_Match==Other.m_Match &&
; 321  :                         m_Next==Other.m_Next &&
; 322  :                         m_End==Other.m_End
; 323  :                     );

	xor	eax, eax
	cmp	dl, cl
	sete	al

; 324  :             }

	pop	edi
	ret	0
?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
_TEXT	ENDS
;	COMDAT ??$equal@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@iterator_core_access@boost@@CA_NABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@0U?$bool_@$00@mpl@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$equal@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@iterator_core_access@boost@@CA_NABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@0U?$bool_@$00@mpl@1@@Z PROC ; boost::iterator_core_access::equal<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _f1$ = esi
; _f2$ = eax

; 534  :           return f1.equal(f2);

	jmp	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
??$equal@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@V123@@iterator_core_access@boost@@CA_NABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@0U?$bool_@$00@mpl@1@@Z ENDP ; boost::iterator_core_access::equal<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?8V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@Uforward_traversal_tag@2@ABV32@HV012@$$CBV32@U42@ABV32@H@boost@@YA_NABV?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@0@0@Z
_TEXT	SEGMENT
??$?8V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@Uforward_traversal_tag@2@ABV32@HV012@$$CBV32@U42@ABV32@H@boost@@YA_NABV?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@0@0@Z PROC ; boost::operator==<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>, COMDAT
; _lhs$ = esi
; _rhs$ = eax

; 836  :   BOOST_ITERATOR_FACADE_RELATION(==, return, equal)

	push	ecx
	call	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
	pop	ecx
	ret	0
??$?8V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@Uforward_traversal_tag@2@ABV32@HV012@$$CBV32@U42@ABV32@H@boost@@YA_NABV?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@0@0@Z ENDP ; boost::operator==<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx

; 1695 : 		if (_Mysize <= _Newcap && _Myres != _Newcap)

	mov	eax, DWORD PTR __Newcap$[esp-4]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, DWORD PTR [esi+20]
	cmp	edi, eax
	ja	SHORT $LN11@reserve
	cmp	DWORD PTR [esi+24], eax
	je	SHORT $LN11@reserve

; 1696 : 			{	// change reservation
; 1697 : 			size_type _Size = _Mysize;
; 1698 : 			if (_Grow(_Newcap, true))

	push	1
	push	eax
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	test	al, al
	je	SHORT $LN11@reserve

; 1699 : 				_Eos(_Size);

	cmp	DWORD PTR [esi+24], 16			; 00000010H
	mov	DWORD PTR [esi+20], edi
	jb	SHORT $LN9@reserve
	mov	esi, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+edi], 0
	pop	edi
	pop	esi

; 1700 : 			}
; 1701 : 		}

	ret	4

; 1699 : 				_Eos(_Size);

$LN9@reserve:
	add	esi, 4
	mov	BYTE PTR [esi+edi], 0
$LN11@reserve:
	pop	edi
	pop	esi

; 1700 : 			}
; 1701 : 		}

	ret	4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_adaptor.hpp
_TEXT	ENDS
;	COMDAT ??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@ABE_NABV01@@Z
_TEXT	SEGMENT
??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@ABE_NABV01@@Z PROC ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::equal<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>, COMDAT
; _this$ = esi
; _x$ = eax

; 317  :       bool equal(iterator_adaptor<OtherDerived, OtherIterator, V, C, R, D> const& x) const

	push	ecx

; 318  :       {
; 319  :         // Maybe readd with same_distance
; 320  :         //           BOOST_STATIC_ASSERT(
; 321  :         //               (detail::same_category_and_difference<Derived,OtherDerived>::value)
; 322  :         //               );
; 323  :           return m_iterator == x.base();

	call	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
	pop	ecx

; 324  :       }

	ret	0
??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@ABE_NABV01@@Z ENDP ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::equal<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>
_TEXT	ENDS
PUBLIC	_functor$GSCopy$
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z$1
__ehfuncinfo$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	ENDS
;	COMDAT ??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z
_TEXT	SEGMENT
_functor$GSCopy$ = -20					; size = 4
$T432684 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_f$ = 8							; size = 16
___formal$ = 24						; size = 1
??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z PROC ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _functor$ = esi

; 563  :         void 

	push	-1
	push	__ehhandler$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _functor$GSCopy$[esp+24], esi
	mov	DWORD PTR __$EHRec$[esp+32], 0

; 564  :         assign_functor(FunctionObj f, function_buffer& functor, mpl::true_)
; 565  :         {
; 566  :           new ((void*)&functor.data) FunctionObj(f);

	mov	DWORD PTR $T432684[esp+24], esi
	mov	BYTE PTR __$EHRec$[esp+32], 1
	test	esi, esi
	je	SHORT $LN3@assign_fun
	mov	eax, DWORD PTR _f$[esp+28]
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN13@assign_fun
	mov	eax, esi
	lea	ecx, DWORD PTR _f$[esp+20]
	jmp	SHORT $LN12@assign_fun
$LN13@assign_fun:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	ecx, DWORD PTR _f$[esp+24]
	add	esp, 4
	mov	DWORD PTR [esi], eax
$LN12@assign_fun:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _f$[esp+44]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+12], eax
$LN3@assign_fun:

; 567  :         }

	cmp	DWORD PTR _f$[esp+28], 8
	jbe	SHORT $LN20@assign_fun
	mov	eax, DWORD PTR _f$[esp+20]
	test	eax, eax
	je	SHORT $LN20@assign_fun
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN20@assign_fun:
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z$0:
	lea	eax, DWORD PTR _f$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__unwindfunclet$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z$1:
	mov	eax, DWORD PTR _functor$GSCopy$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T432684[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z ENDP ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
;	COMDAT ??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@iterator_core_access@boost@@CA_NABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@0U?$bool_@$00@mpl@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@iterator_core_access@boost@@CA_NABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@0U?$bool_@$00@mpl@1@@Z PROC ; boost::iterator_core_access::equal<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT
; _f1$ = esi
; _f2$ = eax

; 534  :           return f1.equal(f2);

	jmp	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
??$equal@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V12@@iterator_core_access@boost@@CA_NABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@0U?$bool_@$00@mpl@1@@Z ENDP ; boost::iterator_core_access::equal<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z$0
__ehfuncinfo$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	ENDS
;	COMDAT ??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z
_TEXT	SEGMENT
$T432781 = -16						; size = 1
$T432782 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_f$ = 8							; size = 16
___formal$ = 24						; size = 1
??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z PROC ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _functor$ = ecx

; 598  :         bool 

	push	-1
	push	__ehhandler$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx

; 599  :         assign_to(FunctionObj f, function_buffer& functor, function_obj_tag)
; 600  :         {
; 601  :           if (!boost::detail::function::has_empty_target(boost::addressof(f))) {

	lea	eax, DWORD PTR _f$[esp+24]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+40], 0
	call	?has_empty_target@function@detail@boost@@YA_NZZ ; boost::detail::function::has_empty_target
	add	esp, 4
	test	al, al
	jne	$LN2@assign_to

; 602  :             assign_functor(f, functor, 
; 603  :                            mpl::bool_<(function_allows_small_object_optimization<FunctionObj>::value)>());

	mov	edx, DWORD PTR _f$[esp+32]
	mov	BYTE PTR $T432781[esp+28], al
	mov	ecx, DWORD PTR $T432781[esp+28]
	push	ecx
	sub	esp, 16					; 00000010H
	mov	edi, esp
	mov	eax, edx
	mov	DWORD PTR $T432782[esp+48], esp
	mov	DWORD PTR [edi+8], edx
	mov	DWORD PTR [edi], 0
	cmp	eax, 8
	ja	SHORT $LN19@assign_to
	mov	eax, edi
	lea	ecx, DWORD PTR _f$[esp+44]
	jmp	SHORT $LN18@assign_to
$LN19@assign_to:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [edi], eax
	mov	ecx, DWORD PTR _f$[esp+48]
	add	esp, 4
$LN18@assign_to:
	mov	edx, DWORD PTR [edi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _f$[esp+68]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+12], eax
	call	??$assign_functor@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@U?$bool_@$00@mpl@3@@Z ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >

; 604  :             return true;

	cmp	DWORD PTR _f$[esp+32], 8
	jbe	SHORT $LN26@assign_to
	mov	eax, DWORD PTR _f$[esp+24]
	test	eax, eax
	je	SHORT $LN26@assign_to
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN26@assign_to:
	mov	al, 1

; 607  :           }
; 608  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	20					; 00000014H
$LN2@assign_to:

; 605  :           } else {
; 606  :             return false;

	cmp	DWORD PTR _f$[esp+32], 8
	jbe	SHORT $LN33@assign_to
	mov	eax, DWORD PTR _f$[esp+24]
	test	eax, eax
	je	SHORT $LN33@assign_to
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN33@assign_to:
	xor	al, al

; 607  :           }
; 608  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z$0:
	lea	eax, DWORD PTR _f$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z ENDP ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z
_TEXT	SEGMENT
__Newsize$ = -4						; size = 4
tv576 = 8						; size = 4
__Nm$ = 8						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
tv537 = 16						; size = 4
tv522 = 16						; size = 4
tv514 = 16						; size = 4
tv477 = 16						; size = 4
tv447 = 16						; size = 4
tv424 = 16						; size = 4
__Right$ = 16						; size = 4
tv432 = 20						; size = 4
__Roff$ = 20						; size = 4
tv306 = 24						; size = 4
__Count$ = 24						; size = 4
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT
; _this$ = ecx

; 1303 : 		{	// replace [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)

	push	ecx
	push	ebx

; 1304 : 		if (_Mysize < _Off || _Right.size() < _Roff)

	mov	ebx, DWORD PTR __Right$[esp+4]
	push	ebp
	push	esi
	mov	esi, DWORD PTR __Off$[esp+12]
	mov	ebp, ecx
	push	edi
	mov	edi, DWORD PTR __Roff$[esp+16]
	cmp	DWORD PTR [ebp+20], esi
	jb	SHORT $LN13@replace
	cmp	DWORD PTR [ebx+20], edi
	jae	SHORT $LN14@replace
$LN13@replace:

; 1305 : 			_String_base::_Xran();	// _Off or _Roff off end

	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN14@replace:

; 1306 : 		if (_Mysize - _Off < _N0)

	mov	ecx, DWORD PTR [ebp+20]
	mov	edx, DWORD PTR __N0$[esp+16]
	mov	eax, ecx
	sub	eax, esi
	cmp	eax, edx
	jae	SHORT $LN12@replace

; 1307 : 			_N0 = _Mysize - _Off;	// trim _N0 to size

	mov	edx, eax
	mov	DWORD PTR __N0$[esp+16], edx
$LN12@replace:

; 1308 : 		size_type _Num = _Right.size() - _Roff;

	mov	eax, DWORD PTR [ebx+20]
	sub	eax, edi

; 1309 : 		if (_Num < _Count)

	mov	edi, DWORD PTR __Count$[esp+16]
	cmp	eax, edi

; 1310 : 			_Count = _Num;	// trim _Count to size

	cmovb	edi, eax

; 1311 : 		if (npos - _Count <= _Mysize - _N0)

	or	eax, -1
	sub	ecx, edx
	sub	eax, edi
	cmp	eax, ecx
	ja	SHORT $LN10@replace

; 1312 : 			_String_base::_Xlen();	// result too long

	call	?_Xlen@_String_base@std@@SAXXZ		; std::_String_base::_Xlen
$LN10@replace:

; 1313 : 
; 1314 : 		size_type _Nm = _Mysize - _N0 - _Off;	// length of preserved tail

	mov	eax, DWORD PTR [ebp+20]
	mov	edx, DWORD PTR __N0$[esp+16]

; 1315 : 		size_type _Newsize = _Mysize + _Count - _N0;

	mov	ebx, eax
	mov	ecx, eax
	sub	ebx, edx
	sub	ecx, esi
	add	ebx, edi
	sub	ecx, edx
	mov	DWORD PTR __Nm$[esp+16], ecx
	mov	DWORD PTR __Newsize$[esp+20], ebx

; 1316 : 		if (_Mysize < _Newsize)

	cmp	eax, ebx
	jae	SHORT $LN69@replace

; 1317 : 			_Grow(_Newsize);

	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN26@replace
	call	?_Xlen@_String_base@std@@SAXXZ		; std::_String_base::_Xlen
	mov	edx, DWORD PTR __N0$[esp+16]
$LN26@replace:
	mov	eax, DWORD PTR [ebp+24]
	cmp	eax, ebx
	jae	SHORT $LN25@replace
	mov	ecx, DWORD PTR [ebp+20]
	push	ecx
	push	ebx
	mov	ecx, ebp
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __N0$[esp+16]
	jmp	SHORT $LN69@replace
$LN25@replace:
	test	ebx, ebx
	jne	SHORT $LN69@replace
	mov	DWORD PTR [ebp+20], ebx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN67@replace
	mov	eax, DWORD PTR [ebp+4]
	jmp	SHORT $LN68@replace
$LN67@replace:
	lea	eax, DWORD PTR [ebp+4]
$LN68@replace:
	mov	BYTE PTR [eax], 0
$LN69@replace:

; 1318 : 
; 1319 : 		if (this != &_Right)
; 1320 : 			{	// no overlap, just move down and copy in new stuff
; 1321 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off + _Count, _Myres - _Off - _Count,
; 1322 : 				_Myptr() + _Off + _N0, _Nm);	// empty hole

	lea	ebx, DWORD PTR [ebp+4]
	cmp	ebp, DWORD PTR __Right$[esp+16]
	je	SHORT $LN8@replace
	mov	eax, DWORD PTR [ebp+24]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN73@replace
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR tv306[esp+16], edx
	jmp	SHORT $LN74@replace
$LN73@replace:
	mov	DWORD PTR tv306[esp+16], ebx
$LN74@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN77@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN78@replace
$LN77@replace:
	mov	ecx, ebx
$LN78@replace:
	mov	edx, DWORD PTR __Nm$[esp+16]
	push	edx
	mov	edx, DWORD PTR tv306[esp+20]
	add	edx, esi
	add	edx, DWORD PTR __N0$[esp+20]
	sub	eax, esi
	push	edx
	sub	eax, edi
	add	ecx, esi
	push	eax
	add	ecx, edi
	push	ecx
	call	_memmove_s

; 1323 : 			_Traits_helper::copy_s<_Traits>(_Myptr() + _Off, _Myres - _Off,
; 1324 : 				_Right._Myptr() + _Roff, _Count);	// fill hole

	mov	eax, DWORD PTR __Right$[esp+32]
	add	esp, 16					; 00000010H
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN89@replace
	mov	ecx, eax
	mov	edx, DWORD PTR [ecx+4]
	jmp	SHORT $LN90@replace
$LN89@replace:
	mov	edx, eax
	add	edx, 4
$LN90@replace:
	mov	eax, DWORD PTR [ebp+24]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN93@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN94@replace
$LN93@replace:
	mov	ecx, ebx
$LN94@replace:
	push	edi
	mov	edi, DWORD PTR __Roff$[esp+20]
	add	edx, edi
	push	edx
	sub	eax, esi
	push	eax
	add	ecx, esi
	push	ecx
	call	_memcpy_s
	jmp	$LN255@replace
$LN8@replace:

; 1325 : 			}
; 1326 : 		else if (_Count <= _N0)

	cmp	edi, edx
	ja	SHORT $LN6@replace

; 1327 : 			{	// hole doesn't get larger, just copy in substring
; 1328 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off,
; 1329 : 				_Myptr() + _Roff, _Count);	// fill hole

	mov	eax, DWORD PTR [ebp+24]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN105@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN106@replace
$LN105@replace:
	mov	ecx, ebx
$LN106@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN109@replace
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR tv424[esp+16], edx
	jmp	SHORT $LN110@replace
$LN109@replace:
	mov	DWORD PTR tv424[esp+16], ebx
$LN110@replace:
	mov	edx, DWORD PTR __Roff$[esp+16]
	push	edi
	add	ecx, edx
	sub	eax, esi
	push	ecx
	push	eax
	mov	eax, DWORD PTR tv424[esp+28]
	add	eax, esi
	push	eax
	call	_memmove_s

; 1330 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off + _Count, _Myres - _Off - _Count,
; 1331 : 				_Myptr() + _Off + _N0, _Nm);	// move tail down

	mov	eax, DWORD PTR [ebp+24]
	add	esp, 16					; 00000010H
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN121@replace
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR tv432[esp+16], ecx
	jmp	SHORT $LN122@replace
$LN121@replace:
	mov	DWORD PTR tv432[esp+16], ebx
$LN122@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN125@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN126@replace
$LN125@replace:
	mov	ecx, ebx
$LN126@replace:
	mov	edx, DWORD PTR __Nm$[esp+16]
	push	edx
	mov	edx, DWORD PTR tv432[esp+20]
	add	edx, esi
	add	edx, DWORD PTR __N0$[esp+20]
	sub	eax, esi
	push	edx
	sub	eax, edi
	add	ecx, esi
	push	eax
	add	ecx, edi
	push	ecx
	jmp	$LN256@replace
$LN6@replace:

; 1332 : 			}
; 1333 : 		else if (_Roff <= _Off)

	mov	eax, DWORD PTR __Roff$[esp+16]
	cmp	eax, esi
	ja	SHORT $LN4@replace

; 1334 : 			{	// hole gets larger, substring begins before hole
; 1335 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off + _Count, _Myres - _Off - _Count,
; 1336 : 				_Myptr() + _Off + _N0, _Nm);	// move tail down

	mov	eax, DWORD PTR [ebp+24]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN137@replace
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR tv447[esp+16], ecx
	jmp	SHORT $LN138@replace
$LN137@replace:
	mov	DWORD PTR tv447[esp+16], ebx
$LN138@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN141@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN142@replace
$LN141@replace:
	mov	ecx, ebx
$LN142@replace:
	mov	edx, DWORD PTR __Nm$[esp+16]
	push	edx
	mov	edx, DWORD PTR tv447[esp+20]
	add	edx, esi
	add	edx, DWORD PTR __N0$[esp+20]
	sub	eax, esi
	push	edx
	sub	eax, edi
	add	ecx, esi
	push	eax
	add	ecx, edi
	push	ecx
	call	_memmove_s

; 1337 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off,
; 1338 : 				_Myptr() + _Roff, _Count);	// fill hole

	mov	eax, DWORD PTR [ebp+24]
	add	esp, 16					; 00000010H
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN153@replace
	mov	edx, DWORD PTR [ebx]
	jmp	SHORT $LN154@replace
$LN153@replace:
	mov	edx, ebx
$LN154@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN157@replace
	mov	ecx, DWORD PTR [ebx]
	push	edi
	mov	edi, DWORD PTR __Roff$[esp+20]
	add	edx, edi
	push	edx
	sub	eax, esi
	push	eax
	add	ecx, esi
	push	ecx
	jmp	$LN256@replace
$LN157@replace:
	push	edi
	mov	edi, DWORD PTR __Roff$[esp+20]
	add	edx, edi
	push	edx
	sub	eax, esi
	mov	ecx, ebx
	push	eax
	add	ecx, esi
	push	ecx
	jmp	$LN256@replace
$LN4@replace:

; 1339 : 			}
; 1340 : 		else if (_Off + _N0 <= _Roff)

	lea	ecx, DWORD PTR [esi+edx]
	cmp	ecx, eax

; 1341 : 			{	// hole gets larger, substring begins after hole
; 1342 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off + _Count, _Myres - _Off - _Count,
; 1343 : 				_Myptr() + _Off + _N0, _Nm);	// move tail down

	mov	eax, DWORD PTR [ebp+24]
	ja	SHORT $LN2@replace
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN169@replace
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR tv477[esp+16], edx
	jmp	SHORT $LN170@replace
$LN169@replace:
	mov	DWORD PTR tv477[esp+16], ebx
$LN170@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN173@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN174@replace
$LN173@replace:
	mov	ecx, ebx
$LN174@replace:
	mov	edx, DWORD PTR __Nm$[esp+16]
	push	edx
	mov	edx, DWORD PTR tv477[esp+20]
	add	edx, esi
	add	edx, DWORD PTR __N0$[esp+20]
	sub	eax, esi
	push	edx
	sub	eax, edi
	add	ecx, esi
	push	eax
	add	ecx, edi
	push	ecx
	call	_memmove_s

; 1344 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off,
; 1345 : 				_Myptr() + (_Roff + _Count - _N0), _Count);	// fill hole

	mov	eax, DWORD PTR [ebp+24]
	add	esp, 16					; 00000010H
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN185@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN186@replace
$LN185@replace:
	mov	ecx, ebx
$LN186@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN189@replace
	sub	ecx, DWORD PTR __N0$[esp+16]
	mov	edx, DWORD PTR [ebx]
	add	ecx, DWORD PTR __Roff$[esp+16]
	push	edi
	add	ecx, edi
	sub	eax, esi
	push	ecx
	add	edx, esi

; 1346 : 			}
; 1347 : 		else

	jmp	$LN257@replace

; 1344 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off,
; 1345 : 				_Myptr() + (_Roff + _Count - _N0), _Count);	// fill hole

$LN189@replace:
	sub	ecx, DWORD PTR __N0$[esp+16]
	mov	edx, ebx
	add	ecx, DWORD PTR __Roff$[esp+16]
	push	edi
	add	ecx, edi
	sub	eax, esi
	push	ecx
	add	edx, esi

; 1346 : 			}
; 1347 : 		else

	jmp	$LN257@replace
$LN2@replace:

; 1348 : 			{	// hole gets larger, substring begins in hole
; 1349 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off,
; 1350 : 				_Myptr() + _Roff, _N0);	// fill old hole

	cmp	eax, 16					; 00000010H
	jb	SHORT $LN201@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN202@replace
$LN201@replace:
	mov	ecx, ebx
$LN202@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN205@replace
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR tv514[esp+16], edx
	jmp	SHORT $LN206@replace
$LN205@replace:
	mov	DWORD PTR tv514[esp+16], ebx
$LN206@replace:
	mov	edx, DWORD PTR __N0$[esp+16]
	push	edx
	mov	edx, DWORD PTR __Roff$[esp+20]
	add	ecx, edx
	sub	eax, esi
	push	ecx
	push	eax
	mov	eax, DWORD PTR tv514[esp+28]
	add	eax, esi
	push	eax
	call	_memmove_s

; 1351 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off + _Count, _Myres - _Off - _Count,
; 1352 : 				_Myptr() + _Off + _N0, _Nm);	// move tail down

	mov	eax, DWORD PTR [ebp+24]
	add	esp, 16					; 00000010H
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN217@replace
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR tv522[esp+16], ecx
	jmp	SHORT $LN218@replace
$LN217@replace:
	mov	DWORD PTR tv522[esp+16], ebx
$LN218@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN221@replace
	mov	ecx, DWORD PTR [ebx]
	jmp	SHORT $LN222@replace
$LN221@replace:
	mov	ecx, ebx
$LN222@replace:
	mov	edx, DWORD PTR __Nm$[esp+16]
	push	edx
	mov	edx, DWORD PTR tv522[esp+20]
	add	edx, esi
	add	edx, DWORD PTR __N0$[esp+20]
	sub	eax, esi
	push	edx
	sub	eax, edi
	add	ecx, esi
	push	eax
	add	ecx, edi
	push	ecx
	call	_memmove_s

; 1353 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off + _N0, _Myres - _Off - _N0, _Myptr() + _Roff + _Count,
; 1354 : 				_Count - _N0);	// fill rest of new hole

	mov	eax, DWORD PTR [ebp+24]
	add	esp, 16					; 00000010H
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN233@replace
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR tv537[esp+16], ecx
	jmp	SHORT $LN234@replace
$LN233@replace:
	mov	DWORD PTR tv537[esp+16], ebx
$LN234@replace:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN237@replace
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR tv576[esp+16], edx
	jmp	SHORT $LN238@replace
$LN237@replace:
	mov	DWORD PTR tv576[esp+16], ebx
$LN238@replace:
	mov	edx, DWORD PTR __Roff$[esp+16]
	mov	ecx, edi
	sub	ecx, DWORD PTR __N0$[esp+16]
	sub	eax, esi
	push	ecx
	mov	ecx, DWORD PTR tv537[esp+20]
	add	ecx, edx
	mov	edx, DWORD PTR tv576[esp+20]
	add	ecx, edi
	push	ecx
	mov	ecx, DWORD PTR __N0$[esp+24]
	add	edx, esi
	sub	eax, ecx
	add	edx, ecx
$LN257@replace:
	push	eax
	push	edx
$LN256@replace:
	call	_memmove_s
$LN255@replace:

; 1355 : 			}
; 1356 : 
; 1357 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[esp+36]
	add	esp, 16					; 00000010H
	cmp	DWORD PTR [ebp+24], 16			; 00000010H
	mov	DWORD PTR [ebp+20], eax
	jb	SHORT $LN251@replace
	mov	ebx, DWORD PTR [ebx]
$LN251@replace:
	pop	edi
	mov	BYTE PTR [ebx+eax], 0
	pop	esi

; 1358 : 		return (*this);

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 1359 : 		}

	pop	ecx
	ret	20					; 00000014H
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Right$ = 16						; size = 4
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT
; _this$ = ecx

; 1298 : 		return (replace(_Off, _N0, _Right, 0, npos));

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR __N0$[esp-4]
	push	-1
	push	0
	push	eax
	mov	eax, DWORD PTR __Off$[esp+8]
	push	edx
	push	eax
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace

; 1299 : 		}

	ret	12					; 0000000cH
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0ABV12@@Z
_TEXT	SEGMENT
$T433614 = -16						; size = 4
_this$ = -12						; size = 4
$T433705 = -8						; size = 8
$T433672 = -8						; size = 8
$T433671 = -8						; size = 8
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Right$ = 24						; size = 4
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT
; _this$ = ecx

; 1429 : 		{	// replace [_First, _Last) with _Right

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi

; 1430 : 		return (replace(
; 1431 : 			_Pdif(_First, begin()), _Pdif(_Last, _First), _Right));

	mov	edi, DWORD PTR [ecx+24]
	mov	DWORD PTR _this$[esp+32], ecx
	lea	eax, DWORD PTR [ecx+4]
	cmp	edi, 16					; 00000010H
	jb	SHORT $LN7@replace@2
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR $T433614[esp+32], esi
	jmp	SHORT $LN8@replace@2
$LN7@replace@2:
	mov	DWORD PTR $T433614[esp+32], eax
	mov	esi, eax
$LN8@replace@2:
	test	esi, esi
	je	SHORT $LN11@replace@2
	cmp	edi, 16					; 00000010H
	jb	SHORT $LN21@replace@2
	mov	edx, DWORD PTR [eax]
	jmp	SHORT $LN22@replace@2
$LN21@replace@2:
	mov	edx, eax
$LN22@replace@2:
	cmp	edx, esi
	ja	SHORT $LN11@replace@2
	cmp	edi, 16					; 00000010H
	jb	SHORT $LN25@replace@2
	mov	eax, DWORD PTR [eax]
$LN25@replace@2:
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, eax
	cmp	esi, ecx
	jbe	SHORT $LN12@replace@2
$LN11@replace@2:
	call	__invalid_parameter_noinfo
$LN12@replace@2:
	mov	eax, DWORD PTR __Last$[ebp+4]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edi, DWORD PTR __First$[ebp+4]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T433672[esp+32], ecx
	mov	ebx, edi
	mov	DWORD PTR $T433671[esp+32], edx
	mov	esi, eax
	test	eax, eax
	je	SHORT $LN30@replace@2
$LN29@replace@2:
	cmp	edx, -4					; fffffffcH
	je	SHORT $LN32@replace@2
	test	edx, edx
	je	SHORT $LN31@replace@2
	cmp	edx, ecx
	je	SHORT $LN32@replace@2
$LN31@replace@2:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __First$[ebp+4]
	mov	ecx, DWORD PTR __First$[ebp]
$LN32@replace@2:
	sub	esi, ebx
$LN30@replace@2:
	mov	DWORD PTR $T433705[esp+32], ecx
	test	edi, edi
	je	SHORT $LN43@replace@2
$LN42@replace@2:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN45@replace@2
	test	ecx, ecx
	je	SHORT $LN44@replace@2
	cmp	ecx, DWORD PTR _this$[esp+32]
	je	SHORT $LN45@replace@2
$LN44@replace@2:
	call	__invalid_parameter_noinfo
$LN45@replace@2:
	sub	edi, DWORD PTR $T433614[esp+32]
$LN43@replace@2:
	mov	edx, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR _this$[esp+32]
	push	-1
	push	0
	push	edx
	push	esi
	push	edi
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace

; 1432 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
_TEXT	ENDS
;	COMDAT ??$?9V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@1@V23@HV01@V23@U41@V23@H@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@0@0@Z
_TEXT	SEGMENT
??$?9V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@1@V23@HV01@V23@U41@V23@H@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@0@0@Z PROC ; boost::operator!=<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>, COMDAT
; _lhs$ = esi
; _rhs$ = eax

; 837  :   BOOST_ITERATOR_FACADE_RELATION(!=, return !, equal)

	push	ecx
	call	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
	xor	ecx, ecx
	test	al, al
	sete	cl
	mov	al, cl
	pop	ecx
	ret	0
??$?9V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@1@V23@HV01@V23@U41@V23@H@boost@@YA_NABV?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@0@0@Z ENDP ; boost::operator!=<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z$0
__ehfuncinfo$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	ENDS
;	COMDAT ??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z
_TEXT	SEGMENT
$T433762 = -16						; size = 1
$T433763 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_f$ = 8							; size = 16
??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z PROC ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _functor$ = edi

; 489  :         bool assign_to(F f, function_buffer& functor)

	push	-1
	push	__ehhandler$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[esp+36], 0

; 490  :         {
; 491  :           typedef typename get_function_tag<F>::type tag;
; 492  :           return assign_to(f, functor, tag());

	mov	ecx, DWORD PTR _f$[esp+32]
	mov	BYTE PTR $T433762[esp+28], 0
	mov	eax, DWORD PTR $T433762[esp+28]
	push	eax
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	eax, ecx
	mov	DWORD PTR $T433763[esp+48], esp
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN9@assign_to@2
	mov	eax, esi
	lea	ecx, DWORD PTR _f$[esp+44]
	jmp	SHORT $LN8@assign_to@2
$LN9@assign_to@2:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _f$[esp+48]
	add	esp, 4
$LN8@assign_to@2:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _f$[esp+68]
	add	esp, 12					; 0000000cH
	mov	ecx, edi
	mov	DWORD PTR [esi+12], eax
	call	??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@AAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@Ufunction_obj_tag@123@@Z ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
	cmp	DWORD PTR _f$[esp+32], 8
	mov	bl, al
	jbe	SHORT $LN22@assign_to@2
	mov	eax, DWORD PTR _f$[esp+24]
	test	eax, eax
	je	SHORT $LN22@assign_to@2
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN22@assign_to@2:
	mov	al, bl

; 493  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z$0:
	lea	eax, DWORD PTR _f$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z ENDP ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z$0
__ehfuncinfo$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_base.hpp
xdata$x	ENDS
;	COMDAT ?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_out_buffer$ = 8					; size = 4
$T433828 = 12						; size = 4
_op$ = 12						; size = 4
?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z PROC ; boost::detail::function::functor_manager_common<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage_small, COMDAT
; _in_buffer$ = ecx

; 312  :         {

	push	-1
	push	__ehhandler$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _op$[esp+24]
	mov	esi, DWORD PTR _out_buffer$[esp+24]
	mov	edi, ecx

; 313  :           if (op == clone_functor_tag || op == move_functor_tag) {

	test	ebp, ebp
	je	SHORT $LN9@manage_sma
	cmp	ebp, 1
	je	SHORT $LN9@manage_sma

; 320  :             }
; 321  :           } else if (op == destroy_functor_tag) {

	cmp	ebp, 2
	jne	SHORT $LN6@manage_sma

; 322  :             // Some compilers (Borland, vc6, ...) are unhappy with ~functor_type.
; 323  :             reinterpret_cast<functor_type*>(&out_buffer.data)->~Functor();

	cmp	DWORD PTR [esi+8], 8
	jbe	$LN32@manage_sma
	mov	esi, DWORD PTR [esi]
	test	esi, esi
	je	$LN32@manage_sma
	push	esi
	jmp	$LN49@manage_sma
$LN6@manage_sma:

; 324  :           } else if (op == check_functor_type_tag) {

	cmp	ebp, 3
	jne	SHORT $LN4@manage_sma

; 325  :             const BOOST_FUNCTION_STD_NS::type_info& check_type 
; 326  :               = *out_buffer.type.type;

	mov	ecx, DWORD PTR [esi]

; 327  :             if (BOOST_FUNCTION_COMPARE_TYPE_ID(check_type, typeid(Functor)))

	push	OFFSET ??_R0?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@8
	call	??8type_info@@QBE_NABV0@@Z		; type_info::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	and	eax, edi
	mov	DWORD PTR [esi], eax

; 335  :           }
; 336  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	add	esp, 12					; 0000000cH
	ret	0
$LN4@manage_sma:

; 328  :               out_buffer.obj_ptr = &in_buffer.data;
; 329  :             else
; 330  :               out_buffer.obj_ptr = 0;
; 331  :           } else /* op == get_functor_type_tag */ {
; 332  :             out_buffer.type.type = &typeid(Functor);

	mov	DWORD PTR [esi], OFFSET ??_R0?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@8

; 333  :             out_buffer.type.const_qualified = false;

	mov	BYTE PTR [esi+4], 0

; 334  :             out_buffer.type.volatile_qualified = false;            

	mov	BYTE PTR [esi+5], 0

; 335  :           }
; 336  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	add	esp, 12					; 0000000cH
	ret	0
$LN9@manage_sma:

; 314  :             const functor_type* in_functor = 
; 315  :               reinterpret_cast<const functor_type*>(&in_buffer.data);
; 316  :             new ((void*)&out_buffer.data) functor_type(*in_functor);

	mov	DWORD PTR $T433828[esp+24], esi
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	esi, esi
	je	SHORT $LN13@manage_sma
	mov	ecx, DWORD PTR [edi+8]
	mov	eax, ecx
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN22@manage_sma
	mov	eax, esi
	mov	ecx, edi
	jmp	SHORT $LN21@manage_sma
$LN22@manage_sma:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi]
	add	esp, 4
$LN21@manage_sma:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR [edi+12]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+12], eax
$LN13@manage_sma:

; 317  : 
; 318  :             if (op == move_functor_tag) {

	cmp	ebp, 1
	jne	SHORT $LN32@manage_sma

; 319  :               reinterpret_cast<functor_type*>(&in_buffer.data)->~Functor();

	cmp	DWORD PTR [edi+8], 8
	jbe	SHORT $LN32@manage_sma
	mov	edi, DWORD PTR [edi]
	test	edi, edi
	je	SHORT $LN32@manage_sma
	push	edi
$LN49@manage_sma:
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN32@manage_sma:

; 335  :           }
; 336  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	add	esp, 12					; 0000000cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z$0:
	mov	eax, DWORD PTR _out_buffer$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T433828[ebp-4]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ENDP ; boost::detail::function::functor_manager_common<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage_small
; Function compile flags: /Ogtpy
;	COMDAT ?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@U?$bool_@$00@mpl@4@@Z
_TEXT	SEGMENT
_in_buffer$ = 8						; size = 4
___formal$ = 12						; size = 1
?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@U?$bool_@$00@mpl@4@@Z PROC ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manager, COMDAT
; _out_buffer$ = ecx
; _op$ = eax

; 358  :           functor_manager_common<Functor>::manage_small(in_buffer,out_buffer,op);

	push	eax
	push	ecx
	mov	ecx, DWORD PTR _in_buffer$[esp+4]
	call	?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ; boost::detail::function::functor_manager_common<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage_small
	add	esp, 8

; 359  :         }

	ret	0
?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@U?$bool_@$00@mpl@4@@Z ENDP ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manager
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@Ufunction_obj_tag@234@@Z
_TEXT	SEGMENT
_in_buffer$ = 8						; size = 4
___formal$ = 12						; size = 1
?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@Ufunction_obj_tag@234@@Z PROC ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manager, COMDAT
; _out_buffer$ = ecx
; _op$ = eax

; 404  :           manager(in_buffer, out_buffer, op,
; 405  :                   mpl::bool_<(function_allows_small_object_optimization<functor_type>::value)>());

	push	eax
	push	ecx
	mov	ecx, DWORD PTR _in_buffer$[esp+4]
	call	?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ; boost::detail::function::functor_manager_common<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage_small
	add	esp, 8

; 406  :         }

	ret	0
?manager@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@CAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@Ufunction_obj_tag@234@@Z ENDP ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manager
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
_TEXT	ENDS
;	COMDAT ?invoke@?$function_obj_invoker2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V67@@function@detail@boost@@SA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@AATfunction_buffer@234@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_function_obj_ptr$ = 12					; size = 4
_a0$ = 16						; size = 8
_a1$ = 24						; size = 8
?invoke@?$function_obj_invoker2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V67@@function@detail@boost@@SA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@AATfunction_buffer@234@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z PROC ; boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::invoke, COMDAT

; 126  :         {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx

; 127  :           FunctionObj* f;
; 128  :           if (function_allows_small_object_optimization<FunctionObj>::value)
; 129  :             f = reinterpret_cast<FunctionObj*>(&function_obj_ptr.data);
; 130  :           else
; 131  :             f = reinterpret_cast<FunctionObj*>(function_obj_ptr.obj_ptr);
; 132  :           return (*f)(BOOST_FUNCTION_ARGS);

	mov	eax, DWORD PTR _a1$[ebp+4]
	mov	ecx, DWORD PTR _a1$[ebp]
	mov	edx, DWORD PTR _a0$[ebp+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	eax, DWORD PTR _a0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _function_obj_ptr$[ebp]
	push	edx
	push	eax
	push	esi
	push	ecx
	call	??$?RV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >::operator()<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, esi

; 133  :         }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?invoke@?$function_obj_invoker2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V67@@function@detail@boost@@SA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@AATfunction_buffer@234@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ENDP ; boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::invoke
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_base.hpp
_TEXT	ENDS
;	COMDAT ?manage@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z
_TEXT	SEGMENT
_in_buffer$ = 8						; size = 4
_out_buffer$ = 12					; size = 4
_op$ = 16						; size = 4
?manage@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z PROC ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage, COMDAT

; 423  :           typedef typename get_function_tag<functor_type>::type tag_type;
; 424  :           switch (op) {

	mov	eax, DWORD PTR _op$[esp-4]
	cmp	eax, 4
	je	SHORT $LN2@manage

; 429  :             return;
; 430  : 
; 431  :           default:
; 432  :             manager(in_buffer, out_buffer, op, tag_type());

	mov	ecx, DWORD PTR _in_buffer$[esp-4]
	push	eax
	mov	eax, DWORD PTR _out_buffer$[esp]
	push	eax
	call	?manage_small@?$functor_manager_common@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ; boost::detail::function::functor_manager_common<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage_small
	add	esp, 8

; 433  :             return;
; 434  :           }
; 435  :         }

	ret	0
$LN2@manage:

; 425  :           case get_functor_type_tag:
; 426  :             out_buffer.type.type = &typeid(functor_type);

	mov	eax, DWORD PTR _out_buffer$[esp-4]

; 427  :             out_buffer.type.const_qualified = false;

	xor	cl, cl
	mov	DWORD PTR [eax], OFFSET ??_R0?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@8
	mov	BYTE PTR [eax+4], cl

; 428  :             out_buffer.type.volatile_qualified = false;

	mov	BYTE PTR [eax+5], cl

; 433  :             return;
; 434  :           }
; 435  :         }

	ret	0
?manage@?$functor_manager@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@function@detail@boost@@SAXABTfunction_buffer@234@AAT5234@W4functor_manager_operation_type@234@@Z ENDP ; boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manage
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z$0
__ehfuncinfo$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	ENDS
;	COMDAT ??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z
_TEXT	SEGMENT
$T433967 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_f$ = 12						; size = 16
??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT

; 894  :     void assign_to(Functor f)

	push	-1
	push	__ehhandler$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR _this$[esp+28]
	mov	DWORD PTR __$EHRec$[esp+40], 0

; 895  :     {
; 896  :       using detail::function::vtable_base;
; 897  : 
; 898  :       typedef typename detail::function::get_function_tag<Functor>::type tag;
; 899  :       typedef detail::function::BOOST_FUNCTION_GET_INVOKER<tag> get_invoker;
; 900  :       typedef typename get_invoker::
; 901  :                          template apply<Functor, R BOOST_FUNCTION_COMMA 
; 902  :                         BOOST_FUNCTION_TEMPLATE_ARGS>
; 903  :         handler_type;
; 904  :       
; 905  :       typedef typename handler_type::invoker_type invoker_type;
; 906  :       typedef typename handler_type::manager_type manager_type;
; 907  : 
; 908  :       // Note: it is extremely important that this initialization use
; 909  :       // static initialization. Otherwise, we will have a race
; 910  :       // condition here in multi-threaded code. See
; 911  :       // http://thread.gmane.org/gmane.comp.lib.boost.devel/164902/.
; 912  :       static vtable_type stored_vtable = 
; 913  :         { { &manager_type::manage }, &invoker_type::invoke };
; 914  : 
; 915  :       if (stored_vtable.assign_to(f, functor)) {

	mov	eax, DWORD PTR _f$[esp+36]
	sub	esp, 16					; 00000010H
	mov	esi, esp
	lea	edi, DWORD PTR [ebx+8]
	mov	DWORD PTR $T433967[esp+48], esp
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN12@assign_to@3
	mov	eax, esi
	lea	ecx, DWORD PTR _f$[esp+44]
	jmp	SHORT $LN11@assign_to@3
$LN12@assign_to@3:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _f$[esp+48]
	add	esp, 4
$LN11@assign_to@3:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _f$[esp+68]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+12], eax
	call	??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@detail@boost@@QAE_NU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@2algorithm@3@AATfunction_buffer@123@@Z ; boost::detail::function::basic_vtable2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, OFFSET ?stored_vtable@?1???$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@2@@Z@4U?$basic_vtable2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@function@42@A ; `boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >'::`2'::stored_vtable

; 916  :         std::size_t value = reinterpret_cast<std::size_t>(&stored_vtable.base);
; 917  :         if (boost::has_trivial_copy_constructor<Functor>::value &&
; 918  :             boost::has_trivial_destructor<Functor>::value &&
; 919  :             detail::function::function_allows_small_object_optimization<Functor>::value)
; 920  :           value |= (std::size_t)0x01;
; 921  :         vtable = reinterpret_cast<detail::function::vtable_base *>(value);
; 922  :       } else 
; 923  :         vtable = 0;
; 924  :     }

	cmp	DWORD PTR _f$[esp+36], 8
	mov	DWORD PTR [ebx], ecx
	jbe	SHORT $LN19@assign_to@3
	mov	eax, DWORD PTR _f$[esp+28]
	test	eax, eax
	je	SHORT $LN19@assign_to@3
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN19@assign_to@3:
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z$0:
	lea	eax, DWORD PTR _f$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z$0
__ehfuncinfo$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	ENDS
;	COMDAT ??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z
_TEXT	SEGMENT
$T434029 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_f$ = 8							; size = 16
??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _this$ = edi

; 721  :     {

	push	-1
	push	__ehhandler$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[esp+32], 0

; 722  :       this->assign_to(f);

	mov	eax, DWORD PTR _f$[esp+28]
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	DWORD PTR [edi], 0
	mov	DWORD PTR $T434029[esp+40], esp
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN11@allocator@2
	mov	eax, esi
	lea	ecx, DWORD PTR _f$[esp+36]
	jmp	SHORT $LN10@allocator@2
$LN11@allocator@2:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _f$[esp+40]
	add	esp, 4
$LN10@allocator@2:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _f$[esp+60]
	add	esp, 12					; 0000000cH
	push	edi
	mov	DWORD PTR [esi+12], eax
	call	??$assign_to@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@AAEXU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::assign_to<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >

; 723  :     }

	cmp	DWORD PTR _f$[esp+28], 8
	jbe	SHORT $LN24@allocator@2
	mov	eax, DWORD PTR _f$[esp+20]
	test	eax, eax
	je	SHORT $LN24@allocator@2
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN24@allocator@2:
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z$0:
	lea	eax, DWORD PTR _f$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0
__ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
$T434096 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp+16]
	mov	DWORD PTR __Vptr$[esp+16], ecx

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T434096[esp+20], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[esp+28], eax
	cmp	ecx, eax
	je	SHORT $LN3@Construct@20
	push	-1
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [ecx+4], al
	mov	eax, DWORD PTR __Val$[esp+24]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN3@Construct@20:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T434096[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z$0
__ehfuncinfo$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\find_iterator.hpp
xdata$x	ENDS
;	COMDAT ??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z
_TEXT	SEGMENT
$T434223 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_Finder$ = 8						; size = 16
??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z PROC ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _this$ = ecx

; 51   :                     m_Finder(Finder) {}

	push	-1
	push	__ehhandler$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	eax, DWORD PTR _Finder$[esp+32]
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	DWORD PTR $T434223[esp+44], esp
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN10@allocator@3
	mov	eax, esi
	lea	ecx, DWORD PTR _Finder$[esp+40]
	jmp	SHORT $LN9@allocator@3
$LN10@allocator@3:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _Finder$[esp+44]
	add	esp, 4
$LN9@allocator@3:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _Finder$[esp+64]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+12], eax
	call	??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@1@H@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
	cmp	DWORD PTR _Finder$[esp+32], 8
	jbe	SHORT $LN23@allocator@3
	mov	eax, DWORD PTR _Finder$[esp+24]
	test	eax, eax
	je	SHORT $LN23@allocator@3
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN23@allocator@3:
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z$0:
	lea	eax, DWORD PTR _Finder$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z ENDP ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
;	COMDAT ??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ PROC ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>, COMDAT
; _this$ = ecx

; 275  :                 {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@

; 276  :                 }

	mov	DWORD PTR [esi+40], OFFSET ??_7exception@boost@@6B@
	mov	ecx, DWORD PTR [esi+44]
	test	ecx, ecx
	je	SHORT $LN7@error_info@3
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN7@error_info@3:
	mov	DWORD PTR [esi], OFFSET ??_7runtime_error@std@@6B@
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN30@error_info@3
	mov	eax, DWORD PTR [esi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@error_info@3:
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	DWORD PTR [esi+32], 0
	mov	BYTE PTR [esi+16], 0
	mov	ecx, esi
	pop	esi
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ ENDP ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\transform_iterator.hpp
_TEXT	ENDS
;	COMDAT ??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@31@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 1
??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@31@@Z PROC ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>, COMDAT
; _this$ = eax
; _x$ = edi

; 103  :       : super_t(x), m_f(f) { }

	push	esi
	mov	esi, eax
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, esi
	pop	esi
	ret	4
??0?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@ABV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@31@@Z ENDP ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	push	eax
	push	ecx
	call	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8

; 156  : 		}

	ret	8
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$basic_option@D@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
__Cat$434579 = -4					; size = 1
__Cat$434672 = -4					; size = 1
??1?$basic_option@D@program_options@boost@@QAE@XZ PROC	; boost::program_options::basic_option<char>::~basic_option<char>, COMDAT
; _this$ = ecx
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+68]
	xor	ebx, ebx
	cmp	eax, ebx
	je	SHORT $LN14@basic_opti
	mov	ecx, DWORD PTR __Cat$434579[esp+12]
	push	ecx
	mov	ecx, DWORD PTR [esi+72]
	lea	edx, DWORD PTR [esi+64]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR [esi+68]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN14@basic_opti:
	mov	eax, DWORD PTR [esi+56]
	push	eax
	mov	DWORD PTR [esi+68], ebx
	mov	DWORD PTR [esi+72], ebx
	mov	DWORD PTR [esi+76], ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR [esi+44]
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN35@basic_opti
	mov	ecx, DWORD PTR __Cat$434672[esp+12]
	push	ecx
	mov	ecx, DWORD PTR [esi+48]
	lea	edx, DWORD PTR [esi+40]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR [esi+44]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN35@basic_opti:
	mov	eax, DWORD PTR [esi+32]
	push	eax
	mov	DWORD PTR [esi+44], ebx
	mov	DWORD PTR [esi+48], ebx
	mov	DWORD PTR [esi+52], ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN61@basic_opti
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN61@basic_opti:
	mov	DWORD PTR [esi+20], ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	BYTE PTR [esi+4], bl
	pop	esi
	pop	ebx
	pop	ecx
	ret	0
??1?$basic_option@D@program_options@boost@@QAE@XZ ENDP	; boost::program_options::basic_option<char>::~basic_option<char>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAEPAXI@Z PROC ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@57
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@57:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAEPAXI@Z ENDP ; boost::exception_detail::error_info_injector<boost::bad_function_call>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_option@D@program_options@boost@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_option@D@program_options@boost@@QAEPAXI@Z PROC ; boost::program_options::basic_option<char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@58
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@58:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_option@D@program_options@boost@@QAEPAXI@Z ENDP ; boost::program_options::basic_option<char>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_function_call@boost@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_function_call@boost@@QAE@ABV01@@Z PROC		; boost::bad_function_call::bad_function_call, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0runtime_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_function_call@boost@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_function_call@boost@@QAE@ABV01@@Z ENDP		; boost::bad_function_call::bad_function_call
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z$0
__ehfuncinfo$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z PROC ; boost::exception_detail::error_info_injector<boost::bad_function_call>::error_info_injector<boost::bad_function_call>, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	mov	edi, DWORD PTR ___that$[esp+24]
	push	edi
	call	??0runtime_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_function_call@boost@@6B@
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	edi, edi
	je	SHORT $LN3@error_info@4
	add	edi, 40					; 00000028H
	jmp	SHORT $LN4@error_info@4
$LN3@error_info@4:
	xor	edi, edi
$LN4@error_info@4:
	mov	DWORD PTR [esi+40], OFFSET ??_7exception@boost@@6B@
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+44], ecx
	test	ecx, ecx
	je	SHORT $LN15@error_info@4
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
$LN15@error_info@4:
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+48], eax
	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+52], ecx
	mov	edx, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+56], edx
	mov	DWORD PTR [esi], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1bad_function_call@boost@@UAE@XZ
__ehhandler$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z ENDP ; boost::exception_detail::error_info_injector<boost::bad_function_call>::error_info_injector<boost::bad_function_call>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	mov	DWORD PTR [esi+60], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [esi+60], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$basic_option@D@program_options@boost@@@std@@YAXPAV?$basic_option@D@program_options@boost@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_option@D@program_options@boost@@@std@@YAXPAV?$basic_option@D@program_options@boost@@@Z PROC ; std::_Destroy<boost::program_options::basic_option<char> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	jmp	??1?$basic_option@D@program_options@boost@@QAE@XZ
??$_Destroy@V?$basic_option@D@program_options@boost@@@std@@YAXPAV?$basic_option@D@program_options@boost@@@Z ENDP ; std::_Destroy<boost::program_options::basic_option<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T435038 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Vptr$435035 = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	esi, DWORD PTR __Dest$[ebp]

; 128  : 
; 129  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	edi, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], esi
	npad	7
$LL6@Uninit_cop@7:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@7

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$435035[ebp], esi
	mov	DWORD PTR $T435038[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@7
	push	-1
	push	ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	edi
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN18@Uninit_cop@7:
	add	esi, 28					; 0000001cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 28					; 0000001cH
	jmp	SHORT $LL6@Uninit_cop@7
__catch$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@7
	mov	ebx, DWORD PTR __Al$[ebp]
$LL3@Uninit_cop@7:

; 134  : 		_Al.destroy(_Next);

	push	esi
	mov	ecx, ebx
	call	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@7
$LN1@Uninit_cop@7:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN55@Uninit_cop@7:
$LN4@Uninit_cop@7:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN54@Uninit_cop@7:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$435035[ebp]
	push	eax
	mov	ecx, DWORD PTR $T435038[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z$0
__ehfuncinfo$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\transform_iterator.hpp
xdata$x	ENDS
;	COMDAT ??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z
_TEXT	SEGMENT
$T435091 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_it$ = 12						; size = 72
_fun$ = 84						; size = 1
??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z PROC ; boost::make_transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 147  :   {

	push	-1
	push	__ehhandler$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+24]
	mov	DWORD PTR $T435091[esp+28], 0

; 148  :       return transform_iterator<UnaryFunc, Iterator>(it, fun);

	lea	edi, DWORD PTR _it$[esp+24]
	mov	DWORD PTR __$EHRec$[esp+36], 1
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	BYTE PTR __$EHRec$[esp+36], 0
	mov	eax, DWORD PTR _it$[esp+24]
	mov	DWORD PTR $T435091[esp+28], 1
	test	eax, eax
	je	SHORT $LN33@make_trans
	test	al, 1
	jne	SHORT $LN33@make_trans
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN33@make_trans
	lea	ecx, DWORD PTR _it$[esp+32]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN33@make_trans:
	mov	eax, esi

; 149  :   }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z$0:
	lea	esi, DWORD PTR _it$[ebp-4]
	jmp	??1?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ
__unwindfunclet$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z$1:
	mov	eax, DWORD PTR $T435091[ebp]
	and	eax, 1
	je	$LN5@make_trans
	and	DWORD PTR $T435091[ebp], -2		; fffffffeH
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
$LN5@make_trans:
	ret	0
__ehhandler$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z ENDP ; boost::make_transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
xdata$x	ENDS
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 29   : 	explicit __CLR_OR_THIS_CALL basic_stringbuf(ios_base::openmode _Mode =

	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >

; 30   : 		ios_base::in | ios_base::out)
; 31   : 		{	// construct empty character buffer from mode
; 32   : 		_Init(0, 0, _Getstate(_Mode));

	mov	cl, BYTE PTR __Mode$[esp+20]
	xor	eax, eax
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	test	cl, 1
	jne	SHORT $LN9@basic_stri@2
	mov	eax, 4
$LN9@basic_stri@2:
	test	cl, 2
	jne	SHORT $LN8@basic_stri@2
	or	eax, 2
$LN8@basic_stri@2:
	test	cl, 8
	je	SHORT $LN7@basic_stri@2
	or	eax, 8
$LN7@basic_stri@2:
	test	cl, 4
	je	SHORT $LN6@basic_stri@2
	or	eax, 16					; 00000010H
$LN6@basic_stri@2:
	mov	DWORD PTR [esi+64], eax
	mov	DWORD PTR [esi+60], 0

; 33   : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
;	COMDAT ??0?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ PROC ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 180  :             { }

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAE@XZ ENDP ; boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ
_TEXT	SEGMENT
??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 233  :             split_iterator() {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], ecx
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+56], ecx
	mov	DWORD PTR [eax+60], ecx
	ret	0
??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
_TEXT	ENDS
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 42   : 		{	// destroy the object

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 43   : 		_Tidy();

	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 44   : 		}

	mov	ecx, esi
	pop	esi
	jmp	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
xdata$x	ENDS
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 495  : 		{	// destroy the object

	push	-1
	push	__ehhandler$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[esp+24], ecx
	mov	eax, DWORD PTR [ecx-84]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-84], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 496  : 		}

	lea	esi, DWORD PTR [ecx-72]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	ecx, esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	mov	ecx, esi
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	mov	eax, DWORD PTR [esi-12]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi-12], OFFSET ??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@
	mov	edx, DWORD PTR [esi-4]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+esi-4], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR [esi-12]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+esi-12], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	jmp	??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_iostream<char,std::char_traits<char> >::~basic_iostream<char,std::char_traits<char> >
__ehhandler$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@@Z PROC ; std::allocator<boost::program_options::basic_option<char> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@@Z ENDP ; std::allocator<boost::program_options::basic_option<char> >::destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<boost::program_options::basic_option<char> > >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	push	esi

; 233  : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN1@Destroy_ra@12
	npad	2
$LL3@Destroy_ra@12:

; 234  : 		_Al.destroy(_First);

	mov	ecx, esi
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL3@Destroy_ra@12
$LN1@Destroy_ra@12:
	pop	edi
	pop	esi

; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Distance2@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Off$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Distance2@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>, COMDAT

; 1857 : 	{	// add to _Off distance between bidirectional iterators (redundant)

	push	esi
	mov	esi, DWORD PTR __Off$[esp]

; 1858 : 	for (; _First != _Last; ++_First)

$LL6@Distance2@4:
	mov	eax, DWORD PTR __First$[esp]
	test	eax, eax
	je	SHORT $LN10@Distance2@4
	cmp	eax, DWORD PTR __Last$[esp]
	je	SHORT $LN11@Distance2@4
$LN10@Distance2@4:
	call	__invalid_parameter_noinfo
$LN11@Distance2@4:
	mov	eax, DWORD PTR __First$[esp+4]
	cmp	eax, DWORD PTR __Last$[esp+4]
	je	SHORT $LN1@Distance2@4

; 1859 : 		++_Off;

	inc	DWORD PTR [esi]
	lea	ecx, DWORD PTR __First$[esp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc
	jmp	SHORT $LL6@Distance2@4
$LN1@Distance2@4:
	pop	esi

; 1860 : 	}

	ret	0
??$_Distance2@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
$T435574 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$435579 = 16					; size = 1
__Last$ = 16						; size = 8
__Dest$ = 24						; size = 4
__Al$ = 28						; size = 4
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$435579[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T435574[esp+4], 0
	mov	eax, DWORD PTR $T435574[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+16]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0PAV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\any.hpp
xdata$x	ENDS
;	COMDAT ??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 111  :             {

	push	-1
	push	__ehhandler$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+24], esi
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[esp+32], eax
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@6B@
	push	-1
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [ecx+4], al
	mov	eax, DWORD PTR _value$[esp+28]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 112  :             }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1placeholder@any@boost@@UAE@XZ	; boost::any::placeholder::~placeholder
__ehhandler$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1variable_value@program_options@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1variable_value@program_options@boost@@QAE@XZ$0
__ehfuncinfo$??1variable_value@program_options@boost@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1variable_value@program_options@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1variable_value@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1variable_value@program_options@boost@@QAE@XZ PROC	; boost::program_options::variable_value::~variable_value, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1variable_value@program_options@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$[esp+28], edi
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	esi, DWORD PTR [edi+12]
	test	esi, esi
	je	SHORT $LN14@variable_v
	lea	eax, DWORD PTR [esi+4]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	jne	SHORT $LN14@variable_v
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR [esi+8]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	jne	SHORT $LN14@variable_v
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, esi
	call	edx
$LN14@variable_v:
	mov	DWORD PTR __$EHRec$[esp+36], -1
	mov	ecx, DWORD PTR [edi]
	test	ecx, ecx
	je	SHORT $LN19@variable_v
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN19@variable_v:
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1variable_value@program_options@boost@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1any@boost@@QAE@XZ			; boost::any::~any
__ehhandler$??1variable_value@program_options@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1variable_value@program_options@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1variable_value@program_options@boost@@QAE@XZ ENDP	; boost::program_options::variable_value::~variable_value
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+24], esi
	lea	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	call	??1variable_value@program_options@boost@@QAE@XZ
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN21@pair@5
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN21@pair@5:
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], 0
	mov	BYTE PTR [esi+4], 0
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value>
; Function compile flags: /Ogtpy
;	COMDAT ??1_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node::~_Node, COMDAT
; _this$ = ecx
	add	ecx, 12					; 0000000cH
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ
??1_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node::~_Node
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1cmdline@detail@program_options@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1cmdline@detail@program_options@boost@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1cmdline@detail@program_options@boost@@QAE@XZ$1
__ehfuncinfo$??1cmdline@detail@program_options@boost@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1cmdline@detail@program_options@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1cmdline@detail@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Cat$436085 = 8					; size = 1
_this$ = 8						; size = 4
??1cmdline@detail@program_options@boost@@QAE@XZ PROC	; boost::program_options::detail::cmdline::~cmdline, COMDAT
	push	-1
	push	__ehhandler$??1cmdline@detail@program_options@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	mov	DWORD PTR __$EHRec$[esp+32], 1
	mov	eax, DWORD PTR [esi+72]
	xor	ebx, ebx
	cmp	eax, ebx
	je	SHORT $LN9@cmdline
	test	al, 1
	jne	SHORT $LN16@cmdline
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+80]
	cmp	eax, ebx
	je	SHORT $LN16@cmdline
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN16@cmdline:
	mov	DWORD PTR [esi+72], ebx
$LN9@cmdline:
	mov	BYTE PTR __$EHRec$[esp+32], bl
	mov	eax, DWORD PTR [esi+40]
	cmp	eax, ebx
	je	SHORT $LN22@cmdline
	test	al, 1
	jne	SHORT $LN29@cmdline
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+48]
	cmp	eax, ebx
	je	SHORT $LN29@cmdline
	push	2
	push	ecx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN29@cmdline:
	mov	DWORD PTR [esi+40], ebx
$LN22@cmdline:
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, ebx
	je	SHORT $LN43@cmdline
	mov	ecx, DWORD PTR __Cat$436085[esp+20]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN43@cmdline:
	mov	eax, DWORD PTR [esi]
	push	eax
	mov	DWORD PTR [esi+12], ebx
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi+20], ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1cmdline@detail@program_options@boost@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??1cmdline@detail@program_options@boost@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 40					; 00000028H
	jmp	??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
__ehhandler$??1cmdline@detail@program_options@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1cmdline@detail@program_options@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1cmdline@detail@program_options@boost@@QAE@XZ ENDP	; boost::program_options::detail::cmdline::~cmdline
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z PROC ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN7@scalar@59
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@59:
	mov	eax, esi
	pop	esi
	ret	4
??_G_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEPAXI@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$basic_command_line_parser@D@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_command_line_parser@D@program_options@boost@@QAE@XZ PROC ; boost::program_options::basic_command_line_parser<char>::~basic_command_line_parser<char>, COMDAT
; _this$ = eax
	push	eax
	call	??1cmdline@detail@program_options@boost@@QAE@XZ
	ret	0
??1?$basic_command_line_parser@D@program_options@boost@@QAE@XZ ENDP ; boost::program_options::basic_command_line_parser<char>::~basic_command_line_parser<char>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 12					; 0000000cH
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@@Z PROC ; std::_Destroy_range<std::allocator<boost::program_options::basic_option<char> > >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	esi

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN5@Destroy_ra@13
	npad	2
$LL7@Destroy_ra@13:
	mov	ecx, esi
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL7@Destroy_ra@13
$LN5@Destroy_ra@13:
	pop	edi
	pop	esi

; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAXPAV?$basic_option@D@program_options@boost@@0AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<boost::program_options::basic_option<char> > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\any.hpp
xdata$x	SEGMENT
__unwindtable$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T436178 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_value$ = 8						; size = 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::any::any<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 36   :         {

	push	-1
	push	__ehhandler$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T436178[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+32], 0
	test	eax, eax
	je	SHORT $LN3@any@3
	mov	ecx, DWORD PTR _value$[esp+20]
	push	ecx
	mov	ecx, eax
	call	??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	jmp	SHORT $LN7@any@3
$LN3@any@3:
	xor	eax, eax
$LN7@any@3:
	mov	DWORD PTR [esi], eax

; 37   :         }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	mov	eax, DWORD PTR $T436178[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::any::any<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Distance@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T436192 = -4						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Off$ = 24						; size = 4
??$_Distance@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>, COMDAT

; 1892 : 	{	// add to _Off distance between iterators

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	eax, DWORD PTR $T436192[esp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR __Last$[ebp+4]
	sub	esp, 8
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	edx, DWORD PTR __First$[ebp]
	push	eax
	push	ecx
	push	edx
	call	??$_Distance2@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>
	add	esp, 24					; 00000018H

; 1894 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Distance@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@0PAV21@@Z
_TEXT	SEGMENT
$T436249 = -4						; size = 1
__Cat$436252 = -4					; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Ptr$ = 24						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@0PAV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	BYTE PTR $T436249[esp+8], 0
	mov	eax, DWORD PTR $T436249[esp+8]
	mov	edx, DWORD PTR __Cat$436252[esp+8]
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	edx, DWORD PTR __First$[ebp+4]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[ebp+4]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 24					; 00000018H

; 1142 : 		}

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Ucopy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@0PAV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 12					; 0000000cH
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Node>::destroy
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z$1
__ehfuncinfo$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T436446 = 8						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1166 : 		{	// free entire subtree, recursively

	push	-1
	push	__ehhandler$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[esp+36], ecx

; 1167 : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	ebp, DWORD PTR __Rootnode$[esp+32]
	xor	ebx, ebx
	mov	edi, ebp
	cmp	BYTE PTR [ebp+57], bl
	jne	SHORT $LN1@Erase@5
$LN3@Erase@5:

; 1168 : 			{	// free subtrees, then node
; 1169 : 			_Erase(_Right(_Pnode));

	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR _this$[esp+36]
	push	eax
	call	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Erase

; 1170 : 			_Pnode = _Left(_Pnode);

	mov	edi, DWORD PTR [edi]

; 1171 : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node

	lea	esi, DWORD PTR [ebp+12]
	mov	DWORD PTR $T436446[esp+32], esi
	lea	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR __$EHRec$[esp+44], ebx
	call	??1variable_value@program_options@boost@@QAE@XZ
	mov	DWORD PTR __$EHRec$[esp+44], -1
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN42@Erase@5
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@Erase@5:
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx

; 1172 : 			this->_Alnod.deallocate(_Rootnode, 1);

	push	ebp
	mov	BYTE PTR [esi+4], bl
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ebp, edi
	cmp	BYTE PTR [edi+57], bl
	je	SHORT $LN3@Erase@5
$LN1@Erase@5:

; 1173 : 			}
; 1174 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z$1:
	mov	ecx, DWORD PTR $T436446[ebp-4]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Erase
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::clear, COMDAT
; _this$ = ecx

; 965  : 		{	// erase all

	push	esi
	mov	esi, ecx

; 966  : 
; 967  :  #if _HAS_ITERATOR_DEBUGGING
; 968  : 		this->_Orphan_ptr(*this, 0);
; 969  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 970  : 
; 971  : 		_Erase(_Root());

	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Erase

; 972  : 		_Root() = _Myhead, _Mysize = 0;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax

; 973  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [eax], eax
	mov	esi, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+8], esi
	pop	esi

; 974  : 		}

	ret	0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::clear
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXPAV?$basic_option@D@program_options@boost@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXPAV?$basic_option@D@program_options@boost@@0@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Destroy, COMDAT
; _this$ = ecx

; 1118 : 		{	// destroy [_First, _Last) using allocator

	push	esi

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN7@Destroy@11
	npad	2
$LL9@Destroy@11:
	mov	ecx, esi
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL9@Destroy@11
$LN7@Destroy@11:
	pop	edi
	pop	esi

; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXPAV?$basic_option@D@program_options@boost@@0@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Hinode$ = -20						; size = 4
tv400 = -16						; size = 4
_this$ = -12						; size = 4
__Lonode$ = -8						; size = 4
tv469 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
tv402 = 12						; size = 4
__Keyval$ = 12						; size = 4
?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Eqrange, COMDAT
; _this$ = ecx

; 1098 : 		{	// find leftmost node not less than _Keyval

	sub	esp, 20					; 00000014H

; 1099 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [ecx+24]
	push	ebx

; 1100 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1101 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1102 : 
; 1103 : 		while (!_Isnil(_Pnode))

	mov	ebx, DWORD PTR __Keyval$[esp+20]
	push	ebp
	push	esi
	mov	esi, DWORD PTR [eax+4]
	cmp	BYTE PTR [esi+57], 0
	push	edi
	mov	DWORD PTR _this$[esp+36], ecx
	mov	DWORD PTR __Lonode$[esp+36], eax
	mov	DWORD PTR __Hinode$[esp+36], eax
	jne	$LN8@Eqrange

; 1118 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	mov	eax, DWORD PTR [ebx+24]
	mov	ebp, DWORD PTR [ebx+20]
	mov	DWORD PTR tv400[esp+36], eax
$LN9@Eqrange:

; 1104 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	DWORD PTR tv400[esp+36], 16		; 00000010H
	jb	SHORT $LN36@Eqrange
	mov	edx, DWORD PTR [ebx+4]
	jmp	SHORT $LN37@Eqrange
$LN36@Eqrange:
	lea	edx, DWORD PTR [ebx+4]
$LN37@Eqrange:
	mov	edi, DWORD PTR [esi+32]
	mov	eax, edi
	cmp	eax, edi
	cmovb	edi, eax
	mov	ecx, edi
	cmp	edi, ebp
	jb	SHORT $LN43@Eqrange
	mov	ecx, ebp
$LN43@Eqrange:
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN50@Eqrange
	mov	eax, DWORD PTR [esi+16]
	jmp	SHORT $LN51@Eqrange
$LN50@Eqrange:
	lea	eax, DWORD PTR [esi+16]
$LN51@Eqrange:
	push	ecx
	push	edx
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN169@Eqrange
	cmp	edi, ebp
	jb	SHORT $LN162@Eqrange
	cmp	edi, ebp
	setne	al
	test	eax, eax
$LN169@Eqrange:
	jge	SHORT $LN7@Eqrange
$LN162@Eqrange:

; 1105 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	esi, DWORD PTR [esi+8]

; 1106 : 			else

	jmp	SHORT $LN6@Eqrange
$LN7@Eqrange:

; 1107 : 				{	// _Pnode not less than _Keyval, remember it
; 1108 : 				if (_Isnil(_Hinode)
; 1109 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	mov	ecx, DWORD PTR __Hinode$[esp+36]
	cmp	BYTE PTR [ecx+57], 0
	je	SHORT $LN5@Eqrange
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	mov	ebx, DWORD PTR [esi+32]
	jb	SHORT $LN72@Eqrange
	mov	edx, DWORD PTR [esi+16]
	jmp	SHORT $LN73@Eqrange
$LN72@Eqrange:
	lea	edx, DWORD PTR [esi+16]
$LN73@Eqrange:
	mov	eax, DWORD PTR __Keyval$[esp+32]
	mov	edi, DWORD PTR [eax+20]
	cmp	ebp, edi
	cmovb	edi, ebp
	mov	ecx, edi
	cmp	edi, ebx
	jb	SHORT $LN79@Eqrange
	mov	ecx, ebx
$LN79@Eqrange:
	add	eax, 4
	cmp	DWORD PTR tv400[esp+36], 16		; 00000010H
	jb	SHORT $LN87@Eqrange
	mov	eax, DWORD PTR [eax]
$LN87@Eqrange:
	push	ecx
	push	edx
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN170@Eqrange
	cmp	edi, ebx
	jb	SHORT $LN163@Eqrange
	cmp	edi, ebx
	setne	al
	test	eax, eax
$LN170@Eqrange:
	jge	SHORT $LN165@Eqrange
$LN163@Eqrange:

; 1110 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

	mov	DWORD PTR __Hinode$[esp+36], esi
$LN165@Eqrange:
	mov	ebx, DWORD PTR __Keyval$[esp+32]
$LN5@Eqrange:

; 1111 : 				_Lonode = _Pnode;

	mov	DWORD PTR __Lonode$[esp+36], esi

; 1112 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	esi, DWORD PTR [esi]
$LN6@Eqrange:

; 1100 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1101 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails
; 1102 : 
; 1103 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [esi+57], 0
	je	$LN9@Eqrange
	mov	eax, DWORD PTR __Hinode$[esp+36]
	mov	ecx, DWORD PTR _this$[esp+36]
$LN8@Eqrange:

; 1113 : 				}
; 1114 : 
; 1115 : 		_Pnode = _Isnil(_Hinode) ? _Root()
; 1116 : 			: _Left(_Hinode);	// continue scan for upper bound

	cmp	BYTE PTR [eax+57], 0
	je	SHORT $LN12@Eqrange
	mov	edx, DWORD PTR [ecx+24]
	mov	edi, DWORD PTR [edx+4]
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	edi, DWORD PTR [eax]
$LN13@Eqrange:

; 1117 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [edi+57], 0
	jne	SHORT $LN3@Eqrange

; 1118 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	mov	eax, DWORD PTR [ebx+20]
	mov	DWORD PTR tv469[esp+36], eax
	mov	ebp, eax
	mov	eax, DWORD PTR __Keyval$[esp+32]
	mov	ecx, DWORD PTR [eax+24]
	add	eax, 4
	mov	DWORD PTR tv400[esp+36], ecx
	mov	DWORD PTR tv402[esp+32], eax
$LN4@Eqrange:
	cmp	DWORD PTR [edi+36], 16			; 00000010H
	mov	ebx, DWORD PTR [edi+32]
	jb	SHORT $LN116@Eqrange
	mov	edx, DWORD PTR [edi+16]
	jmp	SHORT $LN117@Eqrange
$LN116@Eqrange:
	lea	edx, DWORD PTR [edi+16]
$LN117@Eqrange:
	mov	esi, DWORD PTR tv469[esp+36]
	cmp	ebp, esi
	cmovb	esi, ebp
	mov	ecx, esi
	cmp	esi, ebx
	jb	SHORT $LN123@Eqrange
	mov	ecx, ebx
$LN123@Eqrange:
	cmp	DWORD PTR tv400[esp+36], 16		; 00000010H
	mov	eax, DWORD PTR tv402[esp+32]
	jb	SHORT $LN131@Eqrange
	mov	eax, DWORD PTR [eax]
$LN131@Eqrange:
	push	ecx
	push	edx
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN171@Eqrange
	cmp	esi, ebx
	jb	SHORT $LN164@Eqrange
	cmp	esi, ebx
	setne	al
	test	eax, eax
$LN171@Eqrange:
	jge	SHORT $LN2@Eqrange
$LN164@Eqrange:

; 1119 : 				{	// _Pnode greater than _Keyval, remember it
; 1120 : 				_Hinode = _Pnode;

	mov	DWORD PTR __Hinode$[esp+36], edi

; 1121 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	edi, DWORD PTR [edi]

; 1122 : 				}
; 1123 : 			else

	jmp	SHORT $LN1@Eqrange
$LN2@Eqrange:

; 1124 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	edi, DWORD PTR [edi+8]
$LN1@Eqrange:

; 1117 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [edi+57], 0
	je	SHORT $LN4@Eqrange
	mov	ecx, DWORD PTR _this$[esp+36]
$LN3@Eqrange:

; 1125 : 
; 1126 : 		const_iterator _First = _TREE_CONST_ITERATOR(_Lonode);
; 1127 : 		const_iterator _Last = _TREE_CONST_ITERATOR(_Hinode);
; 1128 : 		return (_Paircc(_First, _Last));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+32]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Lonode$[esp+36]

; 1129 : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR __Hinode$[esp+28]
	pop	ebp
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+12], ecx
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Eqrange
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebx
	mov	ebx, ecx
	push	esi

; 1124 : 		if (_Myfirst != 0)

	mov	esi, DWORD PTR [ebx+12]
	test	esi, esi
	je	SHORT $LN22@Tidy@34
	push	edi

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	edi, DWORD PTR [ebx+16]
	cmp	esi, edi
	je	SHORT $LN10@Tidy@34
$LL12@Tidy@34:
	mov	ecx, esi
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL12@Tidy@34
$LN10@Tidy@34:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [ebx+12]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
$LN22@Tidy@34:
	pop	esi

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [ebx+12], 0
	mov	DWORD PTR [ebx+16], 0
	mov	DWORD PTR [ebx+20], 0
	pop	ebx

; 1135 : 		}

	ret	0
?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1029 : 		return (_Eqrange(_Keyval));

	mov	eax, DWORD PTR __Keyval$[esp-4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	eax
	push	esi
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Eqrange
	mov	eax, esi

; 1030 : 		}

	pop	esi
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<enum DRAMsimII::FileIOToken,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<enum DRAMsimII::FileIOToken>,std::allocator<std::pair<enum DRAMsimII::FileIOToken const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator->, COMDAT
; _this$ = esi

; 470  : 			return (&**this);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN19@operator@326
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@operator@326
$LN19@operator@326:
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@operator@326
$LN13@operator@326:
	xor	eax, eax
$LN14@operator@326:
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN5@operator@326
	call	__invalid_parameter_noinfo
$LN5@operator@326:
	mov	eax, DWORD PTR [esi+4]
	add	eax, 12					; 0000000cH

; 471  : 			}

	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<enum DRAMsimII::FileIOToken,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<enum DRAMsimII::FileIOToken>,std::allocator<std::pair<enum DRAMsimII::FileIOToken const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::iterator::operator->
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??1?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::~vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	call	?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy

; 560  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	ret	0
??1?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::~vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T437425 = -20						; size = 1
__Num$ = -20						; size = 4
__Ans$ = -16						; size = 16
__Keyval$ = 8						; size = 4
?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::count, COMDAT
; _this$ = ecx

; 995  : 		{	// count all elements that match _Keyval

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 24					; 00000018H

; 996  : 		_Paircc _Ans = equal_range(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	edx, DWORD PTR __Ans$[esp+28]
	push	edx
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@V123@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Eqrange

; 997  : 		size_type _Num = 0;
; 998  : 		_Distance(_Ans.first, _Ans.second, _Num);

	mov	edx, DWORD PTR __Ans$[esp+36]
	mov	DWORD PTR __Num$[esp+24], 0
	mov	eax, DWORD PTR $T437425[esp+24]
	push	eax
	mov	eax, DWORD PTR __Ans$[esp+36]
	lea	ecx, DWORD PTR __Num$[esp+28]
	push	ecx
	mov	ecx, DWORD PTR __Ans$[esp+36]
	push	edx
	mov	edx, DWORD PTR __Ans$[esp+36]
	push	eax
	push	ecx
	push	edx
	call	??$_Distance2@Vconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@I@std@@YAXVconst_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator,unsigned int>

; 999  : 		return (_Num);

	mov	eax, DWORD PTR __Num$[esp+48]
	add	esp, 24					; 00000018H

; 1000 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::count
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$basic_parsed_options@D@program_options@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_parsed_options@D@program_options@boost@@QAE@XZ PROC ; boost::program_options::basic_parsed_options<char>::~basic_parsed_options<char>, COMDAT
; _this$ = esi
	mov	ecx, esi
	call	?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$basic_parsed_options@D@program_options@boost@@QAE@XZ ENDP ; boost::program_options::basic_parsed_options<char>::~basic_parsed_options<char>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\classification.hpp
_TEXT	ENDS
;	COMDAT ?is_space@algorithm@boost@@YA?AUis_classifiedF@detail@12@ABVlocale@std@@@Z
_TEXT	SEGMENT
__Lock$437491 = -4					; size = 4
?is_space@algorithm@boost@@YA?AUis_classifiedF@detail@12@ABVlocale@std@@@Z PROC ; boost::algorithm::is_space, COMDAT
; ___$ReturnUdt$ = edi
; _Loc$ = ecx

; 58   :         {

	push	ecx

; 59   :             return detail::is_classifiedF(std::ctype_base::space, Loc);

	mov	eax, 72					; 00000048H
	push	esi
	mov	WORD PTR [edi], ax
	mov	esi, DWORD PTR [ecx]
	push	0
	lea	ecx, DWORD PTR __Lock$437491[esp+12]
	mov	DWORD PTR [edi+4], esi
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN7@is_space
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN7@is_space:
	lea	ecx, DWORD PTR __Lock$437491[esp+8]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, edi
	pop	esi

; 60   :         }

	pop	ecx
	ret	0
?is_space@algorithm@boost@@YA?AUis_classifiedF@detail@12@ABVlocale@std@@@Z ENDP ; boost::algorithm::is_space
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$0
__tryblocktable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
$T469072 = -24						; size = 8
$T469062 = -24						; size = 8
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
___formal$ = 12						; size = 1
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 881  : 		void __CLR_OR_THIS_CALL _Construct(_It _First,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _this$[ebp]

; 882  : 			_It _Last, forward_iterator_tag)
; 883  : 		{	// initialize from [_First, _Last), forward iterators
; 884  : #if defined(_DEBUG)
; 885  : 		// skip debug checks if the container is initizialed with _IGNORE_MYITERLIST
; 886  : 		if (this->_Myfirstiter != _IGNORE_MYITERLIST)
; 887  : 			{
; 888  : 			_DEBUG_RANGE(_First, _Last);
; 889  : 			}
; 890  : #endif
; 891  : 		size_type _Count = 0;
; 892  : 		_Distance(_First, _Last, _Count);

	mov	ecx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	edi, DWORD PTR __First$[ebp+4]
	mov	esi, DWORD PTR __Last$[ebp+4]
	mov	DWORD PTR $T469062[ebp], eax
	mov	DWORD PTR $T469072[ebp], ecx
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN20@Construct@21
	test	ecx, ecx
	je	SHORT $LN19@Construct@21
	cmp	ecx, eax
	je	SHORT $LN20@Construct@21
$LN19@Construct@21:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
$LN20@Construct@21:
	sub	esi, edi

; 893  : 		reserve(_Count);

	mov	edi, DWORD PTR [ebx+20]
	cmp	edi, esi
	ja	SHORT $LN105@Construct@21
	cmp	DWORD PTR [ebx+24], esi
	je	SHORT $LN105@Construct@21
	push	1
	push	esi
	mov	ecx, ebx
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	mov	esi, 16					; 00000010H
	test	al, al
	je	SHORT $LN104@Construct@21
	mov	DWORD PTR [ebx+20], edi
	cmp	DWORD PTR [ebx+24], esi
	jb	SHORT $LN36@Construct@21
	mov	eax, DWORD PTR [ebx+4]
	mov	BYTE PTR [eax+edi], 0
	mov	eax, DWORD PTR __First$[ebp]
	jmp	SHORT $LN38@Construct@21
$LN36@Construct@21:
	lea	eax, DWORD PTR [ebx+4]
	mov	BYTE PTR [eax+edi], 0
$LN104@Construct@21:
	mov	eax, DWORD PTR __First$[ebp]
	jmp	SHORT $LN38@Construct@21
$LN105@Construct@21:
	mov	esi, 16					; 00000010H
$LN38@Construct@21:

; 894  : 
; 895  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 896  : 		for (; _First != _Last; ++_First)

$LL45@Construct@21:
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN56@Construct@21
	test	eax, eax
	je	SHORT $LN55@Construct@21
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN56@Construct@21
$LN55@Construct@21:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
$LN56@Construct@21:
	mov	ecx, DWORD PTR __Last$[ebp+4]
	cmp	DWORD PTR __First$[ebp+4], ecx
	je	$LN1@Construct@21

; 897  : 			append((size_type)1, (_Elem)*_First);

	cmp	eax, -4					; fffffffcH
	je	SHORT $LN66@Construct@21
	test	eax, eax
	jne	SHORT $LN67@Construct@21
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
$LN67@Construct@21:
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN75@Construct@21
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN76@Construct@21
$LN75@Construct@21:
	lea	ecx, DWORD PTR [eax+4]
$LN76@Construct@21:
	mov	edx, DWORD PTR [eax+20]
	add	edx, ecx
	cmp	DWORD PTR __First$[ebp+4], edx
	jb	SHORT $LN66@Construct@21
	call	__invalid_parameter_noinfo
$LN66@Construct@21:
	mov	eax, DWORD PTR __First$[ebp+4]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	push	1
	mov	ecx, ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN42@Construct@21

; 896  : 		for (; _First != _Last; ++_First)

	test	eax, eax
	jne	SHORT $LN43@Construct@21
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
$LN43@Construct@21:
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN51@Construct@21
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN52@Construct@21
$LN51@Construct@21:
	lea	ecx, DWORD PTR [eax+4]
$LN52@Construct@21:
	mov	edx, DWORD PTR [eax+20]
	add	edx, ecx
	cmp	DWORD PTR __First$[ebp+4], edx
	jb	SHORT $LN42@Construct@21
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First$[ebp]
$LN42@Construct@21:
	inc	DWORD PTR __First$[ebp+4]
	jmp	$LL45@Construct@21
__catch$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z$0:

; 898  : 		_CATCH_ALL
; 899  : 		_Tidy(true);

	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN91@Construct@21
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN91@Construct@21:

; 900  : 		_RERAISE;

	push	0
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], 0
	push	0
	mov	BYTE PTR [esi+4], 0
	call	__CxxThrowException@8
$LN109@Construct@21:
$LN1@Construct@21:

; 901  : 		_CATCH_END
; 902  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN108@Construct@21:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
$T469323 = 16						; size = 1
__Last$ = 16						; size = 8
??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = esi

; 680  : 		{	// construct from [_First, _Last)

	push	ecx

; 681  : 		_Tidy();

	xor	eax, eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	BYTE PTR [esi+4], al

; 682  : 		_Construct(_First, _Last, _Iter_cat(_First));

	mov	eax, DWORD PTR __Last$[esp+4]
	mov	ecx, DWORD PTR __Last$[esp]
	mov	edx, DWORD PTR __First$[esp+4]
	push	eax
	mov	eax, DWORD PTR __First$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR $T469323[esp+8]
	push	edx
	push	eax
	push	ecx
	push	esi
	call	??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >

; 683  : 		}

	mov	eax, esi
	pop	ecx
	ret	16					; 00000010H
??$?0V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z$0
__tryblocktable$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<char *>, COMDAT
; _this$ = ecx

; 881  : 		void __CLR_OR_THIS_CALL _Construct(_It _First,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi

; 882  : 			_It _Last, forward_iterator_tag)
; 883  : 		{	// initialize from [_First, _Last), forward iterators
; 884  : #if defined(_DEBUG)
; 885  : 		// skip debug checks if the container is initizialed with _IGNORE_MYITERLIST
; 886  : 		if (this->_Myfirstiter != _IGNORE_MYITERLIST)
; 887  : 			{
; 888  : 			_DEBUG_RANGE(_First, _Last);
; 889  : 			}
; 890  : #endif
; 891  : 		size_type _Count = 0;
; 892  : 		_Distance(_First, _Last, _Count);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ebx, DWORD PTR __First$[ebp]

; 893  : 		reserve(_Count);

	mov	edi, DWORD PTR [esi+20]
	sub	eax, ebx
	cmp	edi, eax
	ja	SHORT $LN27@Construct@22
	cmp	DWORD PTR [esi+24], eax
	je	SHORT $LN27@Construct@22
	push	1
	push	eax
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	test	al, al
	je	SHORT $LN27@Construct@22
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	mov	DWORD PTR [esi+20], edi
	jb	SHORT $LN25@Construct@22
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN26@Construct@22
$LN25@Construct@22:
	lea	eax, DWORD PTR [esi+4]
$LN26@Construct@22:
	mov	BYTE PTR [eax+edi], 0
$LN27@Construct@22:

; 894  : 
; 895  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	npad	4
$LL3@Construct@22:

; 896  : 		for (; _First != _Last; ++_First)

	cmp	ebx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Construct@22

; 897  : 			append((size_type)1, (_Elem)*_First);

	movzx	eax, BYTE PTR [ebx]
	push	eax
	push	1
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	inc	ebx
	jmp	SHORT $LL3@Construct@22
__catch$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z$0:

; 898  : 		_CATCH_ALL
; 899  : 		_Tidy(true);

	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN43@Construct@22
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN43@Construct@22:
	xor	eax, eax

; 900  : 		_RERAISE;

	push	eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], eax
	push	eax
	mov	BYTE PTR [esi+4], al
	call	__CxxThrowException@8
$LN59@Construct@22:
$LN1@Construct@22:

; 901  : 		_CATCH_END
; 902  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN58@Construct@22:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<char *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\range\iterator_range.hpp
;	COMDAT ??$copy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
$T469715 = -4						; size = 1
$T469580 = -4						; size = 4
??$copy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; boost::copy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___$ReturnUdt$ = esi
; _r$ = eax

; 646  :         {

	sub	esp, 8
	mov	DWORD PTR $T469580[esp+8], 0

; 647  :             return SeqT( boost::begin( r ), boost::end( r ) );

	mov	edx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [eax+8]
	push	edi
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	push	edx
	push	ecx
	push	eax
	mov	eax, DWORD PTR $T469715[esp+24]
	push	edi
	push	eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], 0
	push	esi
	mov	BYTE PTR [esi+4], 0
	call	??$_Construct@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0Uforward_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, esi

; 648  :         }

	pop	edi
	add	esp, 8
	ret	0
??$copy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; boost::copy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??$?0PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
$T469761 = 12						; size = 1
__Last$ = 12						; size = 4
??$?0PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *>, COMDAT
; _this$ = ecx

; 681  : 		_Tidy();
; 682  : 		_Construct(_First, _Last, _Iter_cat(_First));

	mov	edx, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Last$[esp]
	xor	eax, eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR $T469761[esp]
	push	eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<char *>

; 683  : 		}

	mov	eax, esi
	pop	esi
	ret	8
??$?0PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PAD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\util.hpp
_TEXT	ENDS
;	COMDAT ??R?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@@Z
_TEXT	SEGMENT
$T469862 = -4						; size = 4
??R?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@@Z PROC ; boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; ___$ReturnUdt$ = ecx
; _Range$ = eax

; 96   :                 {

	sub	esp, 8
	push	esi
	mov	esi, ecx
	mov	DWORD PTR $T469862[esp+12], 0

; 97   :                     return copy_range<SeqT>(Range);

	call	??$copy_range@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; boost::copy_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, esi

; 98   :                 }

	pop	esi
	add	esp, 8
	ret	0
??R?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@@Z ENDP ; boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\transform_iterator.hpp
_TEXT	ENDS
;	COMDAT ?dereference@?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@ABE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T469868 = -4						; size = 4
?dereference@?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@ABE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::dereference, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi

; 137  :     { return m_f(*this->base()); }

	push	ecx
	add	eax, 32					; 00000020H
	mov	ecx, esi
	mov	DWORD PTR $T469868[esp+4], 0
	call	??R?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@@Z ; boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	eax, esi
	pop	ecx
	ret	0
?dereference@?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@ABE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::dereference
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
_TEXT	ENDS
;	COMDAT ??$dereference@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z
_TEXT	SEGMENT
$T469897 = -4						; size = 4
??$dereference@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z PROC ; boost::iterator_core_access::dereference<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT
; ___$ReturnUdt$ = ecx
; _f$ = eax

; 515  :       {

	sub	esp, 8
	push	esi
	mov	esi, ecx
	mov	DWORD PTR $T469897[esp+12], 0

; 516  :           return f.dereference();

	call	?dereference@?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@ABE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>::dereference
	mov	eax, esi

; 517  :       }

	pop	esi
	add	esp, 8
	ret	0
??$dereference@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z ENDP ; boost::iterator_core_access::dereference<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z$0
__ehfuncinfo$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT
$T470009 = -52						; size = 1
__Right$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
___formal$ = 32						; size = 1
??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Replace<char *>, COMDAT
; _this$ = ecx

; 1470 : 		_Myt& __CLR_OR_THIS_CALL _Replace(const_iterator _First, const_iterator _Last,

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+52], eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, eax

; 1471 : 			_It _First2, _It _Last2, input_iterator_tag)
; 1472 : 		{	// replace [_First, _Last) with [_First2, _Last2), input iterators
; 1473 : 		_Myt _Right(_First2, _Last2);

	mov	edx, DWORD PTR __Last2$[ebp]
	mov	eax, DWORD PTR __First2$[ebp]
	mov	esi, ecx
	mov	ecx, DWORD PTR $T470009[esp+60]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR __Right$[esp+72]
	mov	DWORD PTR __Right$[esp+96], 15		; 0000000fH
	mov	DWORD PTR __Right$[esp+92], 0
	mov	BYTE PTR __Right$[esp+76], 0
	call	??$_Construct@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXPAD0Uforward_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<char *>
	mov	DWORD PTR __$EHRec$[esp+68], 0

; 1474 : 		replace(_First, _Last, _Right);

	mov	ecx, DWORD PTR __Last$[ebp+4]
	mov	edx, DWORD PTR __Last$[ebp]
	lea	eax, DWORD PTR __Right$[esp+60]
	push	eax
	mov	eax, DWORD PTR __First$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR __First$[ebp]
	push	edx
	push	eax
	push	ecx
	mov	ecx, esi
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace

; 1475 : 		return (*this);

	cmp	DWORD PTR __Right$[esp+84], 16		; 00000010H
	jb	SHORT $LN64@Replace
	mov	edx, DWORD PTR __Right$[esp+64]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@Replace:
	mov	eax, esi

; 1476 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z$0:
	lea	ecx, DWORD PTR __Right$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-44]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Replace<char *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
;	COMDAT ??D?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T470170 = -4						; size = 4
??D?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::operator*, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi

; 633  :       {

	push	ecx

; 634  :           return iterator_core_access::dereference(this->derived());

	mov	ecx, esi
	mov	DWORD PTR $T470170[esp+4], 0
	call	??$dereference@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z ; boost::iterator_core_access::dereference<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
	mov	eax, esi

; 635  :       }

	pop	ecx
	ret	0
??D?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::operator*
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??$replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1@Z
_TEXT	SEGMENT
$T470179 = -4						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__First2$ = 24						; size = 4
__Last2$ = 28						; size = 4
??$replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace<char *>, COMDAT
; _this$ = ecx

; 1455 : 		_Myt& __CLR_OR_THIS_CALL replace(const_iterator _First, const_iterator _Last,

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 1456 : 			_It _First2, _It _Last2)
; 1457 : 		{	// replace [_First, _Last) with [_First2, _Last2)
; 1458 : 		return (_Replace(_First, _Last,
; 1459 : 			_First2, _Last2, _Iter_cat(_First2)));

	mov	eax, DWORD PTR $T470179[esp]
	mov	edx, DWORD PTR __Last2$[ebp]
	sub	esp, 8
	push	eax
	mov	eax, DWORD PTR __First2$[ebp]
	push	edx
	mov	edx, DWORD PTR __Last$[ebp+4]
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	edx
	mov	edx, DWORD PTR __First$[ebp+4]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	edx
	push	eax
	call	??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Replace<char *>

; 1460 : 		}

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??$replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace<char *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z PROC ; std::_Fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 3156 : 	{	// copy _Val through [_First, _Last)

	push	ebx

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN1@Fill@9
	push	edi
	mov	edi, DWORD PTR __Val$[esp+8]
$LL3@Fill@9:

; 3159 : 		*_First = _Val;

	push	-1
	push	0
	push	edi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	add	esi, 28					; 0000001cH
	cmp	esi, ebx
	jne	SHORT $LL3@Fill@9
	pop	edi
$LN1@Fill@9:
	pop	esi
	pop	ebx

; 3160 : 	}

	ret	0
??$_Fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z ENDP ; std::_Fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T470366 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Vptr$470372 = 12					; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	esi, DWORD PTR __First$[ebp]

; 401  : 
; 402  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	edi, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Next$[ebp], esi
	npad	7
$LL6@Uninit_fil@17:

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	cmp	edi, ebx
	jbe	SHORT $LN4@Uninit_fil@17

; 404  : 		_Al.construct(_First, _Val);

	mov	DWORD PTR __Vptr$470372[ebp], esi
	mov	DWORD PTR $T470366[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_fil@17
	mov	eax, DWORD PTR __Val$[ebp]
	push	-1
	push	ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN18@Uninit_fil@17:
	dec	edi
	add	esi, 28					; 0000001cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __First$[ebp], esi
	jmp	SHORT $LL6@Uninit_fil@17
__catch$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __First$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_fil@17
	mov	ebx, DWORD PTR __Al$[ebp]
$LL3@Uninit_fil@17:

; 407  : 		_Al.destroy(_Next);

	push	esi
	mov	ecx, ebx
	call	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_fil@17
$LN1@Uninit_fil@17:

; 408  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN55@Uninit_fil@17:
$LN4@Uninit_fil@17:

; 409  : 	_CATCH_END
; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN54@Uninit_fil@17:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$470372[ebp]
	push	eax
	mov	ecx, DWORD PTR $T470366[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T470588 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Vptr$470585 = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	esi, DWORD PTR __Dest$[ebp]

; 128  : 
; 129  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	edi, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], esi
	npad	7
$LL6@Uninit_cop@8:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@8

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$470585[ebp], esi
	mov	DWORD PTR $T470588[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@8
	push	-1
	push	ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	edi
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN18@Uninit_cop@8:
	add	esi, 28					; 0000001cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 28					; 0000001cH
	jmp	SHORT $LL6@Uninit_cop@8
__catch$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@8
	mov	ebx, DWORD PTR __Al$[ebp]
$LL3@Uninit_cop@8:

; 134  : 		_Al.destroy(_Next);

	push	esi
	mov	ecx, ebx
	call	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@8
$LN1@Uninit_cop@8:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN55@Uninit_cop@8:
$LN4@Uninit_cop@8:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN54@Uninit_cop@8:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$470585[ebp]
	push	eax
	mov	ecx, DWORD PTR $T470588[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebx

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN12@Copy_opt@6
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
$LL3@Copy_opt@6:

; 2472 : 		*_Dest = *_First;

	push	-1
	push	0
	push	esi
	mov	ecx, edi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	add	esi, 28					; 0000001cH
	add	edi, 28					; 0000001cH
	cmp	esi, ebx
	jne	SHORT $LL3@Copy_opt@6

; 2473 : 	return (_Dest);

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 2474 : 	}

	ret	0
$LN12@Copy_opt@6:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[esp+4]
	pop	esi
	pop	ebx

; 2474 : 	}

	ret	0
??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT
$T470757 = -16						; size = 1
$T470653 = -16						; size = 8
$T470654 = -8						; size = 8
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>, COMDAT
; _this$ = ecx

; 1114 : 		_Myt& __CLR_OR_THIS_CALL _Assign(_It _First, _It _Last, input_iterator_tag)

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi

; 1115 : 		{	// assign [First, _Last), input iterators
; 1116 : 		return (replace(begin(), end(), _First, _Last));

	lea	eax, DWORD PTR $T470654[esp+32]
	push	eax
	mov	esi, ecx
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	ecx, DWORD PTR [eax+4]
	mov	ebx, DWORD PTR [eax]
	mov	DWORD PTR $T470653[esp+36], ecx
	mov	ecx, DWORD PTR [esi+24]
	lea	eax, DWORD PTR [esi+4]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN7@Assign
	mov	edi, DWORD PTR [eax]
	jmp	SHORT $LN8@Assign
$LN7@Assign:
	mov	edi, eax
$LN8@Assign:
	test	edi, edi
	je	SHORT $LN11@Assign
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN21@Assign
	mov	edx, DWORD PTR [eax]
	jmp	SHORT $LN22@Assign
$LN21@Assign:
	mov	edx, eax
$LN22@Assign:
	cmp	edx, edi
	ja	SHORT $LN11@Assign
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN25@Assign
	mov	eax, DWORD PTR [eax]
$LN25@Assign:
	mov	edx, DWORD PTR [esi+20]
	add	edx, eax
	cmp	edi, edx
	jbe	SHORT $LN12@Assign
$LN11@Assign:
	call	__invalid_parameter_noinfo
$LN12@Assign:
	mov	eax, DWORD PTR $T470757[esp+32]
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	push	eax
	mov	eax, DWORD PTR $T470653[esp+40]
	push	ecx
	push	edx
	push	eax
	push	ebx
	push	edi
	push	esi
	mov	ecx, esi
	call	??$_Replace@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0PAD1Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Replace<char *>

; 1117 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
xdata$x	SEGMENT
__unwindtable$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z$1
__ehfuncinfo$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >, COMDAT
; _this$ = ecx

; 363  :                 {

	push	-1
	push	__ehhandler$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+32], esi
	mov	edi, DWORD PTR _x$[esp+28]
	push	edi
	call	??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	mov	DWORD PTR __$EHRec$[esp+40], 0
	mov	DWORD PTR [esi+60], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	mov	BYTE PTR __$EHRec$[esp+40], 1
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [esi+60], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@

; 364  :                 copy_boost_exception(this,&x);

	test	edi, edi
	je	SHORT $LN3@clone_impl@3
	lea	ebx, DWORD PTR [edi+40]
	jmp	SHORT $LN4@clone_impl@3
$LN3@clone_impl@3:
	xor	ebx, ebx
$LN4@clone_impl@3:
	mov	ecx, DWORD PTR [esi+44]
	mov	edi, DWORD PTR [ebx+4]
	test	ecx, ecx
	je	SHORT $LN19@clone_impl@3
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
$LN19@clone_impl@3:
	mov	DWORD PTR [esi+44], edi
	test	edi, edi
	je	SHORT $LN22@clone_impl@3
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+12]
	mov	ecx, edi
	call	edx
$LN22@clone_impl@3:
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR [esi+48], eax
	mov	ecx, DWORD PTR [ebx+12]
	mov	DWORD PTR [esi+52], ecx
	mov	edx, DWORD PTR [ebx+16]
	mov	DWORD PTR [esi+56], edx

; 365  :                 }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>
__unwindfunclet$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1clone_base@exception_detail@boost@@UAE@XZ ; boost::exception_detail::clone_base::~clone_base
__ehhandler$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABVbad_function_call@2@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABVbad_function_call@2@@Z PROC ; boost::exception_detail::error_info_injector<boost::bad_function_call>::error_info_injector<boost::bad_function_call>, COMDAT
; _this$ = ecx

; 271  :                 {

	mov	eax, DWORD PTR _x$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0runtime_error@std@@QAE@ABV01@@Z
	xor	eax, eax
	mov	DWORD PTR [esi+40], OFFSET ??_7exception@boost@@6B@
	mov	DWORD PTR [esi+44], eax
	mov	DWORD PTR [esi+48], eax
	mov	DWORD PTR [esi+52], eax
	mov	DWORD PTR [esi+56], -1
	mov	DWORD PTR [esi], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@

; 272  :                 }

	mov	eax, esi
	pop	esi
	ret	4
??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABVbad_function_call@2@@Z ENDP ; boost::exception_detail::error_info_injector<boost::bad_function_call>::error_info_injector<boost::bad_function_call>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z PROC ; std::fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 3186 : 	{	// copy _Val through [_First, _Last)

	push	esi

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN11@fill@9
	push	ebx
	mov	ebx, DWORD PTR __Val$[esp+8]
$LL13@fill@9:
	push	-1
	push	0
	push	ebx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL13@fill@9
	pop	ebx
$LN11@fill@9:
	pop	edi
	pop	esi

; 3188 : 	}

	ret	0
??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z ENDP ; std::fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IABV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
$T470906 = -4						; size = 1
__Cat$470910 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IABV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T470906[esp+4], 0
	mov	eax, DWORD PTR $T470906[esp+4]
	mov	ecx, DWORD PTR __Cat$470910[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IABV12@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
$T470915 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$470919 = 12					; size = 1
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$470919[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T470915[esp+4], 0
	mov	eax, DWORD PTR $T470915[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T470944 = -8						; size = 1
$T470945 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T470946 = 16						; size = 1
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 2481 : 	{	// copy [_First, _Last) to [_Dest, ...), random_access iterators

	sub	esp, 8

; 2482 : 	// if _OutIt is range checked, this will make sure there is enough space for the copy
; 2483 : 	_OutIt _Result = _Dest + (_Last - _First);
; 2484 : 	_Copy_opt(_First, _Last, _CHECKED_BASE(_Dest), 
; 2485 : 		forward_iterator_tag(), _Nonscalar_ptr_iterator_tag(), _Range_checked_iterator_tag());

	mov	edx, DWORD PTR $T470946[esp+4]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp+8]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+12]
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+16]
	xor	al, al
	mov	BYTE PTR $T470945[esp+20], al
	mov	ecx, DWORD PTR $T470945[esp+20]
	mov	BYTE PTR $T470944[esp+20], al
	mov	eax, DWORD PTR $T470944[esp+20]
	push	eax
	push	ecx
	push	edx
	push	edi
	push	esi
	push	ebx
	call	??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>
	sub	esi, ebx
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [eax*8]
	sub	ecx, eax
	lea	eax, DWORD PTR [edi+ecx*4]
	pop	edi
	pop	esi
	pop	ebx

; 2486 : 	return _Result;
; 2487 : 	}

	add	esp, 8
	ret	0
??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ??$enable_error_info@Vbad_function_call@boost@@@boost@@YA?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@0@ABVbad_function_call@0@@Z
_TEXT	SEGMENT
$T470960 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$enable_error_info@Vbad_function_call@boost@@@boost@@YA?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@0@ABVbad_function_call@0@@Z PROC ; boost::enable_error_info<boost::bad_function_call>, COMDAT

; 315  :         {

	push	ecx

; 316  :         typedef typename exception_detail::enable_error_info_return_type<T>::type rt;
; 317  :         return rt(x);

	mov	eax, DWORD PTR _x$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	push	edi
	xor	edi, edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR $T470960[esp+16], edi
	call	??0runtime_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi+40], OFFSET ??_7exception@boost@@6B@
	mov	DWORD PTR [esi+44], edi
	mov	DWORD PTR [esi+48], edi
	mov	DWORD PTR [esi+52], edi
	mov	DWORD PTR [esi+56], -1
	pop	edi
	mov	DWORD PTR [esi], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	eax, esi
	pop	esi

; 318  :         }

	pop	ecx
	ret	0
??$enable_error_info@Vbad_function_call@boost@@@boost@@YA?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@0@ABVbad_function_call@0@@Z ENDP ; boost::enable_error_info<boost::bad_function_call>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??$assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
$T470991 = 12						; size = 1
__Last$ = 12						; size = 4
??$assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<char *>, COMDAT
; _this$ = ecx

; 1103 : 		{	// assign [First, _Last)
; 1104 : 		return (_Assign(_First, _Last, _Iter_cat(_First)));

	mov	eax, DWORD PTR $T470991[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	push	eax
	mov	eax, DWORD PTR __First$[esp]
	push	edx
	push	eax
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 1105 : 		}

	ret	8
??$assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign<char *>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z$1
__ehfuncinfo$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z
_TEXT	SEGMENT
_thousands_sep$ = -57					; size = 1
__Lock$471022 = -56					; size = 4
_grouping_size$ = -56					; size = 4
tv469 = -52						; size = 4
__Lock$471220 = -52					; size = 4
_loc$ = -48						; size = 4
_$S2$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_finish$ = 8						; size = 4
??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z PROC ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned int,char>, COMDAT
; _n$ = ecx

; 505  :         {

	push	-1
	push	__ehhandler$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+60], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+80]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	ebp, DWORD PTR _finish$[esp+76]

; 506  : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 507  :             BOOST_STATIC_ASSERT(!std::numeric_limits<T>::is_signed);
; 508  : #endif
; 509  : 
; 510  : #ifndef BOOST_LEXICAL_CAST_ASSUME_C_LOCALE
; 511  :             // TODO: use BOOST_NO_STD_LOCALE
; 512  :             std::locale loc;

	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR _loc$[esp+80], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	push	0
	lea	ecx, DWORD PTR __Lock$471022[esp+84]
	mov	esi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN18@lcast_put_
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN18@lcast_put_:
	lea	ecx, DWORD PTR __Lock$471022[esp+80]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 513  :             typedef std::numpunct<CharT> numpunct;
; 514  :             numpunct const& np = BOOST_USE_FACET(numpunct, loc);

	lea	ecx, DWORD PTR _loc$[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	ebx, eax

; 515  :             std::string const& grouping = np.grouping();

	lea	esi, DWORD PTR _$S2$[esp+80]
	mov	ecx, ebx
	call	?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
	mov	BYTE PTR __$EHRec$[esp+88], 1

; 516  :             std::string::size_type const grouping_size = grouping.size();

	mov	eax, DWORD PTR _$S2$[esp+100]
	mov	DWORD PTR _grouping_size$[esp+80], eax

; 517  :             CharT thousands_sep = grouping_size ? np.thousands_sep() : 0;

	test	eax, eax
	je	SHORT $LN8@lcast_put_
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, ebx
	call	edx
	mov	BYTE PTR _thousands_sep$[esp+80], al
	jmp	SHORT $LN9@lcast_put_
$LN8@lcast_put_:
	mov	BYTE PTR _thousands_sep$[esp+80], 0
$LN9@lcast_put_:

; 518  :             std::string::size_type group = 0; // current group number
; 519  :             char last_grp_size = grouping[0] <= 0 ? CHAR_MAX : grouping[0];

	mov	ecx, DWORD PTR _$S2$[esp+104]
	mov	eax, DWORD PTR _$S2$[esp+84]
	xor	esi, esi
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN32@lcast_put_
	lea	eax, DWORD PTR _$S2$[esp+84]
$LN32@lcast_put_:
	cmp	BYTE PTR [eax], 0
	jg	SHORT $LN10@lcast_put_
	mov	bl, 127					; 0000007fH
	jmp	SHORT $LN11@lcast_put_
$LN10@lcast_put_:
	mov	eax, DWORD PTR _$S2$[esp+84]
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN39@lcast_put_
	lea	eax, DWORD PTR _$S2$[esp+84]
$LN39@lcast_put_:
	mov	bl, BYTE PTR [eax]
$LN11@lcast_put_:

; 520  :             // a) Since grouping is const, grouping[grouping.size()] returns 0.
; 521  :             // b) It's safe to assume here and below that CHAR_MAX
; 522  :             //    is equivalent to unlimited grouping:
; 523  : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 524  :             BOOST_STATIC_ASSERT(std::numeric_limits<T>::digits10 < CHAR_MAX);
; 525  : #endif
; 526  : 
; 527  :             char left = last_grp_size;

	mov	cl, bl
$LN5@lcast_put_:

; 528  : #endif
; 529  : 
; 530  :             typedef typename Traits::int_type int_type;
; 531  :             CharT const czero = lcast_char_constants<CharT>::zero;
; 532  :             int_type const zero = Traits::to_int_type(czero);
; 533  : 
; 534  :             do
; 535  :             {
; 536  : #ifndef BOOST_LEXICAL_CAST_ASSUME_C_LOCALE
; 537  :                 if(left == 0)

	test	cl, cl
	jne	SHORT $LN49@lcast_put_

; 538  :                 {
; 539  :                     ++group;

	inc	esi

; 540  :                     if(group < grouping_size)

	cmp	esi, DWORD PTR _grouping_size$[esp+80]
	jae	SHORT $LN13@lcast_put_

; 541  :                     {
; 542  :                         char const grp_size = grouping[group];

	cmp	esi, DWORD PTR _$S2$[esp+100]
	jbe	SHORT $LN42@lcast_put_
	call	__invalid_parameter_noinfo
$LN42@lcast_put_:
	cmp	DWORD PTR _$S2$[esp+104], 16		; 00000010H
	mov	eax, DWORD PTR _$S2$[esp+84]
	jae	SHORT $LN48@lcast_put_
	lea	eax, DWORD PTR _$S2$[esp+84]
$LN48@lcast_put_:
	mov	al, BYTE PTR [eax+esi]

; 543  :                         last_grp_size = grp_size <= 0 ? CHAR_MAX : grp_size;

	mov	bl, 127					; 0000007fH
	test	al, al
	jle	SHORT $LN13@lcast_put_
	mov	bl, al
$LN13@lcast_put_:

; 544  :                     }
; 545  : 
; 546  :                     left = last_grp_size;
; 547  :                     --finish;
; 548  :                     Traits::assign(*finish, thousands_sep);

	mov	al, BYTE PTR _thousands_sep$[esp+80]
	dec	ebp
	mov	cl, bl
	mov	BYTE PTR [ebp], al
$LN49@lcast_put_:

; 549  :                 }
; 550  : 
; 551  :                 --left;
; 552  : #endif
; 553  : 
; 554  :                 --finish;
; 555  :                 int_type const digit = static_cast<int_type>(n % 10U);

	mov	eax, -858993459				; cccccccdH
	mul	edi
	shr	edx, 3
	lea	eax, DWORD PTR [edx+edx*4]
	add	eax, eax
	mov	DWORD PTR tv469[esp+80], eax
	mov	eax, edi
	mov	edi, DWORD PTR tv469[esp+80]
	sub	eax, edi
	dec	ebp

; 556  :                 Traits::assign(*finish, Traits::to_char_type(zero + digit));

	add	eax, 48					; 00000030H

; 557  :                 n /= 10;

	mov	edi, edx
	dec	cl
	mov	BYTE PTR [ebp], al

; 558  :             } while(n);

	test	edi, edi
	jne	SHORT $LN5@lcast_put_

; 559  : 
; 560  :             return finish;

	cmp	DWORD PTR _$S2$[esp+104], 16		; 00000010H
	jb	SHORT $LN71@lcast_put_
	mov	ecx, DWORD PTR _$S2$[esp+84]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@lcast_put_:
	mov	DWORD PTR __$EHRec$[esp+88], -1
	mov	edi, DWORD PTR _loc$[esp+80]
	mov	DWORD PTR _$S2$[esp+104], 15		; 0000000fH
	mov	DWORD PTR _$S2$[esp+100], 0
	mov	BYTE PTR _$S2$[esp+84], 0
	test	edi, edi
	je	SHORT $LN92@lcast_put_
	push	0
	lea	ecx, DWORD PTR __Lock$471220[esp+84]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN86@lcast_put_
	cmp	eax, -1
	jae	SHORT $LN86@lcast_put_
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN86@lcast_put_:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$471220[esp+80]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN92@lcast_put_
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN92@lcast_put_:
	mov	eax, ebp

; 561  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+80]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+60]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z$0:
	lea	ecx, DWORD PTR _loc$[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z$1:
	lea	ecx, DWORD PTR _$S2$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-64]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z ENDP ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned int,char>
PUBLIC	__$ArrayPad$
EXTRN	__aulldvrm:PROC
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z$1
__ehfuncinfo$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z
_TEXT	SEGMENT
_last_grp_size$ = -67					; size = 1
_left$ = -66						; size = 1
_thousands_sep$ = -65					; size = 1
__Lock$471262 = -64					; size = 4
_group$ = -64						; size = 4
__Lock$471460 = -60					; size = 4
_grouping_size$ = -60					; size = 4
_loc$ = -56						; size = 4
tv141 = -52						; size = 8
_$S1$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_n$ = 8							; size = 8
_finish$ = 16						; size = 4
??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z PROC ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned __int64,char>, COMDAT

; 505  :         {

	push	-1
	push	__ehhandler$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+68], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+88]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _finish$[esp+84]

; 506  : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 507  :             BOOST_STATIC_ASSERT(!std::numeric_limits<T>::is_signed);
; 508  : #endif
; 509  : 
; 510  : #ifndef BOOST_LEXICAL_CAST_ASSUME_C_LOCALE
; 511  :             // TODO: use BOOST_NO_STD_LOCALE
; 512  :             std::locale loc;

	call	?_Init@locale@std@@CAPAV_Locimp@12@XZ	; std::locale::_Init
	mov	DWORD PTR _loc$[esp+88], eax
	call	?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ ; std::locale::_Getgloballocale
	xor	ebx, ebx
	push	ebx
	lea	ecx, DWORD PTR __Lock$471262[esp+92]
	mov	esi, eax
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN18@lcast_put_@2
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN18@lcast_put_@2:
	lea	ecx, DWORD PTR __Lock$471262[esp+88]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 513  :             typedef std::numpunct<CharT> numpunct;
; 514  :             numpunct const& np = BOOST_USE_FACET(numpunct, loc);

	lea	ecx, DWORD PTR _loc$[esp+88]
	mov	DWORD PTR __$EHRec$[esp+96], ebx
	call	??$use_facet@V?$numpunct@D@std@@@std@@YAABV?$numpunct@D@0@ABVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
	mov	edi, eax

; 515  :             std::string const& grouping = np.grouping();

	lea	esi, DWORD PTR _$S1$[esp+88]
	mov	ecx, edi
	call	?grouping@?$numpunct@D@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
	mov	BYTE PTR __$EHRec$[esp+96], 1

; 516  :             std::string::size_type const grouping_size = grouping.size();

	mov	eax, DWORD PTR _$S1$[esp+108]
	mov	DWORD PTR _grouping_size$[esp+88], eax

; 517  :             CharT thousands_sep = grouping_size ? np.thousands_sep() : 0;

	cmp	eax, ebx
	je	SHORT $LN8@lcast_put_@2
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+8]
	mov	ecx, edi
	call	edx
	mov	BYTE PTR _thousands_sep$[esp+88], al
	jmp	SHORT $LN9@lcast_put_@2
$LN8@lcast_put_@2:
	mov	BYTE PTR _thousands_sep$[esp+88], 0
$LN9@lcast_put_@2:

; 518  :             std::string::size_type group = 0; // current group number
; 519  :             char last_grp_size = grouping[0] <= 0 ? CHAR_MAX : grouping[0];

	mov	ecx, DWORD PTR _$S1$[esp+112]
	mov	eax, DWORD PTR _$S1$[esp+92]
	mov	DWORD PTR _group$[esp+88], ebx
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN32@lcast_put_@2
	lea	eax, DWORD PTR _$S1$[esp+92]
$LN32@lcast_put_@2:
	cmp	BYTE PTR [eax], 0
	jg	SHORT $LN10@lcast_put_@2

; 520  :             // a) Since grouping is const, grouping[grouping.size()] returns 0.
; 521  :             // b) It's safe to assume here and below that CHAR_MAX
; 522  :             //    is equivalent to unlimited grouping:
; 523  : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 524  :             BOOST_STATIC_ASSERT(std::numeric_limits<T>::digits10 < CHAR_MAX);
; 525  : #endif
; 526  : 
; 527  :             char left = last_grp_size;

	mov	edi, DWORD PTR _n$[esp+88]
	mov	esi, DWORD PTR _n$[esp+84]
	mov	BYTE PTR _last_grp_size$[esp+88], 127	; 0000007fH
	mov	cl, BYTE PTR _last_grp_size$[esp+88]
	mov	BYTE PTR _left$[esp+88], cl
	jmp	SHORT $LN5@lcast_put_@2
$LN10@lcast_put_@2:

; 518  :             std::string::size_type group = 0; // current group number
; 519  :             char last_grp_size = grouping[0] <= 0 ? CHAR_MAX : grouping[0];

	mov	eax, DWORD PTR _$S1$[esp+92]
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN39@lcast_put_@2
	lea	eax, DWORD PTR _$S1$[esp+92]
$LN39@lcast_put_@2:
	mov	al, BYTE PTR [eax]

; 520  :             // a) Since grouping is const, grouping[grouping.size()] returns 0.
; 521  :             // b) It's safe to assume here and below that CHAR_MAX
; 522  :             //    is equivalent to unlimited grouping:
; 523  : #ifndef BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
; 524  :             BOOST_STATIC_ASSERT(std::numeric_limits<T>::digits10 < CHAR_MAX);
; 525  : #endif
; 526  : 
; 527  :             char left = last_grp_size;

	mov	edi, DWORD PTR _n$[esp+88]
	mov	esi, DWORD PTR _n$[esp+84]
	mov	cl, al
	mov	BYTE PTR _last_grp_size$[esp+88], al
	mov	BYTE PTR _left$[esp+88], cl
	jmp	SHORT $LN5@lcast_put_@2
	npad	6
$LL93@lcast_put_@2:
	mov	ebx, DWORD PTR _group$[esp+88]
$LN5@lcast_put_@2:

; 528  : #endif
; 529  : 
; 530  :             typedef typename Traits::int_type int_type;
; 531  :             CharT const czero = lcast_char_constants<CharT>::zero;
; 532  :             int_type const zero = Traits::to_int_type(czero);
; 533  : 
; 534  :             do
; 535  :             {
; 536  : #ifndef BOOST_LEXICAL_CAST_ASSUME_C_LOCALE
; 537  :                 if(left == 0)

	cmp	BYTE PTR _left$[esp+88], 0
	jne	SHORT $LN49@lcast_put_@2

; 538  :                 {
; 539  :                     ++group;

	inc	ebx
	mov	DWORD PTR _group$[esp+88], ebx

; 540  :                     if(group < grouping_size)

	cmp	ebx, DWORD PTR _grouping_size$[esp+88]
	jae	SHORT $LN13@lcast_put_@2

; 541  :                     {
; 542  :                         char const grp_size = grouping[group];

	cmp	ebx, DWORD PTR _$S1$[esp+108]
	jbe	SHORT $LN42@lcast_put_@2
	call	__invalid_parameter_noinfo
$LN42@lcast_put_@2:
	cmp	DWORD PTR _$S1$[esp+112], 16		; 00000010H
	mov	eax, DWORD PTR _$S1$[esp+92]
	jae	SHORT $LN48@lcast_put_@2
	lea	eax, DWORD PTR _$S1$[esp+92]
$LN48@lcast_put_@2:
	mov	al, BYTE PTR [eax+ebx]

; 543  :                         last_grp_size = grp_size <= 0 ? CHAR_MAX : grp_size;

	mov	BYTE PTR _last_grp_size$[esp+88], 127	; 0000007fH
	test	al, al
	jle	SHORT $LN13@lcast_put_@2
	mov	BYTE PTR _last_grp_size$[esp+88], al
$LN13@lcast_put_@2:

; 544  :                     }
; 545  : 
; 546  :                     left = last_grp_size;

	mov	dl, BYTE PTR _last_grp_size$[esp+88]

; 547  :                     --finish;
; 548  :                     Traits::assign(*finish, thousands_sep);

	mov	al, BYTE PTR _thousands_sep$[esp+88]
	dec	ebp
	mov	BYTE PTR _left$[esp+88], dl
	mov	BYTE PTR [ebp], al
$LN49@lcast_put_@2:

; 549  :                 }
; 550  : 
; 551  :                 --left;

	dec	BYTE PTR _left$[esp+88]

; 552  : #endif
; 553  : 
; 554  :                 --finish;
; 555  :                 int_type const digit = static_cast<int_type>(n % 10U);

	push	0
	push	10					; 0000000aH
	push	edi
	push	esi
	dec	ebp
	call	__aulldvrm

; 556  :                 Traits::assign(*finish, Traits::to_char_type(zero + digit));

	add	ecx, 48					; 00000030H
	mov	BYTE PTR [ebp], cl

; 557  :                 n /= 10;

	mov	esi, eax
	mov	edi, edx

; 558  :             } while(n);

	mov	ecx, esi
	or	ecx, edi
	mov	DWORD PTR tv141[esp+92], ebx
	jne	SHORT $LL93@lcast_put_@2

; 559  : 
; 560  :             return finish;

	cmp	DWORD PTR _$S1$[esp+112], 16		; 00000010H
	jb	SHORT $LN71@lcast_put_@2
	mov	edx, DWORD PTR _$S1$[esp+92]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@lcast_put_@2:
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[esp+96], -1
	mov	edi, DWORD PTR _loc$[esp+88]
	mov	DWORD PTR _$S1$[esp+112], 15		; 0000000fH
	mov	DWORD PTR _$S1$[esp+108], ebx
	mov	BYTE PTR _$S1$[esp+92], bl
	cmp	edi, ebx
	je	SHORT $LN92@lcast_put_@2
	push	ebx
	lea	ecx, DWORD PTR __Lock$471460[esp+92]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, ebx
	jbe	SHORT $LN86@lcast_put_@2
	cmp	eax, -1
	jae	SHORT $LN86@lcast_put_@2
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN86@lcast_put_@2:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$471460[esp+88]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	cmp	esi, ebx
	je	SHORT $LN92@lcast_put_@2
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN92@lcast_put_@2:
	mov	eax, ebp

; 561  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+88]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+68]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z$0:
	lea	ecx, DWORD PTR _loc$[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z$1:
	lea	ecx, DWORD PTR _$S1$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-72]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z ENDP ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned __int64,char>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z
_TEXT	SEGMENT
$T471489 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$471493 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$471493[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T471489[esp+12], 0
	mov	eax, DWORD PTR $T471489[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	add	ecx, 8
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	ecx, DWORD PTR [esi*8]
	sub	ecx, esi
	lea	eax, DWORD PTR [edi+ecx*4]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ufill
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
_TEXT	ENDS
;	COMDAT ?rethrow@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ
_TEXT	SEGMENT
$T471498 = -64						; size = 64
?rethrow@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::rethrow, COMDAT
; _this$ = ecx

; 381  :                 {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 64					; 00000040H

; 382  :                 throw*this;

	lea	eax, DWORD PTR [ecx-60]
	push	eax
	lea	ecx, DWORD PTR $T471498[esp+68]
	call	??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	push	OFFSET __TI7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@
	lea	eax, DWORD PTR $T471498[esp+68]
	push	eax
	mov	DWORD PTR $T471498[esp+72], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR $T471498[esp+112], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR $T471498[esp+132], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
	call	__CxxThrowException@8
$LN12@rethrow@2:
$LN11@rethrow@2:
	int	3
?rethrow@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::rethrow
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ$0
__ehfuncinfo$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
xdata$x	ENDS
;	COMDAT ?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
_TEXT	SEGMENT
$T471520 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone, COMDAT
; _this$ = ecx

; 375  :                 {

	push	-1
	push	__ehhandler$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx

; 376  :                 return new clone_impl(*this);

	push	64					; 00000040H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T471520[esp+28], esi
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[esp+36], eax
	cmp	esi, eax
	je	SHORT $LN6@clone@2
	lea	eax, DWORD PTR [edi-60]
	push	eax
	mov	ecx, esi
	call	??0?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@QAE@ABU012@@Z
	lea	eax, DWORD PTR [esi+60]
	mov	DWORD PTR [eax], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [eax], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@
$LN6@clone@2:

; 377  :                 }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ$0:
	mov	eax, DWORD PTR $T471520[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone
; Function compile flags: /Ogtpy
;	COMDAT ??1?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ
_TEXT	SEGMENT
??1?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::~clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >, COMDAT
; _this$ = ecx

; 368  :                 {

	mov	DWORD PTR [ecx], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [ecx+40], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@

; 369  :                 }

	mov	DWORD PTR [ecx+60], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	jmp	??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>
??1?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::~clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z PROC ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_function_call@2@@
	mov	DWORD PTR [esi+40], OFFSET ??_7?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@
	mov	DWORD PTR [esi+60], OFFSET ??_7clone_base@exception_detail@boost@@6B@
	call	??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@73
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@73:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z ENDP ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
$T471599 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$471602 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$471602[esp]
	mov	BYTE PTR $T471599[esp+4], 0
	mov	eax, DWORD PTR $T471599[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1142 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$unchecked_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z
_TEXT	SEGMENT
$T471620 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$471625 = 12					; size = 1
$T471622 = 12						; size = 1
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z PROC ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ecx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$471625[esp]
	mov	edx, DWORD PTR $T471622[esp]
	mov	BYTE PTR $T471620[esp+4], 0
	mov	eax, DWORD PTR $T471620[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 3607 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z ENDP ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
_TEXT	ENDS
;	COMDAT ??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T471664 = 8						; size = 1
_str$ = 8						; size = 4
??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::operator>><std::allocator<char> >, COMDAT
; _this$ = eax

; 798  :             {
; 799  :                 str.assign(start, finish);

	mov	ecx, DWORD PTR $T471664[esp-4]
	mov	edx, DWORD PTR [eax+64]
	mov	eax, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _str$[esp]
	push	edx
	push	eax
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 800  :                 return true;

	mov	al, 1

; 801  :             }

	ret	4
??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::operator>><std::allocator<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T471683 = 8						; size = 1
_str$ = 8						; size = 4
??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator>><std::allocator<char> >, COMDAT
; _this$ = ecx

; 798  :             {
; 799  :                 str.assign(start, finish);

	mov	eax, DWORD PTR $T471683[esp-4]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _str$[esp]
	push	edx
	push	eax
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 800  :                 return true;

	mov	al, 1

; 801  :             }

	ret	4
??$?5V?$allocator@D@std@@@?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator>><std::allocator<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NH@Z
_TEXT	SEGMENT
??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NH@Z PROC ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<, COMDAT
; _this$ = edi
; _n$ = esi

; 854  :         {

	push	ecx

; 855  :             start = lcast_put_unsigned<Traits>(lcast_to_unsigned(n), finish);

	mov	ecx, esi
	test	esi, esi
	jge	SHORT $LN7@operator@347
	neg	ecx
$LN7@operator@347:
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned int,char>
	add	esp, 4
	mov	DWORD PTR [edi], eax

; 856  :             if(n < 0)

	test	esi, esi
	jge	SHORT $LN10@operator@347

; 857  :             {
; 858  :                 --start;

	dec	eax
	mov	DWORD PTR [edi], eax

; 859  :                 CharT const minus = lcast_char_constants<CharT>::minus;
; 860  :                 Traits::assign(*start, minus);

	mov	BYTE PTR [eax], 45			; 0000002dH
$LN10@operator@347:

; 861  :             }
; 862  :             return true;

	mov	al, 1
	pop	ecx

; 863  :         }

	ret	0
??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NH@Z ENDP ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NI@Z
_TEXT	SEGMENT
??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NI@Z PROC ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<, COMDAT
; _this$ = esi
; _n$ = ecx

; 921  :             start = lcast_put_unsigned<Traits>(n, finish);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned int,char>
	mov	DWORD PTR [esi], eax
	add	esp, 4

; 922  :             return true;

	mov	al, 1

; 923  :         }

	ret	0
??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_NI@Z ENDP ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_N_J@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_n$ = 12						; size = 8
??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_N_J@Z PROC ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<, COMDAT

; 883  :         {

	push	ebx
	mov	ebx, DWORD PTR _this$[esp]
	push	esi

; 884  :             start = lcast_put_unsigned<Traits>(lcast_to_unsigned(n), finish);

	mov	esi, DWORD PTR _n$[esp+8]
	push	edi
	mov	edi, DWORD PTR _n$[esp+8]
	test	esi, esi
	jg	SHORT $LN6@operator@348
	jl	SHORT $LN10@operator@348
	test	edi, edi
	jae	SHORT $LN6@operator@348
$LN10@operator@348:
	mov	ecx, edi
	neg	ecx
	mov	eax, esi
	adc	eax, 0
	neg	eax
	jmp	SHORT $LN7@operator@348
$LN6@operator@348:
	mov	ecx, edi
	mov	eax, esi
$LN7@operator@348:
	mov	edx, DWORD PTR [ebx+4]
	push	edx
	push	eax
	push	ecx
	call	??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned __int64,char>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ebx], eax

; 885  :             if(n < 0)

	test	esi, esi
	jg	SHORT $LN13@operator@348
	jl	SHORT $LN11@operator@348
	test	edi, edi
	jae	SHORT $LN13@operator@348
$LN11@operator@348:

; 886  :             {
; 887  :                 --start;

	dec	eax
	mov	DWORD PTR [ebx], eax

; 888  :                 CharT const minus = lcast_char_constants<CharT>::minus;
; 889  :                 Traits::assign(*start, minus);

	mov	BYTE PTR [eax], 45			; 0000002dH
$LN13@operator@348:
	pop	edi
	pop	esi

; 890  :             }
; 891  :             return true;

	mov	al, 1
	pop	ebx

; 892  :         }

	ret	12					; 0000000cH
??6?$lexical_stream_limited_src@DUlexical_streambuf_fake@detail@boost@@U?$char_traits@D@std@@@detail@boost@@QAE_N_J@Z ENDP ; boost::detail::lexical_stream_limited_src<char,boost::detail::lexical_streambuf_fake,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z
_TEXT	SEGMENT
__Cat$471960 = -4					; size = 1
$T471917 = -4						; size = 1
__Cat$471921 = -4					; size = 1
$T471919 = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 8
__Last_arg$ = 20					; size = 8
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	push	edi

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esi, ecx
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN8@erase@16
	mov	eax, DWORD PTR __First_arg$[ebp+4]
	cmp	DWORD PTR [esi+12], eax
	ja	SHORT $LN8@erase@16
	cmp	eax, DWORD PTR [esi+16]
	jbe	SHORT $LN9@erase@16
$LN8@erase@16:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First_arg$[ebp+4]
$LN9@erase@16:

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ebx, DWORD PTR __Last_arg$[ebp+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edi], ecx
	mov	DWORD PTR [edi+4], eax
	cmp	DWORD PTR [esi+12], ebx
	ja	SHORT $LN24@erase@16
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN25@erase@16
$LN24@erase@16:
	call	__invalid_parameter_noinfo
	mov	ebx, DWORD PTR __Last_arg$[ebp+4]
$LN25@erase@16:

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN38@erase@16
	cmp	eax, ecx
	je	SHORT $LN39@erase@16
$LN38@erase@16:
	call	__invalid_parameter_noinfo
$LN39@erase@16:
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, ebx
	je	SHORT $LN66@erase@16

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR [esi+16]
	mov	BYTE PTR $T471917[esp+16], 0
	mov	edx, DWORD PTR $T471917[esp+16]
	push	edx
	mov	edx, DWORD PTR __Cat$471921[esp+20]
	push	edx
	mov	edx, DWORD PTR $T471919[esp+24]
	push	edx
	push	ecx
	push	eax
	push	ebx
	call	??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	edx, DWORD PTR [esi+16]
	mov	ebx, eax
	mov	eax, DWORD PTR __Cat$471960[esp+40]
	push	eax
	lea	ecx, DWORD PTR [esi+8]
	push	ecx
	push	edx
	push	ebx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 40					; 00000028H

; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [esi+16], ebx
$LN66@erase@16:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, edi

; 1055 : #endif
; 1056 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 637  : 		{	// construct from [_Ptr, _Ptr + _Count)

	push	esi
	mov	esi, ecx

; 638  : 		_Tidy();
; 639  : 		assign(_Ptr, _Count);

	mov	ecx, DWORD PTR __Ptr$[esp]
	xor	eax, eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	BYTE PTR [esi+4], al
	mov	eax, DWORD PTR __Count$[esp]
	push	eax
	push	ecx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 640  : 		}

	mov	eax, esi
	pop	esi
	ret	8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3
__ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
xdata$x	ENDS
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T472068 = -76						; size = 4
__Str$156996 = -72					; size = 28
__Str$156993 = -72					; size = 28
__Nul$156998 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx

; 60   : 		{	// return string copy of character array

	push	-1
	push	__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, eax

; 61   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != 0)

	mov	edx, DWORD PTR [ecx+64]
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+88]
	xor	ebx, ebx
	mov	DWORD PTR $T472068[esp+92], ebx
	test	dl, 2
	jne	SHORT $LN4@str@3
	mov	eax, DWORD PTR [ecx+36]
	cmp	DWORD PTR [eax], ebx
	je	SHORT $LN4@str@3

; 62   : 			{	// writable, make string from write buffer
; 63   : 			_Mystr _Str(_Mysb::pbase(), (_Seekhigh < _Mysb::pptr()
; 64   : 				? _Mysb::pptr() : _Seekhigh) - _Mysb::pbase());

	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+60]
	cmp	edx, eax
	jb	SHORT $LN8@str@3
	mov	eax, edx
$LN8@str@3:
	mov	ecx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR [ecx]
	sub	eax, ecx
	push	eax
	push	ecx
	mov	edi, 15					; 0000000fH
	lea	ecx, DWORD PTR __Str$156993[esp+100]
	mov	DWORD PTR __Str$156993[esp+124], edi
	mov	DWORD PTR __Str$156993[esp+120], ebx
	mov	BYTE PTR __Str$156993[esp+104], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+100], ebx
$LN286@str@3:

; 65   : 			return (_Str);

	push	-1
	push	ebx
	lea	edx, DWORD PTR __Str$156993[esp+100]
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+20], ebx
	push	edx
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR __Str$156993[esp+116], 16	; 00000010H
	jb	$LN274@str@3
	mov	eax, DWORD PTR __Str$156993[esp+96]
	push	eax
	jmp	SHORT $LN285@str@3
$LN4@str@3:

; 66   : 			}
; 67   : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != 0)

	test	dl, 4
	jne	SHORT $LN2@str@3
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx], ebx
	je	SHORT $LN2@str@3

; 68   : 			{	// readable, make string from read buffer
; 69   : 			_Mystr _Str(_Mysb::eback(), _Mysb::egptr() - _Mysb::eback());

	mov	eax, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR [ecx]
	sub	eax, ecx
	push	eax
	push	ecx
	mov	edi, 15					; 0000000fH
	lea	ecx, DWORD PTR __Str$156996[esp+100]
	mov	DWORD PTR __Str$156996[esp+124], edi
	mov	DWORD PTR __Str$156996[esp+120], ebx
	mov	BYTE PTR __Str$156996[esp+104], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+100], 1

; 70   : 			return (_Str);

	jmp	SHORT $LN286@str@3
$LN2@str@3:

; 71   : 			}
; 72   : 		else
; 73   : 			{	// inaccessible, return empty string
; 74   : 			_Mystr _Nul;

	mov	edi, 15					; 0000000fH
	mov	DWORD PTR __Nul$156998[esp+116], edi
	mov	DWORD PTR __Nul$156998[esp+112], ebx
	mov	BYTE PTR __Nul$156998[esp+96], bl

; 75   : 			return (_Nul);

	push	-1
	mov	DWORD PTR __$EHRec$[esp+104], 2
	push	ebx
	lea	ecx, DWORD PTR __Nul$156998[esp+100]
	push	ecx
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+20], ebx
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR __Nul$156998[esp+116], 16	; 00000010H
	jb	SHORT $LN274@str@3
	mov	edx, DWORD PTR __Nul$156998[esp+96]
	push	edx
$LN285@str@3:
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN274@str@3:
	mov	eax, esi

; 76   : 			}
; 77   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0:
	lea	ecx, DWORD PTR __Str$156993[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2:
	lea	ecx, DWORD PTR __Str$156996[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3:
	lea	ecx, DWORD PTR __Nul$156998[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-76]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
$T473178 = -8						; size = 8
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 1060 : 		erase(begin(), end());

	mov	ebp, DWORD PTR [esi+16]
	push	edi
	cmp	DWORD PTR [esi+12], ebp
	jbe	SHORT $LN8@clear@16
	call	__invalid_parameter_noinfo
$LN8@clear@16:
	mov	edi, DWORD PTR [esi+12]
	mov	ebx, DWORD PTR [esi]
	cmp	edi, DWORD PTR [esi+16]
	jbe	SHORT $LN24@clear@16
	call	__invalid_parameter_noinfo
$LN24@clear@16:
	mov	eax, DWORD PTR [esi]
	push	ebp
	push	ebx
	push	edi
	push	eax
	lea	eax, DWORD PTR $T473178[esp+40]
	push	eax
	mov	ecx, esi
	call	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 1061 : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
_TEXT	ENDS
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T473310 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx

; 504  : 		{	// return string copy of character array

	push	ecx
	push	esi

; 505  : 		return (_Stringbuffer.str());

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	push	esi
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR $T473310[esp+12], 0
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, esi
	pop	esi

; 506  : 		}

	pop	ecx
	ret	4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap, COMDAT
; _this$ = ecx

; 1735 : 		{	// exchange contents with _Right

	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4], eax
	mov	eax, ecx
	mov	ecx, DWORD PTR __Right$[esp]

; 1736 : 		if (this == &_Right)

	cmp	eax, ecx
	je	SHORT $LN68@swap@14

; 1737 : 			;	// same object, do nothing
; 1738 : 		else if (_Mybase::_Alval == _Right._Alval)
; 1739 : 			{	// same allocator, swap control information
; 1740 : 
; 1741 :  #if _HAS_ITERATOR_DEBUGGING
; 1742 : 			this->_Swap_all(_Right);
; 1743 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1744 : 
; 1745 : 			_Bxty _Tbx = _Bx;
; 1746 : 			_Bx = _Right._Bx, _Right._Bx = _Tbx;

	movq	xmm2, QWORD PTR [ecx+4]
	movq	xmm0, QWORD PTR [eax+4]
	movq	xmm1, QWORD PTR [eax+12]
	movq	QWORD PTR [eax+4], xmm2
	movq	xmm2, QWORD PTR [ecx+12]
	movq	QWORD PTR [eax+12], xmm2
	movq	QWORD PTR [ecx+4], xmm0
	push	esi

; 1747 : 
; 1748 : 			size_type _Tlen = _Mysize;
; 1749 : 			_Mysize = _Right._Mysize, _Right._Mysize = _Tlen;

	mov	esi, DWORD PTR [ecx+20]
	movq	QWORD PTR [ecx+12], xmm1
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR [eax+20], esi

; 1750 : 
; 1751 : 			size_type _Tres = _Myres;
; 1752 : 			_Myres = _Right._Myres, _Right._Myres = _Tres;

	mov	esi, DWORD PTR [ecx+24]
	mov	DWORD PTR [ecx+20], edx
	mov	edx, DWORD PTR [eax+24]
	mov	DWORD PTR [eax+24], esi
	mov	DWORD PTR [ecx+24], edx
	pop	esi

; 1753 : 			}
; 1754 : 		else
; 1755 : 			{	// different allocator, do multiple assigns
; 1756 : 			_Myt _Tmp = *this;
; 1757 : 
; 1758 : 			*this = _Right;
; 1759 : 			_Right = _Tmp;
; 1760 : 			}

$LN68@swap@14:

; 1761 : 		}

	mov	ecx, DWORD PTR __$ArrayPad$[esp+4]
	xor	ecx, esp
	call	@__security_check_cookie@4
	pop	ecx
	ret	4
?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	mov	ecx, esi
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN7@scalar@74
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@74:
	mov	eax, esi
	pop	esi
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	esi
	lea	esi, DWORD PTR [ecx+84]
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T473584 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T473584[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T473584[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@349
	mov	edx, DWORD PTR $T473584[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@349:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T473584[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T473727 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T473727[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T473727[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@350
	mov	edx, DWORD PTR $T473727[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@350:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T473727[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T473870 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T473870[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T473870[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@351
	mov	edx, DWORD PTR $T473870[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@351:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T473870[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T474013 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T474013[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T474013[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@352
	mov	edx, DWORD PTR $T474013[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@352:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T474013[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T474156 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T474156[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T474156[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@353
	mov	edx, DWORD PTR $T474156[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@353:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T474156[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T474299 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T474299[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T474299[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@354
	mov	edx, DWORD PTR $T474299[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@354:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T474299[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T474442 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T474442[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T474442[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@355
	mov	edx, DWORD PTR $T474442[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@355:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T474442[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T474585 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_output$ = 8						; size = 4
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::operator>>, COMDAT
; _this$ = ecx

; 629  :             {

	push	-1
	push	__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, eax

; 630  :                 stream.str().swap(output);

	lea	eax, DWORD PTR $T474585[esp+44]
	push	eax
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR _output$[esp+40]
	push	ecx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap
	cmp	DWORD PTR $T474585[esp+68], 16		; 00000010H
	jb	SHORT $LN30@operator@356
	mov	edx, DWORD PTR $T474585[esp+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@operator@356:

; 631  :                 return true;

	mov	al, 1

; 632  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T474585[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-28]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ
_TEXT	SEGMENT
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >, COMDAT
; _this$ = eax

; 583  :             {

	push	esi

; 584  :                 #if defined(BOOST_NO_STRINGSTREAM)
; 585  :                 stream.freeze(false);
; 586  :                 #endif
; 587  :             }

	mov	esi, eax
	add	esi, 84					; 00000054H
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z$0
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z
_TEXT	SEGMENT
$T474917 = -48						; size = 1
$T474732 = -48						; size = 4
_result$154955 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_buf$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,0,char>, COMDAT
; ___$ReturnUdt$ = esi
; _arg$ = ecx

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+48], eax
	push	ebx
	push	ebp
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+64]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	eax, DWORD PTR _buf$[esp+60]
	xor	ebx, ebx

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);
; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	cmp	edi, ebx
	mov	DWORD PTR $T474732[esp+64], ebx
	lea	ebp, DWORD PTR [eax+20]
	jge	SHORT $LN17@lexical_ca
	neg	ecx
$LN17@lexical_ca:
	push	ebp
	call	??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned int,char>
	add	esp, 4
	cmp	edi, ebx
	jge	SHORT $LN18@lexical_ca
	dec	eax
	mov	BYTE PTR [eax], 45			; 0000002dH
$LN18@lexical_ca:

; 1150 :                 Target result;

	mov	edi, 15					; 0000000fH
	mov	DWORD PTR _result$154955[esp+88], edi
	mov	DWORD PTR _result$154955[esp+84], ebx
	mov	BYTE PTR _result$154955[esp+68], bl
	mov	DWORD PTR __$EHRec$[esp+72], ebx

; 1151 :                 if (interpreter >> result)

	mov	ecx, DWORD PTR $T474917[esp+64]
	push	ecx
	push	ebp
	push	eax
	lea	ecx, DWORD PTR _result$154955[esp+76]
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	edx, DWORD PTR _result$154955[esp+72]
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+20], ebx
	push	edx
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$154955[esp+88], 16	; 00000010H
	jb	SHORT $LN173@lexical_ca
	mov	eax, DWORD PTR _result$154955[esp+68]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN173@lexical_ca:
	mov	eax, esi

; 1153 :             }
; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+64]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z$0:
	lea	ecx, DWORD PTR _result$154955[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-48]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,0,char>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z$0
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z
_TEXT	SEGMENT
$T475590 = -52						; size = 1
$T475405 = -52						; size = 4
_interpreter$ = -52					; size = 8
_result$147824 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64,0,char>, COMDAT
; ___$ReturnUdt$ = edi
; _buf$ = ecx

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+52], eax
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+68]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _arg$[esp+64]
	xor	ebx, ebx
	mov	DWORD PTR $T475405[esp+68], ebx

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);
; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	esi, DWORD PTR [eax+4]
	cmp	esi, ebx
	mov	ebp, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+38]
	mov	DWORD PTR _interpreter$[esp+72], edx
	jg	SHORT $LN16@lexical_ca@2
	jl	SHORT $LN173@lexical_ca@2
	cmp	ebp, ebx
	jae	SHORT $LN16@lexical_ca@2
$LN173@lexical_ca@2:
	mov	ecx, ebp
	neg	ecx
	mov	eax, esi
	adc	eax, ebx
	neg	eax
	jmp	SHORT $LN17@lexical_ca@2
$LN16@lexical_ca@2:
	mov	ecx, ebp
	mov	eax, esi
$LN17@lexical_ca@2:
	push	edx
	push	eax
	push	ecx
	call	??$lcast_put_unsigned@U?$char_traits@D@std@@_KD@detail@boost@@YAPAD_KPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned __int64,char>
	add	esp, 12					; 0000000cH
	cmp	esi, ebx
	jg	SHORT $LN18@lexical_ca@2
	jl	SHORT $LN174@lexical_ca@2
	cmp	ebp, ebx
	jae	SHORT $LN18@lexical_ca@2
$LN174@lexical_ca@2:
	dec	eax
	mov	BYTE PTR [eax], 45			; 0000002dH
$LN18@lexical_ca@2:

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$147824[esp+92], esi
	mov	DWORD PTR _result$147824[esp+88], ebx
	mov	BYTE PTR _result$147824[esp+72], bl
	mov	DWORD PTR __$EHRec$[esp+76], ebx

; 1151 :                 if (interpreter >> result)

	mov	ecx, DWORD PTR $T475590[esp+68]
	mov	edx, DWORD PTR _interpreter$[esp+72]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR _result$147824[esp+80]
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	eax, DWORD PTR _result$147824[esp+76]
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	push	eax
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147824[esp+92], 16	; 00000010H
	jb	SHORT $LN175@lexical_ca@2
	mov	ecx, DWORD PTR _result$147824[esp+72]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN175@lexical_ca@2:
	mov	eax, edi

; 1153 :             }
; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+68]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 52					; 00000034H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z$0:
	lea	ecx, DWORD PTR _result$147824[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-52]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64,0,char>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z$0
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z
_TEXT	SEGMENT
$T476280 = -48						; size = 1
$T476082 = -48						; size = 4
_result$147643 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0,char>, COMDAT
; ___$ReturnUdt$ = esi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+48], eax
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _arg$[esp+52]
	xor	ebx, ebx
	mov	DWORD PTR $T476082[esp+56], ebx

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);
; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN19@lexical_ca@3
	mov	ecx, DWORD PTR [eax+4]
	jmp	SHORT $LN20@lexical_ca@3
$LN19@lexical_ca@3:
	lea	ecx, DWORD PTR [eax+4]
$LN20@lexical_ca@3:
	mov	eax, DWORD PTR [eax+20]
	add	eax, ecx

; 1150 :                 Target result;

	mov	DWORD PTR _result$147643[esp+80], 15	; 0000000fH
	mov	DWORD PTR _result$147643[esp+76], ebx
	mov	BYTE PTR _result$147643[esp+60], bl
	mov	DWORD PTR __$EHRec$[esp+64], ebx

; 1151 :                 if (interpreter >> result)

	mov	edx, DWORD PTR $T476280[esp+56]
	push	edx
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _result$147643[esp+68]
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	eax, DWORD PTR _result$147643[esp+64]
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147643[esp+80], 16	; 00000010H
	jb	SHORT $LN176@lexical_ca@3
	mov	ecx, DWORD PTR _result$147643[esp+60]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN176@lexical_ca@3:
	mov	eax, esi

; 1153 :             }
; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z$0:
	lea	ecx, DWORD PTR _result$147643[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-40]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0,char>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z$0
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z
_TEXT	SEGMENT
$T476932 = -48						; size = 1
$T476770 = -48						; size = 4
_result$146538 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_buf$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,0,char>, COMDAT
; ___$ReturnUdt$ = esi
; _arg$ = ecx

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+48], eax
	push	ebx
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _buf$[esp+56]

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	lea	edi, DWORD PTR [eax+19]
	xor	ebx, ebx

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	push	edi
	mov	DWORD PTR $T476770[esp+64], ebx
	call	??$lcast_put_unsigned@U?$char_traits@D@std@@ID@detail@boost@@YAPADIPAD@Z ; boost::detail::lcast_put_unsigned<std::char_traits<char>,unsigned int,char>
	add	esp, 4

; 1150 :                 Target result;

	mov	DWORD PTR _result$146538[esp+84], 15	; 0000000fH
	mov	DWORD PTR _result$146538[esp+80], ebx
	mov	BYTE PTR _result$146538[esp+64], bl
	mov	DWORD PTR __$EHRec$[esp+68], ebx

; 1151 :                 if (interpreter >> result)

	mov	ecx, DWORD PTR $T476932[esp+60]
	push	ecx
	push	edi
	push	eax
	lea	ecx, DWORD PTR _result$146538[esp+72]
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	edx, DWORD PTR _result$146538[esp+68]
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	edx
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$146538[esp+84], 16	; 00000010H
	jb	SHORT $LN166@lexical_ca@4
	mov	eax, DWORD PTR _result$146538[esp+64]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN166@lexical_ca@4:
	mov	eax, esi

; 1153 :             }
; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z$0:
	lea	ecx, DWORD PTR _result$146538[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-44]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,0,char>
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\any.hpp
xdata$x	SEGMENT
__unwindtable$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ$0
__ehfuncinfo$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ
_TEXT	SEGMENT
$T477417 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ PROC ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::clone, COMDAT
; _this$ = ecx

; 122  :             {

	push	-1
	push	__ehhandler$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx

; 123  :                 return new holder(held);

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T477417[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+32], 0
	test	eax, eax
	je	SHORT $LN3@clone@3
	add	esi, 4
	push	esi
	mov	ecx, eax
	call	??0?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 124  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
$LN3@clone@3:

; 123  :                 return new holder(held);

	xor	eax, eax

; 124  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ$0:
	mov	eax, DWORD PTR $T477417[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?clone@?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@UBEPAVplaceholder@23@XZ ENDP ; boost::any::holder<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::clone
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z
_TEXT	SEGMENT
$T477432 = -32						; size = 4
_buf$ = -28						; size = 21
__$ArrayPad$ = -4					; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>, COMDAT
; ___$ReturnUdt$ = edx
; _arg$ = ecx

; 1165 :     {

	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+32], eax

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	mov	ecx, DWORD PTR [ecx]
	push	esi
	lea	eax, DWORD PTR _buf$[esp+36]
	mov	esi, edx
	push	eax
	mov	DWORD PTR $T477432[esp+40], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int,0,char>

; 1178 :     }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	add	esp, 4
	mov	eax, esi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtpy
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_J@Z
_TEXT	SEGMENT
$T477443 = -48						; size = 4
_buf$ = -44						; size = 39
__$ArrayPad$ = -4					; size = 4
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_J@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64>, COMDAT
; ___$ReturnUdt$ = ecx

; 1165 :     {

	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+48], eax
	mov	eax, DWORD PTR _arg$[esp+44]
	push	edi
	mov	edi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	lea	ecx, DWORD PTR _buf$[esp+56]
	mov	DWORD PTR $T477443[esp+56], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_JPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64,0,char>

; 1178 :     }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+56]
	add	esp, 4
	mov	eax, edi
	pop	edi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_J@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
_TEXT	SEGMENT
$T477454 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	sub	esp, 8
	push	esi
	mov	esi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T477454[esp+16], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0,char>
	add	esp, 4
	mov	eax, esi

; 1178 :     }

	pop	esi
	add	esp, 8
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtpy
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
_TEXT	SEGMENT
$T477464 = -28						; size = 4
_buf$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>, COMDAT
; ___$ReturnUdt$ = edx
; _arg$ = ecx

; 1165 :     {

	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+28], eax

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	mov	ecx, DWORD PTR [ecx]
	push	esi
	lea	eax, DWORD PTR _buf$[esp+32]
	mov	esi, edx
	push	eax
	mov	DWORD PTR $T477464[esp+36], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,0,char>

; 1178 :     }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	add	esp, 4
	mov	eax, esi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\value_semantic.hpp
xdata$x	ENDS
;	COMDAT ?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T477518 = -44						; size = 4
$T477474 = -40						; size = 28
__$EHRec$ = -12						; size = 12
?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::default_value, COMDAT
; _this$ = esi
; _v$ = edi

; 188  :         {

	push	-1
	push	__ehhandler$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax

; 189  :             m_default_value = boost::any(v);

	push	edi
	lea	ecx, DWORD PTR $T477518[esp+56]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::any::any<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	lea	eax, DWORD PTR [esi+12]
	lea	ecx, DWORD PTR $T477518[esp+52]
	cmp	ecx, eax
	je	SHORT $LN48@default_va
	mov	edx, DWORD PTR $T477518[esp+52]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T477518[esp+52], ecx
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN10@default_va
$LN48@default_va:
	mov	ecx, DWORD PTR $T477518[esp+52]
$LN10@default_va:
	test	ecx, ecx
	je	SHORT $LN15@default_va
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN15@default_va:

; 190  :             m_default_value_as_text = boost::lexical_cast<std::string>(v);

	mov	eax, edi
	lea	ecx, DWORD PTR $T477474[esp+52]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	push	-1
	push	0
	push	eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR __$EHRec$[esp+72], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T477474[esp+76], 16		; 00000010H
	jb	SHORT $LN47@default_va
	mov	ecx, DWORD PTR $T477474[esp+56]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN47@default_va:

; 191  :             return this;

	mov	eax, esi

; 192  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T477474[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::default_value
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\settings.h
;	COMDAT ?detokenize@Settings@DRAMsimII@@SA_NW4FileIOToken@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_result$ = -12						; size = 8
_token$ = 8						; size = 4
_value$ = 12						; size = 4
?detokenize@Settings@DRAMsimII@@SA_NW4FileIOToken@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; DRAMsimII::Settings::detokenize, COMDAT

; 500  : 		{

	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi

; 501  : 			std::map<FileIOToken,std::string>::iterator result = lookupMap.find(token);

	lea	eax, DWORD PTR _token$[esp+24]
	push	eax
	lea	ecx, DWORD PTR _result$[esp+32]
	push	ecx
	call	?find@?$_Tree@V?$_Tmap_traits@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABW4FileIOToken@DRAMsimII@@@Z ; std::_Tree<std::_Tmap_traits<enum DRAMsimII::FileIOToken,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<enum DRAMsimII::FileIOToken>,std::allocator<std::pair<enum DRAMsimII::FileIOToken const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::find

; 502  : 
; 503  : 			if (result != lookupMap.end())

	mov	esi, DWORD PTR _result$[esp+28]
	mov	edi, DWORD PTR ?lookupMap@Settings@DRAMsimII@@0V?$map@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@@std@@A+24
	test	esi, esi
	je	SHORT $LN22@detokenize@2
	cmp	esi, DWORD PTR ?lookupMap@Settings@DRAMsimII@@0V?$map@W4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@W4FileIOToken@DRAMsimII@@@4@V?$allocator@U?$pair@$$CBW4FileIOToken@DRAMsimII@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@4@@std@@A
	je	SHORT $LN23@detokenize@2
$LN22@detokenize@2:
	call	__invalid_parameter_noinfo
$LN23@detokenize@2:
	mov	ebx, DWORD PTR _result$[esp+32]
	cmp	ebx, edi
	je	SHORT $LN2@detokenize@2

; 504  : 			{
; 505  : 				value = result->second;

	test	esi, esi
	jne	SHORT $LN52@detokenize@2
	call	__invalid_parameter_noinfo
$LN43@detokenize@2:
	cmp	ebx, DWORD PTR [esi+24]
	jne	SHORT $LN34@detokenize@2
	call	__invalid_parameter_noinfo
$LN34@detokenize@2:
	mov	ecx, DWORD PTR _value$[esp+24]
	push	-1
	push	0
	add	ebx, 16					; 00000010H
	push	ebx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 506  : 				return true;

	mov	al, 1

; 507  : 			}
; 508  : 			else
; 509  : 				return false;
; 510  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
$LN52@detokenize@2:

; 504  : 			{
; 505  : 				value = result->second;

	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN43@detokenize@2
$LN2@detokenize@2:

; 507  : 			}
; 508  : 			else
; 509  : 				return false;
; 510  : 		}

	pop	edi
	pop	esi
	xor	al, al
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
?detokenize@Settings@DRAMsimII@@SA_NW4FileIOToken@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; DRAMsimII::Settings::detokenize
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??0bad_function_call@boost@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0bad_function_call@boost@@QAE@XZ$0
__ehfuncinfo$??0bad_function_call@boost@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0bad_function_call@boost@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\function\function_base.hpp
xdata$x	ENDS
;	COMDAT ??0bad_function_call@boost@@QAE@XZ
_TEXT	SEGMENT
$T477821 = -40						; size = 28
__$EHRec$ = -12						; size = 12
??0bad_function_call@boost@@QAE@XZ PROC			; boost::bad_function_call::bad_function_call, COMDAT
; _this$ = ecx

; 734  :   bad_function_call() : std::runtime_error("call to empty boost::function") {}

	push	-1
	push	__ehhandler$??0bad_function_call@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	push	29					; 0000001dH
	push	OFFSET ??_C@_0BO@HKHPGMPA@call?5to?5empty?5boost?3?3function?$AA@
	lea	ecx, DWORD PTR $T477821[esp+56]
	mov	DWORD PTR $T477821[esp+80], 15		; 0000000fH
	mov	DWORD PTR $T477821[esp+76], 0
	mov	BYTE PTR $T477821[esp+60], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T477821[esp+48]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+60], 0
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	cmp	DWORD PTR $T477821[esp+72], 16		; 00000010H
	jb	SHORT $LN67@bad_functi@2
	mov	ecx, DWORD PTR $T477821[esp+52]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN67@bad_functi@2:
	mov	eax, esi
	mov	DWORD PTR [esi], OFFSET ??_7bad_function_call@boost@@6B@
	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0bad_function_call@boost@@QAE@XZ$0:
	lea	ecx, DWORD PTR $T477821[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0bad_function_call@boost@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-32]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_function_call@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_function_call@boost@@QAE@XZ ENDP			; boost::bad_function_call::bad_function_call
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ??$swap@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::swap<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2206 : 	_Left.swap(_Right);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR __Left$[esp-4]
	push	eax
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap

; 2207 : 	}

	ret	0
??$swap@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::swap<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$_Swap_adl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Swap_adl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 31   : 	swap(_Left, _Right);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR __Left$[esp-4]
	push	eax
	call	?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::swap

; 32   : 	}

	ret	0
??$_Swap_adl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Swap_adl<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	__$ArrayPad$512420
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Reverse@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__$ArrayPad$512420 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Reverse@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reverse, COMDAT
; _this$ = ecx

; 997  : 		{	// reverse a subrange

	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$512420[esp+4], eax
	mov	eax, DWORD PTR __First$[esp]
	mov	ecx, DWORD PTR __Last$[esp]

; 998  : 		for (; _First != _Last && _First != --_Last; ++_First)

	cmp	eax, ecx
	je	SHORT $LN1@Reverse
	push	esi
$LL3@Reverse:
	sub	ecx, 28					; 0000001cH
	cmp	eax, ecx
	je	SHORT $LN82@Reverse

; 999  : 			_STD _Swap_adl(*_First, *_Last);

	movq	xmm0, QWORD PTR [eax+4]
	movq	xmm1, QWORD PTR [eax+12]
	movq	xmm2, QWORD PTR [ecx+4]
	movq	QWORD PTR [eax+4], xmm2
	movq	xmm2, QWORD PTR [ecx+12]
	movq	QWORD PTR [eax+12], xmm2
	mov	esi, DWORD PTR [ecx+20]
	movq	QWORD PTR [ecx+4], xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR [eax+20], esi
	mov	esi, DWORD PTR [ecx+24]
	mov	DWORD PTR [ecx+20], edx
	mov	edx, DWORD PTR [eax+24]
	mov	DWORD PTR [eax+24], esi
	add	eax, 28					; 0000001cH
	mov	DWORD PTR [ecx+24], edx
	cmp	eax, ecx
	jne	SHORT $LL3@Reverse
$LN82@Reverse:
	pop	esi
$LN1@Reverse:

; 1000 : 		}

	mov	ecx, DWORD PTR __$ArrayPad$512420[esp+4]
	xor	ecx, esp
	call	@__security_check_cookie@4
	pop	ecx
	ret	8
?_Reverse@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reverse
_TEXT	ENDS
PUBLIC	__$ArrayPad$512859
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__$ArrayPad$512859 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>, COMDAT

; 2761 : 	{	// use swap instead of the copy constructor

	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$512859[esp+4], eax
	mov	ecx, DWORD PTR __Last$[esp]
	mov	eax, DWORD PTR __Dest$[esp]
	push	esi

; 2762 : 	_DEBUG_RANGE(_First, _Last);
; 2763 : 	while (_First != _Last)

	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ecx
	je	SHORT $LN1@Move_backw@8
	push	edi
	npad	3
$LL2@Move_backw@8:

; 2764 : 		_STD _Swap_adl(*--_Dest, *--_Last);

	sub	ecx, 28					; 0000001cH
	sub	eax, 28					; 0000001cH
	cmp	eax, ecx
	je	SHORT $LN76@Move_backw@8
	movq	xmm2, QWORD PTR [ecx+4]
	movq	xmm0, QWORD PTR [eax+4]
	movq	xmm1, QWORD PTR [eax+12]
	movq	QWORD PTR [eax+4], xmm2
	movq	xmm2, QWORD PTR [ecx+12]
	movq	QWORD PTR [eax+12], xmm2
	mov	edi, DWORD PTR [ecx+20]
	movq	QWORD PTR [ecx+4], xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR [eax+20], edi
	mov	edi, DWORD PTR [ecx+24]
	mov	DWORD PTR [ecx+20], edx
	mov	edx, DWORD PTR [eax+24]
	mov	DWORD PTR [eax+24], edi
	mov	DWORD PTR [ecx+24], edx
$LN76@Move_backw@8:

; 2762 : 	_DEBUG_RANGE(_First, _Last);
; 2763 : 	while (_First != _Last)

	cmp	ecx, esi
	jne	SHORT $LL2@Move_backw@8
	pop	edi
$LN1@Move_backw@8:

; 2765 : 	return (_Dest);
; 2766 : 	}

	mov	ecx, DWORD PTR __$ArrayPad$512859[esp+8]
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	pop	ecx
	ret	0
??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>
_TEXT	ENDS
PUBLIC	__Dest$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$3
	DD	01H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z DD 01H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T513240 = -64						; size = 4
__Vptr$513277 = -60					; size = 4
__Next$ = -56						; size = 4
__Dest$GSCopy$ = -52					; size = 4
__Val$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 214  : 	{	// use swap to instead of the copy constructor

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, DWORD PTR __Dest$[ebp]
	mov	edi, DWORD PTR __First$[ebp]

; 215  : 	_DEBUG_RANGE(_First, _Last);
; 216  : 	_DEBUG_POINTER(_Dest);
; 217  : 	_FwdIt _Next = _Dest;
; 218  : 	// empty value used in the construction
; 219  : 	typename _Alloc::value_type _Val;

	xor	ebx, ebx
	mov	DWORD PTR __Dest$GSCopy$[ebp], esi
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __Val$[ebp+24], 15		; 0000000fH
	mov	DWORD PTR __Val$[ebp+20], ebx
	mov	BYTE PTR __Val$[ebp+4], bl
	mov	DWORD PTR __$EHRec$[ebp+12], ebx

; 220  : 
; 221  : 	_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1
$LL6@Uninit_mov@9:

; 222  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	$LN4@Uninit_mov@9

; 223  : 		{
; 224  : 		_Al.construct(_Dest, _Val);

	mov	DWORD PTR __Vptr$513277[ebp], esi
	mov	DWORD PTR $T513240[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	cmp	esi, ebx
	je	SHORT $LN51@Uninit_mov@9
	push	-1
	push	ebx
	lea	eax, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN51@Uninit_mov@9:
	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 225  : 		_STD _Swap_adl(*_Dest, *_First);

	cmp	esi, edi
	je	SHORT $LN5@Uninit_mov@9
	movq	xmm2, QWORD PTR [edi+4]
	movq	xmm0, QWORD PTR [esi+4]
	movq	xmm1, QWORD PTR [esi+12]
	movq	QWORD PTR [esi+4], xmm2
	movq	xmm2, QWORD PTR [edi+12]
	movq	QWORD PTR [esi+12], xmm2
	mov	ecx, DWORD PTR [edi+20]
	movq	QWORD PTR [edi+4], xmm0
	movq	QWORD PTR [edi+12], xmm1
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+20], ecx
	mov	edx, DWORD PTR [edi+24]
	mov	DWORD PTR [edi+20], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+24], edx
	mov	DWORD PTR [edi+24], eax
$LN5@Uninit_mov@9:
	add	esi, 28					; 0000001cH
	mov	DWORD PTR __Dest$GSCopy$[ebp], esi
	add	edi, 28					; 0000001cH
	jmp	$LL6@Uninit_mov@9
__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 226  : 		}
; 227  : 	_CATCH_ALL
; 228  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$GSCopy$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_mov@9
	mov	ebx, DWORD PTR __Al$[ebp]
$LL3@Uninit_mov@9:

; 229  : 		_Al.destroy(_Next);

	push	esi
	mov	ecx, ebx
	call	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_mov@9
$LN1@Uninit_mov@9:

; 230  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN187@Uninit_mov@9:
$LN4@Uninit_mov@9:

; 231  : 	_CATCH_END
; 232  : 	return (_Dest);

	cmp	DWORD PTR __Val$[ebp+24], 16		; 00000010H
	jb	SHORT $LN171@Uninit_mov@9
	mov	eax, DWORD PTR __Val$[ebp+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN171@Uninit_mov@9:
	mov	eax, esi

; 233  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN186@Uninit_mov@9:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	lea	ecx, DWORD PTR __Val$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$3:
	mov	eax, DWORD PTR __Vptr$513277[ebp]
	push	eax
	mov	ecx, DWORD PTR $T513240[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T513899 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T513900 = 16						; size = 1
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
__Move_cat$ = 24					; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 2773 : 	{	// use swap to instead of the copy constructor

	push	ecx

; 2774 : 	// if _OutIt is range checked, this will make sure there is enough space for the copy
; 2775 : 	_BidIt2 _Result = _Dest - (_Last - _First);
; 2776 : 	_Move_backward_opt(_First, _Last, _CHECKED_BASE(_Dest),
; 2777 : 		forward_iterator_tag(), _Move_cat, _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Move_cat$[esp]
	mov	edx, DWORD PTR $T513900[esp]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp+4]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+8]
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+12]
	mov	BYTE PTR $T513899[esp+16], 0
	mov	eax, DWORD PTR $T513899[esp+16]
	push	eax
	push	ecx
	push	edx
	push	edi
	push	esi
	push	ebx
	call	??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>
	sub	esi, ebx
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	ecx, DWORD PTR [eax*8]
	add	esp, 24					; 00000018H
	sub	ecx, eax
	mov	eax, edi
	add	ecx, ecx
	pop	edi
	add	ecx, ecx
	pop	esi
	sub	eax, ecx
	pop	ebx

; 2778 : 	return _Result;
; 2779 : 	}

	pop	ecx
	ret	0
??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$_Unchecked_uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
$T513913 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$513917 = 12					; size = 1
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$513917[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T513913[esp+4], 0
	mov	eax, DWORD PTR $T513913[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
_TEXT	ENDS
;	COMDAT ??$?RD@is_classifiedF@detail@algorithm@boost@@QBE_ND@Z
_TEXT	SEGMENT
_Ch$ = 8						; size = 1
??$?RD@is_classifiedF@detail@algorithm@boost@@QBE_ND@Z PROC ; boost::algorithm::detail::is_classifiedF::operator()<char>, COMDAT
; _this$ = eax

; 44   :                 {

	push	esi

; 45   :                     return std::use_facet< std::ctype<CharT> >(m_Locale).is( m_Type, Ch );

	movzx	esi, WORD PTR [eax]
	add	eax, 4
	push	eax
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	movzx	ecx, BYTE PTR _Ch$[esp+4]
	mov	edx, DWORD PTR [eax+16]
	add	esp, 4
	test	WORD PTR [edx+ecx*2], si
	mov	eax, 0
	setne	al
	pop	esi

; 46   :                 }

	ret	4
??$?RD@is_classifiedF@detail@algorithm@boost@@QBE_ND@Z ENDP ; boost::algorithm::detail::is_classifiedF::operator()<char>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z$0
__ehfuncinfo$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\trim.hpp
xdata$x	ENDS
;	COMDAT ??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z
_TEXT	SEGMENT
__Lock$514136 = -20					; size = 4
__Lock$514178 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 1
_InBegin$ = 16						; size = 8
_InEnd$ = 24						; size = 8
_IsSpace$ = 32						; size = 8
??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z PROC ; boost::algorithm::detail::trim_end_iter_select<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>, COMDAT

; 80   :             {

	push	-1
	push	__ehhandler$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[esp+48], 0

; 81   :                 for( ForwardIteratorT It=InEnd; It!=InBegin;  )

	mov	esi, DWORD PTR _InEnd$[esp+36]
	mov	edi, DWORD PTR _InEnd$[esp+40]
$LN3@trim_end_i:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN10@trim_end_i
	test	esi, esi
	je	SHORT $LN9@trim_end_i
	cmp	esi, DWORD PTR _InBegin$[esp+36]
	je	SHORT $LN10@trim_end_i
$LN9@trim_end_i:
	call	__invalid_parameter_noinfo
$LN10@trim_end_i:
	mov	eax, DWORD PTR _InBegin$[esp+40]
	cmp	edi, eax
	je	$LN2@trim_end_i

; 82   :                 {
; 83   :                     if ( !IsSpace(*(--It)) )

	cmp	esi, -4					; fffffffcH
	je	SHORT $LN20@trim_end_i
	test	esi, esi
	jne	SHORT $LN21@trim_end_i
	call	__invalid_parameter_noinfo
$LN21@trim_end_i:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN29@trim_end_i
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN30@trim_end_i
$LN29@trim_end_i:
	lea	eax, DWORD PTR [esi+4]
$LN30@trim_end_i:
	cmp	edi, eax
	ja	SHORT $LN20@trim_end_i
	call	__invalid_parameter_noinfo
$LN20@trim_end_i:
	dec	edi
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN33@trim_end_i
	test	esi, esi
	jne	SHORT $LN34@trim_end_i
	call	__invalid_parameter_noinfo
$LN34@trim_end_i:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN42@trim_end_i
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN43@trim_end_i
$LN42@trim_end_i:
	lea	eax, DWORD PTR [esi+4]
$LN43@trim_end_i:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	edi, ecx
	jb	SHORT $LN33@trim_end_i
	call	__invalid_parameter_noinfo
$LN33@trim_end_i:
	mov	bl, BYTE PTR [edi]
	movzx	ebp, WORD PTR _IsSpace$[esp+36]
	lea	edx, DWORD PTR _IsSpace$[esp+40]
	push	edx
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	edx, DWORD PTR [eax+16]
	movzx	ecx, bl
	add	esp, 4
	test	WORD PTR [edx+ecx*2], bp
	jne	$LN3@trim_end_i

; 84   :                         return ++It;

	cmp	esi, -4					; fffffffcH
	je	SHORT $LN50@trim_end_i
	test	esi, esi
	jne	SHORT $LN51@trim_end_i
	call	__invalid_parameter_noinfo
$LN51@trim_end_i:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN59@trim_end_i
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN60@trim_end_i
$LN59@trim_end_i:
	lea	eax, DWORD PTR [esi+4]
$LN60@trim_end_i:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	edi, ecx
	jb	SHORT $LN50@trim_end_i
	call	__invalid_parameter_noinfo
$LN50@trim_end_i:
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+36]
	inc	edi
	mov	DWORD PTR [ebx+4], edi
	mov	DWORD PTR __$EHRec$[esp+48], -1
	mov	edi, DWORD PTR _IsSpace$[esp+40]
	mov	DWORD PTR [ebx], esi
	test	edi, edi
	je	SHORT $LN77@trim_end_i
	push	0
	lea	ecx, DWORD PTR __Lock$514136[esp+44]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN68@trim_end_i
	cmp	eax, -1
	jae	SHORT $LN68@trim_end_i
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN68@trim_end_i:
	lea	ecx, DWORD PTR __Lock$514136[esp+40]
	jmp	SHORT $LN92@trim_end_i
$LN2@trim_end_i:

; 85   :                 }
; 86   : 
; 87   :                 return InBegin;

	mov	ecx, DWORD PTR _InBegin$[esp+36]
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR __$EHRec$[esp+48], -1
	mov	edi, DWORD PTR _IsSpace$[esp+40]
	mov	DWORD PTR [ebx], ecx
	mov	DWORD PTR [ebx+4], eax
	test	edi, edi
	je	SHORT $LN77@trim_end_i
	push	0
	lea	ecx, DWORD PTR __Lock$514178[esp+44]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN79@trim_end_i
	cmp	eax, -1
	jae	SHORT $LN79@trim_end_i
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN79@trim_end_i:
	lea	ecx, DWORD PTR __Lock$514178[esp+40]
$LN92@trim_end_i:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN77@trim_end_i
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN77@trim_end_i:
	mov	eax, ebx

; 88   :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z$0:
	lea	eax, DWORD PTR _IsSpace$[ebp-4]
	jmp	??1is_classifiedF@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-24]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z ENDP ; boost::algorithm::detail::trim_end_iter_select<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z
_TEXT	SEGMENT
$T514245 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$514207 = 16					; size = 1
$T514246 = 16						; size = 1
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z PROC ; stdext::_Unchecked_move_backward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$514207[esp]
	mov	edx, DWORD PTR $T514246[esp]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp+4]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+8]
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+12]
	mov	BYTE PTR $T514245[esp+16], 0
	mov	eax, DWORD PTR $T514245[esp+16]
	push	eax
	push	ecx
	push	edx
	push	edi
	push	esi
	push	ebx
	call	??$_Move_backward_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::forward_iterator_tag>
	sub	esi, ebx
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	ecx, DWORD PTR [eax*8]
	add	esp, 24					; 00000018H
	sub	ecx, eax
	mov	eax, edi
	add	ecx, ecx
	pop	edi
	add	ecx, ecx
	pop	esi
	sub	eax, ecx
	pop	ebx

; 3697 : 	}

	pop	ecx
	ret	0
??$_Unchecked_move_backward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z ENDP ; stdext::_Unchecked_move_backward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
$T514288 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$514292 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$514292[esp]
	mov	BYTE PTR $T514288[esp+4], 0
	mov	eax, DWORD PTR $T514288[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z$0
__ehfuncinfo$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\trim.hpp
xdata$x	ENDS
;	COMDAT ??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
_TEXT	SEGMENT
__Lock$514461 = -20					; size = 4
__Lock$514503 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_InBegin$ = 12						; size = 8
_InEnd$ = 20						; size = 8
_IsSpace$ = 28						; size = 8
??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z PROC ; boost::algorithm::detail::trim_begin<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>, COMDAT

; 29   :             {

	push	-1
	push	__ehhandler$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[esp+48], 0

; 30   :                 ForwardIteratorT It=InBegin;

	mov	esi, DWORD PTR _InBegin$[esp+36]
	mov	ebp, DWORD PTR _InBegin$[esp+40]

; 31   :                 for(; It!=InEnd; ++It )

$LL13@trim_begin:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN24@trim_begin
	test	esi, esi
	je	SHORT $LN23@trim_begin
	cmp	esi, DWORD PTR _InEnd$[esp+36]
	je	SHORT $LN24@trim_begin
$LN23@trim_begin:
	call	__invalid_parameter_noinfo
$LN24@trim_begin:
	cmp	ebp, DWORD PTR _InEnd$[esp+40]
	je	$LN2@trim_begin

; 32   :                 {
; 33   :                     if (!IsSpace(*It))

	cmp	esi, -4					; fffffffcH
	je	SHORT $LN34@trim_begin
	test	esi, esi
	jne	SHORT $LN35@trim_begin
	call	__invalid_parameter_noinfo
$LN35@trim_begin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN43@trim_begin
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN44@trim_begin
$LN43@trim_begin:
	lea	eax, DWORD PTR [esi+4]
$LN44@trim_begin:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	ebp, ecx
	jb	SHORT $LN34@trim_begin
	call	__invalid_parameter_noinfo
$LN34@trim_begin:
	mov	bl, BYTE PTR [ebp]
	movzx	edi, WORD PTR _IsSpace$[esp+36]
	lea	edx, DWORD PTR _IsSpace$[esp+40]
	push	edx
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	edx, DWORD PTR [eax+16]
	movzx	ecx, bl
	add	esp, 4
	test	WORD PTR [edx+ecx*2], di
	je	SHORT $LN72@trim_begin

; 31   :                 for(; It!=InEnd; ++It )

	cmp	esi, -4					; fffffffcH
	je	SHORT $LN10@trim_begin
	test	esi, esi
	jne	SHORT $LN11@trim_begin
	call	__invalid_parameter_noinfo
$LN11@trim_begin:
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jb	SHORT $LN19@trim_begin
	mov	eax, DWORD PTR [esi+4]
	jmp	SHORT $LN20@trim_begin
$LN19@trim_begin:
	lea	eax, DWORD PTR [esi+4]
$LN20@trim_begin:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	ebp, ecx
	jb	SHORT $LN10@trim_begin
	call	__invalid_parameter_noinfo
$LN10@trim_begin:
	inc	ebp
	jmp	$LL13@trim_begin
$LN72@trim_begin:

; 34   :                         return It;

	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR __$EHRec$[esp+48], -1
	mov	edi, DWORD PTR _IsSpace$[esp+40]
	mov	DWORD PTR [ebx], esi
	mov	DWORD PTR [ebx+4], ebp
	test	edi, edi
	je	SHORT $LN65@trim_begin
	push	0
	lea	ecx, DWORD PTR __Lock$514461[esp+44]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN56@trim_begin
	cmp	eax, -1
	jae	SHORT $LN56@trim_begin
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN56@trim_begin:
	lea	ecx, DWORD PTR __Lock$514461[esp+40]
	jmp	SHORT $LN76@trim_begin
$LN2@trim_begin:

; 35   :                 }
; 36   : 
; 37   :                 return It;

	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR __$EHRec$[esp+48], -1
	mov	edi, DWORD PTR _IsSpace$[esp+40]
	mov	DWORD PTR [ebx], esi
	mov	DWORD PTR [ebx+4], ebp
	test	edi, edi
	je	SHORT $LN65@trim_begin
	push	0
	lea	ecx, DWORD PTR __Lock$514503[esp+44]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN67@trim_begin
	cmp	eax, -1
	jae	SHORT $LN67@trim_begin
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN67@trim_begin:
	lea	ecx, DWORD PTR __Lock$514503[esp+40]
$LN76@trim_begin:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN65@trim_begin
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN65@trim_begin:
	mov	eax, ebx

; 38   :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z$0:
	lea	eax, DWORD PTR _IsSpace$[ebp-4]
	jmp	??1is_classifiedF@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-24]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z ENDP ; boost::algorithm::detail::trim_begin<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z$0
__ehfuncinfo$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\trim.hpp
xdata$x	ENDS
;	COMDAT ??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T514522 = 8						; size = 1
__Lock$514589 = 8					; size = 4
__Lock$514546 = 8					; size = 4
$T514523 = 8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_InBegin$ = 12						; size = 8
_InEnd$ = 20						; size = 8
_IsSpace$ = 28						; size = 8
??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z PROC ; boost::algorithm::detail::trim_end<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>, COMDAT

; 46   :             {

	push	-1
	push	__ehhandler$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+28]
	mov	DWORD PTR __$EHRec$[esp+40], 0

; 47   :                 typedef BOOST_STRING_TYPENAME boost::detail::
; 48   :                     iterator_traits<ForwardIteratorT>::iterator_category category;
; 49   : 
; 50   :                 return trim_end_iter_select( InBegin, InEnd, IsSpace, category() );

	mov	cx, WORD PTR _IsSpace$[esp+28]
	sub	esp, 8
	mov	eax, esp
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _IsSpace$[esp+40]
	mov	DWORD PTR $T514523[esp+36], esp
	mov	DWORD PTR [eax+4], edx
	mov	esi, DWORD PTR _IsSpace$[esp+40]
	push	0
	lea	ecx, DWORD PTR __Lock$514546[esp+40]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN9@trim_end
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN9@trim_end:
	lea	ecx, DWORD PTR __Lock$514546[esp+36]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	eax, DWORD PTR _InEnd$[esp+40]
	mov	ecx, DWORD PTR _InEnd$[esp+36]
	mov	edx, DWORD PTR _InBegin$[esp+40]
	push	eax
	mov	eax, DWORD PTR _InBegin$[esp+40]
	push	ecx
	mov	ecx, DWORD PTR $T514522[esp+44]
	push	edx
	push	eax
	push	ecx
	push	ebx
	call	??$trim_end_iter_select@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@Ubidirectional_iterator_tag@4@@Z ; boost::algorithm::detail::trim_end_iter_select<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
	mov	DWORD PTR __$EHRec$[esp+72], -1
	mov	edi, DWORD PTR _IsSpace$[esp+64]
	add	esp, 32					; 00000020H
	test	edi, edi
	je	SHORT $LN25@trim_end
	push	0
	lea	ecx, DWORD PTR __Lock$514589[esp+32]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN20@trim_end
	cmp	eax, -1
	jae	SHORT $LN20@trim_end
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN20@trim_end:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$514589[esp+28]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN25@trim_end
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN25@trim_end:
	mov	eax, ebx

; 51   :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z$0:
	lea	eax, DWORD PTR _IsSpace$[ebp-4]
	jmp	??1is_classifiedF@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z ENDP ; boost::algorithm::detail::trim_end<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\exception\exception.hpp
;	COMDAT ??$enable_current_exception@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vbad_function_call@boost@@@20@@Z
_TEXT	SEGMENT
$T514605 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$enable_current_exception@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vbad_function_call@boost@@@20@@Z PROC ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::bad_function_call> >, COMDAT

; 391  :         {

	push	ecx

; 392  :         return exception_detail::clone_impl<T>(x);

	mov	eax, DWORD PTR _x$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR $T514605[esp+12], 0
	call	??0?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_function_call@boost@@@12@@Z ; boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >
	mov	eax, esi
	pop	esi

; 393  :         }

	pop	ecx
	ret	0
??$enable_current_exception@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vbad_function_call@boost@@@20@@Z ENDP ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::bad_function_call> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z$0
__ehfuncinfo$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\trim.hpp
xdata$x	ENDS
;	COMDAT ??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
_TEXT	SEGMENT
__Lock$514985 = -28					; size = 4
__Lock$514641 = -28					; size = 4
$T514617 = -28						; size = 8
$T514612 = -28						; size = 8
$T514611 = -28						; size = 4
$T514610 = -28						; size = 8
$T514614 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_IsSpace$ = 8						; size = 8
??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z PROC ; boost::algorithm::trim_left_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>, COMDAT
; _Input$ = ecx

; 125  :         {

	push	-1
	push	__ehhandler$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR __$EHRec$[esp+60], 0

; 126  :             Input.erase( 
; 127  :                 ::boost::begin(Input),
; 128  :                 ::boost::algorithm::detail::trim_begin( 
; 129  :                     ::boost::begin(Input), 
; 130  :                     ::boost::end(Input), 
; 131  :                     IsSpace));

	mov	cx, WORD PTR _IsSpace$[esp+48]
	sub	esp, 8
	mov	eax, esp
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _IsSpace$[esp+60]
	mov	DWORD PTR $T514611[esp+60], esp
	mov	DWORD PTR [eax+4], edx
	mov	edi, DWORD PTR _IsSpace$[esp+60]
	push	0
	lea	ecx, DWORD PTR __Lock$514641[esp+64]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, -1
	jae	SHORT $LN9@trim_left_
	inc	eax
	mov	DWORD PTR [edi+4], eax
$LN9@trim_left_:
	lea	ecx, DWORD PTR __Lock$514641[esp+60]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	lea	eax, DWORD PTR $T514612[esp+60]
	push	eax
	mov	ecx, esi
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	ecx, DWORD PTR [esi+24]
	lea	edi, DWORD PTR [esi+4]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN25@trim_left_
	mov	ebx, DWORD PTR [edi]
	jmp	SHORT $LN26@trim_left_
$LN25@trim_left_:
	mov	ebx, edi
$LN26@trim_left_:
	test	ebx, ebx
	je	SHORT $LN29@trim_left_
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN39@trim_left_
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN40@trim_left_
$LN39@trim_left_:
	mov	eax, edi
$LN40@trim_left_:
	cmp	eax, ebx
	ja	SHORT $LN29@trim_left_
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN43@trim_left_
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN44@trim_left_
$LN43@trim_left_:
	mov	eax, edi
$LN44@trim_left_:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	ebx, ecx
	jbe	SHORT $LN30@trim_left_
$LN29@trim_left_:
	call	__invalid_parameter_noinfo
$LN30@trim_left_:
	mov	edx, DWORD PTR $T514612[esp+64]
	mov	eax, DWORD PTR $T514612[esp+60]
	push	edx
	push	eax
	push	ebx
	lea	ecx, DWORD PTR $T514614[esp+72]
	push	esi
	push	ecx
	call	??$trim_begin@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z ; boost::algorithm::detail::trim_begin<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
	mov	edx, DWORD PTR [eax+4]
	mov	ebp, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi+24]
	add	esp, 28					; 0000001cH
	mov	DWORD PTR $T514610[esp+56], edx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN53@trim_left_
	mov	ebx, DWORD PTR [edi]
	jmp	SHORT $LN54@trim_left_
$LN53@trim_left_:
	mov	ebx, edi
$LN54@trim_left_:
	test	ebx, ebx
	je	SHORT $LN57@trim_left_
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN67@trim_left_
	mov	ecx, DWORD PTR [edi]
	jmp	SHORT $LN68@trim_left_
$LN67@trim_left_:
	mov	ecx, edi
$LN68@trim_left_:
	cmp	ecx, ebx
	ja	SHORT $LN57@trim_left_
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN71@trim_left_
	mov	edi, DWORD PTR [edi]
$LN71@trim_left_:
	mov	eax, DWORD PTR [esi+20]
	add	eax, edi
	cmp	ebx, eax
	jbe	SHORT $LN58@trim_left_
$LN57@trim_left_:
	call	__invalid_parameter_noinfo
$LN58@trim_left_:
	mov	ecx, DWORD PTR $T514610[esp+56]
	push	ecx
	push	ebp
	push	ebx
	push	esi
	lea	edx, DWORD PTR $T514617[esp+68]
	push	edx
	push	esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 132  :         }

	mov	DWORD PTR __$EHRec$[esp+60], -1
	mov	edi, DWORD PTR _IsSpace$[esp+52]
	test	edi, edi
	je	SHORT $LN78@trim_left_
	push	0
	lea	ecx, DWORD PTR __Lock$514985[esp+56]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN80@trim_left_
	cmp	eax, -1
	jae	SHORT $LN80@trim_left_
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN80@trim_left_:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$514985[esp+52]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN78@trim_left_
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN78@trim_left_:
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 32					; 00000020H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z$0:
	lea	eax, DWORD PTR _IsSpace$[ebp-4]
	jmp	??1is_classifiedF@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ENDP ; boost::algorithm::trim_left_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z$0
__ehfuncinfo$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\trim.hpp
xdata$x	ENDS
;	COMDAT ??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
_TEXT	SEGMENT
__Lock$515233 = -36					; size = 4
__Lock$515037 = -36					; size = 4
$T515002 = -36						; size = 8
$T515001 = -36						; size = 4
$T515005 = -28						; size = 8
$T514999 = -28						; size = 8
$T515004 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_IsSpace$ = 8						; size = 8
??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z PROC ; boost::algorithm::trim_right_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>, COMDAT
; _Input$ = ecx

; 235  :         {

	push	-1
	push	__ehhandler$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx

; 236  :             Input.erase(
; 237  :                 ::boost::algorithm::detail::trim_end( 
; 238  :                     ::boost::begin(Input), 
; 239  :                     ::boost::end(Input), 
; 240  :                     IsSpace ),
; 241  :                 ::boost::end(Input)
; 242  :                 );

	lea	eax, DWORD PTR $T514999[esp+52]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	cx, WORD PTR _IsSpace$[esp+48]
	sub	esp, 8
	mov	eax, esp
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _IsSpace$[esp+60]
	mov	DWORD PTR $T515001[esp+60], esp
	mov	DWORD PTR [eax+4], edx
	mov	edi, DWORD PTR _IsSpace$[esp+60]
	push	0
	lea	ecx, DWORD PTR __Lock$515037[esp+64]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, -1
	jae	SHORT $LN13@trim_right
	inc	eax
	mov	DWORD PTR [edi+4], eax
$LN13@trim_right:
	lea	ecx, DWORD PTR __Lock$515037[esp+60]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	lea	eax, DWORD PTR $T515002[esp+60]
	push	eax
	mov	ecx, esi
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	edx, DWORD PTR [esi+24]
	lea	eax, DWORD PTR [esi+4]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN29@trim_right
	mov	edi, DWORD PTR [eax]
	jmp	SHORT $LN30@trim_right
$LN29@trim_right:
	mov	edi, eax
$LN30@trim_right:
	test	edi, edi
	je	SHORT $LN33@trim_right
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN43@trim_right
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN44@trim_right
$LN43@trim_right:
	mov	ecx, eax
$LN44@trim_right:
	cmp	ecx, edi
	ja	SHORT $LN33@trim_right
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN47@trim_right
	mov	eax, DWORD PTR [eax]
$LN47@trim_right:
	mov	ecx, DWORD PTR [esi+20]
	add	ecx, eax
	cmp	edi, ecx
	jbe	SHORT $LN34@trim_right
$LN33@trim_right:
	call	__invalid_parameter_noinfo
$LN34@trim_right:
	mov	edx, DWORD PTR $T515002[esp+64]
	mov	eax, DWORD PTR $T515002[esp+60]
	push	edx
	push	eax
	push	edi
	lea	ecx, DWORD PTR $T515004[esp+72]
	push	esi
	push	ecx
	call	??$trim_end@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@detail@algorithm@boost@@YA?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@0Uis_classifiedF@012@@Z ; boost::algorithm::detail::trim_end<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
	mov	edx, DWORD PTR $T514999[esp+84]
	mov	ecx, DWORD PTR $T514999[esp+80]
	add	esp, 28					; 0000001cH
	push	edx
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T515005[esp+68]
	push	ecx
	push	esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 243  :         }

	mov	DWORD PTR __$EHRec$[esp+60], -1
	mov	edi, DWORD PTR _IsSpace$[esp+52]
	test	edi, edi
	je	SHORT $LN54@trim_right
	push	0
	lea	ecx, DWORD PTR __Lock$515233[esp+56]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN56@trim_right
	cmp	eax, -1
	jae	SHORT $LN56@trim_right
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN56@trim_right:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$515233[esp+52]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN54@trim_right
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN54@trim_right:
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z$0:
	lea	eax, DWORD PTR _IsSpace$[ebp-4]
	jmp	??1is_classifiedF@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-36]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ENDP ; boost::algorithm::trim_right_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\throw_exception.hpp
xdata$x	SEGMENT
__unwindtable$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z$0
__ehfuncinfo$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z
_TEXT	SEGMENT
$T515247 = -140						; size = 60
$T515248 = -80						; size = 64
__$EHRec$ = -12						; size = 12
_e$ = 8							; size = 4
??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z PROC ; boost::throw_exception<boost::bad_function_call>, COMDAT

; 58   : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+148]
	mov	DWORD PTR fs:0, eax

; 59   :     //All boost exceptions are required to derive std::exception,
; 60   :     //to ensure compatibility with BOOST_NO_EXCEPTIONS.
; 61   :     throw_exception_assert_compatibility(e);
; 62   : 
; 63   : #ifndef BOOST_EXCEPTION_DISABLE
; 64   :     throw enable_current_exception(enable_error_info(e));

	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T515247[esp+152]
	push	ecx
	call	??$enable_error_info@Vbad_function_call@boost@@@boost@@YA?AU?$error_info_injector@Vbad_function_call@boost@@@exception_detail@0@ABVbad_function_call@0@@Z ; boost::enable_error_info<boost::bad_function_call>
	push	eax
	lea	edx, DWORD PTR $T515248[esp+160]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+172], 0
	call	??$enable_current_exception@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vbad_function_call@boost@@@20@@Z ; boost::enable_current_exception<boost::exception_detail::error_info_injector<boost::bad_function_call> >
	add	esp, 16					; 00000010H
	push	OFFSET __TI7?AV?$clone_impl@U?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@@exception_detail@boost@@
	lea	eax, DWORD PTR $T515248[esp+152]
	push	eax
	call	__CxxThrowException@8
$LN8@throw_exce@2:
$LN7@throw_exce@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z$0:
	lea	ecx, DWORD PTR $T515247[ebp]
	jmp	??1?$error_info_injector@Vbad_function_call@boost@@@exception_detail@boost@@UAE@XZ ; boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector<boost::bad_function_call>
__ehhandler$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-132]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z ENDP ; boost::throw_exception<boost::bad_function_call>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ$0
__ehfuncinfo$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T515264 = -84						; size = 28
$T515263 = -56						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	18					; 00000012H
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T515264[esp+100]
	mov	DWORD PTR $T515264[esp+124], 15		; 0000000fH
	mov	DWORD PTR $T515264[esp+120], 0
	mov	BYTE PTR $T515264[esp+104], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T515264[esp+92]
	push	eax
	lea	ecx, DWORD PTR $T515263[esp+96]
	mov	DWORD PTR __$EHRec$[esp+104], 0
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T515263[esp+96]
	push	ecx
	mov	DWORD PTR $T515263[esp+100], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN45@Xlen@10:
$LN44@Xlen@10:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T515264[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-76]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Xlen
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE_NI@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 1104 : 		if (_Capacity == 0)

	mov	esi, DWORD PTR __Capacity$[esp]
	xor	eax, eax
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi+12], eax
	mov	DWORD PTR [edi+16], eax
	mov	DWORD PTR [edi+20], eax
	cmp	esi, eax
	jne	SHORT $LN4@Buy@9

; 1105 : 			return (false);

	xor	al, al

; 1113 : 			}
; 1114 : 		return (true);
; 1115 : 		}

	pop	edi
	pop	esi
	ret	4
$LN4@Buy@9:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	esi, 51130563				; 030c30c3H
	jbe	SHORT $LN2@Buy@9

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Xlen
$LN16@Buy@9:
$LN2@Buy@9:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	esi
	call	??$_Allocate@V?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@IPAV123@@Z ; std::_Allocate<boost::program_options::basic_option<char> >

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	imul	esi, 84					; 00000054H
	add	esi, eax
	add	esp, 8
	mov	DWORD PTR [edi+12], eax
	mov	DWORD PTR [edi+16], eax
	mov	DWORD PTR [edi+20], esi

; 1113 : 			}
; 1114 : 		return (true);
; 1115 : 		}

	pop	edi
	mov	al, 1
	pop	esi
	ret	4
$LN15@Buy@9:
?_Buy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Buy
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	push	-1
	push	__ehhandler$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	push	4
	call	??2@YAPAXI@Z				; operator new
	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN13@vector@41
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN14@vector@41
$LN13@vector@41:
	xor	eax, eax
$LN14@vector@41:
	mov	DWORD PTR [esi], eax

; 471  : 		_Buy(0);

	mov	DWORD PTR [esi+12], ecx
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+20], ecx

; 472  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ecx-84]
	lea	esi, DWORD PTR [edi+84]
	mov	ecx, esi
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN11@scalar@91
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@scalar@91:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\parsers.hpp
_TEXT	ENDS
;	COMDAT ??0?$basic_parsed_options@D@program_options@boost@@QAE@PBVoptions_description@12@@Z
_TEXT	SEGMENT
_description$ = 8					; size = 4
??0?$basic_parsed_options@D@program_options@boost@@QAE@PBVoptions_description@12@@Z PROC ; boost::program_options::basic_parsed_options<char>::basic_parsed_options<char>, COMDAT
; _this$ = esi

; 34   :         explicit basic_parsed_options(const options_description* description) 

	mov	ecx, esi
	call	??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
	mov	eax, DWORD PTR _description$[esp-4]
	mov	DWORD PTR [esi+24], eax
	mov	eax, esi
	ret	4
??0?$basic_parsed_options@D@program_options@boost@@QAE@PBVoptions_description@12@@Z ENDP ; boost::program_options::basic_parsed_options<char>::basic_parsed_options<char>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z$0
__ehfuncinfo$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\trim.hpp
xdata$x	ENDS
;	COMDAT ??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
_TEXT	SEGMENT
__Lock$515763 = -16					; size = 4
__Lock$515721 = -16					; size = 4
__Lock$515696 = -16					; size = 4
$T515671 = -16						; size = 4
$T515670 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_IsSpace$ = 8						; size = 8
??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z PROC ; boost::algorithm::trim_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>, COMDAT
; _Input$ = ecx

; 359  :         {

	push	-1
	push	__ehhandler$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR __$EHRec$[esp+36], 0

; 360  :             trim_right_if( Input, IsSpace );

	mov	cx, WORD PTR _IsSpace$[esp+24]
	sub	esp, 8
	mov	eax, esp
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _IsSpace$[esp+36]
	mov	DWORD PTR $T515670[esp+36], esp
	mov	DWORD PTR [eax+4], edx
	mov	esi, DWORD PTR _IsSpace$[esp+36]
	push	0
	lea	ecx, DWORD PTR __Lock$515696[esp+40]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN10@trim_if
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN10@trim_if:
	lea	ecx, DWORD PTR __Lock$515696[esp+36]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, edi
	call	??$trim_right_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ; boost::algorithm::trim_right_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>

; 361  :             trim_left_if( Input, IsSpace );

	mov	cx, WORD PTR _IsSpace$[esp+32]
	mov	eax, esp
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _IsSpace$[esp+36]
	mov	DWORD PTR $T515671[esp+36], esp
	mov	DWORD PTR [eax+4], edx
	mov	esi, DWORD PTR _IsSpace$[esp+36]
	push	0
	lea	ecx, DWORD PTR __Lock$515721[esp+40]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	jae	SHORT $LN18@trim_if
	inc	eax
	mov	DWORD PTR [esi+4], eax
$LN18@trim_if:
	lea	ecx, DWORD PTR __Lock$515721[esp+36]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	mov	ecx, edi
	call	??$trim_left_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ; boost::algorithm::trim_left_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>

; 362  :         }

	mov	DWORD PTR __$EHRec$[esp+44], -1
	mov	edi, DWORD PTR _IsSpace$[esp+36]
	add	esp, 8
	test	edi, edi
	je	SHORT $LN27@trim_if
	push	0
	lea	ecx, DWORD PTR __Lock$515763[esp+32]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	jbe	SHORT $LN29@trim_if
	cmp	eax, -1
	jae	SHORT $LN29@trim_if
	dec	eax
	mov	DWORD PTR [edi+4], eax
$LN29@trim_if:
	mov	esi, DWORD PTR [edi+4]
	neg	esi
	sbb	esi, esi
	not	esi
	lea	ecx, DWORD PTR __Lock$515763[esp+28]
	and	esi, edi
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	test	esi, esi
	je	SHORT $LN27@trim_if
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	1
	mov	ecx, esi
	call	edx
$LN27@trim_if:
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z$0:
	lea	eax, DWORD PTR _IsSpace$[ebp-4]
	jmp	??1is_classifiedF@detail@algorithm@boost@@QAE@XZ
__ehhandler$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ENDP ; boost::algorithm::trim_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T515776 = -56						; size = 40
__$EHRec$ = -12						; size = 12
_a0$ = 8						; size = 4
??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::operator(), COMDAT
; _this$ = ecx

; 1008 :   {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, eax

; 1009 :     if (this->empty())

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN1@operator@364

; 1010 :       boost::throw_exception(bad_function_call());

	lea	ecx, DWORD PTR $T515776[esp+60]
	call	??0bad_function_call@boost@@QAE@XZ	; boost::bad_function_call::bad_function_call
	push	eax
	mov	DWORD PTR __$EHRec$[esp+72], 0
	call	??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z ; boost::throw_exception<boost::bad_function_call>
$LN11@operator@364:
$LN1@operator@364:

; 1011 : 
; 1012 :     return get_vtable()->invoker
; 1013 :              (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);

	mov	edx, DWORD PTR _a0$[ebp]
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax+4]
	push	edx
	add	ecx, 8
	push	ecx
	call	eax
	add	esp, 8

; 1014 :   }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN10@operator@364:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T515776[ebp]
	jmp	??1bad_function_call@boost@@UAE@XZ
__ehhandler$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-44]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::operator()
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
_TEXT	SEGMENT
$T515797 = -44						; size = 4
$T515794 = -40						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 23   : 	{	// return string + string

	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, eax

; 24   : 	return (basic_string<_Elem, _Traits, _Alloc>(_Left) += _Right);

	mov	eax, DWORD PTR __Left$[esp+52]
	xor	ebx, ebx
	push	-1
	push	ebx
	push	eax
	lea	ecx, DWORD PTR $T515794[esp+68]
	mov	DWORD PTR $T515797[esp+68], ebx
	mov	DWORD PTR $T515794[esp+92], 15		; 0000000fH
	mov	DWORD PTR $T515794[esp+88], ebx
	mov	BYTE PTR $T515794[esp+72], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, DWORD PTR __Right$[esp+52]
	push	-1
	push	ebx
	push	ecx
	lea	ecx, DWORD PTR $T515794[esp+68]
	mov	DWORD PTR __$EHRec$[esp+76], ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+52]
	push	-1
	push	ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T515794[esp+80], 16		; 00000010H
	jb	SHORT $LN88@operator@365
	mov	edx, DWORD PTR $T515794[esp+60]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN88@operator@365:
	mov	eax, esi

; 25   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z$0:
	lea	ecx, DWORD PTR $T515794[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-40]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T516152 = -44						; size = 4
$T516149 = -40						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 53   : 	{	// return string + NTCS

	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, eax

; 54   : 	return (basic_string<_Elem, _Traits, _Alloc>(_Left) += _Right);

	mov	eax, DWORD PTR __Left$[esp+52]
	xor	ebx, ebx
	push	-1
	push	ebx
	push	eax
	lea	ecx, DWORD PTR $T516149[esp+68]
	mov	DWORD PTR $T516152[esp+68], ebx
	mov	DWORD PTR $T516149[esp+92], 15		; 0000000fH
	mov	DWORD PTR $T516149[esp+88], ebx
	mov	BYTE PTR $T516149[esp+72], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	edx, DWORD PTR __Right$[esp+52]
	mov	eax, edx
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	lea	esi, DWORD PTR [eax+1]
	npad	7
$LL90@operator@366:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL90@operator@366
	sub	eax, esi
	push	eax
	push	edx
	lea	ecx, DWORD PTR $T516149[esp+64]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+52]
	push	-1
	push	ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T516149[esp+80], 16		; 00000010H
	jb	SHORT $LN91@operator@366
	mov	ecx, DWORD PTR $T516149[esp+60]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN91@operator@366:
	mov	eax, esi

; 55   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0:
	lea	ecx, DWORD PTR $T516149[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-40]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\trim.hpp
;	COMDAT ??$trim@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z
_TEXT	SEGMENT
$T516512 = -4						; size = 4
_Input$ = 8						; size = 4
??$trim@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z PROC ; boost::algorithm::trim<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _Loc$ = ecx

; 374  :         {

	push	ecx
	push	edi

; 375  :             trim_if(
; 376  :                 Input, 
; 377  :                 is_space( Loc ) );

	sub	esp, 8
	mov	edi, esp
	mov	DWORD PTR $T516512[esp+16], esp
	call	?is_space@algorithm@boost@@YA?AUis_classifiedF@detail@12@ABVlocale@std@@@Z ; boost::algorithm::is_space
	mov	ecx, DWORD PTR _Input$[esp+12]
	call	??$trim_if@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@algorithm@boost@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uis_classifiedF@detail@01@@Z ; boost::algorithm::trim_if<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_classifiedF>
	add	esp, 8

; 378  :         }

	pop	edi
	pop	ecx
	ret	0
??$trim@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z ENDP ; boost::algorithm::trim<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\value_semantic.hpp
_TEXT	ENDS
;	COMDAT ?notify@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXABVany@3@@Z
_TEXT	SEGMENT
_value_store$ = 8					; size = 4
?notify@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXABVany@3@@Z PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::notify, COMDAT
; _this$ = ecx

; 35   :     {

	push	esi

; 36   :         const T* value = boost::any_cast<const T>(&value_store);

	mov	esi, DWORD PTR _value_store$[esp]
	push	edi
	mov	edi, ecx
	test	esi, esi
	je	SHORT $LN9@notify@3
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN13@notify@3
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	jmp	SHORT $LN14@notify@3
$LN13@notify@3:
	mov	eax, OFFSET ??_R0X@8
$LN14@notify@3:
	push	OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	mov	ecx, eax
	call	??8type_info@@QBE_NABV0@@Z		; type_info::operator==
	test	al, al
	je	SHORT $LN9@notify@3
	mov	esi, DWORD PTR [esi]
	add	esi, 4
	jmp	SHORT $LN10@notify@3
$LN9@notify@3:
	xor	esi, esi
$LN10@notify@3:

; 37   :         if (m_store_to) {

	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	je	SHORT $LN15@notify@3

; 38   :             *m_store_to = *value;

	push	-1
	push	0
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN15@notify@3:

; 39   :         }
; 40   :         if (m_notifier) {

	mov	eax, DWORD PTR [edi+80]
	lea	ecx, DWORD PTR [edi+80]
	neg	eax
	sbb	eax, eax
	test	eax, OFFSET ?nonnull@dummy@?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QAEXXZ ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::dummy::nonnull
	je	SHORT $LN1@notify@3

; 41   :             m_notifier(*value);

	push	esi
	call	??R?$function1@XABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@QBEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::function1<void,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::operator()
$LN1@notify@3:
	pop	edi
	pop	esi

; 42   :         }
; 43   :     }

	ret	4
?notify@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBEXABVany@3@@Z ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::notify
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T516573 = -44						; size = 4
$T516570 = -40						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 33   : 	{	// return NTCS + string

	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, eax

; 34   : 	return (basic_string<_Elem, _Traits, _Alloc>(_Left) += _Right);

	mov	edx, DWORD PTR __Left$[esp+52]
	xor	ebx, ebx
	mov	eax, edx
	mov	DWORD PTR $T516573[esp+56], ebx
	mov	DWORD PTR $T516570[esp+80], 15		; 0000000fH
	mov	DWORD PTR $T516570[esp+76], ebx
	mov	BYTE PTR $T516570[esp+60], bl
	lea	esi, DWORD PTR [eax+1]
$LL98@operator@367:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL98@operator@367
	sub	eax, esi
	push	eax
	push	edx
	lea	ecx, DWORD PTR $T516570[esp+64]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, DWORD PTR __Right$[esp+52]
	push	-1
	push	ebx
	push	eax
	lea	ecx, DWORD PTR $T516570[esp+68]
	mov	DWORD PTR __$EHRec$[esp+76], ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+52]
	push	-1
	push	ebx
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR $T516570[esp+80], 16		; 00000010H
	jb	SHORT $LN99@operator@367
	mov	ecx, DWORD PTR $T516570[esp+60]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN99@operator@367:
	mov	eax, esi

; 35   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0:
	lea	ecx, DWORD PTR $T516570[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-40]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
_this$ = -96						; size = 4
__Erasednode$ = -92					; size = 4
tv925 = -88						; size = 4
$T516960 = -84						; size = 28
$T516959 = -56						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase, COMDAT
; _this$ = ecx

; 764  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[esp+116], ecx

; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		if (_Where._Mycont != this || _Isnil(_Where._Mynode()))
; 768  : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 769  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 770  : 		++_Where;	// save successor iterator for return
; 771  : 		_Orphan_ptr(*this, _Erasednode);
; 772  : 
; 773  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 774  : 		if (_Isnil(_Where._Mynode()))

	mov	ebx, DWORD PTR __Where$[ebp+4]
	cmp	BYTE PTR [ebx+41], 0
	je	SHORT $LN40@erase@17

; 775  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

	push	27					; 0000001bH
	xor	esi, esi
	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T516960[esp+124]
	mov	DWORD PTR $T516960[esp+148], 15		; 0000000fH
	mov	DWORD PTR $T516960[esp+144], esi
	mov	BYTE PTR $T516960[esp+128], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T516960[esp+116]
	push	eax
	lea	ecx, DWORD PTR $T516959[esp+120]
	mov	DWORD PTR __$EHRec$[esp+128], esi
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	ecx, DWORD PTR $T516959[esp+120]
	push	ecx
	mov	DWORD PTR $T516959[esp+124], OFFSET ??_7out_of_range@std@@6B@
	call	__CxxThrowException@8
$LN369@erase@17:
$LN40@erase@17:

; 776  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 777  : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Erasednode$[esp+116], ebx
	call	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Inc

; 778  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 779  : 
; 780  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 781  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 782  : 		_Nodeptr _Pnode = _Erasednode;
; 783  : 
; 784  : 		if (_Isnil(_Left(_Pnode)))

	mov	ecx, DWORD PTR [ebx]
	cmp	BYTE PTR [ecx+41], 0
	je	SHORT $LN39@erase@17

; 785  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

	mov	edi, DWORD PTR [ebx+8]
	jmp	SHORT $LN364@erase@17
$LN39@erase@17:

; 786  : 		else if (_Isnil(_Right(_Pnode)))

	mov	edx, DWORD PTR [ebx+8]
	cmp	BYTE PTR [edx+41], 0
	je	SHORT $LN37@erase@17

; 787  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

	mov	edi, ecx

; 788  : 		else

	jmp	SHORT $LN364@erase@17
$LN37@erase@17:

; 789  : 			{	// two subtrees, must lift successor node to replace erased
; 790  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	mov	eax, DWORD PTR __Where$[ebp+4]

; 791  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

	mov	edi, DWORD PTR [eax+8]
	lea	edx, DWORD PTR [eax+8]

; 792  : 			}
; 793  : 
; 794  : 		if (_Pnode == _Erasednode)

	cmp	eax, ebx
	jne	SHORT $LN35@erase@17
$LN364@erase@17:

; 795  : 			{	// at most one subtree, relink it
; 796  : 			_Fixnodeparent = _Parent(_Erasednode);
; 797  : 			if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+41], 0
	mov	esi, DWORD PTR [ebx+4]
	jne	SHORT $LN34@erase@17

; 798  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	DWORD PTR [edi+4], esi
$LN34@erase@17:

; 799  : 
; 800  : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[esp+116]
	mov	eax, DWORD PTR [ecx+24]
	cmp	DWORD PTR [eax+4], ebx
	jne	SHORT $LN33@erase@17

; 801  : 				_Root() = _Fixnode;	// link down from root

	mov	DWORD PTR [eax+4], edi
	jmp	SHORT $LN30@erase@17
$LN33@erase@17:

; 802  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN31@erase@17

; 803  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	DWORD PTR [esi], edi

; 804  : 			else

	jmp	SHORT $LN30@erase@17
$LN31@erase@17:

; 805  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

	mov	DWORD PTR [esi+8], edi
$LN30@erase@17:

; 806  : 
; 807  : 			if (_Lmost() == _Erasednode)

	mov	eax, DWORD PTR [ecx+24]
	cmp	DWORD PTR [eax], ebx
	jne	SHORT $LN29@erase@17

; 808  : 				_Lmost() = _Isnil(_Fixnode)
; 809  : 					? _Fixnodeparent	// smallest is parent of erased node
; 810  : 					: _Min(_Fixnode);	// smallest in relinked subtree

	cmp	BYTE PTR [edi+41], 0
	je	SHORT $LN43@erase@17
	mov	eax, esi
	jmp	SHORT $LN44@erase@17
$LN43@erase@17:
	push	edi
	call	?_Min@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Min
	mov	ecx, DWORD PTR _this$[esp+120]
	add	esp, 4
$LN44@erase@17:
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [edx], eax
$LN29@erase@17:

; 811  : 
; 812  : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR tv925[esp+116], ecx
	cmp	DWORD PTR [ecx+8], ebx
	jne	SHORT $LN205@erase@17

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	cmp	BYTE PTR [edi+41], 0
	je	SHORT $LN45@erase@17
	mov	eax, esi
	mov	DWORD PTR [ecx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN205@erase@17
$LN45@erase@17:

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	push	edi
	call	?_Max@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Max
	mov	ecx, DWORD PTR tv925[esp+120]
	add	esp, 4
	mov	DWORD PTR [ecx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN205@erase@17
$LN35@erase@17:

; 818  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 819  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

	mov	DWORD PTR [ecx+4], eax

; 820  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [eax], ecx

; 821  : 
; 822  : 			if (_Pnode == _Right(_Erasednode))

	cmp	eax, DWORD PTR [ebx+8]
	jne	SHORT $LN26@erase@17

; 823  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	esi, eax

; 824  : 			else

	jmp	SHORT $LN25@erase@17
$LN26@erase@17:

; 825  : 				{	// successor further down, link in place of erased
; 826  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 827  : 				if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+41], 0
	mov	esi, DWORD PTR [eax+4]
	jne	SHORT $LN24@erase@17

; 828  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	DWORD PTR [edi+4], esi
$LN24@erase@17:

; 829  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	DWORD PTR [esi], edi

; 830  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx], ecx

; 831  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

	mov	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx+4], eax
$LN25@erase@17:

; 832  : 				}
; 833  : 
; 834  : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[esp+116]
	mov	ecx, DWORD PTR [ecx+24]
	cmp	DWORD PTR [ecx+4], ebx
	jne	SHORT $LN23@erase@17

; 835  : 				_Root() = _Pnode;	// link down from root

	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN20@erase@17
$LN23@erase@17:

; 836  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

	mov	ecx, DWORD PTR [ebx+4]
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN21@erase@17

; 837  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

	mov	DWORD PTR [ecx], eax

; 838  : 			else

	jmp	SHORT $LN20@erase@17
$LN21@erase@17:

; 839  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

	mov	DWORD PTR [ecx+8], eax
$LN20@erase@17:

; 840  : 
; 841  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], edx

; 842  : 			_STD swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

	lea	ecx, DWORD PTR [ebx+40]
	add	eax, 40					; 00000028H
	cmp	eax, ecx
	je	SHORT $LN205@erase@17
	mov	bl, BYTE PTR [ecx]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [eax], bl
	mov	BYTE PTR [ecx], dl
$LN205@erase@17:

; 843  : 			}
; 844  : 
; 845  : 		if (_Color(_Erasednode) == _Black)

	mov	eax, DWORD PTR __Erasednode$[esp+116]
	mov	bl, 1
	cmp	BYTE PTR [eax+40], bl
	jne	$LN19@erase@17

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	ecx, DWORD PTR _this$[esp+116]
	mov	eax, DWORD PTR [ecx+24]
	cmp	edi, DWORD PTR [eax+4]
	je	$LN16@erase@17
	npad	3
$LL18@erase@17:
	cmp	BYTE PTR [edi+40], bl
	jne	$LN16@erase@17

; 849  : 				if (_Fixnode == _Left(_Fixnodeparent))

	mov	eax, DWORD PTR [esi]
	cmp	edi, eax
	jne	SHORT $LN15@erase@17

; 850  : 					{	// fixup left subtree
; 851  : 					_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]

; 852  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+40], 0
	jne	SHORT $LN14@erase@17

; 853  : 						{	// rotate red up from right subtree
; 854  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+40], bl

; 855  : 						_Color(_Fixnodeparent) = _Red;
; 856  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [esi+40], 0
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lrotate

; 857  : 						_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN14@erase@17:

; 858  : 						}
; 859  : 
; 860  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+41], 0

; 861  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 862  : 					else if (_Color(_Left(_Pnode)) == _Black

	jne	SHORT $LN367@erase@17

; 863  : 						&& _Color(_Right(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+40], bl
	jne	SHORT $LN11@erase@17
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+40], bl
	je	SHORT $LN368@erase@17
$LN11@erase@17:

; 864  : 						{	// redden right subtree with black children
; 865  : 						_Color(_Pnode) = _Red;
; 866  : 						_Fixnode = _Fixnodeparent;
; 867  : 						}
; 868  : 					else
; 869  : 						{	// must rearrange right subtree
; 870  : 						if (_Color(_Right(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+40], bl
	jne	SHORT $LN9@erase@17

; 871  : 							{	// rotate red up from left sub-subtree
; 872  : 							_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax]
	mov	BYTE PTR [edx+40], bl

; 873  : 							_Color(_Pnode) = _Red;
; 874  : 							_Rrotate(_Pnode);

	push	eax
	mov	BYTE PTR [eax+40], 0
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rrotate

; 875  : 							_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN9@erase@17:

; 876  : 							}
; 877  : 
; 878  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	dl, BYTE PTR [esi+40]
	mov	BYTE PTR [eax+40], dl

; 879  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+40], bl

; 880  : 						_Color(_Right(_Pnode)) = _Black;

	mov	eax, DWORD PTR [eax+8]

; 881  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [eax+40], bl
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lrotate

; 882  : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase@17
$LN15@erase@17:

; 883  : 						}
; 884  : 					}
; 885  : 				else
; 886  : 					{	// fixup right subtree
; 887  : 					_Pnode = _Left(_Fixnodeparent);
; 888  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+40], 0
	jne	SHORT $LN7@erase@17

; 889  : 						{	// rotate red up from left subtree
; 890  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+40], bl

; 891  : 						_Color(_Fixnodeparent) = _Red;
; 892  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [esi+40], 0
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rrotate

; 893  : 						_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN7@erase@17:

; 894  : 						}
; 895  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+41], 0

; 896  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 897  : 					else if (_Color(_Right(_Pnode)) == _Black

	jne	SHORT $LN367@erase@17

; 898  : 						&& _Color(_Left(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+40], bl
	jne	SHORT $LN4@erase@17
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+40], bl
	jne	SHORT $LN4@erase@17
$LN368@erase@17:

; 899  : 						{	// redden left subtree with black children
; 900  : 						_Color(_Pnode) = _Red;

	mov	BYTE PTR [eax+40], 0
$LN367@erase@17:

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	eax, DWORD PTR [ecx+24]

; 901  : 						_Fixnode = _Fixnodeparent;

	mov	edi, esi
	mov	esi, DWORD PTR [esi+4]
	cmp	edi, DWORD PTR [eax+4]
	jne	$LL18@erase@17

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	jmp	SHORT $LN16@erase@17
$LN4@erase@17:

; 902  : 						}
; 903  : 					else
; 904  : 						{	// must rearrange left subtree
; 905  : 						if (_Color(_Left(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+40], bl
	jne	SHORT $LN2@erase@17

; 906  : 							{	// rotate red up from right sub-subtree
; 907  : 							_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax+8]
	mov	BYTE PTR [edx+40], bl

; 908  : 							_Color(_Pnode) = _Red;
; 909  : 							_Lrotate(_Pnode);

	push	eax
	mov	BYTE PTR [eax+40], 0
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Lrotate

; 910  : 							_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN2@erase@17:

; 911  : 							}
; 912  : 
; 913  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	dl, BYTE PTR [esi+40]
	mov	BYTE PTR [eax+40], dl

; 914  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+40], bl

; 915  : 						_Color(_Left(_Pnode)) = _Black;

	mov	eax, DWORD PTR [eax]

; 916  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [eax+40], bl
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Rrotate
$LN16@erase@17:

; 917  : 						break;	// tree now recolored/rebalanced
; 918  : 						}
; 919  : 					}
; 920  : 
; 921  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

	mov	eax, DWORD PTR __Erasednode$[esp+116]
	mov	BYTE PTR [edi+40], bl
$LN19@erase@17:

; 922  : 			}
; 923  : 
; 924  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node

	cmp	DWORD PTR [eax+36], 16			; 00000010H
	jb	SHORT $LN335@erase@17
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN335@erase@17:
	mov	eax, DWORD PTR __Erasednode$[esp+116]
	mov	DWORD PTR [eax+36], 15			; 0000000fH
	mov	DWORD PTR [eax+32], 0

; 925  : 		this->_Alnod.deallocate(_Erasednode, 1);

	push	eax
	mov	BYTE PTR [eax+16], 0
	call	??3@YAXPAX@Z				; operator delete

; 926  : 
; 927  : 		if (0 < _Mysize)

	mov	edx, DWORD PTR _this$[esp+120]
	mov	eax, DWORD PTR [edx+28]
	add	esp, 4
	test	eax, eax
	jbe	SHORT $LN1@erase@17

; 928  : 			--_Mysize;

	dec	eax
	mov	DWORD PTR [edx+28], eax
$LN1@erase@17:

; 929  : 
; 930  : 		return (_Make_iter(_Where));	// return successor iterator

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+4]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 931  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN366@erase@17:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0:
	lea	ecx, DWORD PTR $T516960[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-100]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
_this$ = -96						; size = 4
__Erasednode$ = -92					; size = 4
tv872 = -88						; size = 4
$T517813 = -84						; size = 28
$T517812 = -56						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase, COMDAT
; _this$ = ecx

; 764  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[esp+116], ecx

; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		if (_Where._Mycont != this || _Isnil(_Where._Mynode()))
; 768  : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 769  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 770  : 		++_Where;	// save successor iterator for return
; 771  : 		_Orphan_ptr(*this, _Erasednode);
; 772  : 
; 773  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 774  : 		if (_Isnil(_Where._Mynode()))

	mov	ebx, DWORD PTR __Where$[ebp+4]
	cmp	BYTE PTR [ebx+57], 0
	je	SHORT $LN40@erase@18

; 775  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

	push	27					; 0000001bH
	xor	esi, esi
	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T517813[esp+124]
	mov	DWORD PTR $T517813[esp+148], 15		; 0000000fH
	mov	DWORD PTR $T517813[esp+144], esi
	mov	BYTE PTR $T517813[esp+128], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T517813[esp+116]
	push	eax
	lea	ecx, DWORD PTR $T517812[esp+120]
	mov	DWORD PTR __$EHRec$[esp+128], esi
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	ecx, DWORD PTR $T517812[esp+120]
	push	ecx
	mov	DWORD PTR $T517812[esp+124], OFFSET ??_7out_of_range@std@@6B@
	call	__CxxThrowException@8
$LN344@erase@18:
$LN40@erase@18:

; 776  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 777  : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Erasednode$[esp+116], ebx
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc

; 778  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 779  : 
; 780  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 781  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 782  : 		_Nodeptr _Pnode = _Erasednode;
; 783  : 
; 784  : 		if (_Isnil(_Left(_Pnode)))

	mov	ecx, DWORD PTR [ebx]
	cmp	BYTE PTR [ecx+57], 0
	je	SHORT $LN39@erase@18

; 785  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

	mov	edi, DWORD PTR [ebx+8]
	jmp	SHORT $LN339@erase@18
$LN39@erase@18:

; 786  : 		else if (_Isnil(_Right(_Pnode)))

	mov	edx, DWORD PTR [ebx+8]
	cmp	BYTE PTR [edx+57], 0
	je	SHORT $LN37@erase@18

; 787  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

	mov	edi, ecx

; 788  : 		else

	jmp	SHORT $LN339@erase@18
$LN37@erase@18:

; 789  : 			{	// two subtrees, must lift successor node to replace erased
; 790  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	mov	eax, DWORD PTR __Where$[ebp+4]

; 791  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

	mov	edi, DWORD PTR [eax+8]
	lea	edx, DWORD PTR [eax+8]

; 792  : 			}
; 793  : 
; 794  : 		if (_Pnode == _Erasednode)

	cmp	eax, ebx
	jne	SHORT $LN35@erase@18
$LN339@erase@18:

; 795  : 			{	// at most one subtree, relink it
; 796  : 			_Fixnodeparent = _Parent(_Erasednode);
; 797  : 			if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+57], 0
	mov	esi, DWORD PTR [ebx+4]
	jne	SHORT $LN34@erase@18

; 798  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	DWORD PTR [edi+4], esi
$LN34@erase@18:

; 799  : 
; 800  : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[esp+116]
	mov	eax, DWORD PTR [ecx+24]
	cmp	DWORD PTR [eax+4], ebx
	jne	SHORT $LN33@erase@18

; 801  : 				_Root() = _Fixnode;	// link down from root

	mov	DWORD PTR [eax+4], edi
	jmp	SHORT $LN30@erase@18
$LN33@erase@18:

; 802  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN31@erase@18

; 803  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	DWORD PTR [esi], edi

; 804  : 			else

	jmp	SHORT $LN30@erase@18
$LN31@erase@18:

; 805  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

	mov	DWORD PTR [esi+8], edi
$LN30@erase@18:

; 806  : 
; 807  : 			if (_Lmost() == _Erasednode)

	mov	eax, DWORD PTR [ecx+24]
	cmp	DWORD PTR [eax], ebx
	jne	SHORT $LN29@erase@18

; 808  : 				_Lmost() = _Isnil(_Fixnode)
; 809  : 					? _Fixnodeparent	// smallest is parent of erased node
; 810  : 					: _Min(_Fixnode);	// smallest in relinked subtree

	cmp	BYTE PTR [edi+57], 0
	je	SHORT $LN43@erase@18
	mov	eax, esi
	jmp	SHORT $LN44@erase@18
$LN43@erase@18:
	push	edi
	call	?_Min@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Min
	mov	ecx, DWORD PTR _this$[esp+120]
	add	esp, 4
$LN44@erase@18:
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [edx], eax
$LN29@erase@18:

; 811  : 
; 812  : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR tv872[esp+116], ecx
	cmp	DWORD PTR [ecx+8], ebx
	jne	SHORT $LN205@erase@18

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	cmp	BYTE PTR [edi+57], 0
	je	SHORT $LN45@erase@18
	mov	eax, esi
	mov	DWORD PTR [ecx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN205@erase@18
$LN45@erase@18:

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	push	edi
	call	?_Max@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Max
	mov	ecx, DWORD PTR tv872[esp+120]
	add	esp, 4
	mov	DWORD PTR [ecx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN205@erase@18
$LN35@erase@18:

; 818  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 819  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

	mov	DWORD PTR [ecx+4], eax

; 820  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [eax], ecx

; 821  : 
; 822  : 			if (_Pnode == _Right(_Erasednode))

	cmp	eax, DWORD PTR [ebx+8]
	jne	SHORT $LN26@erase@18

; 823  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	esi, eax

; 824  : 			else

	jmp	SHORT $LN25@erase@18
$LN26@erase@18:

; 825  : 				{	// successor further down, link in place of erased
; 826  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 827  : 				if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+57], 0
	mov	esi, DWORD PTR [eax+4]
	jne	SHORT $LN24@erase@18

; 828  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	DWORD PTR [edi+4], esi
$LN24@erase@18:

; 829  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	DWORD PTR [esi], edi

; 830  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx], ecx

; 831  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

	mov	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx+4], eax
$LN25@erase@18:

; 832  : 				}
; 833  : 
; 834  : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[esp+116]
	mov	ecx, DWORD PTR [ecx+24]
	cmp	DWORD PTR [ecx+4], ebx
	jne	SHORT $LN23@erase@18

; 835  : 				_Root() = _Pnode;	// link down from root

	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN20@erase@18
$LN23@erase@18:

; 836  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

	mov	ecx, DWORD PTR [ebx+4]
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN21@erase@18

; 837  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

	mov	DWORD PTR [ecx], eax

; 838  : 			else

	jmp	SHORT $LN20@erase@18
$LN21@erase@18:

; 839  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

	mov	DWORD PTR [ecx+8], eax
$LN20@erase@18:

; 840  : 
; 841  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], edx

; 842  : 			_STD swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

	lea	ecx, DWORD PTR [ebx+56]
	add	eax, 56					; 00000038H
	cmp	eax, ecx
	je	SHORT $LN205@erase@18
	mov	bl, BYTE PTR [ecx]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [eax], bl
	mov	BYTE PTR [ecx], dl
$LN205@erase@18:

; 843  : 			}
; 844  : 
; 845  : 		if (_Color(_Erasednode) == _Black)

	mov	eax, DWORD PTR __Erasednode$[esp+116]
	mov	bl, 1
	cmp	BYTE PTR [eax+56], bl
	jne	$LN19@erase@18

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	ecx, DWORD PTR _this$[esp+116]
	mov	edx, DWORD PTR [ecx+24]
	cmp	edi, DWORD PTR [edx+4]
	je	$LN16@erase@18
	npad	3
$LL18@erase@18:
	cmp	BYTE PTR [edi+56], bl
	jne	$LN16@erase@18

; 849  : 				if (_Fixnode == _Left(_Fixnodeparent))

	mov	eax, DWORD PTR [esi]
	cmp	edi, eax
	jne	SHORT $LN15@erase@18

; 850  : 					{	// fixup left subtree
; 851  : 					_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]

; 852  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+56], 0
	jne	SHORT $LN14@erase@18

; 853  : 						{	// rotate red up from right subtree
; 854  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+56], bl

; 855  : 						_Color(_Fixnodeparent) = _Red;
; 856  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [esi+56], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lrotate

; 857  : 						_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN14@erase@18:

; 858  : 						}
; 859  : 
; 860  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+57], 0

; 861  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 862  : 					else if (_Color(_Left(_Pnode)) == _Black

	jne	SHORT $LN342@erase@18

; 863  : 						&& _Color(_Right(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+56], bl
	jne	SHORT $LN11@erase@18
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+56], bl
	je	SHORT $LN343@erase@18
$LN11@erase@18:

; 864  : 						{	// redden right subtree with black children
; 865  : 						_Color(_Pnode) = _Red;
; 866  : 						_Fixnode = _Fixnodeparent;
; 867  : 						}
; 868  : 					else
; 869  : 						{	// must rearrange right subtree
; 870  : 						if (_Color(_Right(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+56], bl
	jne	SHORT $LN9@erase@18

; 871  : 							{	// rotate red up from left sub-subtree
; 872  : 							_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax]
	mov	BYTE PTR [edx+56], bl

; 873  : 							_Color(_Pnode) = _Red;
; 874  : 							_Rrotate(_Pnode);

	push	eax
	mov	BYTE PTR [eax+56], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rrotate

; 875  : 							_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN9@erase@18:

; 876  : 							}
; 877  : 
; 878  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	dl, BYTE PTR [esi+56]
	mov	BYTE PTR [eax+56], dl

; 879  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+56], bl

; 880  : 						_Color(_Right(_Pnode)) = _Black;

	mov	eax, DWORD PTR [eax+8]

; 881  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [eax+56], bl
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lrotate

; 882  : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase@18
$LN15@erase@18:

; 883  : 						}
; 884  : 					}
; 885  : 				else
; 886  : 					{	// fixup right subtree
; 887  : 					_Pnode = _Left(_Fixnodeparent);
; 888  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+56], 0
	jne	SHORT $LN7@erase@18

; 889  : 						{	// rotate red up from left subtree
; 890  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+56], bl

; 891  : 						_Color(_Fixnodeparent) = _Red;
; 892  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [esi+56], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rrotate

; 893  : 						_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN7@erase@18:

; 894  : 						}
; 895  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+57], 0

; 896  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 897  : 					else if (_Color(_Right(_Pnode)) == _Black

	jne	SHORT $LN342@erase@18

; 898  : 						&& _Color(_Left(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+56], bl
	jne	SHORT $LN4@erase@18
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+56], bl
	jne	SHORT $LN4@erase@18
$LN343@erase@18:

; 899  : 						{	// redden left subtree with black children
; 900  : 						_Color(_Pnode) = _Red;

	mov	BYTE PTR [eax+56], 0
$LN342@erase@18:

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	eax, DWORD PTR [ecx+24]

; 901  : 						_Fixnode = _Fixnodeparent;

	mov	edi, esi
	mov	esi, DWORD PTR [esi+4]
	cmp	edi, DWORD PTR [eax+4]
	jne	$LL18@erase@18

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	jmp	SHORT $LN16@erase@18
$LN4@erase@18:

; 902  : 						}
; 903  : 					else
; 904  : 						{	// must rearrange left subtree
; 905  : 						if (_Color(_Left(_Pnode)) == _Black)

	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+56], bl
	jne	SHORT $LN2@erase@18

; 906  : 							{	// rotate red up from right sub-subtree
; 907  : 							_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax+8]
	mov	BYTE PTR [edx+56], bl

; 908  : 							_Color(_Pnode) = _Red;
; 909  : 							_Lrotate(_Pnode);

	push	eax
	mov	BYTE PTR [eax+56], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Lrotate

; 910  : 							_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _this$[esp+116]
$LN2@erase@18:

; 911  : 							}
; 912  : 
; 913  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	dl, BYTE PTR [esi+56]
	mov	BYTE PTR [eax+56], dl

; 914  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+56], bl

; 915  : 						_Color(_Left(_Pnode)) = _Black;

	mov	eax, DWORD PTR [eax]

; 916  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	BYTE PTR [eax+56], bl
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Rrotate
$LN16@erase@18:

; 917  : 						break;	// tree now recolored/rebalanced
; 918  : 						}
; 919  : 					}
; 920  : 
; 921  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

	mov	BYTE PTR [edi+56], bl
$LN19@erase@18:

; 922  : 			}
; 923  : 
; 924  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node

	mov	ecx, DWORD PTR __Erasednode$[esp+116]
	add	ecx, 12					; 0000000cH
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@QAE@XZ

; 925  : 		this->_Alnod.deallocate(_Erasednode, 1);

	mov	ecx, DWORD PTR __Erasednode$[esp+116]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete

; 926  : 
; 927  : 		if (0 < _Mysize)

	mov	edx, DWORD PTR _this$[esp+120]
	mov	eax, DWORD PTR [edx+28]
	add	esp, 4
	test	eax, eax
	jbe	SHORT $LN1@erase@18

; 928  : 			--_Mysize;

	dec	eax
	mov	DWORD PTR [edx+28], eax
$LN1@erase@18:

; 929  : 
; 930  : 		return (_Make_iter(_Where));	// return successor iterator

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+4]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 931  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+116]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN341@erase@18:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0:
	lea	ecx, DWORD PTR $T517813[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-100]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z
_TEXT	SEGMENT
$T518438 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase, COMDAT
; _this$ = ecx

; 934  : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 935  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR [esi+24]
	mov	ebx, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
	test	edi, edi
	je	SHORT $LN26@erase@19
	cmp	edi, eax
	je	SHORT $LN27@erase@19
$LN26@erase@19:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __First$[ebp]
$LN27@erase@19:
	cmp	DWORD PTR __First$[ebp+4], ebx
	jne	SHORT $LL2@erase@19
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	ebx, DWORD PTR [esi+24]
	mov	eax, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN49@erase@19
	cmp	ecx, eax
	je	SHORT $LN50@erase@19
$LN49@erase@19:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __First$[ebp]
$LN50@erase@19:
	cmp	DWORD PTR __Last$[ebp+4], ebx
	jne	SHORT $LL2@erase@19

; 936  : 			{	// erase all
; 937  : 			clear();

	mov	ecx, DWORD PTR [esi+24]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Erase
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 938  : 			return (begin());

	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], edx

; 945  : 			}
; 946  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LL2@erase@19:

; 939  : 			}
; 940  : 		else
; 941  : 			{	// partial erase, one at a time
; 942  : 			while (_First != _Last)

	test	edi, edi
	je	SHORT $LN96@erase@19
	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN97@erase@19
$LN96@erase@19:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __First$[ebp]
$LN97@erase@19:
	mov	ebx, DWORD PTR __First$[ebp+4]
	cmp	ebx, DWORD PTR __Last$[ebp+4]
	je	SHORT $LN1@erase@19

; 943  : 				erase(_First++);

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::const_iterator::_Inc
	push	ebx
	push	edi
	lea	eax, DWORD PTR $T518438[esp+32]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase
	mov	edi, DWORD PTR __First$[ebp]
	jmp	SHORT $LL2@erase@19
$LN1@erase@19:

; 944  : 			return (_Make_iter(_First));

	mov	esi, DWORD PTR [esi]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 945  : 			}
; 946  : 		}

	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	mov	DWORD PTR [eax+4], ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z
_TEXT	SEGMENT
$T518837 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase, COMDAT
; _this$ = ecx

; 934  : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 935  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR [esi+24]
	mov	ebx, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
	test	edi, edi
	je	SHORT $LN26@erase@20
	cmp	edi, eax
	je	SHORT $LN27@erase@20
$LN26@erase@20:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __First$[ebp]
$LN27@erase@20:
	cmp	DWORD PTR __First$[ebp+4], ebx
	jne	SHORT $LL2@erase@20
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	ebx, DWORD PTR [esi+24]
	mov	eax, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN49@erase@20
	cmp	ecx, eax
	je	SHORT $LN50@erase@20
$LN49@erase@20:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __First$[ebp]
$LN50@erase@20:
	cmp	DWORD PTR __Last$[ebp+4], ebx
	jne	SHORT $LL2@erase@20

; 936  : 			{	// erase all
; 937  : 			clear();

	mov	ecx, DWORD PTR [esi+24]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Erase
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], eax

; 938  : 			return (begin());

	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], edx

; 945  : 			}
; 946  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LL2@erase@20:

; 939  : 			}
; 940  : 		else
; 941  : 			{	// partial erase, one at a time
; 942  : 			while (_First != _Last)

	test	edi, edi
	je	SHORT $LN96@erase@20
	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN97@erase@20
$LN96@erase@20:
	call	__invalid_parameter_noinfo
	mov	edi, DWORD PTR __First$[ebp]
$LN97@erase@20:
	mov	ebx, DWORD PTR __First$[ebp+4]
	cmp	ebx, DWORD PTR __Last$[ebp+4]
	je	SHORT $LN1@erase@20

; 943  : 				erase(_First++);

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::const_iterator::_Inc
	push	ebx
	push	edi
	lea	eax, DWORD PTR $T518837[esp+32]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase
	mov	edi, DWORD PTR __First$[ebp]
	jmp	SHORT $LL2@erase@20
$LN1@erase@20:

; 944  : 			return (_Make_iter(_First));

	mov	esi, DWORD PTR [esi]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 945  : 			}
; 946  : 		}

	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	mov	DWORD PTR [eax+4], ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ$0
__ehfuncinfo$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
_TEXT	SEGMENT
$T519234 = -84						; size = 28
$T519233 = -56						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+92]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	18					; 00000012H
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T519234[esp+100]
	mov	DWORD PTR $T519234[esp+124], 15		; 0000000fH
	mov	DWORD PTR $T519234[esp+120], 0
	mov	BYTE PTR $T519234[esp+104], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T519234[esp+92]
	push	eax
	lea	ecx, DWORD PTR $T519233[esp+96]
	mov	DWORD PTR __$EHRec$[esp+104], 0
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T519233[esp+96]
	push	ecx
	mov	DWORD PTR $T519233[esp+100], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN45@Xlen@11:
$LN44@Xlen@11:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T519234[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-76]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T519397 = -8						; size = 8
?_Tidy@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1420 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	esi
	mov	esi, ecx

; 1421 : 		erase(begin(), end());

	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	eax
	push	ecx
	push	edx
	push	ecx
	lea	eax, DWORD PTR $T519397[esp+32]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::erase

; 1422 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1423 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1424 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1425 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	ecx, DWORD PTR [esi+24]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1426 : 		_Myhead = 0, _Mysize = 0;

	xor	eax, eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax

; 1427 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T519553 = -8						; size = 8
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1420 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	esi
	mov	esi, ecx

; 1421 : 		erase(begin(), end());

	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	push	eax
	push	ecx
	push	edx
	push	ecx
	lea	eax, DWORD PTR $T519553[esp+32]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::erase

; 1422 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1423 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1424 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1425 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	ecx, DWORD PTR [esi+24]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1426 : 		_Myhead = 0, _Mysize = 0;

	xor	eax, eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax

; 1427 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@10

; 1105 : 			return (false);

	xor	al, al

; 1113 : 			}
; 1114 : 		return (true);
; 1115 : 		}

	pop	edi
	pop	esi
	ret	4
$LN4@Buy@10:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 153391689				; 09249249H
	jbe	SHORT $LN2@Buy@10

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$LN16@Buy@10:
$LN2@Buy@10:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	ecx, DWORD PTR [edi*8]
	sub	ecx, edi
	add	esp, 8
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax

; 1113 : 			}
; 1114 : 		return (true);
; 1115 : 		}

	pop	edi
	mov	DWORD PTR [esi+20], edx
	mov	al, 1
	pop	esi
	ret	4
$LN15@Buy@10:
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	SEGMENT
__unwindtable$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
xdata$x	ENDS
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 642  : 		{	// destroy the object

	push	-1
	push	__ehhandler$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[esp+28], ecx
	mov	eax, DWORD PTR [ecx-88]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-88], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@

; 643  : 		}

	lea	esi, DWORD PTR [ecx-80]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+36], 0
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	mov	eax, DWORD PTR [esi-8]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+esi-8], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >, COMDAT
; _this$ = ecx

; 539  : 		{	// destroy tree

	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+24], esi
	mov	DWORD PTR __$EHRec$[esp+32], 0

; 540  : 		_Tidy();

	call	?_Tidy@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Tidy

; 541  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::~_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >, COMDAT
; _this$ = ecx

; 539  : 		{	// destroy tree

	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+24], esi
	mov	DWORD PTR __$EHRec$[esp+32], 0

; 540  : 		_Tidy();

	call	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Tidy

; 541  : 		}

	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T520199 = -28						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T520394 = 8						; size = 4
__Right$ = 8						; size = 4
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN19@vector@42
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN20@vector@42
$LN19@vector@42:
	xor	eax, eax
$LN20@vector@42:
	mov	DWORD PTR [esi], eax

; 501  : 		if (_Buy(_Right.size()))

	mov	ebx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	ecx, DWORD PTR [ebx+16]
	sub	ecx, DWORD PTR [ebx+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	edi, edx
	mov	eax, 0
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	je	SHORT $LN8@vector@42
	cmp	edi, 153391689				; 09249249H
	jbe	SHORT $LN46@vector@42
	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$LN109@vector@42:
$LN46@vector@42:
	push	eax
	push	edi
	call	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	lea	ecx, DWORD PTR [edi*8]
	sub	ecx, edi
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], edx

; 502  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	eax, DWORD PTR [ebx+16]
	add	esp, 8
	mov	DWORD PTR $T520394[ebp], eax
	cmp	DWORD PTR [ebx+12], eax
	jbe	SHORT $LN62@vector@42
	call	__invalid_parameter_noinfo
$LN62@vector@42:
	mov	edi, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR $T520199[ebp], eax
	cmp	edi, DWORD PTR [ebx+16]
	jbe	SHORT $LN76@vector@42
	call	__invalid_parameter_noinfo
$LN76@vector@42:
	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR $T520394[ebp]
	mov	eax, DWORD PTR $T520199[ebp]
	mov	ebx, DWORD PTR [ebx]
	push	ecx
	push	edx
	push	eax
	push	edi
	push	ebx
	mov	ecx, esi
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@0PAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	DWORD PTR [esi+16], eax
$LN8@vector@42:

; 507  : 			_CATCH_END
; 508  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy

; 506  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN110@vector@42:
$LN108@vector@42:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	push	-1
	push	__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	push	4
	call	??2@YAPAXI@Z				; operator new
	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN13@vector@43
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN14@vector@43
$LN13@vector@43:
	xor	eax, eax
$LN14@vector@43:
	mov	DWORD PTR [esi], eax

; 471  : 		_Buy(0);

	mov	DWORD PTR [esi+12], ecx
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+20], ecx

; 472  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$1
__ehfuncinfo$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	mov	DWORD PTR __$EHRec$[esp+36], 0
	call	?_Tidy@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0> >::_Tidy
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~set<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ$1
__ehfuncinfo$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	mov	DWORD PTR __$EHRec$[esp+36], 0
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::_Tidy
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> > >
; Function compile flags: /Ogtpy
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	add	esi, 88					; 00000058H
	mov	ecx, esi
	call	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	pop	esi
	ret	0
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1variables_map@program_options@boost@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1variables_map@program_options@boost@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1variables_map@program_options@boost@@UAE@XZ$1
__ehfuncinfo$??1variables_map@program_options@boost@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1variables_map@program_options@boost@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1variables_map@program_options@boost@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1variables_map@program_options@boost@@UAE@XZ PROC	; boost::program_options::variables_map::~variables_map, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1variables_map@program_options@boost@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+28], esi
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR __$EHRec$[esp+36], 1
	call	??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+8]
	mov	BYTE PTR __$EHRec$[esp+36], 0
	call	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7abstract_variables_map@program_options@boost@@6B@
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1variables_map@program_options@boost@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1abstract_variables_map@program_options@boost@@UAE@XZ ; boost::program_options::abstract_variables_map::~abstract_variables_map
__unwindfunclet$??1variables_map@program_options@boost@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1variables_map@program_options@boost@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1variables_map@program_options@boost@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1variables_map@program_options@boost@@UAE@XZ ENDP	; boost::program_options::variables_map::~variables_map
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z$1
__ehfuncinfo$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z PROC ; boost::program_options::basic_option<char>::basic_option<char>, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+32], esi
	mov	edi, DWORD PTR ___that$[esp+28]
	push	-1
	push	0
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], 0
	push	edi
	mov	BYTE PTR [esi+4], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+40], 0
	mov	eax, DWORD PTR [edi+28]
	lea	ecx, DWORD PTR [edi+32]
	push	ecx
	lea	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [esi+28], eax
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	lea	edx, DWORD PTR [edi+56]
	push	edx
	lea	ecx, DWORD PTR [esi+56]
	mov	BYTE PTR __$EHRec$[esp+44], 1
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	al, BYTE PTR [edi+80]
	mov	BYTE PTR [esi+80], al
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z ENDP ; boost::program_options::basic_option<char>::basic_option<char>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z$0
__ehfuncinfo$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z
_TEXT	SEGMENT
$T590538 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z PROC ; std::_Construct<boost::program_options::basic_option<char>,boost::program_options::basic_option<char> >, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp+16]
	mov	DWORD PTR __Vptr$[esp+16], ecx

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T590538[esp+20], ecx
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	ecx, ecx
	je	SHORT $LN3@Construct@25
	mov	eax, DWORD PTR __Val$[esp+16]
	push	eax
	call	??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
$LN3@Construct@25:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T590538[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$basic_option@D@program_options@boost@@V123@@std@@YAXPAV?$basic_option@D@program_options@boost@@ABV123@@Z ENDP ; std::_Construct<boost::program_options::basic_option<char>,boost::program_options::basic_option<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z
_TEXT	SEGMENT
$T590565 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$590571 = 8					; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z PROC ; std::allocator<boost::program_options::basic_option<char> >::construct, COMDAT
; _this$ = ecx

; 154  : 		{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, eax

; 155  : 		_Construct(_Ptr, _Val);

	mov	ecx, DWORD PTR __Ptr$[esp+16]
	mov	DWORD PTR __Vptr$590571[esp+16], ecx
	mov	DWORD PTR $T590565[esp+20], ecx
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	ecx, ecx
	je	SHORT $LN5@construct@22
	mov	eax, DWORD PTR __Val$[esp+16]
	push	eax
	call	??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
$LN5@construct@22:

; 156  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z$0:
	mov	eax, DWORD PTR __Vptr$590571[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T590565[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$basic_option@D@program_options@boost@@@std@@QAEXPAV?$basic_option@D@program_options@boost@@ABV345@@Z ENDP ; std::allocator<boost::program_options::basic_option<char> >::construct
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T590607 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Vptr$590613 = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	esi, DWORD PTR __Dest$[ebp]

; 128  : 
; 129  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	edi, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], esi
	npad	7
$LL6@Uninit_cop@9:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@9

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$590613[ebp], esi
	mov	DWORD PTR $T590607[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@9
	push	edi
	mov	ecx, esi
	call	??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
$LN18@Uninit_cop@9:
	add	esi, 84					; 00000054H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 84					; 00000054H
	jmp	SHORT $LL6@Uninit_cop@9
__catch$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@9
$LL3@Uninit_cop@9:

; 134  : 		_Al.destroy(_Next);

	mov	ecx, esi
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@9
$LN1@Uninit_cop@9:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN36@Uninit_cop@9:
$LN4@Uninit_cop@9:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@Uninit_cop@9:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$590613[ebp]
	push	eax
	mov	ecx, DWORD PTR $T590607[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T590675 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Vptr$590682 = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	esi, DWORD PTR __Dest$[ebp]

; 128  : 
; 129  : 	_TRY_BEGIN

	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	edi, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], esi
	npad	7
$LL6@Uninit_cop@10:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@10

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$590682[ebp], esi
	mov	DWORD PTR $T590675[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@10
	push	edi
	mov	ecx, esi
	call	??0?$basic_option@D@program_options@boost@@QAE@ABV012@@Z
$LN18@Uninit_cop@10:
	add	esi, 84					; 00000054H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 84					; 00000054H
	jmp	SHORT $LL6@Uninit_cop@10
__catch$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@10
$LL3@Uninit_cop@10:

; 134  : 		_Al.destroy(_Next);

	mov	ecx, esi
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@10
$LN1@Uninit_cop@10:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN36@Uninit_cop@10:
$LN4@Uninit_cop@10:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

	mov	eax, esi

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@Uninit_cop@10:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$590682[ebp]
	push	eax
	mov	ecx, DWORD PTR $T590675[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
__ehfuncinfo$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
$T590718 = -68						; size = 16
$T590717 = -52						; size = 40
__$EHRec$ = -12						; size = 12
_a0$ = 8						; size = 8
_a1$ = 16						; size = 8
??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi

; 1008 :   {

	push	-1
	push	__ehhandler$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, eax

; 1009 :     if (this->empty())

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN1@operator@379

; 1010 :       boost::throw_exception(bad_function_call());

	lea	ecx, DWORD PTR $T590717[esp+76]
	call	??0bad_function_call@boost@@QAE@XZ	; boost::bad_function_call::bad_function_call
	push	eax
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	??$throw_exception@Vbad_function_call@boost@@@boost@@YAXABVbad_function_call@0@@Z ; boost::throw_exception<boost::bad_function_call>
$LN11@operator@379:
$LN1@operator@379:

; 1011 : 
; 1012 :     return get_vtable()->invoker
; 1013 :              (this->functor BOOST_FUNCTION_COMMA BOOST_FUNCTION_ARGS);

	mov	edx, DWORD PTR _a1$[esp+76]
	push	edx
	mov	edx, DWORD PTR _a1$[esp+76]
	push	edx
	mov	edx, DWORD PTR _a0$[esp+84]
	push	edx
	mov	edx, DWORD PTR _a0$[esp+84]
	push	edx
	add	ecx, 8
	push	ecx
	and	eax, -2					; fffffffeH
	mov	edx, DWORD PTR [eax+4]
	lea	ecx, DWORD PTR $T590718[esp+96]
	push	ecx
	call	edx
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [esi], xmm0
	movq	xmm0, QWORD PTR [eax+8]
	add	esp, 24					; 00000018H
	movq	QWORD PTR [esi+8], xmm0
	mov	eax, esi

; 1014 :   }

	mov	ecx, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 72					; 00000048H
	ret	16					; 00000010H
$LN10@operator@379:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
	lea	ecx, DWORD PTR $T590717[ebp]
	jmp	??1bad_function_call@boost@@UAE@XZ
__ehhandler$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-60]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@std@@@Z
_TEXT	SEGMENT
$T590738 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$590742 = 12					; size = 1
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$590742[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T590738[esp+4], 0
	mov	eax, DWORD PTR $T590738[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@2@@stdext@@YAPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@5@@Z
_TEXT	SEGMENT
$T590767 = -4						; size = 1
__First$ = 8						; size = 8
__Cat$590771 = 16					; size = 1
__Last$ = 16						; size = 8
__Dest$ = 24						; size = 4
__Al$ = 28						; size = 4
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@2@@stdext@@YAPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@5@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$590771[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T590767[esp+4], 0
	mov	eax, DWORD PTR $T590767[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+16]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@PAV?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@2@@stdext@@YAPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@5@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__Val$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5
__catchsym$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
__catchsym$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2
__tryblocktable$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$6
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$7
__ehfuncinfo$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ncopied$159089 = -100					; size = 4
_this$GSCopy$ = -96					; size = 4
__Newvec$159087 = -92					; size = 4
$T590995 = -88						; size = 1
$T590927 = -88						; size = 1
__Val$GSCopy$ = -88					; size = 4
tv493 = -84						; size = 4
__Cat$591039 = -84					; size = 1
__Cat$590999 = -84					; size = 1
__Cat$590931 = -84					; size = 1
__Whereoff$159088 = -84					; size = 4
__Capacity$ = -80					; size = 4
__Tmp$159112 = -76					; size = 28
__Tmp$159102 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 8
__Count$ = 16						; size = 4
__Val$ = 20						; size = 4
?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1249 : 			}

	mov	eax, DWORD PTR __Val$[ebp]
	mov	esi, ecx
	mov	DWORD PTR __Val$GSCopy$[ebp], eax
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR _this$GSCopy$[ebp], esi
	test	eax, eax
	jne	SHORT $LN31@Insert_n@6

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	DWORD PTR __Capacity$[ebp], eax
	jmp	SHORT $LN32@Insert_n@6
$LN31@Insert_n@6:
	mov	ecx, DWORD PTR [esi+20]
	sub	ecx, eax
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR __Capacity$[ebp], eax
$LN32@Insert_n@6:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n@6

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+16]
	mov	ecx, ebx
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ecx, 153391689				; 09249249H
	sub	ecx, eax
	cmp	ecx, edi
	jae	SHORT $LN12@Insert_n@6

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$LN101@Insert_n@6:
$LN12@Insert_n@6:

; 1167 : 		else if (_Capacity < size() + _Count)

	mov	ecx, DWORD PTR __Capacity$[ebp]
	add	eax, edi
	cmp	ecx, eax
	jae	$LN10@Insert_n@6

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	edx, ecx
	shr	edx, 1
	mov	ebx, 153391689				; 09249249H
	sub	ebx, edx
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@6
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@6
$LN17@Insert_n@6:
	add	ecx, edx
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@6:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, eax
	jae	SHORT $LN9@Insert_n@6

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], eax
	mov	ecx, eax
$LN9@Insert_n@6:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[ebp+4]
	sub	ebx, DWORD PTR [esi+12]
	mov	ecx, eax
	mov	eax, -1840700269			; 92492493H
	imul	ebx
	add	edx, ebx
	sar	edx, 4
	mov	ebx, edx

; 1175 : 			int _Ncopied = 0;

	xor	eax, eax
	shr	ebx, 31					; 0000001fH
	add	ebx, edx

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], eax

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	edx, DWORD PTR __Val$GSCopy$[ebp]
	add	esp, 8
	mov	DWORD PTR __Ncopied$159089[ebp], eax
	push	edx
	lea	eax, DWORD PTR [ebx*8]
	mov	DWORD PTR __Newvec$159087[ebp], ecx
	sub	eax, ebx
	lea	ecx, DWORD PTR [ecx+eax*4]
	push	edi
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR __Whereoff$159088[ebp], ebx
	call	?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	eax, DWORD PTR [esi+12]
	mov	BYTE PTR $T590927[ebp], 0
	mov	edx, DWORD PTR $T590927[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$590931[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp+4]
	lea	ecx, DWORD PTR [esi+8]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$159087[ebp]
	push	ecx
	push	edx
	push	eax
	mov	DWORD PTR __Ncopied$159089[ebp], 1
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR __Newvec$159087[ebp]
	mov	eax, DWORD PTR [esi+16]
	add	ebx, edi
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [ebx*8]
	sub	ecx, ebx
	lea	ecx, DWORD PTR [edx+ecx*4]
	mov	BYTE PTR $T590995[ebp], 0
	mov	edx, DWORD PTR $T590995[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$590999[ebp]
	push	edx
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	DWORD PTR __Ncopied$159089[ebp], 2
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	ebx, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, ebx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	ebx, ebx
	je	SHORT $LN93@Insert_n@6

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	edx, DWORD PTR __Cat$591039[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+8]
	push	eax
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR [esi+12]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN93@Insert_n@6:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR __Newvec$159087[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	edx, DWORD PTR [edi*8]
	sub	edx, edi
	mov	DWORD PTR [esi+20], ecx
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [esi+16], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+12], eax
	jmp	$LN1@Insert_n@6
__catch$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	mov	ebx, DWORD PTR __Ncopied$159089[ebp]
	cmp	ebx, 1

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	esi, DWORD PTR __Whereoff$159088[ebp]
	mov	edi, DWORD PTR __Newvec$159087[ebp]
	jle	SHORT $LN7@Insert_n@6
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	lea	edx, DWORD PTR [esi*8]
	sub	edx, esi
	lea	eax, DWORD PTR [edi+edx*4]
	push	eax
	push	edi
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
$LN7@Insert_n@6:

; 1188 : 			if (0 < _Ncopied)

	test	ebx, ebx
	jle	SHORT $LN6@Insert_n@6

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [esi+ecx]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	lea	eax, DWORD PTR [edi+edx*4]
	lea	ecx, DWORD PTR [esi*8]
	sub	ecx, esi
	lea	edx, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	push	eax
	push	edx
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
$LN6@Insert_n@6:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN102@Insert_n@6:
$LN10@Insert_n@6:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	sub	ebx, DWORD PTR __Where$[ebp+4]
	mov	eax, -1840700269			; 92492493H
	imul	ebx
	add	edx, ebx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, edi
	jae	$LN3@Insert_n@6

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$GSCopy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$159102[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ebx, DWORD PTR [edi*8]
	sub	ebx, edi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, DWORD PTR __Where$[ebp+4]
	mov	ecx, DWORD PTR [esi+16]
	add	ebx, ebx
	add	ebx, ebx
	lea	edx, DWORD PTR [ebx+eax]
	push	edx
	push	ecx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 3

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR __Where$[ebp+4]
	lea	edx, DWORD PTR __Tmp$159102[ebp]
	push	edx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sub	edi, eax
	mov	eax, DWORD PTR [esi+16]
	push	edi
	push	eax
	mov	ecx, esi
	call	?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@IABV32@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ufill
	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	add	DWORD PTR [esi+16], ebx
	mov	esi, DWORD PTR [esi+16]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Where$[ebp+4]
	lea	ecx, DWORD PTR __Tmp$159102[ebp]
	push	ecx
	sub	esi, ebx
	push	esi
	push	edx
	call	??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z ; std::fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH

; 1232 : 			}

	lea	ecx, DWORD PTR __Tmp$159102[ebp]

; 1233 : 		else

	jmp	$LN100@Insert_n@6
__catch$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx*8]
	sub	eax, ecx
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	eax, eax
	add	eax, eax
	add	edx, eax
	push	edx
	mov	edx, DWORD PTR __Where$[ebp+4]
	add	eax, edx
	push	eax
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN103@Insert_n@6:
$LN3@Insert_n@6:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$GSCopy$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$159112[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	ebx, DWORD PTR [edi*8]
	sub	ebx, edi
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	mov	eax, DWORD PTR [esi+16]
	add	ebx, ebx
	push	eax
	mov	edi, eax
	add	ebx, ebx
	push	eax
	sub	edi, ebx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR tv493[ebp], eax
	call	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	ecx, DWORD PTR tv493[ebp]
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	ecx
	push	edi
	push	edx
	mov	DWORD PTR [esi+16], eax
	call	??$_Unchecked_move_backward@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z ; stdext::_Unchecked_move_backward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	lea	eax, DWORD PTR __Tmp$159112[ebp]
	push	eax
	mov	eax, DWORD PTR __Where$[ebp+4]
	add	ebx, eax
	push	ebx
	push	eax
	call	??$fill@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0ABV10@@Z ; std::fill<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 24					; 00000018H

; 1249 : 			}

	lea	ecx, DWORD PTR __Tmp$159112[ebp]
$LN100@Insert_n@6:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@Insert_n@6:

; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN99@Insert_n@6:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$4:
	lea	ecx, DWORD PTR __Tmp$159102[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$5:
	lea	ecx, DWORD PTR __Tmp$159112[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_n
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\find_iterator.hpp
;	COMDAT ?do_find@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
_Begin$ = 8						; size = 8
_End$ = 16						; size = 8
?do_find@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::do_find, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 61   :                     if (!m_Finder.empty())

	cmp	DWORD PTR [ecx], 0
	push	esi
	mov	esi, eax
	je	SHORT $LN2@do_find

; 62   :                     {
; 63   :                         return m_Finder(Begin,End);

	mov	eax, DWORD PTR _End$[esp+4]
	mov	edx, DWORD PTR _End$[esp]
	push	eax
	mov	eax, DWORD PTR _Begin$[esp+8]
	push	edx
	mov	edx, DWORD PTR _Begin$[esp+8]
	push	eax
	push	edx
	call	??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator()

; 64   :                     }
; 65   :                     else
; 66   :                     {
; 67   :                         return match_type(End,End);

	mov	eax, esi

; 68   :                     }
; 69   :                 }

	pop	esi
	ret	16					; 00000010H
$LN2@do_find:

; 64   :                     }
; 65   :                     else
; 66   :                     {
; 67   :                         return match_type(End,End);

	mov	eax, DWORD PTR _End$[esp]
	mov	ecx, DWORD PTR _End$[esp+4]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+4], ecx
	mov	DWORD PTR [esi+12], ecx
	mov	eax, esi

; 68   :                     }
; 69   :                 }

	pop	esi
	ret	16					; 00000010H
?do_find@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@4@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::do_find
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Tmp$591304 = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
__Val$ = 20						; size = 4
?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	ebx, DWORD PTR [esi+16]
	push	edi
	mov	edi, DWORD PTR [esi+12]
	mov	ecx, ebx
	sub	ecx, edi
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jne	SHORT $LN3@insert@17
	xor	edi, edi
	jmp	SHORT $LN4@insert@17
$LN3@insert@17:
	cmp	edi, ebx
	jbe	SHORT $LN12@insert@17
	call	__invalid_parameter_noinfo
$LN12@insert@17:
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	eax, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN23@insert@17
	cmp	ecx, eax
	je	SHORT $LN24@insert@17
$LN23@insert@17:
	call	__invalid_parameter_noinfo
$LN24@insert@17:
	mov	ecx, DWORD PTR __Where$[ebp+4]
	sub	ecx, edi
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
$LN4@insert@17:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+4]
	mov	eax, DWORD PTR __Where$[ebp]
	push	ecx
	push	1
	push	edx
	push	eax
	mov	ecx, esi
	call	?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	ebx, DWORD PTR [esi+12]
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN36@insert@17
	call	__invalid_parameter_noinfo
$LN36@insert@17:
	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR __Tmp$591304[esp+24], esi
	mov	DWORD PTR __Tmp$591304[esp+28], ebx
	test	esi, esi
	jne	SHORT $LN70@insert@17
	call	__invalid_parameter_noinfo
	xor	eax, eax
$LN61@insert@17:
	lea	ecx, DWORD PTR [edi*8]
	sub	ecx, edi
	lea	ebx, DWORD PTR [ebx+ecx*4]
	cmp	ebx, DWORD PTR [eax+16]
	ja	SHORT $LN51@insert@17
	test	esi, esi
	je	SHORT $LN66@insert@17
	mov	esi, DWORD PTR [esi]
	jmp	SHORT $LN67@insert@17
$LN70@insert@17:
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN61@insert@17
$LN66@insert@17:
	xor	esi, esi
$LN67@insert@17:
	cmp	ebx, DWORD PTR [esi+12]
	jae	SHORT $LN52@insert@17
$LN51@insert@17:
	call	__invalid_parameter_noinfo
$LN52@insert@17:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Tmp$591304[esp+24]

; 879  : 		}

	pop	edi
	pop	esi
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], edx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\find_iterator.hpp
_TEXT	ENDS
;	COMDAT ?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ
_TEXT	SEGMENT
_FindMatch$ = -20					; size = 16
?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment, COMDAT
; _this$ = edi

; 296  :             {

	sub	esp, 24					; 00000018H

; 297  :                 match_type FindMatch=this->do_find( m_Next, m_End );

	cmp	DWORD PTR [edi], 0
	push	ebx
	push	ebp
	push	esi
	je	SHORT $LN6@increment@3
	mov	eax, DWORD PTR [edi+60]
	mov	ecx, DWORD PTR [edi+56]
	mov	edx, DWORD PTR [edi+52]
	push	eax
	mov	eax, DWORD PTR [edi+48]
	push	ecx
	push	edx
	push	eax
	lea	esi, DWORD PTR _FindMatch$[esp+52]
	mov	ecx, edi
	call	??R?$function2@V?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@boost@@QBE?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; boost::function2<boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	ebx, DWORD PTR _FindMatch$[esp+44]
	mov	esi, DWORD PTR _FindMatch$[esp+36]
	jmp	SHORT $LN5@increment@3
$LN6@increment@3:
	mov	ecx, DWORD PTR [edi+60]
	mov	esi, DWORD PTR [edi+56]
	mov	edx, ecx
	mov	DWORD PTR _FindMatch$[esp+40], ecx
	mov	ebx, esi
	mov	DWORD PTR _FindMatch$[esp+48], edx
$LN5@increment@3:

; 298  : 
; 299  :                 if(FindMatch.begin()==m_End && FindMatch.end()==m_End)

	cmp	esi, -4					; fffffffcH
	je	SHORT $LN16@increment@3
	test	esi, esi
	je	SHORT $LN15@increment@3
	cmp	esi, DWORD PTR [edi+56]
	je	SHORT $LN16@increment@3
$LN15@increment@3:
	call	__invalid_parameter_noinfo
$LN16@increment@3:
	mov	eax, DWORD PTR _FindMatch$[esp+40]
	cmp	eax, DWORD PTR [edi+60]
	jne	SHORT $LN1@increment@3
	cmp	ebx, -4					; fffffffcH
	je	SHORT $LN27@increment@3
	test	ebx, ebx
	je	SHORT $LN26@increment@3
	cmp	ebx, DWORD PTR [edi+56]
	je	SHORT $LN27@increment@3
$LN26@increment@3:
	call	__invalid_parameter_noinfo
$LN27@increment@3:
	mov	ecx, DWORD PTR _FindMatch$[esp+48]
	cmp	ecx, DWORD PTR [edi+60]
	jne	SHORT $LN1@increment@3

; 300  :                 {
; 301  :                     if(m_Match.end()==m_End)

	mov	eax, DWORD PTR [edi+40]
	mov	ebp, DWORD PTR [edi+44]
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN38@increment@3
	test	eax, eax
	je	SHORT $LN37@increment@3
	cmp	eax, DWORD PTR [edi+56]
	je	SHORT $LN38@increment@3
$LN37@increment@3:
	call	__invalid_parameter_noinfo
$LN38@increment@3:
	cmp	ebp, DWORD PTR [edi+60]
	jne	SHORT $LN1@increment@3

; 302  :                     {
; 303  :                         // Mark iterator as eof
; 304  :                         m_bEof=true;

	mov	BYTE PTR [edi+64], 1
$LN1@increment@3:

; 305  :                     }
; 306  :                 }
; 307  : 
; 308  :                 m_Match=match_type( m_Next, FindMatch.begin() );

	mov	edx, DWORD PTR [edi+48]
	mov	ecx, DWORD PTR _FindMatch$[esp+40]
	mov	DWORD PTR [edi+32], edx
	mov	eax, DWORD PTR [edi+52]

; 309  :                 m_Next=FindMatch.end();

	mov	edx, DWORD PTR _FindMatch$[esp+48]
	mov	DWORD PTR [edi+40], esi

; 310  :             }

	pop	esi
	mov	DWORD PTR [edi+36], eax
	mov	DWORD PTR [edi+44], ecx
	pop	ebp
	mov	DWORD PTR [edi+48], ebx
	mov	DWORD PTR [edi+52], edx
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T591478 = -8						; size = 1
__Cat$591481 = -8					; size = 1
$T591447 = -8						; size = 8
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 810  : 		if (size() < capacity())

	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	jne	SHORT $LN9@push_back@5
	xor	esi, esi
	jmp	SHORT $LN10@push_back@5
$LN9@push_back@5:
	mov	ecx, DWORD PTR [edi+20]
	sub	ecx, eax
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
$LN10@push_back@5:
	mov	ebx, DWORD PTR [edi+16]
	mov	ecx, ebx
	sub	ecx, DWORD PTR [edi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, esi
	jae	SHORT $LN2@push_back@5

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	BYTE PTR $T591478[esp+24], 0
	mov	ecx, DWORD PTR $T591478[esp+24]
	mov	edx, DWORD PTR __Cat$591481[esp+24]
	push	ecx
	mov	ecx, DWORD PTR __Val$[ebp]
	push	edx
	lea	eax, DWORD PTR [edi+8]
	push	eax
	push	ecx
	push	1
	push	ebx
	call	??$_Uninit_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IABV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 24					; 00000018H
	add	ebx, 28					; 0000001cH
	mov	DWORD PTR [edi+16], ebx

; 824  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@push_back@5:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	cmp	DWORD PTR [edi+12], ebx
	jbe	SHORT $LN22@push_back@5
	call	__invalid_parameter_noinfo
$LN22@push_back@5:
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edi]
	push	edx
	push	ebx
	push	eax
	lea	eax, DWORD PTR $T591447[esp+36]
	push	eax
	mov	ecx, edi
	call	?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert

; 824  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAV?$basic_option@D@program_options@boost@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@PAV234@00@Z
_TEXT	SEGMENT
$T591579 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$591582 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAV?$basic_option@D@program_options@boost@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@PAV234@00@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<boost::program_options::basic_option<char> *>, COMDAT
; _this$ = ecx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	sub	esp, 8

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$591582[esp+4]
	mov	BYTE PTR $T591579[esp+8], 0
	mov	eax, DWORD PTR $T591579[esp+8]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+16]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >

; 1142 : 		}

	add	esp, 32					; 00000020H
	ret	12					; 0000000cH
??$_Ucopy@PAV?$basic_option@D@program_options@boost@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@PAV234@00@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<boost::program_options::basic_option<char> *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@1@0PAV234@@Z
_TEXT	SEGMENT
$T591643 = -4						; size = 1
__Cat$591646 = -4					; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Ptr$ = 24						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@1@0PAV234@@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > > >, COMDAT
; _this$ = ecx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	BYTE PTR $T591643[esp+8], 0
	mov	eax, DWORD PTR $T591643[esp+8]
	mov	edx, DWORD PTR __Cat$591646[esp+8]
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	edx, DWORD PTR __First$[ebp+4]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR __Last$[ebp+4]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PBV?$basic_option@D@program_options@boost@@PAV123@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PBV123@0PAV123@AAV?$allocator@V?$basic_option@D@program_options@boost@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<boost::program_options::basic_option<char> const *,boost::program_options::basic_option<char> *,std::allocator<boost::program_options::basic_option<char> > >
	add	esp, 24					; 00000018H

; 1142 : 		}

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Ucopy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@1@0PAV234@@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > > >
_TEXT	ENDS
PUBLIC	_this$GSCopy$
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z$2
__ehfuncinfo$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\find_iterator.hpp
xdata$x	ENDS
;	COMDAT ??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z
_TEXT	SEGMENT
_this$GSCopy$ = -20					; size = 4
$T591668 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_Begin$ = 8						; size = 8
_End$ = 16						; size = 8
_Finder$ = 24						; size = 16
??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z PROC ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT
; _this$ = ecx

; 261  :             {

	push	-1
	push	__ehhandler$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$GSCopy$[esp+36], edi
	mov	DWORD PTR __$EHRec$[esp+44], 0
	mov	eax, DWORD PTR _Finder$[esp+40]
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	DWORD PTR $T591668[esp+52], esp
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN10@allocator@4
	mov	eax, esi
	lea	ecx, DWORD PTR _Finder$[esp+48]
	jmp	SHORT $LN9@allocator@4
$LN10@allocator@4:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _Finder$[esp+52]
	add	esp, 4
$LN9@allocator@4:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _Finder$[esp+72]
	add	esp, 12					; 0000000cH
	mov	ecx, edi
	mov	DWORD PTR [esi+12], eax
	call	??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@123@H@Z ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
	mov	BYTE PTR __$EHRec$[esp+44], 1
	mov	ecx, DWORD PTR _Begin$[esp+36]
	mov	eax, DWORD PTR _Begin$[esp+32]
	mov	edx, DWORD PTR _End$[esp+36]
	mov	DWORD PTR [edi+36], ecx
	mov	DWORD PTR [edi+44], ecx
	mov	DWORD PTR [edi+32], eax
	mov	DWORD PTR [edi+40], eax
	mov	DWORD PTR [edi+52], ecx
	mov	ecx, DWORD PTR _End$[esp+32]
	mov	DWORD PTR [edi+48], eax
	mov	DWORD PTR [edi+56], ecx
	mov	DWORD PTR [edi+60], edx
	mov	BYTE PTR [edi+64], 0

; 262  :                 increment();

	call	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment

; 263  :             }

	cmp	DWORD PTR _Finder$[esp+40], 8
	jbe	SHORT $LN25@allocator@4
	mov	eax, DWORD PTR _Finder$[esp+32]
	test	eax, eax
	je	SHORT $LN25@allocator@4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN25@allocator@4:
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 24					; 00000018H
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z$0:
	lea	eax, DWORD PTR _Finder$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__unwindfunclet$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z$2:
	mov	esi, DWORD PTR _this$GSCopy$[ebp]
	jmp	??1?$find_iterator_base@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@algorithm@boost@@IAE@XZ ; boost::algorithm::detail::find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::~find_iterator_base<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
__ehhandler$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z ENDP ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z$1
__ehfuncinfo$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\convert.hpp
xdata$x	ENDS
;	COMDAT ??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z
_TEXT	SEGMENT
$T591738 = -44						; size = 4
$T591736 = -40						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z PROC ; boost::program_options::to_internal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _s$ = esi

; 76   :         {

	push	-1
	push	__ehhandler$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	ebp
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+64]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+60]
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+72], edi

; 77   :             std::vector<std::string> result;

	mov	ecx, ebx
	mov	DWORD PTR $T591738[esp+64], edi
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 80   :             return result;

	mov	DWORD PTR __$EHRec$[esp+72], edi
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR $T591738[esp+64], 1
	je	SHORT $LN44@to_interna
	xor	ebp, ebp
	cmp	edi, eax
	jb	SHORT $LN11@to_interna

; 78   :             for (unsigned i = 0; i < s.size(); ++i)
; 79   :                 result.push_back(to_internal(s[i]));            

	call	__invalid_parameter_noinfo
$LN11@to_interna:
	mov	eax, DWORD PTR [esi+12]
	add	eax, ebp
	push	eax
	lea	eax, DWORD PTR $T591736[esp+68]
	push	eax
	call	?to_internal@program_options@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@@Z ; boost::program_options::to_internal
	add	esp, 8
	push	eax
	mov	ecx, ebx
	mov	DWORD PTR __$EHRec$[esp+76], 1
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[esp+72], 0
	cmp	DWORD PTR $T591736[esp+88], 16		; 00000010H
	jb	SHORT $LN32@to_interna
	mov	ecx, DWORD PTR $T591736[esp+68]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN32@to_interna:
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	add	ebp, 28					; 0000001cH
	cmp	edi, eax
	jb	SHORT $LN11@to_interna
$LN44@to_interna:

; 80   :             return result;

	mov	eax, ebx

; 81   :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+64]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z$0:
	mov	eax, DWORD PTR $T591738[ebp]
	and	eax, 1
	je	$LN7@to_interna
	and	DWORD PTR $T591738[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN7@to_interna:
	ret	0
__unwindfunclet$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z$1:
	lea	ecx, DWORD PTR $T591736[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-48]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z ENDP ; boost::program_options::to_internal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z$1
__ehfuncinfo$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\parsers.hpp
xdata$x	ENDS
;	COMDAT ??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z
_TEXT	SEGMENT
$T591879 = -44						; size = 4
$T591877 = -40						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_e$ = 12						; size = 4
??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z PROC ; boost::program_options::detail::make_vector<char,char * *>, COMDAT
; _i$ = ecx

; 19   :         {

	push	-1
	push	__ehhandler$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+68]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+64]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[esp+76], ebx

; 20   :             std::vector<std::basic_string<charT> > result;

	mov	ecx, ebp
	mov	DWORD PTR $T591879[esp+68], ebx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 25   :             return result;            

	mov	DWORD PTR __$EHRec$[esp+76], ebx
	mov	DWORD PTR $T591879[esp+68], 1
	cmp	edi, DWORD PTR _e$[esp+64]
	je	SHORT $LN74@make_vecto
$LL3@make_vecto:

; 21   :             // Some compilers don't have templated constructor for 
; 22   :             // vector, so we can't create vector from (argv+1, argv+argc) range
; 23   :             for(; i != e; ++i)
; 24   :                 result.push_back(*i);

	mov	ecx, DWORD PTR [edi]
	mov	eax, ecx
	mov	DWORD PTR $T591877[esp+92], 15		; 0000000fH
	mov	DWORD PTR $T591877[esp+88], ebx
	mov	BYTE PTR $T591877[esp+72], bl
	lea	esi, DWORD PTR [eax+1]
$LL73@make_vecto:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL73@make_vecto
	sub	eax, esi
	push	eax
	push	ecx
	lea	ecx, DWORD PTR $T591877[esp+76]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T591877[esp+68]
	push	eax
	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+80], 1
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[esp+76], bl
	cmp	DWORD PTR $T591877[esp+92], 16		; 00000010H
	jb	SHORT $LN61@make_vecto
	mov	ecx, DWORD PTR $T591877[esp+72]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN61@make_vecto:
	add	edi, 4
	cmp	edi, DWORD PTR _e$[esp+64]
	jne	SHORT $LL3@make_vecto
$LN74@make_vecto:

; 25   :             return result;            

	mov	eax, ebp

; 26   :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+68]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z$0:
	mov	eax, DWORD PTR $T591879[ebp]
	and	eax, 1
	je	$LN7@make_vecto
	and	DWORD PTR $T591879[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN7@make_vecto:
	ret	0
__unwindfunclet$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z$1:
	lea	ecx, DWORD PTR $T591877[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-52]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z ENDP ; boost::program_options::detail::make_vector<char,char * *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Cat$592235 = 8					; size = 1
tv320 = 8						; size = 4
$T592191 = 8						; size = 1
__Cat$592196 = 8					; size = 1
$T592193 = 8						; size = 1
__Right$ = 8						; size = 4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=, COMDAT
; _this$ = ecx

; 563  : 		{	// assign _Right

	push	ebx
	push	ebp
	push	esi
	push	edi

; 564  : 		if (this != &_Right)

	mov	edi, DWORD PTR __Right$[esp+12]
	mov	esi, ecx
	cmp	esi, edi
	je	$LN53@operator@380

; 565  : 			{	// worth doing
; 566  : 
; 567  :  #if _HAS_ITERATOR_DEBUGGING
; 568  : 			this->_Orphan_all();
; 569  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 570  : 
; 571  : 			if (_Right.size() == 0)

	mov	eax, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR [edi+16]
	sub	ecx, eax
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ebp, edx
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
	jne	SHORT $LN8@operator@380

; 572  : 				clear();	// new sequence empty, erase existing sequence

	mov	ecx, esi
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
$LN8@operator@380:

; 573  : 			else if (_Right.size() <= size())

	mov	ecx, DWORD PTR [esi+16]
	mov	ebx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	ebp, ecx
	ja	SHORT $LN6@operator@380

; 574  : 				{	// enough elements, copy new and destroy old
; 575  : 				pointer _Ptr = _STDEXT unchecked_copy(_Right._Myfirst, _Right._Mylast,
; 576  : 					_Myfirst);	// copy new

	mov	BYTE PTR $T592191[esp+12], 0
	mov	eax, DWORD PTR $T592191[esp+12]
	mov	ecx, DWORD PTR __Cat$592196[esp+12]
	mov	edx, DWORD PTR $T592193[esp+12]
	push	eax
	mov	eax, DWORD PTR [edi+16]
	push	ecx
	push	edx
	push	ebx
	push	eax
	mov	eax, DWORD PTR [edi+12]
	push	eax
	call	??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 577  : 				_Destroy(_Ptr, _Mylast);	// destroy old

	mov	ecx, DWORD PTR __Cat$592235[esp+36]
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 578  : 				_Mylast = _Myfirst + _Right.size();

	mov	ecx, DWORD PTR [edi+16]
	sub	ecx, DWORD PTR [edi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edx, DWORD PTR [eax*8]
	add	esp, 40					; 00000028H
	sub	edx, eax
	mov	eax, DWORD PTR [esi+12]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [esi+16], ecx

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
$LN6@operator@380:

; 579  : 				}
; 580  : 			else if (_Right.size() <= capacity())

	test	ebx, ebx
	jne	SHORT $LN44@operator@380
	xor	eax, eax
	jmp	SHORT $LN45@operator@380
$LN44@operator@380:
	mov	edx, DWORD PTR [esi+20]
	sub	edx, ebx
	mov	DWORD PTR tv320[esp+12], edx
	mov	eax, -1840700269			; 92492493H
	imul	edx
	add	edx, DWORD PTR tv320[esp+12]
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
$LN45@operator@380:
	cmp	ebp, eax
	ja	SHORT $LN4@operator@380

; 581  : 				{	// enough room, copy and construct new
; 582  : 				pointer _Ptr = _Right._Myfirst + size();

	mov	eax, DWORD PTR [edi+12]
	lea	edx, DWORD PTR [ecx*8]
	sub	edx, ecx
	lea	ebp, DWORD PTR [eax+edx*4]

; 583  : 				_STDEXT unchecked_copy(_Right._Myfirst, _Ptr, _Myfirst);

	push	ebx
	push	ebp
	push	eax
	call	??$unchecked_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 584  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [edi+16]
	add	esp, 12					; 0000000cH
	push	eax
	push	ecx
	push	ebp

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	ecx, esi
	call	??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	mov	DWORD PTR [esi+16], eax

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
$LN4@operator@380:

; 585  : 				}
; 586  : 			else
; 587  : 				{	// not enough room, allocate new array and construct new
; 588  : 				if (_Myfirst != 0)

	test	ebx, ebx
	je	SHORT $LN48@operator@380

; 589  : 					{	// discard old array
; 590  : 					_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	mov	ecx, esi
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 591  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN48@operator@380:

; 592  : 					}
; 593  : 				if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR [edi+16]
	sub	ecx, DWORD PTR [edi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	mov	ecx, esi
	call	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
	test	al, al
	je	SHORT $LN53@operator@380

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [edi+16]
	mov	edx, DWORD PTR [edi+12]
	push	eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	mov	DWORD PTR [esi+16], eax
$LN53@operator@380:

; 599  : 		}

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z$5
__ehfuncinfo$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T592270 = -28						; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T592465 = 8						; size = 4
__Right$ = 8						; size = 4
??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >, COMDAT
; _this$ = ecx

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	push	4
	call	??2@YAPAXI@Z				; operator new
	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN19@vector@62
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN20@vector@62
$LN19@vector@62:
	xor	eax, eax
$LN20@vector@62:
	mov	DWORD PTR [esi], eax

; 501  : 		if (_Buy(_Right.size()))

	mov	ebx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], ecx
	mov	edx, DWORD PTR [ebx+16]
	sub	edx, DWORD PTR [ebx+12]
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	DWORD PTR [esi+12], ecx
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+20], ecx
	je	SHORT $LN8@vector@62
	cmp	edi, 51130563				; 030c30c3H
	jbe	SHORT $LN46@vector@62
	call	?_Xlen@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@KAXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Xlen
$LN109@vector@62:
$LN46@vector@62:
	push	ecx
	push	edi
	call	??$_Allocate@V?$basic_option@D@program_options@boost@@@std@@YAPAV?$basic_option@D@program_options@boost@@IPAV123@@Z ; std::_Allocate<boost::program_options::basic_option<char> >
	imul	edi, 84					; 00000054H
	add	edi, eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], edi

; 502  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	eax, DWORD PTR [ebx+16]
	add	esp, 8
	mov	DWORD PTR $T592465[ebp], eax
	cmp	DWORD PTR [ebx+12], eax
	jbe	SHORT $LN62@vector@62
	call	__invalid_parameter_noinfo
$LN62@vector@62:
	mov	edi, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR $T592270[ebp], eax
	cmp	edi, DWORD PTR [ebx+16]
	jbe	SHORT $LN76@vector@62
	call	__invalid_parameter_noinfo
$LN76@vector@62:
	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR $T592465[ebp]
	mov	eax, DWORD PTR $T592270[ebp]
	mov	ebx, DWORD PTR [ebx]
	push	ecx
	push	edx
	push	eax
	push	edi
	push	ebx
	mov	ecx, esi
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@1@0PAV234@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<std::_Vector_const_iterator<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > > >
	mov	DWORD PTR [esi+16], eax
$LN8@vector@62:

; 507  : 			_CATCH_END
; 508  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy

; 506  : 			_RERAISE;

	xor	ecx, ecx
	push	ecx
	push	ecx
	call	__CxxThrowException@8
$LN110@vector@62:
$LN108@vector@62:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
; Function compile flags: /Ogtpy
;	COMDAT ?swap@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
?swap@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXAAV12@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::swap, COMDAT
; _this$ = eax
; __Right$ = edx

; 1064 : 		{	// exchange contents with _Right

	push	ebx
	push	esi
	push	edi

; 1065 : 		if (this == &_Right)

	cmp	eax, edx
	je	SHORT $LN24@swap@15

; 1066 : 			;	// same object, do nothing
; 1067 : 		else if (this->_Alval == _Right._Alval)
; 1068 : 			{	// same allocator, swap control information
; 1069 : 
; 1070 :  #if _HAS_ITERATOR_DEBUGGING
; 1071 : 			this->_Swap_all(_Right);
; 1072 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1073 : 
; 1074 : 			this->_Swap_aux(_Right);

	mov	esi, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [edx], ecx
	mov	esi, DWORD PTR [eax]
	cmp	esi, ecx
	je	SHORT $LN15@swap@15
	mov	ebx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [esi], ebx
	mov	DWORD PTR [ecx], edi
$LN15@swap@15:

; 1075 : 
; 1076 : 			_STD swap(_Myfirst, _Right._Myfirst);

	lea	ecx, DWORD PTR [edx+12]
	lea	esi, DWORD PTR [eax+12]
	cmp	esi, ecx
	je	SHORT $LN18@swap@15
	mov	ebx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [esi], ebx
	mov	DWORD PTR [ecx], edi
$LN18@swap@15:

; 1077 : 			_STD swap(_Mylast, _Right._Mylast);

	lea	ecx, DWORD PTR [edx+16]
	lea	esi, DWORD PTR [eax+16]
	cmp	esi, ecx
	je	SHORT $LN21@swap@15
	mov	ebx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [esi], ebx
	mov	DWORD PTR [ecx], edi
$LN21@swap@15:

; 1078 : 			_STD swap(_Myend, _Right._Myend);

	lea	ecx, DWORD PTR [edx+20]
	add	eax, 20					; 00000014H
	cmp	eax, ecx
	je	SHORT $LN24@swap@15
	mov	esi, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [ecx], edx
$LN24@swap@15:

; 1079 : 			}
; 1080 : 		else
; 1081 : 			{	// different allocator, do multiple assigns
; 1082 : 			this->_Swap_aux(_Right);
; 1083 : 
; 1084 : 			_Myt _Ts = *this;
; 1085 : 
; 1086 : 			*this = _Right;
; 1087 : 			_Right = _Ts;
; 1088 : 			}
; 1089 : 		}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
?swap@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXAAV12@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::swap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$basic_parsed_options@D@program_options@boost@@QAE@ABV012@@Z
_TEXT	SEGMENT
??0?$basic_parsed_options@D@program_options@boost@@QAE@ABV012@@Z PROC ; boost::program_options::basic_parsed_options<char>::basic_parsed_options<char>, COMDAT
; _this$ = esi
; ___that$ = edi
	push	ecx
	push	edi
	mov	ecx, esi
	call	??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+24], eax
	mov	eax, esi
	pop	ecx
	ret	0
??0?$basic_parsed_options@D@program_options@boost@@QAE@ABV012@@Z ENDP ; boost::program_options::basic_parsed_options<char>::basic_parsed_options<char>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z$1
__ehfuncinfo$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\parsers.hpp
xdata$x	ENDS
;	COMDAT ??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z
_TEXT	SEGMENT
$T592690 = -60						; size = 24
$T592689 = -36						; size = 24
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Cat$592862 = 12					; size = 1
__Cat$592771 = 12					; size = 1
_argv$ = 12						; size = 4
??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z PROC ; boost::program_options::basic_command_line_parser<char>::basic_command_line_parser<char>, COMDAT
; _argc$ = ecx

; 44   :     {}

	push	-1
	push	__ehhandler$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _argv$[esp+72]
	mov	ebp, DWORD PTR _this$[esp+72]
	xor	edx, edx
	xor	edi, edi
	cmp	ecx, edi
	sete	dl
	add	edx, ecx
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	lea	edx, DWORD PTR $T592689[esp+80]
	lea	ecx, DWORD PTR [eax+4]
	push	edx
	call	??$make_vector@DPAPAD@detail@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAPAD0@Z ; boost::program_options::detail::make_vector<char,char * *>
	lea	ecx, DWORD PTR $T592690[esp+84]
	push	ecx
	mov	esi, eax
	mov	DWORD PTR __$EHRec$[esp+96], edi
	call	??$to_internal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV23@@Z ; boost::program_options::to_internal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, ebp
	mov	BYTE PTR __$EHRec$[esp+88], 1
	call	??0cmdline@detail@program_options@boost@@QAE@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; boost::program_options::detail::cmdline::cmdline
	mov	eax, DWORD PTR $T592690[esp+88]
	cmp	eax, edi
	je	SHORT $LN17@basic_comm
	mov	edx, DWORD PTR __Cat$592771[esp+72]
	push	edx
	mov	edx, DWORD PTR $T592690[esp+96]
	lea	ecx, DWORD PTR $T592690[esp+88]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR $T592690[esp+104]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN17@basic_comm:
	mov	ecx, DWORD PTR $T592690[esp+76]
	push	ecx
	mov	DWORD PTR $T592690[esp+92], edi
	mov	DWORD PTR $T592690[esp+96], edi
	mov	DWORD PTR $T592690[esp+100], edi
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR $T592689[esp+92]
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN38@basic_comm
	mov	edx, DWORD PTR __Cat$592862[esp+72]
	push	edx
	mov	edx, DWORD PTR $T592689[esp+96]
	lea	ecx, DWORD PTR $T592689[esp+88]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR $T592689[esp+104]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN38@basic_comm:
	mov	ecx, DWORD PTR $T592689[esp+76]
	push	ecx
	mov	DWORD PTR $T592689[esp+92], edi
	mov	DWORD PTR $T592689[esp+96], edi
	mov	DWORD PTR $T592689[esp+100], edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, ebp
	mov	ecx, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	add	esp, 60					; 0000003cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z$0:
	lea	ecx, DWORD PTR $T592689[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z$1:
	lea	ecx, DWORD PTR $T592690[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-60]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z ENDP ; boost::program_options::basic_command_line_parser<char>::basic_command_line_parser<char>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
	DD	03H
	DD	FLAT:__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$6
__ehfuncinfo$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\value_semantic.hpp
xdata$x	ENDS
;	COMDAT ?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T592890 = -132						; size = 28
$T592887 = -132						; size = 28
$T592896 = -104						; size = 4
$T592886 = -100						; size = 28
$T592889 = -72						; size = 28
$T592888 = -72						; size = 28
_msg$144077 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::name, COMDAT
; _this$ = ecx

; 18   :     {

	push	-1
	push	__ehhandler$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+132], eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+148]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+144]
	xor	ebx, ebx
	mov	esi, ecx
	mov	DWORD PTR $T592896[esp+148], ebx

; 19   :         if (!m_implicit_value.empty() && !m_implicit_value_as_text.empty()) {

	cmp	DWORD PTR [esi+44], ebx
	je	$LN5@name
	cmp	DWORD PTR [esi+68], ebx
	je	$LN5@name

; 20   :             std::string msg = "[=arg(=" + m_implicit_value_as_text + ")]";

	lea	eax, DWORD PTR [esi+48]
	push	eax
	lea	ecx, DWORD PTR $T592886[esp+152]
	push	OFFSET ??_C@_07OBNIPEJI@?$FL?$DNarg?$CI?$DN?$AA@
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET ??_C@_02DIDHHIJL@?$CJ?$FN?$AA@
	push	eax
	lea	edx, DWORD PTR _msg$144077[esp+168]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+180], ebx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[esp+156], 2
	cmp	DWORD PTR $T592886[esp+172], 16		; 00000010H
	jb	SHORT $LN36@name
	mov	eax, DWORD PTR $T592886[esp+152]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN36@name:
	mov	DWORD PTR $T592886[esp+172], 15		; 0000000fH
	mov	DWORD PTR $T592886[esp+168], ebx
	mov	BYTE PTR $T592886[esp+152], bl

; 21   :             if (!m_default_value.empty() && !m_default_value_as_text.empty())

	cmp	DWORD PTR [esi+12], ebx
	je	SHORT $LN4@name
	cmp	DWORD PTR [esi+36], ebx
	je	SHORT $LN4@name

; 22   :                 msg += " (=" + m_default_value_as_text + ")";

	add	esi, 16					; 00000010H
	push	esi
	lea	ecx, DWORD PTR $T592887[esp+152]
	push	OFFSET ??_C@_03CCDPNADL@?5?$CI?$DN?$AA@
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET ??_C@_01PKGAHCOL@?$CJ?$AA@
	push	eax
	lea	edx, DWORD PTR $T592888[esp+168]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+180], 3
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 24					; 00000018H
	push	-1
	push	ebx
	push	eax
	lea	ecx, DWORD PTR _msg$144077[esp+160]
	mov	BYTE PTR __$EHRec$[esp+168], 4
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	lea	ecx, DWORD PTR $T592888[esp+148]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR $T592887[esp+148]
	mov	BYTE PTR __$EHRec$[esp+156], 2
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@name:

; 23   :             return msg;

	push	-1
	push	ebx
	lea	eax, DWORD PTR _msg$144077[esp+156]
	mov	DWORD PTR [edi+24], 15			; 0000000fH
	mov	DWORD PTR [edi+20], ebx
	push	eax
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _msg$144077[esp+172], 16	; 00000010H
	jb	$LN96@name
	mov	ecx, DWORD PTR _msg$144077[esp+152]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	jmp	$LN96@name
$LN5@name:

; 24   :         }
; 25   :         else if (!m_default_value.empty() && !m_default_value_as_text.empty()) {

	cmp	DWORD PTR [esi+12], ebx
	je	$LN2@name
	cmp	DWORD PTR [esi+36], ebx
	je	SHORT $LN2@name

; 26   :             return arg + " (=" + m_default_value_as_text + ")";

	push	OFFSET ??_C@_03CCDPNADL@?5?$CI?$DN?$AA@
	lea	edx, DWORD PTR $T592889[esp+152]
	push	OFFSET ?arg@program_options@boost@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; boost::program_options::arg
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esi, 16					; 00000010H
	push	esi
	push	eax
	lea	eax, DWORD PTR $T592890[esp+168]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+180], 5
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET ??_C@_01PKGAHCOL@?$CJ?$AA@
	push	eax
	push	edi
	mov	BYTE PTR __$EHRec$[esp+192], 6
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 36					; 00000024H
	cmp	DWORD PTR $T592890[esp+172], 16		; 00000010H
	jb	SHORT $LN126@name
	mov	ecx, DWORD PTR $T592890[esp+152]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN126@name:
	cmp	DWORD PTR $T592889[esp+172], 16		; 00000010H
	mov	DWORD PTR $T592890[esp+172], 15		; 0000000fH
	mov	DWORD PTR $T592890[esp+168], ebx
	mov	BYTE PTR $T592890[esp+152], bl
	jb	SHORT $LN96@name
	mov	edx, DWORD PTR $T592889[esp+152]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	jmp	SHORT $LN96@name
$LN2@name:

; 27   :         } else {
; 28   :             return arg;

	push	-1
	push	ebx
	mov	DWORD PTR [edi+24], 15			; 0000000fH
	mov	DWORD PTR [edi+20], ebx
	push	OFFSET ?arg@program_options@boost@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; boost::program_options::arg
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN96@name:
	mov	eax, edi

; 29   :         }
; 30   :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+148]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+132]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0:
	lea	ecx, DWORD PTR $T592886[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
	lea	ecx, DWORD PTR _msg$144077[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
	lea	ecx, DWORD PTR $T592887[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$3:
	lea	ecx, DWORD PTR $T592888[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$5:
	lea	ecx, DWORD PTR $T592889[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$6:
	lea	ecx, DWORD PTR $T592890[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-132]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?name@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::name
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ecx-88]
	lea	esi, DWORD PTR [edi+88]
	mov	ecx, esi
	call	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
	push	esi
	mov	DWORD PTR [esi], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN11@scalar@98
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@scalar@98:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
;	COMDAT ??$increment@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAXAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z
_TEXT	SEGMENT
??$increment@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAXAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z PROC ; boost::iterator_core_access::increment<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _f$ = edi

; 521  :       {

	push	ecx

; 522  :           f.increment();

	call	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment
	pop	ecx

; 523  :       }

	ret	0
??$increment@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@@iterator_core_access@boost@@CAXAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@@Z ENDP ; boost::iterator_core_access::increment<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@XZ
_TEXT	SEGMENT
??E?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@XZ PROC ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::operator++, COMDAT
; _this$ = eax

; 663  :       {

	push	edi
	mov	edi, eax

; 664  :           iterator_core_access::increment(this->derived());

	call	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment

; 665  :           return this->derived();

	mov	eax, edi

; 666  :       }

	pop	edi
	ret	0
??E?$iterator_facade@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@$$CBV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@3@Uforward_traversal_tag@3@ABV43@H@boost@@QAEAAV?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@1@XZ ENDP ; boost::iterator_facade<boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const ,boost::forward_traversal_tag,boost::iterator_range<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > const &,int>::operator++
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_adaptor.hpp
_TEXT	ENDS
;	COMDAT ?increment@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@AAEXXZ
_TEXT	SEGMENT
?increment@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@AAEXXZ PROC ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::increment, COMDAT
; _this$ = edi

; 339  :       void increment() { ++m_iterator; }

	push	ecx
	call	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment
	pop	ecx
	ret	0
?increment@?$iterator_adaptor@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uuse_default@2@V56@U72@@boost@@AAEXXZ ENDP ; boost::iterator_adaptor<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::use_default>::increment
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\iterator\iterator_facade.hpp
_TEXT	ENDS
;	COMDAT ??$increment@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CAXAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z
_TEXT	SEGMENT
??$increment@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CAXAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z PROC ; boost::iterator_core_access::increment<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT
; _f$ = edi

; 521  :       {

	push	ecx

; 522  :           f.increment();

	call	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment
	pop	ecx

; 523  :       }

	ret	0
??$increment@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@iterator_core_access@boost@@CAXAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@@Z ENDP ; boost::iterator_core_access::increment<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@XZ
_TEXT	SEGMENT
??E?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@XZ PROC ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::operator++, COMDAT
; _this$ = eax

; 663  :       {

	push	edi
	mov	edi, eax

; 664  :           iterator_core_access::increment(this->derived());

	call	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment

; 665  :           return this->derived();

	mov	eax, edi

; 666  :       }

	pop	edi
	ret	0
??E?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QAEAAV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@1@XZ ENDP ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::operator++
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT
$T613732 = -44						; size = 4
$T613493 = -40						; size = 28
__$EHRec$ = -12						; size = 12
__Whereoff$162646 = 8					; size = 4
_this$ = 8						; size = 4
___formal$ = 12						; size = 1
__Where$ = 16						; size = 8
__First$ = 24						; size = 80
__Last$ = 104						; size = 80
??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT

; 900  : 		void _Insert(const_iterator _Where, _Iter _First, _Iter _Last,

	push	-1
	push	__ehhandler$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+68]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _this$[esp+64]

; 901  : 			input_iterator_tag)
; 902  : 		{	// insert [_First, _Last) at _Where, input iterators
; 903  : 
; 904  :  #if _HAS_ITERATOR_DEBUGGING
; 905  : 		if (_Where._Mycont != this
; 906  : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 907  : 			_DEBUG_ERROR("vector insert iterator outside range");
; 908  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 909  : 
; 910  : 		if (_First != _Last)

	lea	eax, DWORD PTR __Last$[esp+64]
	lea	esi, DWORD PTR __First$[esp+64]
	mov	DWORD PTR __$EHRec$[esp+76], 1
	call	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
	test	al, al
	jne	$LN4@Insert@10

; 911  : 			{	// worth doing, gather at end and rotate into place
; 912  : 			size_type _Oldsize = size();

	mov	esi, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR [ebp+16]
	sub	ecx, esi
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx

; 913  : 			size_type _Whereoff = _Where._Myptr - _Myfirst;

	mov	ecx, DWORD PTR __Where$[esp+68]
	sar	edx, 4
	mov	ebx, edx
	sub	ecx, esi
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx

; 914  : 
; 915  : 			for (; _First != _Last; ++_First)

	lea	eax, DWORD PTR __Last$[esp+64]
	lea	esi, DWORD PTR __First$[esp+64]
	mov	DWORD PTR __Whereoff$162646[esp+64], edi
	call	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
	test	al, al
	jne	$LN1@Insert@10
$LN36@Insert@10:

; 916  : 				_Insert_n(end(), (size_type)1, (value_type)*_First);

	mov	eax, DWORD PTR [ebp+16]
	mov	DWORD PTR $T613732[esp+68], eax
	cmp	DWORD PTR [ebp+12], eax
	jbe	SHORT $LN59@Insert@10
	call	__invalid_parameter_noinfo
$LN59@Insert@10:
	mov	edi, DWORD PTR [ebp]
	lea	esi, DWORD PTR $T613493[esp+68]
	lea	eax, DWORD PTR __First$[esp+64]
	call	??D?$iterator_facade@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uforward_traversal_tag@2@V34@H@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; boost::iterator_facade<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::forward_traversal_tag,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>::operator*
	push	eax
	mov	eax, DWORD PTR $T613732[esp+72]
	push	1
	push	eax
	push	edi
	mov	ecx, ebp
	mov	BYTE PTR __$EHRec$[esp+92], 2
	call	?_Insert_n@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_n
	mov	BYTE PTR __$EHRec$[esp+76], 1
	cmp	DWORD PTR $T613493[esp+92], 16		; 00000010H
	jb	SHORT $LN86@Insert@10
	mov	ecx, DWORD PTR $T613493[esp+72]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN86@Insert@10:
	lea	edi, DWORD PTR __First$[esp+64]
	mov	DWORD PTR $T613493[esp+92], 15		; 0000000fH
	mov	DWORD PTR $T613493[esp+88], 0
	mov	BYTE PTR $T613493[esp+72], 0
	call	?increment@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@AAEXXZ ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::increment
	lea	eax, DWORD PTR __Last$[esp+64]
	mov	esi, edi
	call	?equal@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@ABE_NABV123@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::equal
	test	al, al
	je	SHORT $LN36@Insert@10

; 914  : 
; 915  : 			for (; _First != _Last; ++_First)

	mov	edi, DWORD PTR __Whereoff$162646[esp+64]
$LN1@Insert@10:

; 917  : 
; 918  : 			_Reverse(_Myfirst + _Whereoff, _Myfirst + _Oldsize);

	mov	eax, DWORD PTR [ebp+12]
	add	edi, edi
	add	edi, edi
	add	edi, edi
	sub	edi, DWORD PTR __Whereoff$162646[esp+64]
	lea	esi, DWORD PTR [ebx*8]
	sub	esi, ebx
	add	esi, esi
	add	esi, esi
	add	edi, edi
	lea	edx, DWORD PTR [esi+eax]
	add	edi, edi
	push	edx
	add	eax, edi
	push	eax
	mov	ecx, ebp
	call	?_Reverse@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reverse

; 919  : 			_Reverse(_Myfirst + _Oldsize, _Mylast);

	mov	ecx, DWORD PTR [ebp+16]
	mov	edx, DWORD PTR [ebp+12]
	push	ecx
	add	edx, esi
	push	edx
	mov	ecx, ebp
	call	?_Reverse@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reverse

; 920  : 			_Reverse(_Myfirst + _Whereoff, _Mylast);

	mov	eax, DWORD PTR [ebp+16]
	mov	ecx, DWORD PTR [ebp+12]
	add	ecx, edi
	push	eax
	push	ecx
	mov	ecx, ebp
	call	?_Reverse@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reverse
$LN4@Insert@10:

; 921  : 			}
; 922  : 		}

	mov	BYTE PTR __$EHRec$[esp+76], 0
	mov	eax, DWORD PTR __First$[esp+64]
	test	eax, eax
	je	SHORT $LN111@Insert@10
	test	al, 1
	jne	SHORT $LN118@Insert@10
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN118@Insert@10
	lea	edx, DWORD PTR __First$[esp+72]
	push	2
	push	edx
	mov	ecx, edx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN118@Insert@10:
	mov	DWORD PTR __First$[esp+64], 0
$LN111@Insert@10:
	mov	DWORD PTR __$EHRec$[esp+76], -1
	mov	eax, DWORD PTR __Last$[esp+64]
	test	eax, eax
	je	SHORT $LN143@Insert@10
	test	al, 1
	jne	SHORT $LN143@Insert@10
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN143@Insert@10
	lea	edx, DWORD PTR __Last$[esp+72]
	push	2
	push	edx
	mov	ecx, edx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN143@Insert@10:
	mov	ecx, DWORD PTR __$EHRec$[esp+68]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 48					; 00000030H
	ret	176					; 000000b0H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z$0:
	lea	esi, DWORD PTR __Last$[ebp-4]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z$1:
	lea	esi, DWORD PTR __First$[ebp-4]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z$2:
	lea	ecx, DWORD PTR $T613493[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-52]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
; Function compile flags: /Ogtpy
;	COMDAT ??4?$basic_option@D@program_options@boost@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4?$basic_option@D@program_options@boost@@QAEAAV012@ABV012@@Z PROC ; boost::program_options::basic_option<char>::operator=, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	push	-1
	push	0
	push	edi
	mov	esi, ecx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, DWORD PTR [edi+28]
	lea	ecx, DWORD PTR [edi+32]
	push	ecx
	lea	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [esi+28], eax
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
	lea	edx, DWORD PTR [edi+56]
	push	edx
	lea	ecx, DWORD PTR [esi+56]
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
	mov	al, BYTE PTR [edi+80]
	mov	BYTE PTR [esi+80], al
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??4?$basic_option@D@program_options@boost@@QAEAAV012@ABV012@@Z ENDP ; boost::program_options::basic_option<char>::operator=
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@Uforward_iterator_tag@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@Uforward_iterator_tag@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::forward_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebx

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	push	edi
	cmp	esi, ebx
	je	SHORT $LN14@Copy_opt@7
	mov	edi, DWORD PTR __Dest$[esp+8]
$LL3@Copy_opt@7:

; 2472 : 		*_Dest = *_First;

	push	-1
	push	0
	push	esi
	mov	ecx, edi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, DWORD PTR [esi+28]
	lea	ecx, DWORD PTR [esi+32]
	push	ecx
	lea	ecx, DWORD PTR [edi+32]
	mov	DWORD PTR [edi+28], eax
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
	lea	edx, DWORD PTR [esi+56]
	push	edx
	lea	ecx, DWORD PTR [edi+56]
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
	mov	al, BYTE PTR [esi+80]
	mov	BYTE PTR [edi+80], al
	add	esi, 84					; 00000054H
	add	edi, 84					; 00000054H
	cmp	esi, ebx
	jne	SHORT $LL3@Copy_opt@7

; 2473 : 	return (_Dest);

	mov	eax, edi

; 2474 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN14@Copy_opt@7:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[esp+8]

; 2474 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@Uforward_iterator_tag@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::forward_iterator_tag>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z$2
__ehfuncinfo$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z
_TEXT	SEGMENT
$T614143 = -20						; size = 4
$T614144 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T614142 = 8						; size = 1
_this$ = 8						; size = 4
__Where$ = 12						; size = 8
__First$ = 20						; size = 80
__Last$ = 100						; size = 80
??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT

; 887  : 		void insert(const_iterator _Where, _Iter _First, _Iter _Last)

	push	-1
	push	__ehhandler$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax

; 888  : 		{	// insert [_First, _Last) at _Where
; 889  : 		_Insert(_Where, _First, _Last, _Iter_cat(_First));

	sub	esp, 80					; 00000050H
	mov	DWORD PTR __$EHRec$[esp+120], 1
	mov	esi, esp
	lea	edi, DWORD PTR __Last$[esp+108]
	mov	DWORD PTR $T614143[esp+112], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	sub	esp, 80					; 00000050H
	mov	esi, esp
	lea	edi, DWORD PTR __First$[esp+188]
	mov	BYTE PTR __$EHRec$[esp+200], 2
	mov	DWORD PTR $T614144[esp+192], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, DWORD PTR __Where$[esp+192]
	mov	ecx, DWORD PTR __Where$[esp+188]
	mov	edx, DWORD PTR $T614142[esp+188]
	push	eax
	mov	eax, DWORD PTR _this$[esp+192]
	push	ecx
	push	edx
	push	eax
	mov	BYTE PTR __$EHRec$[esp+216], 1
	call	??$_Insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1Uinput_iterator_tag@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >

; 890  : 		}

	mov	BYTE PTR __$EHRec$[esp+40], 0
	mov	eax, DWORD PTR __First$[esp+28]
	test	eax, eax
	je	SHORT $LN36@insert@18
	test	al, 1
	jne	SHORT $LN43@insert@18
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN43@insert@18
	lea	ecx, DWORD PTR __First$[esp+36]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN43@insert@18:
	mov	DWORD PTR __First$[esp+28], 0
$LN36@insert@18:
	mov	DWORD PTR __$EHRec$[esp+40], -1
	mov	eax, DWORD PTR __Last$[esp+28]
	test	eax, eax
	je	SHORT $LN68@insert@18
	test	al, 1
	jne	SHORT $LN68@insert@18
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN68@insert@18
	lea	ecx, DWORD PTR __Last$[esp+36]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN68@insert@18:
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	ret	172					; 000000acH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z$0:
	lea	esi, DWORD PTR __Last$[ebp-4]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z$1:
	lea	esi, DWORD PTR __First$[ebp-4]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z$2:
	mov	esi, DWORD PTR $T614143[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__ehhandler$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T614422 = -8						; size = 1
$T614423 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T614424 = 16						; size = 1
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>, COMDAT

; 2481 : 	{	// copy [_First, _Last) to [_Dest, ...), random_access iterators

	sub	esp, 8

; 2482 : 	// if _OutIt is range checked, this will make sure there is enough space for the copy
; 2483 : 	_OutIt _Result = _Dest + (_Last - _First);
; 2484 : 	_Copy_opt(_First, _Last, _CHECKED_BASE(_Dest), 
; 2485 : 		forward_iterator_tag(), _Nonscalar_ptr_iterator_tag(), _Range_checked_iterator_tag());

	mov	edx, DWORD PTR $T614424[esp+4]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp+8]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+12]
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+16]
	xor	al, al
	mov	BYTE PTR $T614423[esp+20], al
	mov	ecx, DWORD PTR $T614423[esp+20]
	mov	BYTE PTR $T614422[esp+20], al
	mov	eax, DWORD PTR $T614422[esp+20]
	push	eax
	push	ecx
	push	edx
	push	edi
	push	esi
	push	ebx
	call	??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@Uforward_iterator_tag@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::forward_iterator_tag>
	sub	esi, ebx
	mov	eax, 818089009				; 30c30c31H
	imul	esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	imul	eax, 84					; 00000054H
	add	esp, 24					; 00000018H
	add	eax, edi

; 2486 : 	return _Result;
; 2487 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 8
	ret	0
??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$4
	DD	01H
	DD	00H
__catchsym$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$0
__tryblocktable$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z DD 02H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$18
__ehfuncinfo$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT
$T614440 = -32						; size = 8
$T614438 = -24						; size = 4
$T614437 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
___formal$ = 12						; size = 1
__First$ = 16						; size = 80
__Last$ = 96						; size = 80
??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Construct<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT

; 532  : 		void _Construct(_Iter _First,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _this$[ebp]
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+12], eax

; 533  : 			_Iter _Last, input_iterator_tag)
; 534  : 		{	// initialize with [_First, _Last), input iterators
; 535  : 		_Buy(0);
; 536  : 		_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 537  : 		insert(begin(), _First, _Last);

	sub	esp, 80					; 00000050H
	mov	DWORD PTR [ebx+12], eax
	mov	DWORD PTR [ebx+16], eax
	mov	DWORD PTR [ebx+20], eax
	mov	eax, DWORD PTR [ebx]
	mov	esi, esp
	lea	edi, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T614440[ebp], eax
	mov	DWORD PTR $T614437[ebp], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	sub	esp, 80					; 00000050H
	mov	esi, esp
	lea	edi, DWORD PTR __First$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	DWORD PTR $T614438[ebp], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	ecx, DWORD PTR $T614440[ebp]
	xor	eax, eax
	push	eax
	push	ecx
	push	ebx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??$insert@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >

; 541  : 		_CATCH_END
; 542  : 		}

	xor	esi, esi
	mov	DWORD PTR __$EHRec$[ebp+12], esi
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, esi
	je	SHORT $LN79@Construct@28
	test	al, 1
	jne	SHORT $LN86@Construct@28
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	cmp	eax, esi
	je	SHORT $LN86@Construct@28
	lea	edx, DWORD PTR __First$[ebp+8]
	push	2
	push	edx
	mov	ecx, edx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN86@Construct@28:
	mov	DWORD PTR __First$[ebp], esi
$LN79@Construct@28:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, esi
	je	SHORT $LN104@Construct@28
	test	al, 1
	jne	SHORT $LN104@Construct@28
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	cmp	eax, esi
	je	SHORT $LN104@Construct@28
	lea	edx, DWORD PTR __Last$[ebp+8]
	push	2
	push	edx
	mov	ecx, edx
	push	ecx
	call	eax
	add	esp, 12					; 0000000cH
$LN104@Construct@28:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	168					; 000000a8H
__catch$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$0:

; 538  : 		_CATCH_ALL
; 539  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy

; 540  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN120@Construct@28:
$LN119@Construct@28:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$2:
	lea	esi, DWORD PTR __Last$[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$3:
	lea	esi, DWORD PTR __First$[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z$4:
	mov	esi, DWORD PTR $T614437[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__ehhandler$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Construct<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAV?$basic_option@D@program_options@boost@@PAV123@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00@Z
_TEXT	SEGMENT
$T614905 = -8						; size = 1
$T614906 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T614907 = 16						; size = 1
__Dest$ = 16						; size = 4
??$unchecked_copy@PAV?$basic_option@D@program_options@boost@@PAV123@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00@Z PROC ; stdext::unchecked_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	sub	esp, 12					; 0000000cH

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR $T614907[esp+8]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp+12]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+16]
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+20]
	xor	al, al
	mov	BYTE PTR $T614906[esp+24], al
	mov	ecx, DWORD PTR $T614906[esp+24]
	mov	BYTE PTR $T614905[esp+24], al
	mov	eax, DWORD PTR $T614905[esp+24]
	push	eax
	push	ecx
	push	edx
	push	edi
	push	esi
	push	ebx
	call	??$_Copy_opt@PAV?$basic_option@D@program_options@boost@@PAV123@Uforward_iterator_tag@std@@@std@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *,std::forward_iterator_tag>
	sub	esi, ebx
	mov	eax, 818089009				; 30c30c31H
	imul	esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	imul	eax, 84					; 00000054H
	add	esp, 24					; 00000018H
	add	eax, edi

; 3607 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	0
??$unchecked_copy@PAV?$basic_option@D@program_options@boost@@PAV123@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00@Z ENDP ; stdext::unchecked_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$3
__ehfuncinfo$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z
_TEXT	SEGMENT
$T614922 = -20						; size = 4
$T614923 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T614921 = 8						; size = 1
_this$ = 8						; size = 4
__First$ = 12						; size = 80
__Last$ = 92						; size = 80
??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > ><boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >, COMDAT

; 513  : 		{	// construct from [_First, _Last)

	push	-1
	push	__ehhandler$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _this$[esp+36]
	push	4
	mov	DWORD PTR __$EHRec$[esp+52], 1
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@allocator@6
	mov	DWORD PTR [eax], ebp
	jmp	SHORT $LN18@allocator@6
$LN17@allocator@6:
	xor	eax, eax
$LN18@allocator@6:
	mov	DWORD PTR [ebp], eax

; 514  : 		_Construct(_First, _Last, _Iter_cat(_First));

	sub	esp, 80					; 00000050H
	mov	BYTE PTR __$EHRec$[esp+128], 2
	mov	esi, esp
	lea	edi, DWORD PTR __Last$[esp+116]
	mov	DWORD PTR $T614922[esp+120], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	sub	esp, 80					; 00000050H
	mov	esi, esp
	lea	edi, DWORD PTR __First$[esp+196]
	mov	BYTE PTR __$EHRec$[esp+208], 3
	mov	DWORD PTR $T614923[esp+200], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, DWORD PTR $T614921[esp+196]
	push	eax
	push	ebp
	mov	BYTE PTR __$EHRec$[esp+216], 2
	call	??$_Construct@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0Uinput_iterator_tag@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Construct<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >

; 515  : 		}

	mov	BYTE PTR __$EHRec$[esp+48], 0
	mov	eax, DWORD PTR __First$[esp+36]
	test	eax, eax
	je	SHORT $LN70@allocator@6
	test	al, 1
	jne	SHORT $LN77@allocator@6
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN77@allocator@6
	lea	ecx, DWORD PTR __First$[esp+44]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN77@allocator@6:
	mov	DWORD PTR __First$[esp+36], 0
$LN70@allocator@6:
	mov	DWORD PTR __$EHRec$[esp+48], -1
	mov	eax, DWORD PTR __Last$[esp+36]
	test	eax, eax
	je	SHORT $LN107@allocator@6
	test	al, 1
	jne	SHORT $LN107@allocator@6
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN107@allocator@6
	lea	ecx, DWORD PTR __Last$[esp+44]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN107@allocator@6:
	mov	eax, ebp
	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	add	esp, 24					; 00000018H
	ret	164					; 000000a4H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$0:
	lea	esi, DWORD PTR __Last$[ebp-4]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$1:
	lea	esi, DWORD PTR __First$[ebp-4]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$2:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
__unwindfunclet$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z$3:
	mov	esi, DWORD PTR $T614922[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__ehhandler$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-24]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > ><boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@0@Z
_TEXT	SEGMENT
$T615512 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 8
__Last_arg$ = 20					; size = 8
?erase@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@0@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	push	edi

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esi, ecx
	mov	DWORD PTR [edi], 0
	test	esi, esi
	je	SHORT $LN8@erase@32
	mov	eax, DWORD PTR __First_arg$[ebp+4]
	cmp	DWORD PTR [esi+12], eax
	ja	SHORT $LN8@erase@32
	cmp	eax, DWORD PTR [esi+16]
	jbe	SHORT $LN9@erase@32
$LN8@erase@32:
	call	__invalid_parameter_noinfo
	mov	eax, DWORD PTR __First_arg$[ebp+4]
$LN9@erase@32:

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ebx, DWORD PTR __Last_arg$[ebp+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edi], ecx
	mov	DWORD PTR [edi+4], eax
	cmp	DWORD PTR [esi+12], ebx
	ja	SHORT $LN24@erase@32
	cmp	ebx, DWORD PTR [esi+16]
	jbe	SHORT $LN25@erase@32
$LN24@erase@32:
	call	__invalid_parameter_noinfo
	mov	ebx, DWORD PTR __Last_arg$[ebp+4]
$LN25@erase@32:

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN38@erase@32
	cmp	eax, ecx
	je	SHORT $LN39@erase@32
$LN38@erase@32:
	call	__invalid_parameter_noinfo
$LN39@erase@32:
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, ebx
	je	SHORT $LN66@erase@32

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edx, DWORD PTR [esi+16]
	push	eax
	push	edx
	push	ebx
	call	??$unchecked_copy@PAV?$basic_option@D@program_options@boost@@PAV123@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00@Z ; stdext::unchecked_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>
	mov	ebx, eax

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T615512[esp+16], eax
	mov	edi, ebx
	cmp	ebx, eax
	je	SHORT $LN52@erase@32
	npad	1
$LL54@erase@32:
	mov	ecx, edi
	call	??1?$basic_option@D@program_options@boost@@QAE@XZ
	add	edi, 84					; 00000054H
	cmp	edi, DWORD PTR $T615512[esp+16]
	jne	SHORT $LL54@erase@32
$LN52@erase@32:

; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [esi+16], ebx

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN66@erase@32:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, edi

; 1055 : #endif
; 1056 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@0@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T615563 = -8						; size = 8
?clear@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEXXZ PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 1060 : 		erase(begin(), end());

	mov	ebp, DWORD PTR [esi+16]
	push	edi
	cmp	DWORD PTR [esi+12], ebp
	jbe	SHORT $LN8@clear@22
	call	__invalid_parameter_noinfo
$LN8@clear@22:
	mov	edi, DWORD PTR [esi+12]
	mov	ebx, DWORD PTR [esi]
	cmp	edi, DWORD PTR [esi+16]
	jbe	SHORT $LN24@clear@22
	call	__invalid_parameter_noinfo
$LN24@clear@22:
	mov	eax, DWORD PTR [esi]
	push	ebp
	push	ebx
	push	edi
	push	eax
	lea	eax, DWORD PTR $T615563[esp+40]
	push	eax
	mov	ecx, esi
	call	?erase@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@V?$_Vector_const_iterator@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@2@0@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::erase

; 1061 : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEXXZ ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator=, COMDAT
; _this$ = ecx

; 563  : 		{	// assign _Right

	push	ebx
	push	ebp
	push	esi
	push	edi

; 564  : 		if (this != &_Right)

	mov	edi, DWORD PTR __Right$[esp+12]
	mov	esi, ecx
	cmp	esi, edi
	je	$LN33@operator@393

; 565  : 			{	// worth doing
; 566  : 
; 567  :  #if _HAS_ITERATOR_DEBUGGING
; 568  : 			this->_Orphan_all();
; 569  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 570  : 
; 571  : 			if (_Right.size() == 0)

	mov	eax, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR [edi+16]
	sub	ecx, eax
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ebp, edx
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
	jne	SHORT $LN8@operator@393

; 572  : 				clear();	// new sequence empty, erase existing sequence

	mov	ecx, esi
	call	?clear@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::clear

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
$LN8@operator@393:

; 573  : 			else if (_Right.size() <= size())

	mov	ecx, DWORD PTR [esi+16]
	mov	ebx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	ebp, ecx
	ja	SHORT $LN6@operator@393

; 574  : 				{	// enough elements, copy new and destroy old
; 575  : 				pointer _Ptr = _STDEXT unchecked_copy(_Right._Myfirst, _Right._Mylast,
; 576  : 					_Myfirst);	// copy new

	mov	eax, DWORD PTR [edi+16]
	push	ebx
	push	eax
	mov	eax, DWORD PTR [edi+12]
	push	eax
	call	??$unchecked_copy@PAV?$basic_option@D@program_options@boost@@PAV123@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00@Z ; stdext::unchecked_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>

; 577  : 				_Destroy(_Ptr, _Mylast);	// destroy old

	mov	ecx, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	push	ecx
	push	eax
	mov	ecx, esi
	call	?_Destroy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXPAV?$basic_option@D@program_options@boost@@0@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Destroy

; 578  : 				_Mylast = _Myfirst + _Right.size();

	mov	ecx, DWORD PTR [edi+16]
	sub	ecx, DWORD PTR [edi+12]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR [esi+12]

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	DWORD PTR [esi+16], eax

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
$LN6@operator@393:

; 579  : 				}
; 580  : 			else if (_Right.size() <= capacity())

	test	ebx, ebx
	jne	SHORT $LN24@operator@393
	xor	eax, eax
	jmp	SHORT $LN25@operator@393
$LN24@operator@393:
	mov	edx, DWORD PTR [esi+20]
	sub	edx, ebx
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
$LN25@operator@393:
	cmp	ebp, eax
	ja	SHORT $LN4@operator@393

; 581  : 				{	// enough room, copy and construct new
; 582  : 				pointer _Ptr = _Right._Myfirst + size();

	mov	eax, DWORD PTR [edi+12]
	imul	ecx, 84					; 00000054H
	add	ecx, eax
	mov	ebp, ecx

; 583  : 				_STDEXT unchecked_copy(_Right._Myfirst, _Ptr, _Myfirst);

	push	ebx
	push	ebp
	push	eax
	call	??$unchecked_copy@PAV?$basic_option@D@program_options@boost@@PAV123@@stdext@@YAPAV?$basic_option@D@program_options@boost@@PAV123@00@Z ; stdext::unchecked_copy<boost::program_options::basic_option<char> *,boost::program_options::basic_option<char> *>

; 584  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

	mov	ecx, DWORD PTR [esi+16]
	mov	edx, DWORD PTR [edi+16]
	add	esp, 12					; 0000000cH
	push	ecx
	push	edx
	push	ebp

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	ecx, esi
	call	??$_Ucopy@PAV?$basic_option@D@program_options@boost@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@PAV234@00@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<boost::program_options::basic_option<char> *>
	mov	DWORD PTR [esi+16], eax

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi

; 599  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
$LN4@operator@393:

; 585  : 				}
; 586  : 			else
; 587  : 				{	// not enough room, allocate new array and construct new
; 588  : 				if (_Myfirst != 0)

	test	ebx, ebx
	je	SHORT $LN28@operator@393

; 589  : 					{	// discard old array
; 590  : 					_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	mov	ecx, esi
	call	?_Destroy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXPAV?$basic_option@D@program_options@boost@@0@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Destroy

; 591  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN28@operator@393:

; 592  : 					}
; 593  : 				if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR [edi+16]
	sub	ecx, DWORD PTR [edi+12]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	mov	ecx, esi
	call	?_Buy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAE_NI@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Buy
	test	al, al
	je	SHORT $LN33@operator@393

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	ecx, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [edi+16]
	mov	eax, DWORD PTR [edi+12]
	push	ecx
	push	edx
	push	eax
	mov	ecx, esi
	call	??$_Ucopy@PAV?$basic_option@D@program_options@boost@@@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEPAV?$basic_option@D@program_options@boost@@PAV234@00@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Ucopy<boost::program_options::basic_option<char> *>
	mov	DWORD PTR [esi+16], eax
$LN33@operator@393:

; 599  : 		}

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	ret	4
??4?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$9
__ehfuncinfo$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\iter_find.hpp
xdata$x	ENDS
;	COMDAT ??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z
_TEXT	SEGMENT
$T615741 = -296						; size = 1
$T615736 = -296						; size = 1
$T615743 = -296						; size = 4
$T615742 = -296						; size = 4
$T615739 = -296						; size = 4
$T615737 = -296						; size = 4
__Cat$616168 = -292					; size = 1
$T615744 = -292						; size = 4
_Tmp$ = -288						; size = 24
_lit_input$ = -264					; size = 16
_itBegin$ = -248					; size = 80
_itEnd$ = -168						; size = 80
$T615738 = -88						; size = 72
__$EHRec$ = -12						; size = 12
_Result$ = 8						; size = 4
_Input$ = 12						; size = 4
_Finder$ = 16						; size = 16
??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z PROC ; boost::algorithm::iter_split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >, COMDAT

; 145  :         {

	push	-1
	push	__ehhandler$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 284				; 0000011cH
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+316]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _Result$[esp+312]
	mov	eax, DWORD PTR _Input$[esp+312]
	xor	ebx, ebx

; 146  :             function_requires< 
; 147  :                 FinderConcept<FinderT,
; 148  :                 BOOST_STRING_TYPENAME range_iterator<RangeT>::type> >();
; 149  : 
; 150  :             iterator_range<BOOST_STRING_TYPENAME range_iterator<RangeT>::type> lit_input(as_literal(Input));

	lea	edi, DWORD PTR _lit_input$[esp+316]
	mov	DWORD PTR __$EHRec$[esp+324], ebx
	call	??$as_literal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@boost@@YA?AV?$iterator_range@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::as_literal<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 151  : 
; 152  :             typedef BOOST_STRING_TYPENAME 
; 153  :                 range_iterator<RangeT>::type input_iterator_type;
; 154  :             typedef split_iterator<input_iterator_type> find_iterator_type;
; 155  :             typedef detail::copy_iterator_rangeF<
; 156  :                 BOOST_STRING_TYPENAME 
; 157  :                     range_value<SequenceSequenceT>::type,
; 158  :                 input_iterator_type> copy_range_type;
; 159  :             
; 160  :             input_iterator_type InputEnd=::boost::end(lit_input);
; 161  : 
; 162  :             typedef transform_iterator<copy_range_type, find_iterator_type>
; 163  :                 transform_iter_type;
; 164  :     
; 165  :             transform_iter_type itBegin=
; 166  :                 make_transform_iterator( 
; 167  :                     find_iterator_type( ::boost::begin(lit_input), InputEnd, Finder ),
; 168  :                     copy_range_type() );

	mov	eax, DWORD PTR $T615736[esp+316]
	mov	ecx, DWORD PTR _Finder$[esp+320]
	push	eax
	sub	esp, 16					; 00000010H
	mov	esi, esp
	mov	eax, ecx
	mov	DWORD PTR $T615739[esp+336], esp
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi], ebx
	cmp	eax, 8
	ja	SHORT $LN25@iter_split
	mov	eax, esi
	lea	ecx, DWORD PTR _Finder$[esp+332]
	jmp	SHORT $LN24@iter_split
$LN25@iter_split:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _Finder$[esp+336]
	add	esp, 4
$LN24@iter_split:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR _Finder$[esp+356]
	mov	ecx, DWORD PTR _lit_input$[esp+360]
	mov	edx, DWORD PTR _lit_input$[esp+356]
	add	esp, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _lit_input$[esp+340]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR _lit_input$[esp+344]
	push	edx
	push	eax
	push	ecx
	lea	ecx, DWORD PTR $T615738[esp+352]
	call	??$?0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@12@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > ><boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
	sub	esp, 72					; 00000048H
	mov	BYTE PTR __$EHRec$[esp+400], 1
	mov	edi, eax
	mov	esi, esp
	mov	DWORD PTR $T615737[esp+392], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	lea	edx, DWORD PTR _itBegin$[esp+392]
	push	edx
	call	??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z ; boost::make_transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 80					; 00000050H
	mov	BYTE PTR __$EHRec$[esp+324], 3
	mov	eax, DWORD PTR $T615738[esp+316]
	cmp	eax, ebx
	je	SHORT $LN45@iter_split
	test	al, 1
	jne	SHORT $LN52@iter_split
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	cmp	eax, ebx
	je	SHORT $LN52@iter_split
	lea	ecx, DWORD PTR $T615738[esp+324]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN52@iter_split:
	mov	DWORD PTR $T615738[esp+316], ebx
$LN45@iter_split:

; 169  : 
; 170  :             transform_iter_type itEnd=
; 171  :                 make_transform_iterator( 
; 172  :                     find_iterator_type(),
; 173  :                     copy_range_type() );

	mov	eax, DWORD PTR $T615741[esp+316]
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+32], ebx
	mov	DWORD PTR [eax+36], ebx
	mov	DWORD PTR [eax+40], ebx
	mov	DWORD PTR [eax+44], ebx
	lea	ecx, DWORD PTR _itEnd$[esp+392]
	mov	DWORD PTR [eax+48], ebx
	mov	DWORD PTR [eax+52], ebx
	mov	DWORD PTR $T615742[esp+392], esp
	push	ecx
	mov	DWORD PTR [eax+56], ebx
	mov	DWORD PTR [eax+60], ebx
	call	??$make_transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@@boost@@YA?AV?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@0@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@0@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@30@@Z ; boost::make_transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[esp+404], 4

; 174  :             
; 175  :             SequenceSequenceT Tmp(itBegin, itEnd);

	mov	esi, esp
	lea	edi, DWORD PTR _itEnd$[esp+396]
	mov	DWORD PTR $T615743[esp+396], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	sub	esp, 80					; 00000050H
	mov	BYTE PTR __$EHRec$[esp+484], 5
	mov	esi, esp
	lea	edi, DWORD PTR _itBegin$[esp+476]
	mov	DWORD PTR $T615744[esp+476], esp
	call	??0?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@ABV012@@Z ; boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >
	lea	edx, DWORD PTR _Tmp$[esp+476]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+488], 4
	call	??$?0V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > ><boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::algorithm::split_iterator<std::_String_iterator<char,std::char_traits<char>,std::allocator<char> > >,boost::use_default,boost::use_default> >

; 176  : 
; 177  :             Result.swap(Tmp);

	lea	edx, DWORD PTR _Tmp$[esp+316]
	mov	eax, ebp
	mov	BYTE PTR __$EHRec$[esp+324], 6
	call	?swap@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXAAV12@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::swap

; 178  :             return Result;

	mov	eax, DWORD PTR _Tmp$[esp+328]
	cmp	eax, ebx
	je	SHORT $LN120@iter_split
	mov	ecx, DWORD PTR __Cat$616168[esp+316]
	push	ecx
	mov	ecx, DWORD PTR _Tmp$[esp+336]
	lea	edx, DWORD PTR _Tmp$[esp+328]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR _Tmp$[esp+344]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN120@iter_split:
	mov	eax, DWORD PTR _Tmp$[esp+316]
	push	eax
	mov	DWORD PTR _Tmp$[esp+332], ebx
	mov	DWORD PTR _Tmp$[esp+336], ebx
	mov	DWORD PTR _Tmp$[esp+340], ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	BYTE PTR __$EHRec$[esp+328], 3
	mov	eax, DWORD PTR _itEnd$[esp+320]
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN145@iter_split
	test	al, 1
	jne	SHORT $LN152@iter_split
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	cmp	eax, ebx
	je	SHORT $LN152@iter_split
	lea	ecx, DWORD PTR _itEnd$[esp+324]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN152@iter_split:
	mov	DWORD PTR _itEnd$[esp+316], ebx
$LN145@iter_split:
	mov	BYTE PTR __$EHRec$[esp+324], bl
	mov	eax, DWORD PTR _itBegin$[esp+316]
	cmp	eax, ebx
	je	SHORT $LN170@iter_split
	test	al, 1
	jne	SHORT $LN177@iter_split
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	cmp	eax, ebx
	je	SHORT $LN177@iter_split
	lea	ecx, DWORD PTR _itBegin$[esp+324]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN177@iter_split:
	mov	DWORD PTR _itBegin$[esp+316], ebx
$LN170@iter_split:
	cmp	DWORD PTR _Finder$[esp+320], 8
	jbe	SHORT $LN188@iter_split
	mov	eax, DWORD PTR _Finder$[esp+312]
	cmp	eax, ebx
	je	SHORT $LN188@iter_split
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN188@iter_split:
	mov	eax, ebp

; 179  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+316]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 296				; 00000128H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$0:
	lea	eax, DWORD PTR _Finder$[ebp-4]
	jmp	??1?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@QAE@XZ
__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$2:
	lea	esi, DWORD PTR $T615738[ebp]
	jmp	??1?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@QAE@XZ
__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$4:
	lea	esi, DWORD PTR _itBegin$[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$6:
	lea	esi, DWORD PTR _itEnd$[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$7:
	mov	esi, DWORD PTR $T615743[ebp]
	jmp	??1?$transform_iterator@U?$copy_iterator_rangeF@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@detail@algorithm@boost@@V?$split_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@34@Uuse_default@4@U64@@boost@@QAE@XZ
__unwindfunclet$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z$9:
	lea	ecx, DWORD PTR _Tmp$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-300]
	mov	ecx, DWORD PTR [edx-304]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z ENDP ; boost::algorithm::iter_split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ$1
__ehfuncinfo$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\parsers.hpp
xdata$x	ENDS
;	COMDAT ?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ
_TEXT	SEGMENT
$T616458 = -68						; size = 4
$T616454 = -64						; size = 24
_result$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ PROC ; boost::program_options::basic_command_line_parser<char>::run, COMDAT
; _this$ = edi
; ___$ReturnUdt$ = esi

; 102  :     {

	push	-1
	push	__ehhandler$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	ebp
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, eax

; 103  :         parsed_options result(m_desc);

	mov	ebp, DWORD PTR [edi+104]
	lea	ecx, DWORD PTR _result$[esp+76]
	mov	DWORD PTR $T616458[esp+76], 0
	call	??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
	mov	DWORD PTR _result$[esp+100], ebp

; 104  :         result.options = detail::cmdline::run();

	lea	eax, DWORD PTR $T616454[esp+76]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	?run@cmdline@detail@program_options@boost@@QAE?AV?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@XZ ; boost::program_options::detail::cmdline::run
	push	eax
	lea	ecx, DWORD PTR _result$[esp+80]
	mov	BYTE PTR __$EHRec$[esp+88], 1
	call	??4?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::operator=
	lea	ecx, DWORD PTR $T616454[esp+76]
	mov	BYTE PTR __$EHRec$[esp+84], 0
	call	?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy
	mov	ecx, DWORD PTR $T616454[esp+76]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 105  : 
; 106  :         // Presense of parsed_options -> wparsed_options conversion
; 107  :         // does the trick.
; 108  :         return basic_parsed_options<charT>(result);

	lea	edx, DWORD PTR _result$[esp+76]
	push	edx
	mov	ecx, esi
	call	??0?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@ABV01@@Z ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
	mov	eax, DWORD PTR _result$[esp+100]
	lea	ecx, DWORD PTR _result$[esp+76]
	mov	DWORD PTR [esi+24], eax
	call	?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy
	mov	ecx, DWORD PTR _result$[esp+76]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi

; 109  :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebp
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ$0:
	lea	esi, DWORD PTR _result$[ebp]
	jmp	??1?$basic_parsed_options@D@program_options@boost@@QAE@XZ
__unwindfunclet$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ$1:
	lea	ecx, DWORD PTR $T616454[ebp]
	jmp	??1?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@QAE@XZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::~vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >
__ehhandler$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-60]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ ENDP ; boost::program_options::basic_command_line_parser<char>::run
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\algorithm\string\detail\classification.hpp
xdata$x	SEGMENT
__unwindtable$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z$0
__ehfuncinfo$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\algorithm\string\split.hpp
xdata$x	ENDS
;	COMDAT ??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z
_TEXT	SEGMENT
$T616562 = -16						; size = 4
$T616561 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_Result$ = 8						; size = 4
_Input$ = 12						; size = 4
_Pred$ = 16						; size = 12
_eCompress$ = 28					; size = 4
??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z PROC ; boost::algorithm::split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >, COMDAT

; 145  :         {

	push	-1
	push	__ehhandler$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR _Result$[esp+32]

; 146  :             return iter_split(
; 147  :                 Result,
; 148  :                 Input,
; 149  :                 token_finder( Pred, eCompress ) );         

	mov	eax, DWORD PTR _eCompress$[esp+32]
	sub	esp, 16					; 00000010H
	mov	DWORD PTR $T616561[esp+52], esp
	mov	DWORD PTR __$EHRec$[esp+60], 0
	mov	ecx, DWORD PTR _Pred$[esp+56]
	mov	edi, esp
	push	eax
	sub	esp, 12					; 0000000cH
	mov	esi, esp
	mov	eax, ecx
	mov	DWORD PTR $T616562[esp+68], esp
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi], 0
	cmp	eax, 8
	ja	SHORT $LN7@split
	mov	eax, esi
	lea	ecx, DWORD PTR _Pred$[esp+64]
	jmp	SHORT $LN6@split
$LN7@split:
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR _Pred$[esp+68]
	add	esp, 4
$LN6@split:
	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	call	??$token_finder@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YA?AU?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@U?$is_any_ofF@D@301@W4token_compress_mode_type@01@@Z ; boost::algorithm::token_finder<boost::algorithm::detail::is_any_ofF<char> >
	mov	eax, DWORD PTR _Input$[esp+64]
	add	esp, 16					; 00000010H
	push	eax
	push	ebx
	call	??$iter_split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$token_finderF@U?$is_any_ofF@D@detail@algorithm@boost@@@detail@01@@Z ; boost::algorithm::iter_split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >
	add	esp, 24					; 00000018H
	cmp	DWORD PTR _Pred$[esp+40], 8
	mov	esi, eax
	jbe	SHORT $LN18@split
	mov	eax, DWORD PTR _Pred$[esp+32]
	test	eax, eax
	je	SHORT $LN18@split
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN18@split:
	mov	eax, esi

; 150  :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z$0:
	lea	eax, DWORD PTR _Pred$[ebp-4]
	jmp	??1?$is_any_ofF@D@detail@algorithm@boost@@QAE@XZ ; boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF<char>
__ehhandler$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z ENDP ; boost::algorithm::split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >
;	COMDAT xdata$x
; File c:\program files\boost\boost_1_40\boost\function\function_template.hpp
xdata$x	SEGMENT
__unwindtable$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$2
__ehfuncinfo$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\program_options\detail\parsers.hpp
xdata$x	ENDS
;	COMDAT ??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
_TEXT	SEGMENT
$T616610 = -140						; size = 4
$T616605 = -136						; size = 4
$T616604 = -132						; size = 112
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_argc$ = 12						; size = 4
_argv$ = 16						; size = 4
_ext$ = 20						; size = 32
??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z PROC ; boost::program_options::parse_command_line<char>, COMDAT
; _desc$ = ecx

; 119  :     {

	push	-1
	push	__ehhandler$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+160]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+156]
	mov	DWORD PTR $T616610[esp+160], 0

; 120  :         return basic_command_line_parser<charT>(argc, argv).options(desc).
; 121  :             style(style).extra_parser(ext).run();

	sub	esp, 32					; 00000020H
	mov	DWORD PTR __$EHRec$[esp+200], 1
	mov	eax, esp
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _ext$[esp+188]
	mov	DWORD PTR $T616605[esp+192], esp
	test	ecx, ecx
	je	SHORT $LN12@parse_comm
	mov	DWORD PTR [eax], ecx
	test	cl, 1
	je	SHORT $LN13@parse_comm
	movq	xmm0, QWORD PTR _ext$[esp+196]
	movq	QWORD PTR [eax+8], xmm0
	movq	xmm0, QWORD PTR _ext$[esp+204]
	movq	QWORD PTR [eax+16], xmm0
	movq	xmm0, QWORD PTR _ext$[esp+212]
	movq	QWORD PTR [eax+24], xmm0
	jmp	SHORT $LN12@parse_comm
$LN13@parse_comm:
	mov	ecx, DWORD PTR _ext$[esp+188]
	add	eax, 8
	push	0
	push	eax
	and	ecx, -2					; fffffffeH
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR _ext$[esp+204]
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN12@parse_comm:
	mov	ecx, DWORD PTR _argv$[esp+188]
	push	ecx
	mov	ecx, DWORD PTR _argc$[esp+192]
	lea	edx, DWORD PTR $T616604[esp+196]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+208], 2
	call	??0?$basic_command_line_parser@D@program_options@boost@@QAE@HQAPAD@Z ; boost::program_options::basic_command_line_parser<char>::basic_command_line_parser<char>
	mov	esi, eax
	push	edi
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[esp+204], 3
	call	?set_options_description@cmdline@detail@program_options@boost@@QAEXABVoptions_description@34@@Z ; boost::program_options::detail::cmdline::set_options_description
	push	0
	mov	ecx, esi
	mov	DWORD PTR [esi+104], edi
	call	?style@cmdline@detail@program_options@boost@@QAEXH@Z ; boost::program_options::detail::cmdline::style
	mov	BYTE PTR __$EHRec$[esp+200], 4
	call	?extra_parser@?$basic_command_line_parser@D@program_options@boost@@QAEAAV123@V?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@3@@Z ; boost::program_options::basic_command_line_parser<char>::extra_parser
	mov	esi, ebp
	mov	edi, eax
	call	?run@?$basic_command_line_parser@D@program_options@boost@@QAE?AV?$basic_parsed_options@D@23@XZ ; boost::program_options::basic_command_line_parser<char>::run
	lea	eax, DWORD PTR $T616604[esp+160]
	push	eax
	mov	DWORD PTR $T616610[esp+164], 1
	mov	BYTE PTR __$EHRec$[esp+172], 1
	call	??1cmdline@detail@program_options@boost@@QAE@XZ
	mov	BYTE PTR __$EHRec$[esp+168], 0
	mov	eax, DWORD PTR _ext$[esp+156]
	test	eax, eax
	je	SHORT $LN45@parse_comm
	test	al, 1
	jne	SHORT $LN45@parse_comm
	and	eax, -2					; fffffffeH
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN45@parse_comm
	lea	ecx, DWORD PTR _ext$[esp+164]
	push	2
	push	ecx
	mov	edx, ecx
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN45@parse_comm:
	mov	eax, ebp

; 122  :     }

	mov	ecx, DWORD PTR __$EHRec$[esp+160]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	add	esp, 144				; 00000090H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$0:
	lea	ecx, DWORD PTR _ext$[ebp-4]
	jmp	??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$1:
	mov	ecx, DWORD PTR $T616605[ebp]
	jmp	??1?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@boost@@QAE@XZ ; boost::function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>::~function1<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$2:
	lea	eax, DWORD PTR $T616604[ebp]
	jmp	??1?$basic_command_line_parser@D@program_options@boost@@QAE@XZ
__unwindfunclet$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$3:
	mov	eax, DWORD PTR $T616610[ebp]
	and	eax, 1
	je	$LN7@parse_comm
	and	DWORD PTR $T616610[ebp], -2		; fffffffeH
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$basic_parsed_options@D@program_options@boost@@QAE@XZ
$LN7@parse_comm:
	ret	0
__ehhandler$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-144]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z ENDP ; boost::program_options::parse_command_line<char>
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z$0
__ehfuncinfo$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\ostream
xdata$x	ENDS
;	COMDAT ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
_TEXT	SEGMENT
$T632040 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Strbuf$ = 8						; size = 4
__Isstd$ = 12						; size = 1
_$initVBases$ = 16					; size = 4
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 50   : 	explicit __CLR_OR_THIS_CALL basic_ostream(basic_streambuf<_Elem, _Traits> *_Strbuf,

	push	-1
	push	__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+32], esi
	xor	eax, eax
	mov	DWORD PTR $T632040[esp+32], eax
	cmp	DWORD PTR _$initVBases$[esp+28], eax
	je	SHORT $LN1@basic_ostr@2
	mov	DWORD PTR [esi], OFFSET ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR [esi+4], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+40], eax
	mov	DWORD PTR $T632040[esp+32], 1
$LN1@basic_ostr@2:
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]

; 51   : 		bool _Isstd = false)
; 52   : 		{	// construct from a stream buffer pointer
; 53   : 		_Myios::init(_Strbuf, _Isstd);

	mov	edx, DWORD PTR __Isstd$[esp+28]
	mov	eax, DWORD PTR __Strbuf$[esp+28]
	mov	DWORD PTR [esi+ecx], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	push	edx
	push	eax
	add	ecx, esi
	call	?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z ; std::basic_ios<char,std::char_traits<char> >::init

; 54   : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 24					; 00000018H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z$0:
	mov	eax, DWORD PTR $T632040[ebp]
	and	eax, 1
	je	$LN5@basic_ostr@2
	and	DWORD PTR $T632040[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN5@basic_ostr@2:
	ret	0
__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-16]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::basic_ostream<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z$0
__ehfuncinfo$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z
_TEXT	SEGMENT
$T632072 = -72						; size = 4
_stream$ = -68						; size = 56
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 4
??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z PROC ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::lcast_put<float>, COMDAT
; _this$ = esi

; 693  :             bool lcast_put(const OutputStreamable& input)

	push	-1
	push	__ehhandler$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	ebx
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, eax
	xor	edi, edi
	mov	DWORD PTR $T632072[esp+84], edi

; 694  :             {
; 695  :                 this->setp(start, finish);

	mov	ecx, DWORD PTR [esi+60]
	mov	edx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR [esi+36]
	mov	DWORD PTR [edx], ecx
	sub	eax, ecx
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], eax

; 696  :                 std::basic_ostream<CharT> stream(static_cast<Base*>(this));

	mov	DWORD PTR _stream$[esp+84], OFFSET ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR __$EHRec$[esp+92], edi
	mov	ebx, 1
	lea	ecx, DWORD PTR _stream$[esp+88]
	mov	DWORD PTR $T632072[esp+84], ebx
	mov	DWORD PTR _stream$[esp+88], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	push	32					; 00000020H
	lea	ecx, DWORD PTR _stream$[esp+92]
	mov	DWORD PTR _stream$[esp+132], esi
	mov	DWORD PTR _stream$[esp+136], edi
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	mov	BYTE PTR _stream$[esp+136], al
	cmp	DWORD PTR _stream$[esp+128], edi
	jne	SHORT $LN27@lcast_put
	mov	eax, DWORD PTR _stream$[esp+96]
	or	eax, 4
	push	edi
	push	eax
	lea	ecx, DWORD PTR _stream$[esp+96]
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN27@lcast_put:
	mov	DWORD PTR _stream$[esp+92], edi
	mov	DWORD PTR __$EHRec$[esp+92], ebx

; 697  :                 lcast_set_precision(stream, (OutputStreamable*)0);

	mov	edx, DWORD PTR _stream$[esp+84]
	mov	eax, DWORD PTR [edx+4]
	lea	eax, DWORD PTR _stream$[esp+eax+84]
	mov	DWORD PTR [eax+20], 9

; 698  :                 bool const result = !(stream << input).fail();

	mov	eax, DWORD PTR _input$[esp+80]
	fld	DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _stream$[esp+88]
	fstp	DWORD PTR [esp]
	push	ecx
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	test	BYTE PTR [ecx+eax+8], 6

; 699  :                 finish = this->pptr();

	mov	edx, DWORD PTR [esi+36]
	mov	eax, DWORD PTR [edx]

; 700  :                 return result;

	mov	DWORD PTR __$EHRec$[esp+92], -1
	mov	ecx, DWORD PTR _stream$[esp+84]
	mov	DWORD PTR [esi+64], eax
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _stream$[esp+88]
	mov	DWORD PTR _stream$[esp+edx+84], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	push	eax
	sete	bl
	mov	DWORD PTR _stream$[esp+92], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	al, bl

; 701  :             }

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	ebx
	add	esp, 72					; 00000048H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z$1:
	mov	eax, DWORD PTR $T632072[ebp]
	and	eax, 1
	je	$LN12@lcast_put
	and	DWORD PTR $T632072[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR _stream$[ebp+4]
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN12@lcast_put:
	ret	0
__unwindfunclet$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z$0:
	lea	ecx, DWORD PTR _stream$[ebp]
	jmp	??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
__ehhandler$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-68]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z ENDP ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::lcast_put<float>
; Function compile flags: /Ogtpy
;	COMDAT ??6?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
??6?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NM@Z PROC ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::operator<<, COMDAT
; _this$ = esi

; 955  :             return this->lcast_put(val);

	lea	eax, DWORD PTR _val$[esp-4]
	push	eax
	call	??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::lcast_put<float>

; 956  :         }

	ret	4
??6?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@QAE_NM@Z ENDP ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::operator<<
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z$0
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z$1
	DD	02H
	DD	00H
__ehfuncinfo$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\istream
xdata$x	ENDS
;	COMDAT ??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT
$T632207 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Strbuf$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z PROC ; std::basic_iostream<char,std::char_traits<char> >::basic_iostream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx

; 914  : 		{	// construct from stream buffer pointer

	push	-1
	push	__ehhandler$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$[esp+36], edi
	xor	ebx, ebx
	mov	DWORD PTR $T632207[esp+36], ebx
	cmp	DWORD PTR _$initVBases$[esp+32], ebx
	je	SHORT $LN1@basic_iost
	mov	DWORD PTR [edi], OFFSET ??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
	mov	DWORD PTR [edi+8], OFFSET ??_8?$basic_iostream@DU?$char_traits@D@std@@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
	mov	DWORD PTR [edi+12], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+44], ebx
	mov	DWORD PTR $T632207[esp+36], 1
$LN1@basic_iost:
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+ecx], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [edi+4], ebx
	mov	esi, DWORD PTR [edx+4]
	add	esi, edi
	mov	ecx, esi
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	mov	eax, DWORD PTR __Strbuf$[esp+32]
	push	32					; 00000020H
	mov	ecx, esi
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], ebx
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	mov	BYTE PTR [esi+48], al
	cmp	DWORD PTR [esi+40], ebx
	jne	SHORT $LN31@basic_iost
	mov	eax, DWORD PTR [esi+8]
	or	eax, 4
	or	eax, 4
	push	ebx
	push	eax
	mov	ecx, esi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN31@basic_iost:
	mov	DWORD PTR [esi+4], ebx
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edi+edx+8], OFFSET ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+ecx], OFFSET ??_7?$basic_iostream@DU?$char_traits@D@std@@@std@@6B@

; 915  : 		}

	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z$0:
	mov	eax, DWORD PTR $T632207[ebp]
	and	eax, 1
	je	$LN5@basic_iost
	and	DWORD PTR $T632207[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN5@basic_iost:
	ret	0
__unwindfunclet$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__ehhandler$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ENDP ; std::basic_iostream<char,std::char_traits<char> >::basic_iostream<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xiosbase
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\sstream
xdata$x	ENDS
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T632326 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 484  : 		{	// construct empty character buffer

	push	-1
	push	__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+36], esi
	xor	eax, eax
	mov	DWORD PTR $T632326[esp+36], eax
	cmp	DWORD PTR _$initVBases$[esp+32], eax
	je	SHORT $LN1@basic_stri@4
	mov	DWORD PTR [esi], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
	mov	DWORD PTR [esi+8], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
	mov	DWORD PTR [esi+84], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+44], eax
	mov	DWORD PTR $T632326[esp+36], 1
$LN1@basic_stri@4:
	push	eax
	lea	edi, DWORD PTR [esi+12]
	push	edi
	mov	ecx, esi
	call	??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::basic_iostream<char,std::char_traits<char> >::basic_iostream<char,std::char_traits<char> >
	mov	edx, DWORD PTR __Mode$[esp+32]
	mov	DWORD PTR __$EHRec$[esp+44], 1
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+ecx], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	push	edx
	mov	ecx, edi
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >

; 485  : 		}

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 24					; 00000018H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T632326[ebp]
	and	eax, 1
	je	$LN5@basic_stri@4
	and	DWORD PTR $T632326[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN5@basic_stri@4:
	ret	0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_iostream<char,std::char_traits<char> >::~basic_iostream<char,std::char_traits<char> >
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4OutputFileType@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4OutputFileType@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@414
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@414
$LN3@operator@414:
	xor	esi, esi
$LN4@operator@414:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4OutputFileType@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4OutputFileType@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4SystemConfigurationType@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4SystemConfigurationType@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@415
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@415
$LN3@operator@415:
	xor	esi, esi
$LN4@operator@415:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 0
	je	SHORT $LN7@operator@415
	sub	eax, 1
	je	SHORT $LN6@operator@415
	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	jmp	SHORT $LN16@operator@415
$LN6@operator@415:
	push	OFFSET ??_C@_03IKDEDJNB@fbd?$AA@
	jmp	SHORT $LN16@operator@415
$LN7@operator@415:
	push	OFFSET ??_C@_08LCLEONAE@baseline?$AA@
$LN16@operator@415:
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	add	esp, 8
	test	BYTE PTR [edx+esi+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4SystemConfigurationType@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@416
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@416
$LN3@operator@416:
	xor	esi, esi
$LN4@operator@416:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 0
	je	SHORT $LN7@operator@416
	sub	eax, 1
	je	SHORT $LN6@operator@416
	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	jmp	SHORT $LN16@operator@416
$LN6@operator@416:
	push	OFFSET ??_C@_06OLFOGHEN@strict?$AA@
	jmp	SHORT $LN16@operator@416
$LN7@operator@416:
	push	OFFSET ??_C@_04EPCGJKAP@RIFF?$AA@
$LN16@operator@416:
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	add	esp, 8
	test	BYTE PTR [edx+esi+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RefreshPolicy@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RefreshPolicy@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@417
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@417
$LN3@operator@417:
	xor	esi, esi
$LN4@operator@417:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RefreshPolicy@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RefreshPolicy@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4AddressMappingScheme@Address@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4AddressMappingScheme@Address@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@418
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@418
$LN3@operator@418:
	xor	esi, esi
$LN4@operator@418:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	cmp	eax, 7
	ja	SHORT $LN5@operator@418
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABW4AddressMappingScheme@Address@0@@Z ; DRAMsimII::operator<<
	jmp	SHORT $LN16@operator@418
$LN5@operator@418:
	push	OFFSET ??_C@_05LOKBKELC@UNKWN?$AA@
	push	esi
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	eax, esi
$LN16@operator@418:
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4AddressMappingScheme@Address@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z
_TEXT	SEGMENT
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >, COMDAT
; _this$ = esi

; 577  :             lexical_stream(char_type* = 0, char_type* = 0)

	push	1
	push	3
	mov	ecx, esi
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >

; 578  :             {
; 579  :                 stream.unsetf(std::ios::skipws);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR [eax+esi+16], -2		; fffffffeH

; 580  :                 lcast_set_precision(stream, (Source*)0, (Target*)0);

	mov	ecx, DWORD PTR [esi]
	add	eax, esi
	mov	eax, DWORD PTR [ecx+4]
	add	eax, esi
	mov	DWORD PTR [eax+20], 6

; 581  :             }

	mov	eax, esi
	ret	0
??0?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@PAD0@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >
_TEXT	ENDS
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T632775 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T632771 = -44						; size = 20
_result$147752 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,1,char>, COMDAT
; ___$ReturnUdt$ = edi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+208], edi
	mov	DWORD PTR $T632775[esp+208], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+200]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+216], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+200]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+196]
	mov	DWORD PTR __$EHRec$[esp+208], 1
	mov	eax, DWORD PTR [edx]
	lea	esi, DWORD PTR _interpreter$[esp+208]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4OutputFileType@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	jne	$LN145@lexical_ca@5

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$147752[esp+224], esi
	mov	DWORD PTR _result$147752[esp+220], ebx
	mov	BYTE PTR _result$147752[esp+204], bl

; 1151 :                 if (interpreter >> result)

	lea	eax, DWORD PTR _result$147752[esp+200]
	push	eax
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	BYTE PTR __$EHRec$[esp+212], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@5

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	ecx, DWORD PTR _result$147752[esp+208]
	push	ecx
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147752[esp+224], 16	; 00000010H
	mov	DWORD PTR $T632775[esp+200], 1
	jb	SHORT $LN109@lexical_ca@5
	mov	edx, DWORD PTR _result$147752[esp+204]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN109@lexical_ca@5:
	lea	ecx, DWORD PTR _interpreter$[esp+284]
	mov	DWORD PTR _result$147752[esp+224], esi
	mov	DWORD PTR _result$147752[esp+220], ebx
	mov	BYTE PTR _result$147752[esp+204], bl
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	eax, DWORD PTR _interpreter$[esp+284]
	push	eax
	mov	DWORD PTR _interpreter$[esp+288], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, edi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@5:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+208], 1
	cmp	DWORD PTR _result$147752[esp+224], 16	; 00000010H
	jb	SHORT $LN145@lexical_ca@5
	mov	ecx, DWORD PTR _result$147752[esp+204]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN145@lexical_ca@5:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T632771[esp+204]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T632771[esp+200], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T632771[esp+212], OFFSET ??_R0?AW4OutputFileType@DRAMsimII@@@8
	mov	DWORD PTR $T632771[esp+216], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	edx, DWORD PTR $T632771[esp+200]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+212], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN194@lexical_ca@5:
$LN193@lexical_ca@5:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$147752[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T632775[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@5
	and	DWORD PTR $T632775[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@5:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T632771[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-184]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,1,char>
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z
_TEXT	SEGMENT
$T633662 = -124						; size = 1
___$ReturnUdt$GSCopy$ = -124				; size = 4
$T633508 = -120						; size = 4
$T633498 = -116						; size = 4
_interpreter$ = -112					; size = 68
$T633494 = -44						; size = 20
_result$147558 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float,0,char>, COMDAT
; ___$ReturnUdt$ = edi
; _buf$ = ecx

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+124], eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+136]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	xor	ebx, ebx

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	lea	ecx, DWORD PTR _interpreter$[esp+136]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+136], edi
	mov	DWORD PTR $T633498[esp+136], ebx
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	mov	DWORD PTR _interpreter$[esp+196], esi
	add	esi, 20					; 00000014H
	mov	DWORD PTR _interpreter$[esp+136], OFFSET ??_7?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@6B@
	mov	DWORD PTR _interpreter$[esp+200], esi

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	movss	xmm0, DWORD PTR _arg$[esp+132]
	lea	eax, DWORD PTR $T633508[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], 1
	push	eax
	lea	esi, DWORD PTR _interpreter$[esp+140]
	movss	DWORD PTR $T633508[esp+140], xmm0
	call	??$lcast_put@M@?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@AAE_NABM@Z ; boost::detail::lexical_stream_limited_src<char,std::basic_streambuf<char,std::char_traits<char> >,std::char_traits<char> >::lcast_put<float>
	test	al, al
	je	$LN132@lexical_ca@6

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$147558[esp+160], esi
	mov	DWORD PTR _result$147558[esp+156], ebx
	mov	BYTE PTR _result$147558[esp+140], bl
	mov	BYTE PTR __$EHRec$[esp+144], 2

; 1151 :                 if (interpreter >> result)

	mov	ecx, DWORD PTR $T633662[esp+136]
	mov	edx, DWORD PTR _interpreter$[esp+200]
	mov	eax, DWORD PTR _interpreter$[esp+196]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR _result$147558[esp+148]
	call	??$_Assign@PAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PAD0Uinput_iterator_tag@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign<char *>

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	ecx, DWORD PTR _result$147558[esp+144]
	push	ecx
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147558[esp+160], 16	; 00000010H
	mov	DWORD PTR $T633498[esp+136], 1
	jb	SHORT $LN95@lexical_ca@6
	mov	edx, DWORD PTR _result$147558[esp+140]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN95@lexical_ca@6:
	lea	ecx, DWORD PTR _interpreter$[esp+136]
	mov	DWORD PTR _result$147558[esp+160], esi
	mov	DWORD PTR _result$147558[esp+156], ebx
	mov	BYTE PTR _result$147558[esp+140], bl
	mov	BYTE PTR __$EHRec$[esp+144], bl
	call	??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::~basic_streambuf<char,std::char_traits<char> >
	mov	eax, edi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+136]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+124]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	ret	0

; 1153 :             }

$LN132@lexical_ca@6:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T633494[esp+140]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T633494[esp+136], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T633494[esp+148], OFFSET ??_R0M@8
	mov	DWORD PTR $T633494[esp+152], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	eax, DWORD PTR $T633494[esp+136]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+148], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN176@lexical_ca@6:
$LN175@lexical_ca@6:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$0:
	lea	ecx, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream_limited_src@DV?$basic_streambuf@DU?$char_traits@D@std@@@std@@U?$char_traits@D@2@@detail@boost@@UAE@XZ
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$1:
	lea	ecx, DWORD PTR _result$147558[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$2:
	mov	eax, DWORD PTR $T633498[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@6
	and	DWORD PTR $T633498[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@6:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z$3:
	lea	ecx, DWORD PTR $T633494[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-120]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float,0,char>
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T634159 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T634155 = -44						; size = 20
_result$147407 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,1,char>, COMDAT
; ___$ReturnUdt$ = esi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+196]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+204], esi
	mov	DWORD PTR $T634159[esp+204], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+196]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+212], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+196]
	lea	eax, DWORD PTR _interpreter$[esp+eax+196]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+196]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+192]
	mov	DWORD PTR __$EHRec$[esp+204], 1
	mov	eax, DWORD PTR [edx]
	sub	eax, ebx
	je	SHORT $LN33@lexical_ca@7
	sub	eax, 1
	je	SHORT $LN32@lexical_ca@7
	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	lea	eax, DWORD PTR _interpreter$[esp+208]
	push	eax
	jmp	SHORT $LN201@lexical_ca@7
$LN32@lexical_ca@7:
	push	OFFSET ??_C@_03IKDEDJNB@fbd?$AA@
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	push	ecx
	jmp	SHORT $LN201@lexical_ca@7
$LN33@lexical_ca@7:
	push	OFFSET ??_C@_08LCLEONAE@baseline?$AA@
	lea	edx, DWORD PTR _interpreter$[esp+208]
	push	edx
$LN201@lexical_ca@7:
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	eax, DWORD PTR _interpreter$[esp+212]
	mov	ecx, DWORD PTR [eax+4]
	add	esp, 8
	test	BYTE PTR _interpreter$[esp+ecx+212], 6
	jne	$LN152@lexical_ca@7

; 1150 :                 Target result;

	mov	DWORD PTR _result$147407[esp+220], 15	; 0000000fH
	mov	DWORD PTR _result$147407[esp+216], ebx
	mov	BYTE PTR _result$147407[esp+200], bl

; 1151 :                 if (interpreter >> result)

	lea	edx, DWORD PTR _result$147407[esp+196]
	push	edx
	lea	ecx, DWORD PTR _interpreter$[esp+200]
	mov	BYTE PTR __$EHRec$[esp+208], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@7

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	eax, DWORD PTR _result$147407[esp+204]
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147407[esp+220], 16	; 00000010H
	mov	DWORD PTR $T634159[esp+196], 1
	jb	SHORT $LN116@lexical_ca@7
	mov	ecx, DWORD PTR _result$147407[esp+200]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN116@lexical_ca@7:
	lea	ecx, DWORD PTR _interpreter$[esp+280]
	mov	DWORD PTR _result$147407[esp+220], 15	; 0000000fH
	mov	DWORD PTR _result$147407[esp+216], ebx
	mov	BYTE PTR _result$147407[esp+200], bl
	mov	BYTE PTR __$EHRec$[esp+204], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	edx, DWORD PTR _interpreter$[esp+280]
	push	edx
	mov	DWORD PTR _interpreter$[esp+284], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, esi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+196]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@7:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+204], 1
	cmp	DWORD PTR _result$147407[esp+220], 16	; 00000010H
	jb	SHORT $LN152@lexical_ca@7
	mov	eax, DWORD PTR _result$147407[esp+200]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN152@lexical_ca@7:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T634155[esp+200]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T634155[esp+196], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T634155[esp+208], OFFSET ??_R0?AW4SystemConfigurationType@DRAMsimII@@@8
	mov	DWORD PTR $T634155[esp+212], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	ecx, DWORD PTR $T634155[esp+196]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+208], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN202@lexical_ca@7:
$LN200@lexical_ca@7:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$147407[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T634159[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@7
	and	DWORD PTR $T634159[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@7:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T634155[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-180]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,1,char>
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T634900 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T634896 = -44						; size = 20
_result$147288 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,1,char>, COMDAT
; ___$ReturnUdt$ = esi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+196]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+204], esi
	mov	DWORD PTR $T634900[esp+204], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+196]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+212], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+196]
	lea	eax, DWORD PTR _interpreter$[esp+eax+196]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+196]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+192]
	mov	DWORD PTR __$EHRec$[esp+204], 1
	mov	eax, DWORD PTR [edx]
	sub	eax, ebx
	je	SHORT $LN33@lexical_ca@8
	sub	eax, 1
	je	SHORT $LN32@lexical_ca@8
	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	lea	eax, DWORD PTR _interpreter$[esp+208]
	push	eax
	jmp	SHORT $LN201@lexical_ca@8
$LN32@lexical_ca@8:
	push	OFFSET ??_C@_06OLFOGHEN@strict?$AA@
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	push	ecx
	jmp	SHORT $LN201@lexical_ca@8
$LN33@lexical_ca@8:
	push	OFFSET ??_C@_04EPCGJKAP@RIFF?$AA@
	lea	edx, DWORD PTR _interpreter$[esp+208]
	push	edx
$LN201@lexical_ca@8:
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	eax, DWORD PTR _interpreter$[esp+212]
	mov	ecx, DWORD PTR [eax+4]
	add	esp, 8
	test	BYTE PTR _interpreter$[esp+ecx+212], 6
	jne	$LN152@lexical_ca@8

; 1150 :                 Target result;

	mov	DWORD PTR _result$147288[esp+220], 15	; 0000000fH
	mov	DWORD PTR _result$147288[esp+216], ebx
	mov	BYTE PTR _result$147288[esp+200], bl

; 1151 :                 if (interpreter >> result)

	lea	edx, DWORD PTR _result$147288[esp+196]
	push	edx
	lea	ecx, DWORD PTR _interpreter$[esp+200]
	mov	BYTE PTR __$EHRec$[esp+208], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@8

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	eax, DWORD PTR _result$147288[esp+204]
	mov	DWORD PTR [esi+24], 15			; 0000000fH
	mov	DWORD PTR [esi+20], ebx
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147288[esp+220], 16	; 00000010H
	mov	DWORD PTR $T634900[esp+196], 1
	jb	SHORT $LN116@lexical_ca@8
	mov	ecx, DWORD PTR _result$147288[esp+200]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN116@lexical_ca@8:
	lea	ecx, DWORD PTR _interpreter$[esp+280]
	mov	DWORD PTR _result$147288[esp+220], 15	; 0000000fH
	mov	DWORD PTR _result$147288[esp+216], ebx
	mov	BYTE PTR _result$147288[esp+200], bl
	mov	BYTE PTR __$EHRec$[esp+204], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	edx, DWORD PTR _interpreter$[esp+280]
	push	edx
	mov	DWORD PTR _interpreter$[esp+284], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, esi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+196]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@8:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+204], 1
	cmp	DWORD PTR _result$147288[esp+220], 16	; 00000010H
	jb	SHORT $LN152@lexical_ca@8
	mov	eax, DWORD PTR _result$147288[esp+200]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN152@lexical_ca@8:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T634896[esp+200]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T634896[esp+196], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T634896[esp+208], OFFSET ??_R0?AW4TransactionOrderingAlgorithm@DRAMsimII@@@8
	mov	DWORD PTR $T634896[esp+212], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	ecx, DWORD PTR $T634896[esp+196]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+208], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN202@lexical_ca@8:
$LN200@lexical_ca@8:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$147288[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T634900[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@8
	and	DWORD PTR $T634900[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@8:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T634896[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-180]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,1,char>
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T635641 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T635637 = -44						; size = 20
_result$147050 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,1,char>, COMDAT
; ___$ReturnUdt$ = edi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+208], edi
	mov	DWORD PTR $T635641[esp+208], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+200]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+216], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+200]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+196]
	mov	DWORD PTR __$EHRec$[esp+208], 1
	mov	eax, DWORD PTR [edx]
	lea	esi, DWORD PTR _interpreter$[esp+208]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RefreshPolicy@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	jne	$LN145@lexical_ca@9

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$147050[esp+224], esi
	mov	DWORD PTR _result$147050[esp+220], ebx
	mov	BYTE PTR _result$147050[esp+204], bl

; 1151 :                 if (interpreter >> result)

	lea	eax, DWORD PTR _result$147050[esp+200]
	push	eax
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	BYTE PTR __$EHRec$[esp+212], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@9

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	ecx, DWORD PTR _result$147050[esp+208]
	push	ecx
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147050[esp+224], 16	; 00000010H
	mov	DWORD PTR $T635641[esp+200], 1
	jb	SHORT $LN109@lexical_ca@9
	mov	edx, DWORD PTR _result$147050[esp+204]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN109@lexical_ca@9:
	lea	ecx, DWORD PTR _interpreter$[esp+284]
	mov	DWORD PTR _result$147050[esp+224], esi
	mov	DWORD PTR _result$147050[esp+220], ebx
	mov	BYTE PTR _result$147050[esp+204], bl
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	eax, DWORD PTR _interpreter$[esp+284]
	push	eax
	mov	DWORD PTR _interpreter$[esp+288], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, edi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@9:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+208], 1
	cmp	DWORD PTR _result$147050[esp+224], 16	; 00000010H
	jb	SHORT $LN145@lexical_ca@9
	mov	ecx, DWORD PTR _result$147050[esp+204]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN145@lexical_ca@9:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T635637[esp+204]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T635637[esp+200], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T635637[esp+212], OFFSET ??_R0?AW4RefreshPolicy@DRAMsimII@@@8
	mov	DWORD PTR $T635637[esp+216], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	edx, DWORD PTR $T635637[esp+200]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+212], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN194@lexical_ca@9:
$LN193@lexical_ca@9:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$147050[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T635641[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@9
	and	DWORD PTR $T635641[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@9:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T635637[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-184]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,1,char>
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T636364 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T636360 = -44						; size = 20
_result$146812 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,1,char>, COMDAT
; ___$ReturnUdt$ = edi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+208], edi
	mov	DWORD PTR $T636364[esp+208], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+200]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+216], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+200]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+196]
	mov	DWORD PTR __$EHRec$[esp+208], 1
	mov	eax, DWORD PTR [edx]
	cmp	eax, 7
	ja	SHORT $LN31@lexical_ca@10
	lea	esi, DWORD PTR _interpreter$[esp+208]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABW4AddressMappingScheme@Address@0@@Z ; DRAMsimII::operator<<
	jmp	SHORT $LN42@lexical_ca@10
$LN31@lexical_ca@10:
	lea	eax, DWORD PTR _interpreter$[esp+208]
	push	OFFSET ??_C@_05LOKBKELC@UNKWN?$AA@
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	lea	eax, DWORD PTR _interpreter$[esp+208]
$LN42@lexical_ca@10:
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	jne	$LN162@lexical_ca@10

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$146812[esp+224], esi
	mov	DWORD PTR _result$146812[esp+220], ebx
	mov	BYTE PTR _result$146812[esp+204], bl

; 1151 :                 if (interpreter >> result)

	lea	eax, DWORD PTR _result$146812[esp+200]
	push	eax
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	BYTE PTR __$EHRec$[esp+212], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@10

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	ecx, DWORD PTR _result$146812[esp+208]
	push	ecx
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$146812[esp+224], 16	; 00000010H
	mov	DWORD PTR $T636364[esp+200], 1
	jb	SHORT $LN126@lexical_ca@10
	mov	edx, DWORD PTR _result$146812[esp+204]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN126@lexical_ca@10:
	lea	ecx, DWORD PTR _interpreter$[esp+284]
	mov	DWORD PTR _result$146812[esp+224], esi
	mov	DWORD PTR _result$146812[esp+220], ebx
	mov	BYTE PTR _result$146812[esp+204], bl
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	eax, DWORD PTR _interpreter$[esp+284]
	push	eax
	mov	DWORD PTR _interpreter$[esp+288], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, edi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@10:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+208], 1
	cmp	DWORD PTR _result$146812[esp+224], 16	; 00000010H
	jb	SHORT $LN162@lexical_ca@10
	mov	ecx, DWORD PTR _result$146812[esp+204]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN162@lexical_ca@10:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T636360[esp+204]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T636360[esp+200], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T636360[esp+212], OFFSET ??_R0?AW4AddressMappingScheme@Address@DRAMsimII@@@8
	mov	DWORD PTR $T636360[esp+216], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	edx, DWORD PTR $T636360[esp+200]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+212], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN211@lexical_ca@10:
$LN210@lexical_ca@10:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$146812[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T636364[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@10
	and	DWORD PTR $T636364[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@10:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T636360[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-184]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,1,char>
; Function compile flags: /Ogtpy
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@@Z
_TEXT	SEGMENT
$T637116 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	edi
	mov	edi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T637116[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType,1,char>
	add	esp, 4
	mov	eax, edi
	pop	edi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Ogtpy
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z
_TEXT	SEGMENT
$T637126 = -32						; size = 4
_buf$ = -28						; size = 21
__$ArrayPad$ = -4					; size = 4
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>, COMDAT
; ___$ReturnUdt$ = ecx

; 1165 :     {

	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+32], eax

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	mov	eax, DWORD PTR _arg$[esp+28]
	fld	DWORD PTR [eax]
	push	edi
	push	ecx
	mov	edi, ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _buf$[esp+40]
	mov	DWORD PTR $T637126[esp+40], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M$0A@D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MPADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float,0,char>

; 1178 :     }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	add	esp, 4
	mov	eax, edi
	pop	edi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@@Z
_TEXT	SEGMENT
$T637136 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	esi
	mov	esi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T637136[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType,1,char>
	add	esp, 4
	mov	eax, esi
	pop	esi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z
_TEXT	SEGMENT
$T637145 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	esi
	mov	esi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T637145[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm,1,char>
	add	esp, 4
	mov	eax, esi
	pop	esi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@@Z
_TEXT	SEGMENT
$T637154 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	edi
	mov	edi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T637154[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy,1,char>
	add	esp, 4
	mov	eax, edi
	pop	edi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@@Z
_TEXT	SEGMENT
$T637163 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	edi
	mov	edi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T637163[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme,1,char>
	add	esp, 4
	mov	eax, edi
	pop	edi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2
__ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\fstream
xdata$x	ENDS
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
_TEXT	SEGMENT
$T637171 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Filename$ = 12					; size = 4
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT

; 582  : 		{	// construct with named file and specified mode

	push	-1
	push	__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, eax
	mov	ebp, DWORD PTR _this$[esp+32]
	xor	ebx, ebx
	mov	DWORD PTR $T637171[esp+36], ebx
	mov	DWORD PTR [ebp], OFFSET ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
	mov	DWORD PTR [ebp+88], OFFSET ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR __$EHRec$[esp+44], ebx
	mov	eax, DWORD PTR [ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+ebp], OFFSET ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	edx, DWORD PTR [ebp]
	mov	DWORD PTR [ebp+4], ebx
	mov	edi, DWORD PTR [edx+4]
	add	edi, ebp
	mov	ecx, edi
	mov	DWORD PTR $T637171[esp+36], 1
	call	?_Init@ios_base@std@@IAEXXZ		; std::ios_base::_Init
	lea	esi, DWORD PTR [ebp+8]
	push	32					; 00000020H
	mov	ecx, edi
	mov	DWORD PTR [edi+40], esi
	mov	DWORD PTR [edi+44], ebx
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	mov	BYTE PTR [edi+48], al
	cmp	DWORD PTR [edi+40], ebx
	jne	SHORT $LN32@basic_ifst
	mov	eax, DWORD PTR [edi+8]
	or	eax, 4
	or	eax, 4
	push	ebx
	push	eax
	mov	ecx, edi
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN32@basic_ifst:
	mov	DWORD PTR [edi+4], ebx
	mov	DWORD PTR __$EHRec$[esp+44], 2
	mov	eax, DWORD PTR [ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+ebp], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, esi
	call	??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ ; std::basic_streambuf<char,std::char_traits<char> >::basic_streambuf<char,std::char_traits<char> >
	lea	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], edx
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	BYTE PTR [esi+72], bl
	mov	BYTE PTR [esi+65], bl
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+32], ecx
	lea	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+36], edx
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+20], eax
	lea	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+48], ecx
	lea	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edx
	mov	DWORD PTR [eax], ebx
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [esi+52]
	mov	DWORD PTR [ecx], ebx
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx], ebx
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], ebx
	mov	DWORD PTR [esi+76], ebx
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [esi+68], edx
	mov	DWORD PTR [esi+60], ebx

; 583  : 		if (_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot) == 0)

	mov	ecx, DWORD PTR __Filename$[esp+32]
	push	5
	mov	BYTE PTR __$EHRec$[esp+48], 3
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN59@basic_ifst

; 584  : 			_Myios::setstate(ios_base::failbit);

	mov	eax, DWORD PTR [ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+ebp+8]
	add	ecx, ebp
	or	eax, 2
	cmp	DWORD PTR [ecx+40], ebx
	jne	SHORT $LN57@basic_ifst
	or	eax, 4
$LN57@basic_ifst:
	push	ebx
	push	eax
	call	?clear@ios_base@std@@QAEXH_N@Z		; std::ios_base::clear
$LN59@basic_ifst:

; 585  : 		}

	mov	eax, ebp
	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0:
	mov	eax, DWORD PTR $T637171[ebp]
	and	eax, 1
	je	$LN6@basic_ifst
	and	DWORD PTR $T637171[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 88					; 00000058H
	jmp	??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ios<char,std::char_traits<char> >::~basic_ios<char,std::char_traits<char> >
$LN6@basic_ifst:
	ret	0
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 8
	jmp	??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_istream<char,std::char_traits<char> >::~basic_istream<char,std::char_traits<char> >
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 8
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-20]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4InputType@InputStream@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4InputType@InputStream@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@428
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@428
$LN3@operator@428:
	xor	esi, esi
$LN4@operator@428:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4InputType@InputStream@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4InputType@InputStream@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4CommandOrderingAlgorithm@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4CommandOrderingAlgorithm@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@429
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@429
$LN3@operator@429:
	xor	esi, esi
$LN4@operator@429:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4CommandOrderingAlgorithm@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4CommandOrderingAlgorithm@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::operator<<
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RowBufferPolicy@DRAMsimII@@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RowBufferPolicy@DRAMsimII@@@Z PROC ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::operator<<, COMDAT
; _this$ = eax

; 589  :             {

	push	esi

; 590  :                 return !(stream << input).fail();

	test	eax, eax
	je	SHORT $LN3@operator@430
	lea	esi, DWORD PTR [eax+8]
	jmp	SHORT $LN4@operator@430
$LN3@operator@430:
	xor	esi, esi
$LN4@operator@430:
	mov	eax, DWORD PTR _input$[esp]
	mov	eax, DWORD PTR [eax]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RowBufferPolicy@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	mov	eax, 0
	sete	al
	pop	esi

; 591  :             }

	ret	4
??6?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NABW4RowBufferPolicy@DRAMsimII@@@Z ENDP ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::operator<<
_TEXT	ENDS
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T660255 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T660251 = -44						; size = 20
_result$147934 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,1,char>, COMDAT
; ___$ReturnUdt$ = edi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+208], edi
	mov	DWORD PTR $T660255[esp+208], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+200]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+216], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+200]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+196]
	mov	DWORD PTR __$EHRec$[esp+208], 1
	mov	eax, DWORD PTR [edx]
	lea	esi, DWORD PTR _interpreter$[esp+208]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4InputType@InputStream@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	jne	$LN145@lexical_ca@14

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$147934[esp+224], esi
	mov	DWORD PTR _result$147934[esp+220], ebx
	mov	BYTE PTR _result$147934[esp+204], bl

; 1151 :                 if (interpreter >> result)

	lea	eax, DWORD PTR _result$147934[esp+200]
	push	eax
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	BYTE PTR __$EHRec$[esp+212], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@14

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	ecx, DWORD PTR _result$147934[esp+208]
	push	ecx
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147934[esp+224], 16	; 00000010H
	mov	DWORD PTR $T660255[esp+200], 1
	jb	SHORT $LN109@lexical_ca@14
	mov	edx, DWORD PTR _result$147934[esp+204]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN109@lexical_ca@14:
	lea	ecx, DWORD PTR _interpreter$[esp+284]
	mov	DWORD PTR _result$147934[esp+224], esi
	mov	DWORD PTR _result$147934[esp+220], ebx
	mov	BYTE PTR _result$147934[esp+204], bl
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	eax, DWORD PTR _interpreter$[esp+284]
	push	eax
	mov	DWORD PTR _interpreter$[esp+288], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, edi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@14:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+208], 1
	cmp	DWORD PTR _result$147934[esp+224], 16	; 00000010H
	jb	SHORT $LN145@lexical_ca@14
	mov	ecx, DWORD PTR _result$147934[esp+204]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN145@lexical_ca@14:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T660251[esp+204]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T660251[esp+200], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T660251[esp+212], OFFSET ??_R0?AW4InputType@InputStream@DRAMsimII@@@8
	mov	DWORD PTR $T660251[esp+216], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	edx, DWORD PTR $T660251[esp+200]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+212], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN194@lexical_ca@14:
$LN193@lexical_ca@14:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$147934[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T660255[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@14
	and	DWORD PTR $T660255[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@14:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T660251[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-184]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,1,char>
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T660978 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T660974 = -44						; size = 20
_result$147169 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,1,char>, COMDAT
; ___$ReturnUdt$ = edi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+208], edi
	mov	DWORD PTR $T660978[esp+208], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+200]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+216], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+200]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+196]
	mov	DWORD PTR __$EHRec$[esp+208], 1
	mov	eax, DWORD PTR [edx]
	lea	esi, DWORD PTR _interpreter$[esp+208]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4CommandOrderingAlgorithm@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	jne	$LN145@lexical_ca@15

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$147169[esp+224], esi
	mov	DWORD PTR _result$147169[esp+220], ebx
	mov	BYTE PTR _result$147169[esp+204], bl

; 1151 :                 if (interpreter >> result)

	lea	eax, DWORD PTR _result$147169[esp+200]
	push	eax
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	BYTE PTR __$EHRec$[esp+212], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@15

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	ecx, DWORD PTR _result$147169[esp+208]
	push	ecx
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$147169[esp+224], 16	; 00000010H
	mov	DWORD PTR $T660978[esp+200], 1
	jb	SHORT $LN109@lexical_ca@15
	mov	edx, DWORD PTR _result$147169[esp+204]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN109@lexical_ca@15:
	lea	ecx, DWORD PTR _interpreter$[esp+284]
	mov	DWORD PTR _result$147169[esp+224], esi
	mov	DWORD PTR _result$147169[esp+220], ebx
	mov	BYTE PTR _result$147169[esp+204], bl
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	eax, DWORD PTR _interpreter$[esp+284]
	push	eax
	mov	DWORD PTR _interpreter$[esp+288], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, edi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@15:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+208], 1
	cmp	DWORD PTR _result$147169[esp+224], 16	; 00000010H
	jb	SHORT $LN145@lexical_ca@15
	mov	ecx, DWORD PTR _result$147169[esp+204]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN145@lexical_ca@15:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T660974[esp+204]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T660974[esp+200], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T660974[esp+212], OFFSET ??_R0?AW4CommandOrderingAlgorithm@DRAMsimII@@@8
	mov	DWORD PTR $T660974[esp+216], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	edx, DWORD PTR $T660974[esp+200]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+212], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN194@lexical_ca@15:
$LN193@lexical_ca@15:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$147169[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T660978[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@15
	and	DWORD PTR $T660978[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@15:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T660974[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-184]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,1,char>
PUBLIC	___$ReturnUdt$GSCopy$
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$3
__ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files\boost\boost_1_40\boost\lexical_cast.hpp
xdata$x	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z
_TEXT	SEGMENT
$T661701 = -188						; size = 4
___$ReturnUdt$GSCopy$ = -184				; size = 4
_interpreter$ = -180					; size = 136
$T661697 = -44						; size = 20
_result$146931 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_arg$ = 8						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z PROC ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,1,char>, COMDAT
; ___$ReturnUdt$ = edi

; 1122 :         {

	push	-1
	push	__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+188], eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, eax

; 1123 :             typedef BOOST_DEDUCED_TYPENAME
; 1124 :                 deduce_char_traits<CharT,Target,Source>::type traits;
; 1125 : 
; 1126 :             typedef BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1127 :                 lcast_streambuf_for_target<Target>::value ||
; 1128 :                 lcast_streambuf_for_source<Source>::value
; 1129 :               , std::basic_streambuf<CharT>
; 1130 :               , lexical_streambuf_fake
; 1131 :               >::type base;
; 1132 : 
; 1133 :             BOOST_DEDUCED_TYPENAME boost::mpl::if_c<
; 1134 :                 Unlimited
; 1135 :               , detail::lexical_stream<Target,Source,traits>
; 1136 :               , detail::lexical_stream_limited_src<CharT,base,traits>
; 1137 :               >::type interpreter(buf, buf + src_len);

	push	1
	xor	ebx, ebx
	push	3
	lea	ecx, DWORD PTR _interpreter$[esp+208]
	mov	DWORD PTR ___$ReturnUdt$GSCopy$[esp+208], edi
	mov	DWORD PTR $T661701[esp+208], ebx
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _interpreter$[esp+200]
	mov	eax, DWORD PTR [eax+4]
	and	DWORD PTR _interpreter$[esp+eax+216], -2 ; fffffffeH
	mov	ecx, DWORD PTR _interpreter$[esp+200]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR _interpreter$[esp+eax+200]
	mov	DWORD PTR [eax+20], 6

; 1138 : 
; 1139 :             // The original form, reproduced below, is more elegant
; 1140 :             // but yields a spurious C4701 warning ("possible use of
; 1141 :             // "result" before initialization") with VC7.1 (/W4).
; 1142 : //
; 1143 : //            Target result;
; 1144 : //
; 1145 : //            if(!(interpreter << arg && interpreter >> result))
; 1146 : //                throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));
; 1147 : //            return result;
; 1148 : 
; 1149 :             if(interpreter << arg) {

	mov	edx, DWORD PTR _arg$[esp+196]
	mov	DWORD PTR __$EHRec$[esp+208], 1
	mov	eax, DWORD PTR [edx]
	lea	esi, DWORD PTR _interpreter$[esp+208]
	call	??6DRAMsimII@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@W4RowBufferPolicy@0@@Z ; DRAMsimII::operator<<
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	test	BYTE PTR [edx+eax+8], 6
	jne	$LN145@lexical_ca@16

; 1150 :                 Target result;

	mov	esi, 15					; 0000000fH
	mov	DWORD PTR _result$146931[esp+224], esi
	mov	DWORD PTR _result$146931[esp+220], ebx
	mov	BYTE PTR _result$146931[esp+204], bl

; 1151 :                 if (interpreter >> result)

	lea	eax, DWORD PTR _result$146931[esp+200]
	push	eax
	lea	ecx, DWORD PTR _interpreter$[esp+204]
	mov	BYTE PTR __$EHRec$[esp+212], 2
	call	??5?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::operator>>
	test	al, al
	je	$LN1@lexical_ca@16

; 1152 :                     return result;

	push	-1
	push	ebx
	lea	ecx, DWORD PTR _result$146931[esp+208]
	push	ecx
	mov	DWORD PTR [edi+24], esi
	mov	DWORD PTR [edi+20], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+4], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	cmp	DWORD PTR _result$146931[esp+224], 16	; 00000010H
	mov	DWORD PTR $T661701[esp+200], 1
	jb	SHORT $LN109@lexical_ca@16
	mov	edx, DWORD PTR _result$146931[esp+204]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN109@lexical_ca@16:
	lea	ecx, DWORD PTR _interpreter$[esp+284]
	mov	DWORD PTR _result$146931[esp+224], esi
	mov	DWORD PTR _result$146931[esp+220], ebx
	mov	BYTE PTR _result$146931[esp+204], bl
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	lea	eax, DWORD PTR _interpreter$[esp+284]
	push	eax
	mov	DWORD PTR _interpreter$[esp+288], OFFSET ??_7ios_base@std@@6B@
	call	?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z ; std::ios_base::_Ios_base_dtor
	add	esp, 4
	mov	eax, edi

; 1156 : #else
; 1157 :             throw_exception(bad_lexical_cast());
; 1158 : #endif
; 1159 :             return Target(); // normally never reached (throw_exception)
; 1160 :         }

	mov	ecx, DWORD PTR __$EHRec$[esp+200]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+188]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 188				; 000000bcH
	ret	0
$LN1@lexical_ca@16:

; 1153 :             }

	mov	BYTE PTR __$EHRec$[esp+208], 1
	cmp	DWORD PTR _result$146931[esp+224], 16	; 00000010H
	jb	SHORT $LN145@lexical_ca@16
	mov	ecx, DWORD PTR _result$146931[esp+204]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN145@lexical_ca@16:

; 1154 : #ifndef BOOST_NO_TYPEID
; 1155 :             throw_exception(bad_lexical_cast(typeid(Source), typeid(Target)));

	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T661697[esp+204]
	call	??0bad_cast@std@@QAE@PBD@Z		; std::bad_cast::bad_cast
	mov	DWORD PTR $T661697[esp+200], OFFSET ??_7bad_lexical_cast@boost@@6B@
	mov	DWORD PTR $T661697[esp+212], OFFSET ??_R0?AW4RowBufferPolicy@DRAMsimII@@@8
	mov	DWORD PTR $T661697[esp+216], OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	lea	edx, DWORD PTR $T661697[esp+200]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+212], 3
	call	??$throw_exception@Vbad_lexical_cast@boost@@@boost@@YAXABVbad_lexical_cast@0@@Z ; boost::throw_exception<boost::bad_lexical_cast>
$LN194@lexical_ca@16:
$LN193@lexical_ca@16:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$0:
	lea	eax, DWORD PTR _interpreter$[ebp]
	jmp	??1?$lexical_stream@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@U?$char_traits@D@2@@detail@boost@@QAE@XZ ; boost::detail::lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >::~lexical_stream<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,std::char_traits<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$1:
	lea	ecx, DWORD PTR _result$146931[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$2:
	mov	eax, DWORD PTR $T661701[ebp]
	and	eax, 1
	je	$LN8@lexical_ca@16
	and	DWORD PTR $T661701[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@lexical_ca@16:
	ret	0
__unwindfunclet$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z$3:
	lea	ecx, DWORD PTR $T661697[ebp]
	jmp	??1bad_lexical_cast@boost@@UAE@XZ	; boost::bad_lexical_cast::~bad_lexical_cast
__ehhandler$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-184]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z ENDP ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,1,char>
; Function compile flags: /Ogtpy
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@@Z
_TEXT	SEGMENT
$T662420 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	edi
	mov	edi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T662420[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType,1,char>
	add	esp, 4
	mov	eax, edi
	pop	edi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@@Z
_TEXT	SEGMENT
$T662429 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	edi
	mov	edi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T662429[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm,1,char>
	add	esp, 4
	mov	eax, edi
	pop	edi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@@Z
_TEXT	SEGMENT
$T662438 = -4						; size = 4
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@@Z PROC ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy>, COMDAT
; ___$ReturnUdt$ = ecx
; _arg$ = eax

; 1165 :     {

	push	ecx
	push	edi
	mov	edi, ecx

; 1166 :         typedef typename detail::array_to_pointer_decay<Source>::type src;
; 1167 : 
; 1168 :         typedef typename detail::widest_char<
; 1169 :             typename detail::stream_char<Target>::type
; 1170 :           , typename detail::stream_char<src>::type
; 1171 :           >::type char_type;
; 1172 : 
; 1173 :         typedef detail::lcast_src_length<char_type, src> lcast_src_length;
; 1174 :         std::size_t const src_len = lcast_src_length::value;
; 1175 :         char_type buf[src_len + 1];
; 1176 :         lcast_src_length::check_coverage();
; 1177 :         return detail::lexical_cast<Target, src, !src_len>(arg, buf, src_len);

	push	eax
	mov	DWORD PTR $T662438[esp+12], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@$00D@detail@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@PADI@Z ; boost::detail::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy,1,char>
	add	esp, 4
	mov	eax, edi
	pop	edi

; 1178 :     }

	pop	ecx
	ret	0
??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@@Z ENDP ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z ; updateKeyValue
__unwindtable$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z$1
__ehfuncinfo$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\settingsxml.cpp
_TEXT	SEGMENT
_token$ = -76						; size = 4
_realName$133999 = -72					; size = 28
_lookupValue$134009 = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_nodeValue$ = 8						; size = 4
?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z PROC ; updateKeyValue
; _nodeName$ = edx
; _doc$ = ecx

; 48   : {

	push	-1
	push	__ehhandler$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, eax
	mov	ebx, DWORD PTR _nodeValue$[esp+92]
	mov	esi, ecx

; 49   : 	FileIOToken token = unknown_token;
; 50   : 	if (Settings::tokenize(nodeName, token) == false)

	lea	ecx, DWORD PTR _token$[esp+96]
	mov	DWORD PTR _token$[esp+96], 98		; 00000062H
	call	?tokenize@Settings@DRAMsimII@@SA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAW4FileIOToken@2@@Z ; DRAMsimII::Settings::tokenize
	test	al, al

; 51   : 		return false;

	je	$LN156@updateKeyV

; 52   : 	else
; 53   : 	{
; 54   : 		string realName;

	xor	edi, edi
	mov	DWORD PTR _realName$133999[esp+120], 15	; 0000000fH
	mov	DWORD PTR _realName$133999[esp+116], edi
	mov	BYTE PTR _realName$133999[esp+100], 0

; 55   : 		if (Settings::detokenize(token, realName) == true)

	lea	eax, DWORD PTR _realName$133999[esp+96]
	mov	DWORD PTR __$EHRec$[esp+104], edi
	mov	ecx, DWORD PTR _token$[esp+96]
	push	eax
	push	ecx
	call	?detokenize@Settings@DRAMsimII@@SA_NW4FileIOToken@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::detokenize
	add	esp, 8
	cmp	al, 1
	jne	$LN7@updateKeyV

; 56   : 		{
; 57   : 			xmlXPathContextPtr context = xmlXPathNewContext(doc);

	push	esi
	call	_xmlXPathNewContext
	mov	ebp, eax
	add	esp, 4

; 58   : 			if (context == NULL)

	cmp	ebp, edi
	jne	SHORT $LN6@updateKeyV

; 59   : 			{
; 60   : 				cerr << "Problem updating nodes." << endl;				

	push	OFFSET ??_C@_0BI@JMDKEDFB@Problem?5updating?5nodes?4?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 61   : 				return false;

	cmp	DWORD PTR _realName$133999[esp+120], 16	; 00000010H
	jb	$LN156@updateKeyV
	mov	edx, DWORD PTR _realName$133999[esp+100]
	push	edx
	jmp	$LN169@updateKeyV
$LN6@updateKeyV:

; 62   : 			}
; 63   : 			//string lookupValue = (realName.find('@') < 0) ? "//" + realName : realName;
; 64   : 			string lookupValue = "//" + realName;

	lea	eax, DWORD PTR _realName$133999[esp+96]
	push	eax
	lea	ecx, DWORD PTR _lookupValue$134009[esp+100]
	push	OFFSET ??_C@_02CBLDBPFN@?1?1?$AA@
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[esp+104], 1

; 65   : 
; 66   : 			xmlXPathObjectPtr path = xmlXPathEvalExpression((const xmlChar *)lookupValue.c_str(), context);

	cmp	DWORD PTR _lookupValue$134009[esp+120], 16 ; 00000010H
	mov	eax, DWORD PTR _lookupValue$134009[esp+100]
	jae	SHORT $LN83@updateKeyV
	lea	eax, DWORD PTR _lookupValue$134009[esp+100]
$LN83@updateKeyV:
	push	ebp
	push	eax
	call	_xmlXPathEvalExpression
	mov	edi, eax
	add	esp, 8

; 67   : 			if (path == NULL)

	test	edi, edi
	jne	SHORT $LN5@updateKeyV

; 68   : 			{
; 69   : 				cerr << "Problem creating node path." << endl;

	push	OFFSET ??_C@_0BM@LALLMIH@Problem?5creating?5node?5path?4?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 70   : 				xmlXPathFreeContext(context);

	push	ebp
	call	_xmlXPathFreeContext
	add	esp, 4

; 71   : 				return false;

	lea	ecx, DWORD PTR _lookupValue$134009[esp+96]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR _realName$133999[esp+96]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN156@updateKeyV
$LN5@updateKeyV:

; 72   : 			}
; 73   : 			//updateNodes(path->nodesetval,(const xmlChar *)nodeValue.c_str());
; 74   : 			int size = (path->nodesetval) ? path->nodesetval->nodeNr : 0;

	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN12@updateKeyV
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN13@updateKeyV
$LN12@updateKeyV:
	xor	eax, eax
$LN13@updateKeyV:

; 75   : 
; 76   : 			for (int i = size - 1; i >= 0; i--)

	lea	esi, DWORD PTR [eax-1]
	test	esi, esi
	jl	SHORT $LN2@updateKeyV
	npad	3
$LL4@updateKeyV:

; 77   : 			{
; 78   : 				assert(path->nodesetval->nodeTab[i]);
; 79   : 
; 80   : 				xmlNodeSetContent(path->nodesetval->nodeTab[i], (const xmlChar *)nodeValue.c_str());

	mov	ecx, ebx
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	edx, DWORD PTR [edi+4]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+esi*4]
	push	ecx
	call	_xmlNodeSetContent
	add	esp, 8
	sub	esi, 1
	jns	SHORT $LL4@updateKeyV
$LN2@updateKeyV:

; 81   : 			}
; 82   : 
; 83   : 			xmlXPathFreeObject(path);

	push	edi
	call	_xmlXPathFreeObject
	add	esp, 4

; 84   : 			xmlXPathFreeContext(context);

	push	ebp
	call	_xmlXPathFreeContext

; 85   : 
; 86   : 			return true;

	mov	esi, 16					; 00000010H
	add	esp, 4
	cmp	DWORD PTR _lookupValue$134009[esp+120], esi
	jb	SHORT $LN104@updateKeyV
	mov	edx, DWORD PTR _lookupValue$134009[esp+100]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN104@updateKeyV:
	mov	DWORD PTR _lookupValue$134009[esp+120], 15 ; 0000000fH
	mov	DWORD PTR _lookupValue$134009[esp+116], 0
	mov	BYTE PTR _lookupValue$134009[esp+100], 0
	cmp	DWORD PTR _realName$133999[esp+120], esi
	jb	SHORT $LN130@updateKeyV
	mov	eax, DWORD PTR _realName$133999[esp+100]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN130@updateKeyV:
	mov	al, 1
	jmp	SHORT $LN8@updateKeyV
$LN7@updateKeyV:

; 87   : 		}
; 88   : 		else
; 89   : 			return false;

	cmp	DWORD PTR _realName$133999[esp+120], 16	; 00000010H
	jb	SHORT $LN156@updateKeyV
	mov	ecx, DWORD PTR _realName$133999[esp+100]
	push	ecx
$LN169@updateKeyV:
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN156@updateKeyV:
	xor	al, al
$LN8@updateKeyV:

; 90   : 	}
; 91   : }

	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	0
__unwindfunclet$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z$0:
	lea	ecx, DWORD PTR _realName$133999[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z$1:
	lea	ecx, DWORD PTR _lookupValue$134009[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-80]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z
	jmp	___CxxFrameHandler3
?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z ENDP ; updateKeyValue
PUBLIC	?loadSettings@Settings@DRAMsimII@@QAE_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; DRAMsimII::Settings::loadSettings
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_buffer$ = -68						; size = 4
_doc$ = -64						; size = 4
_len$ = -60						; size = 4
$T668016 = -56						; size = 28
$T668012 = -56						; size = 28
$T668011 = -56						; size = 28
$T668010 = -56						; size = 28
$T668009 = -56						; size = 28
$T668008 = -56						; size = 28
$T668007 = -56						; size = 28
$T668006 = -56						; size = 28
$T668005 = -56						; size = 28
$T668004 = -56						; size = 28
$T668003 = -56						; size = 28
$T668002 = -56						; size = 28
$T668001 = -56						; size = 28
$T668000 = -56						; size = 28
$T667999 = -56						; size = 28
$T667998 = -56						; size = 28
$T667997 = -56						; size = 28
$T667996 = -56						; size = 28
$T667995 = -56						; size = 28
$T667994 = -56						; size = 28
$T667993 = -56						; size = 28
$T667992 = -56						; size = 28
$T667991 = -56						; size = 28
$T667990 = -56						; size = 28
$T667989 = -56						; size = 28
$T667988 = -56						; size = 28
$T667987 = -56						; size = 28
$T667986 = -56						; size = 28
$T667985 = -56						; size = 28
$T667984 = -56						; size = 28
$T667983 = -56						; size = 28
$T667982 = -56						; size = 28
$T667981 = -56						; size = 28
$T667980 = -56						; size = 28
$T667979 = -56						; size = 28
$T667978 = -56						; size = 28
$T667977 = -56						; size = 28
$T667976 = -56						; size = 28
$T667975 = -56						; size = 28
$T667974 = -56						; size = 28
$T667973 = -56						; size = 28
$T667972 = -56						; size = 28
$T667971 = -56						; size = 28
$T667970 = -56						; size = 28
$T667969 = -56						; size = 28
$T667968 = -56						; size = 28
$T667967 = -56						; size = 28
$T667966 = -56						; size = 28
$T667961 = -56						; size = 28
$T667960 = -56						; size = 28
$T667959 = -56						; size = 28
$T667958 = -56						; size = 28
$T667957 = -56						; size = 28
$T667956 = -56						; size = 28
$T667955 = -56						; size = 28
$T667954 = -56						; size = 28
$T667953 = -56						; size = 28
$T667952 = -56						; size = 28
$T667951 = -56						; size = 28
$T667950 = -56						; size = 28
$T667947 = -56						; size = 28
$T667946 = -56						; size = 28
$T667945 = -56						; size = 28
$T667944 = -56						; size = 28
$T667943 = -56						; size = 28
$T667942 = -56						; size = 28
$T667941 = -56						; size = 28
$T667940 = -56						; size = 28
$T667939 = -56						; size = 28
$T667938 = -56						; size = 28
$T667937 = -56						; size = 28
$T667936 = -56						; size = 28
$T668019 = -28						; size = 28
$T668018 = -28						; size = 28
$T668017 = -28						; size = 28
$T668015 = -28						; size = 28
$T668014 = -28						; size = 28
$T668013 = -28						; size = 28
_this$ = 8						; size = 4
?loadSettings@Settings@DRAMsimII@@QAE_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; DRAMsimII::Settings::loadSettings
; _settingsList$ = ecx

; 113  : {

	sub	esp, 68					; 00000044H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 114  : 	// first update the current settings with the settings list passed in
; 115  : 	if (settingsList.size() > 0)

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	edi
	je	$LN3@loadSettin

; 116  : 	{
; 117  : 		if (settingsList.size() % 2 != 0)

	test	al, 1
	je	SHORT $LN6@loadSettin

; 118  : 		{
; 119  : 			cerr << "Invalid memory override format, should be {<parameter name> <value>}+" << endl;

	push	OFFSET ??_C@_0EG@LMCFMIEN@Invalid?5memory?5override?5format?0?5@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	edi, eax
	push	10					; 0000000aH
	mov	ecx, edi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, edi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 120  : 			cerr << settingsList.size() << endl;

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 121  : 			exit(-14);

	push	-14					; fffffff2H
	call	_exit
$LN2656@loadSettin:
$LN6@loadSettin:

; 122  : 		}
; 123  : 
; 124  : 		for (vector<string>::size_type i = 0; i < settingsList.size(); i += 2)

	xor	ebx, ebx
	test	eax, eax
	jbe	$LN3@loadSettin
	xor	edi, edi
	npad	7
$LL2653@loadSettin:

; 125  : 		{
; 126  : 			if (!setKeyValue(settingsList[i], settingsList[i+1]) )

	lea	ecx, DWORD PTR [ebx+1]
	cmp	ecx, eax
	jb	SHORT $LN110@loadSettin
	call	__invalid_parameter_noinfo
$LN110@loadSettin:
	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, eax
	lea	ebp, DWORD PTR [eax+edi+28]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	ebx, eax
	jb	SHORT $LN115@loadSettin
	call	__invalid_parameter_noinfo
$LN115@loadSettin:
	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR _this$[esp+80]
	push	ebp
	add	eax, edi
	push	eax
	push	ecx
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; DRAMsimII::Settings::setKeyValue

; 127  : 				cerr << "warn: Unrecognized key/value pair (" << settingsList[i] << "," << settingsList[i+1] << ")" << endl;

	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	test	al, al
	mov	eax, -1840700269			; 92492493H
	jne	$LN2@loadSettin
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	lea	eax, DWORD PTR [ebx+1]
	cmp	eax, ecx
	jb	SHORT $LN120@loadSettin
	call	__invalid_parameter_noinfo
$LN120@loadSettin:
	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, eax
	lea	ebp, DWORD PTR [eax+edi+28]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	ebx, eax
	jb	SHORT $LN125@loadSettin
	call	__invalid_parameter_noinfo
$LN125@loadSettin:
	mov	eax, DWORD PTR [esi+12]
	push	OFFSET ??_C@_01PKGAHCOL@?$CJ?$AA@
	push	ebp
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	add	eax, edi
	push	eax
	push	OFFSET ??_C@_0CE@HNIHGFH@warn?3?5Unrecognized?5key?1value?5pai@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 128  : 			else

	jmp	SHORT $LN2655@loadSettin
$LN2@loadSettin:

; 129  : 				cerr << "note: setting " << settingsList[i] << "=" << settingsList[i+1] << endl;

	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	lea	eax, DWORD PTR [ebx+1]
	cmp	eax, ecx
	jb	SHORT $LN134@loadSettin
	call	__invalid_parameter_noinfo
$LN134@loadSettin:
	mov	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, eax
	lea	ebp, DWORD PTR [eax+edi+28]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	ebx, eax
	jb	SHORT $LN139@loadSettin
	call	__invalid_parameter_noinfo
$LN139@loadSettin:
	mov	eax, DWORD PTR [esi+12]
	push	ebp
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	add	eax, edi
	push	eax
	push	OFFSET ??_C@_0P@FMHKABDI@note?3?5setting?5?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
$LN2655@loadSettin:
	add	esp, 8
	mov	ebp, eax
	push	10					; 0000000aH
	mov	ecx, ebp
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, ebp
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
	mov	ecx, DWORD PTR [esi+16]
	sub	ecx, DWORD PTR [esi+12]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	ebx, 2
	add	eax, edx
	add	edi, 56					; 00000038H
	cmp	ebx, eax
	jb	$LL2653@loadSettin
$LN3@loadSettin:

; 130  : 		}
; 131  : 	}
; 132  : 
; 133  : 	// then generate a valid xml document of the existing settings and store these as a string
; 134  : 	xmlDocPtr doc = xmlNewDoc(BAD_CAST "1.0");

	push	OFFSET ??_C@_03HLLJOCDO@1?40?$AA@
	call	_xmlNewDoc
	mov	esi, eax

; 135  : 	xmlNodePtr rootNode = xmlNewNode(NULL, BAD_CAST "dramspec");

	push	OFFSET ??_C@_08LKCGPNON@dramspec?$AA@
	push	0
	mov	DWORD PTR _doc$[esp+96], esi
	call	_xmlNewNode
	mov	ebx, eax

; 136  : 	xmlDocSetRootElement(doc,rootNode);

	push	ebx
	push	esi
	call	_xmlDocSetRootElement

; 137  : 	xmlNewProp(rootNode, BAD_CAST "type", BAD_CAST "ddr2");

	push	OFFSET ??_C@_04FLCOFBHE@ddr2?$AA@
	push	OFFSET ??_C@_04GPMDFGEJ@type?$AA@
	push	ebx
	call	_xmlNewProp

; 138  : 	xmlNodePtr node = NULL;
; 139  : 
; 140  : 	//xmlDtdPtr dtd = 
; 141  : 		xmlCreateIntSubset(doc, BAD_CAST "dramspec", NULL, BAD_CAST "dramspec.dtd");

	push	OFFSET ??_C@_0N@OJLPDPMO@dramspec?4dtd?$AA@
	push	0
	push	OFFSET ??_C@_08LKCGPNON@dramspec?$AA@
	push	esi
	call	_xmlCreateIntSubset

; 142  : 
; 143  : 	// create the setup parameter section
; 144  : 	node = xmlNewChild(rootNode, NULL, BAD_CAST "setup", NULL);

	push	0
	push	OFFSET ??_C@_05LABDNII@setup?$AA@
	push	0
	push	ebx
	call	_xmlNewChild

; 145  : 	xmlNewChild(node, NULL, BAD_CAST "datarate", (const xmlChar *)lexical_cast<string>(dataRate).c_str());

	mov	ebp, DWORD PTR _this$[esp+144]
	add	esp, 64					; 00000040H
	lea	ecx, DWORD PTR [ebp+204]
	lea	edx, DWORD PTR $T667936[esp+84]
	mov	edi, eax
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	mov	esi, 16					; 00000010H
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN152@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN153@loadSettin
$LN152@loadSettin:
	add	eax, 4
$LN153@loadSettin:
	push	eax
	push	OFFSET ??_C@_08JEENMPLM@datarate?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667936[esp+108], esi
	jb	SHORT $LN170@loadSettin
	mov	ecx, DWORD PTR $T667936[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN170@loadSettin:

; 146  : 	xmlNewChild(node, NULL, BAD_CAST "clockGranularity", (const xmlChar *)lexical_cast<string>(clockGranularity).c_str());

	lea	ecx, DWORD PTR [ebp+292]
	lea	edx, DWORD PTR $T667937[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN184@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN185@loadSettin
$LN184@loadSettin:
	add	eax, 4
$LN185@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BB@MMDKPJEM@clockGranularity?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667937[esp+108], esi
	jb	SHORT $LN202@loadSettin
	mov	edx, DWORD PTR $T667937[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN202@loadSettin:

; 147  : 	xmlNewChild(node, NULL, BAD_CAST "channels", (const xmlChar *)lexical_cast<string>(channelCount).c_str());

	lea	ecx, DWORD PTR [ebp+300]
	lea	edx, DWORD PTR $T667938[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN216@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN217@loadSettin
$LN216@loadSettin:
	add	eax, 4
$LN217@loadSettin:
	push	eax
	push	OFFSET ??_C@_08PAMBCCJ@channels?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667938[esp+108], esi
	jb	SHORT $LN234@loadSettin
	mov	eax, DWORD PTR $T667938[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN234@loadSettin:

; 148  : 	xmlNewChild(node, NULL, BAD_CAST "ranks", (const xmlChar *)lexical_cast<string>(rankCount).c_str());

	lea	ecx, DWORD PTR [ebp+304]
	lea	edx, DWORD PTR $T667939[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN248@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN249@loadSettin
$LN248@loadSettin:
	add	eax, 4
$LN249@loadSettin:
	push	eax
	push	OFFSET ??_C@_05DHOMCCKP@ranks?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667939[esp+108], esi
	jb	SHORT $LN266@loadSettin
	mov	ecx, DWORD PTR $T667939[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN266@loadSettin:

; 149  : 	xmlNewChild(node, NULL, BAD_CAST "banks", (const xmlChar *)lexical_cast<string>(bankCount).c_str());

	lea	ecx, DWORD PTR [ebp+308]
	lea	edx, DWORD PTR $T667940[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN280@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN281@loadSettin
$LN280@loadSettin:
	add	eax, 4
$LN281@loadSettin:
	push	eax
	push	OFFSET ??_C@_05DEDKCADE@banks?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667940[esp+108], esi
	jb	SHORT $LN298@loadSettin
	mov	edx, DWORD PTR $T667940[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN298@loadSettin:

; 150  : 	xmlNewChild(node, NULL, BAD_CAST "rows", (const xmlChar *)lexical_cast<string>(rowCount).c_str());

	lea	ecx, DWORD PTR [ebp+240]
	lea	edx, DWORD PTR $T667941[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN312@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN313@loadSettin
$LN312@loadSettin:
	add	eax, 4
$LN313@loadSettin:
	push	eax
	push	OFFSET ??_C@_04IMCGAIPI@rows?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667941[esp+108], esi
	jb	SHORT $LN330@loadSettin
	mov	eax, DWORD PTR $T667941[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN330@loadSettin:

; 151  : 	xmlNewChild(node, NULL, BAD_CAST "columns", (const xmlChar *)lexical_cast<string>(columnCount).c_str());

	lea	ecx, DWORD PTR [ebp+236]
	lea	edx, DWORD PTR $T667942[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN344@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN345@loadSettin
$LN344@loadSettin:
	add	eax, 4
$LN345@loadSettin:
	push	eax
	push	OFFSET ??_C@_07HIFEPIJN@columns?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667942[esp+108], esi
	jb	SHORT $LN362@loadSettin
	mov	ecx, DWORD PTR $T667942[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN362@loadSettin:

; 152  : 	xmlNewChild(node, NULL, BAD_CAST "channelWidth", (const xmlChar *)lexical_cast<string>(channelWidth).c_str());

	lea	ecx, DWORD PTR [ebp+232]
	lea	edx, DWORD PTR $T667943[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN376@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN377@loadSettin
$LN376@loadSettin:
	add	eax, 4
$LN377@loadSettin:
	push	eax
	push	OFFSET ??_C@_0N@LMBFNGFM@channelWidth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667943[esp+108], esi
	jb	SHORT $LN394@loadSettin
	mov	edx, DWORD PTR $T667943[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN394@loadSettin:

; 153  : 	xmlNewChild(node, NULL, BAD_CAST "physicalAddressMappingPolicy", (const xmlChar *)lexical_cast<string>(addressMappingScheme).c_str());

	lea	eax, DWORD PTR [ebp+284]
	lea	ecx, DWORD PTR $T667944[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4AddressMappingScheme@Address@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4AddressMappingScheme@Address@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::Address::AddressMappingScheme>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN408@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN409@loadSettin
$LN408@loadSettin:
	add	eax, 4
$LN409@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BN@IIBFBIJJ@physicalAddressMappingPolicy?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667944[esp+108], esi
	jb	SHORT $LN426@loadSettin
	mov	eax, DWORD PTR $T667944[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN426@loadSettin:

; 154  : 	xmlNewChild(node, NULL, BAD_CAST "rowBufferPolicy", (const xmlChar *)lexical_cast<string>(rowBufferManagementPolicy).c_str());

	lea	eax, DWORD PTR [ebp+280]
	lea	ecx, DWORD PTR $T667945[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RowBufferPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RowBufferPolicy@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RowBufferPolicy>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN440@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN441@loadSettin
$LN440@loadSettin:
	add	eax, 4
$LN441@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BA@FLEANEFO@rowBufferPolicy?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667945[esp+108], esi
	jb	SHORT $LN458@loadSettin
	mov	ecx, DWORD PTR $T667945[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN458@loadSettin:

; 155  : 	xmlNewChild(node, NULL, BAD_CAST "rowSize", (const xmlChar *)lexical_cast<string>(rowSize).c_str());

	lea	ecx, DWORD PTR [ebp+228]
	lea	edx, DWORD PTR $T667946[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN472@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN473@loadSettin
$LN472@loadSettin:
	add	eax, 4
$LN473@loadSettin:
	push	eax
	push	OFFSET ??_C@_07GHAAMIPI@rowSize?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667946[esp+108], esi
	jb	SHORT $LN490@loadSettin
	mov	edx, DWORD PTR $T667946[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN490@loadSettin:

; 156  : 	xmlNewChild(node, NULL, BAD_CAST "columnSize", (const xmlChar *)lexical_cast<string>(columnSize).c_str());

	lea	ecx, DWORD PTR [ebp+224]
	lea	edx, DWORD PTR $T667947[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN504@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN505@loadSettin
$LN504@loadSettin:
	add	eax, 4
$LN505@loadSettin:
	push	eax
	push	OFFSET ??_C@_0L@IDKLDAGK@columnSize?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667947[esp+108], esi
	jb	SHORT $LN522@loadSettin
	mov	eax, DWORD PTR $T667947[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN522@loadSettin:

; 157  : 	xmlNewChild(node, NULL, BAD_CAST "postedCAS", (const xmlChar *)(postedCAS ? "true" : "false"));

	cmp	BYTE PTR [ebp+288], 0
	mov	eax, OFFSET ??_C@_04LOAJBDKD@true?$AA@
	jne	SHORT $LN11@loadSettin
	mov	eax, OFFSET ??_C@_05LAPONLG@false?$AA@
$LN11@loadSettin:
	push	eax
	push	OFFSET ??_C@_09OPKGPPI@postedCAS?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H

; 158  : 	xmlNewChild(node, NULL, BAD_CAST "autoRefreshPolicy", (const xmlChar *)lexical_cast<string>(refreshPolicy).c_str());

	lea	eax, DWORD PTR [ebp+196]
	lea	ecx, DWORD PTR $T667950[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4RefreshPolicy@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4RefreshPolicy@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::RefreshPolicy>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN536@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN537@loadSettin
$LN536@loadSettin:
	add	eax, 4
$LN537@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BC@CAAHBLKK@autoRefreshPolicy?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667950[esp+108], esi
	jb	SHORT $LN554@loadSettin
	mov	ecx, DWORD PTR $T667950[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN554@loadSettin:

; 159  : 	xmlNewChild(node, NULL, BAD_CAST "commandOrderingAlgorithm", (const xmlChar *)lexical_cast<string>(commandOrderingAlgorithm).c_str());

	lea	eax, DWORD PTR [ebp+208]
	lea	ecx, DWORD PTR $T667951[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommandOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4CommandOrderingAlgorithm@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::CommandOrderingAlgorithm>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN568@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN569@loadSettin
$LN568@loadSettin:
	add	eax, 4
$LN569@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BJ@OBCNIGPG@commandOrderingAlgorithm?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667951[esp+108], esi
	jb	SHORT $LN586@loadSettin
	mov	edx, DWORD PTR $T667951[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN586@loadSettin:

; 160  : 	xmlNewChild(node, NULL, BAD_CAST "transactionOrderingAlgorithm", (const xmlChar *)lexical_cast<string>(transactionOrderingAlgorithm).c_str());

	lea	eax, DWORD PTR [ebp+212]
	lea	ecx, DWORD PTR $T667952[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4TransactionOrderingAlgorithm@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4TransactionOrderingAlgorithm@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::TransactionOrderingAlgorithm>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN600@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN601@loadSettin
$LN600@loadSettin:
	add	eax, 4
$LN601@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BN@INMDNHGF@transactionOrderingAlgorithm?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667952[esp+108], esi
	jb	SHORT $LN618@loadSettin
	mov	eax, DWORD PTR $T667952[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN618@loadSettin:

; 161  : 	xmlNewChild(node, NULL, BAD_CAST "perBankQueueDepth", (const xmlChar *)lexical_cast<string>(perBankQueueDepth).c_str());

	lea	ecx, DWORD PTR [ebp+220]
	lea	edx, DWORD PTR $T667953[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN632@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN633@loadSettin
$LN632@loadSettin:
	add	eax, 4
$LN633@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BC@ICBJHGME@perBankQueueDepth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667953[esp+108], esi
	jb	SHORT $LN650@loadSettin
	mov	ecx, DWORD PTR $T667953[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN650@loadSettin:

; 162  : 	xmlNewChild(node, NULL, BAD_CAST "systemConfigurationType", (const xmlChar *)lexical_cast<string>(systemType).c_str());

	lea	eax, DWORD PTR [ebp+216]
	lea	ecx, DWORD PTR $T667954[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4SystemConfigurationType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4SystemConfigurationType@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::SystemConfigurationType>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN664@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN665@loadSettin
$LN664@loadSettin:
	add	eax, 4
$LN665@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BI@NNEDCILK@systemConfigurationType?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667954[esp+108], esi
	jb	SHORT $LN682@loadSettin
	mov	edx, DWORD PTR $T667954[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN682@loadSettin:

; 163  : 	xmlNewChild(node, NULL, BAD_CAST "cacheLineSize", (const xmlChar *)lexical_cast<string>(cacheLineSize).c_str());

	lea	ecx, DWORD PTR [ebp+244]
	lea	edx, DWORD PTR $T667955[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN696@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN697@loadSettin
$LN696@loadSettin:
	add	eax, 4
$LN697@loadSettin:
	push	eax
	push	OFFSET ??_C@_0O@IDELLEIE@cacheLineSize?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667955[esp+108], esi
	jb	SHORT $LN714@loadSettin
	mov	eax, DWORD PTR $T667955[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN714@loadSettin:

; 164  : 	xmlNewChild(node, NULL, BAD_CAST "historyQueueDepth", (const xmlChar *)lexical_cast<string>(historyQueueDepth).c_str());

	lea	ecx, DWORD PTR [ebp+248]
	lea	edx, DWORD PTR $T667956[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN728@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN729@loadSettin
$LN728@loadSettin:
	add	eax, 4
$LN729@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BC@GLMDDBPB@historyQueueDepth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667956[esp+108], esi
	jb	SHORT $LN746@loadSettin
	mov	ecx, DWORD PTR $T667956[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN746@loadSettin:

; 165  : 	xmlNewChild(node, NULL, BAD_CAST "completionQueueDepth", (const xmlChar *)lexical_cast<string>(completionQueueDepth).c_str());

	lea	ecx, DWORD PTR [ebp+252]
	lea	edx, DWORD PTR $T667957[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN760@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN761@loadSettin
$LN760@loadSettin:
	add	eax, 4
$LN761@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BF@FBFEJLEB@completionQueueDepth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667957[esp+108], esi
	jb	SHORT $LN778@loadSettin
	mov	edx, DWORD PTR $T667957[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN778@loadSettin:

; 166  : 	xmlNewChild(node, NULL, BAD_CAST "transactionQueueDepth", (const xmlChar *)lexical_cast<string>(transactionQueueDepth).c_str());

	lea	ecx, DWORD PTR [ebp+256]
	lea	edx, DWORD PTR $T667958[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN792@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN793@loadSettin
$LN792@loadSettin:
	add	eax, 4
$LN793@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BG@MKMHMMEH@transactionQueueDepth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667958[esp+108], esi
	jb	SHORT $LN810@loadSettin
	mov	eax, DWORD PTR $T667958[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN810@loadSettin:

; 167  : 	xmlNewChild(node, NULL, BAD_CAST "decodeWindow", (const xmlChar *)lexical_cast<string>(decodeWindow).c_str());

	lea	ecx, DWORD PTR [ebp+276]
	lea	edx, DWORD PTR $T667959[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN824@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN825@loadSettin
$LN824@loadSettin:
	add	eax, 4
$LN825@loadSettin:
	push	eax
	push	OFFSET ??_C@_0N@IGFEIAOB@decodeWindow?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667959[esp+108], esi
	jb	SHORT $LN842@loadSettin
	mov	ecx, DWORD PTR $T667959[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN842@loadSettin:

; 168  : 	xmlNewChild(node, NULL, BAD_CAST "eventQueueDepth", (const xmlChar *)lexical_cast<string>(eventQueueDepth).c_str());

	lea	ecx, DWORD PTR [ebp+260]
	lea	edx, DWORD PTR $T667960[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN856@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN857@loadSettin
$LN856@loadSettin:
	add	eax, 4
$LN857@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BA@HNLPCCNJ@eventQueueDepth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667960[esp+108], esi
	jb	SHORT $LN874@loadSettin
	mov	edx, DWORD PTR $T667960[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN874@loadSettin:

; 169  : 	xmlNewChild(node, NULL, BAD_CAST "refreshQueueDepth", (const xmlChar *)lexical_cast<string>(refreshQueueDepth).c_str());

	lea	ecx, DWORD PTR [ebp+264]
	lea	edx, DWORD PTR $T667961[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN888@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN889@loadSettin
$LN888@loadSettin:
	add	eax, 4
$LN889@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BC@OEGFFFMA@refreshQueueDepth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667961[esp+108], esi
	jb	SHORT $LN906@loadSettin
	mov	eax, DWORD PTR $T667961[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN906@loadSettin:

; 170  : 	xmlNewChild(node, NULL, BAD_CAST "readWriteGrouping", (const xmlChar *)(readWriteGrouping ? "true" : "false"));

	cmp	BYTE PTR [ebp+289], 0
	mov	eax, OFFSET ??_C@_04LOAJBDKD@true?$AA@
	jne	SHORT $LN13@loadSettin
	mov	eax, OFFSET ??_C@_05LAPONLG@false?$AA@
$LN13@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BC@HNEGEDHC@readWriteGrouping?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H

; 171  : 	xmlNewChild(node, NULL, BAD_CAST "autoPrecharge", (const xmlChar *)(autoPrecharge ? "true" : "false"));

	cmp	BYTE PTR [ebp+290], 0
	mov	eax, OFFSET ??_C@_04LOAJBDKD@true?$AA@
	jne	SHORT $LN15@loadSettin
	mov	eax, OFFSET ??_C@_05LAPONLG@false?$AA@
$LN15@loadSettin:
	push	eax
	push	OFFSET ??_C@_0O@ONOIJDKD@autoPrecharge?$AA@
	push	0
	push	edi
	call	_xmlNewChild

; 172  : 
; 173  : 	// generate the cache settings section
; 174  : 	node = xmlNewChild(node, NULL, BAD_CAST "cache", NULL);

	push	0
	push	OFFSET ??_C@_05BDNCCAMC@cache?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 32					; 00000020H

; 175  : 	xmlNewChild(node, NULL, BAD_CAST "associativity", (const xmlChar *)lexical_cast<string>(associativity).c_str());

	lea	ecx, DWORD PTR [ebp+476]
	lea	edx, DWORD PTR $T667966[esp+84]
	mov	edi, eax
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN920@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN921@loadSettin
$LN920@loadSettin:
	add	eax, 4
$LN921@loadSettin:
	push	eax
	push	OFFSET ??_C@_0O@NEGEOEAB@associativity?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667966[esp+108], esi
	jb	SHORT $LN938@loadSettin
	mov	ecx, DWORD PTR $T667966[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN938@loadSettin:

; 176  : 	xmlNewChild(node, NULL, BAD_CAST "cacheSize", (const xmlChar *)lexical_cast<string>(cacheSize).c_str());

	lea	ecx, DWORD PTR [ebp+480]
	lea	edx, DWORD PTR $T667967[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN952@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN953@loadSettin
$LN952@loadSettin:
	add	eax, 4
$LN953@loadSettin:
	push	eax
	push	OFFSET ??_C@_09KLMIPJNI@cacheSize?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667967[esp+108], esi
	jb	SHORT $LN970@loadSettin
	mov	edx, DWORD PTR $T667967[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN970@loadSettin:

; 177  : 	xmlNewChild(node, NULL, BAD_CAST "blockSize", (const xmlChar *)lexical_cast<string>(blockSize).c_str());

	lea	ecx, DWORD PTR [ebp+484]
	lea	edx, DWORD PTR $T667968[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN984@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN985@loadSettin
$LN984@loadSettin:
	add	eax, 4
$LN985@loadSettin:
	push	eax
	push	OFFSET ??_C@_09NKOHFFHE@blockSize?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667968[esp+108], esi
	jb	SHORT $LN1002@loadSettin
	mov	eax, DWORD PTR $T667968[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1002@loadSettin:

; 178  : 	xmlNewChild(node, NULL, BAD_CAST "hitLatency", (const xmlChar *)lexical_cast<string>(hitLatency).c_str());

	lea	ecx, DWORD PTR [ebp+488]
	lea	edx, DWORD PTR $T667969[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1016@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1017@loadSettin
$LN1016@loadSettin:
	add	eax, 4
$LN1017@loadSettin:
	push	eax
	push	OFFSET ??_C@_0L@DNFJEOC@hitLatency?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667969[esp+108], esi
	jb	SHORT $LN1034@loadSettin
	mov	ecx, DWORD PTR $T667969[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1034@loadSettin:

; 179  : 
; 180  : 
; 181  : 
; 182  : 	// create the timing parameter section
; 183  : 	node = xmlNewChild(rootNode, NULL, BAD_CAST "timing", NULL);

	push	0
	push	OFFSET ??_C@_06BKDGJKBE@timing?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H

; 184  : 	xmlNewChild(node, NULL, BAD_CAST "tBufferDelay", (const xmlChar *)lexical_cast<string>(tBufferDelay).c_str());

	lea	ecx, DWORD PTR [ebp+392]
	lea	edx, DWORD PTR $T667970[esp+84]
	mov	edi, eax
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1048@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1049@loadSettin
$LN1048@loadSettin:
	add	eax, 4
$LN1049@loadSettin:
	push	eax
	push	OFFSET ??_C@_0N@MKJEAACB@tBufferDelay?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667970[esp+108], esi
	jb	SHORT $LN1066@loadSettin
	mov	edx, DWORD PTR $T667970[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1066@loadSettin:

; 185  : 	xmlNewChild(node, NULL, BAD_CAST "tBurst", (const xmlChar *)lexical_cast<string>(tBurst).c_str());

	lea	ecx, DWORD PTR [ebp+328]
	lea	edx, DWORD PTR $T667971[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1080@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1081@loadSettin
$LN1080@loadSettin:
	add	eax, 4
$LN1081@loadSettin:
	push	eax
	push	OFFSET ??_C@_06NFMEBCIN@tBurst?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667971[esp+108], esi
	jb	SHORT $LN1098@loadSettin
	mov	eax, DWORD PTR $T667971[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1098@loadSettin:

; 186  : 	xmlNewChild(node, NULL, BAD_CAST "tCAS", (const xmlChar *)lexical_cast<string>(tCAS).c_str());

	lea	ecx, DWORD PTR [ebp+332]
	lea	edx, DWORD PTR $T667972[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1112@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1113@loadSettin
$LN1112@loadSettin:
	add	eax, 4
$LN1113@loadSettin:
	push	eax
	push	OFFSET ??_C@_04FMOAFAFO@tCAS?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667972[esp+108], esi
	jb	SHORT $LN1130@loadSettin
	mov	ecx, DWORD PTR $T667972[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1130@loadSettin:

; 187  : 	xmlNewChild(node, NULL, BAD_CAST "tCMD", (const xmlChar *)lexical_cast<string>(tCMD).c_str());

	lea	ecx, DWORD PTR [ebp+384]
	lea	edx, DWORD PTR $T667973[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1144@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1145@loadSettin
$LN1144@loadSettin:
	add	eax, 4
$LN1145@loadSettin:
	push	eax
	push	OFFSET ??_C@_04FAHJCNKM@tCMD?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667973[esp+108], esi
	jb	SHORT $LN1162@loadSettin
	mov	edx, DWORD PTR $T667973[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1162@loadSettin:

; 188  : 	xmlNewChild(node, NULL, BAD_CAST "tCWD", (const xmlChar *)lexical_cast<string>(tCWD).c_str());

	lea	ecx, DWORD PTR [ebp+336]
	lea	edx, DWORD PTR $T667974[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1176@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1177@loadSettin
$LN1176@loadSettin:
	add	eax, 4
$LN1177@loadSettin:
	push	eax
	push	OFFSET ??_C@_04EBMIALAK@tCWD?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667974[esp+108], esi
	jb	SHORT $LN1194@loadSettin
	mov	eax, DWORD PTR $T667974[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1194@loadSettin:

; 189  : 	xmlNewChild(node, NULL, BAD_CAST "tFAW", (const xmlChar *)lexical_cast<string>(tFAW).c_str());

	lea	ecx, DWORD PTR [ebp+340]
	lea	edx, DWORD PTR $T667975[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1208@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1209@loadSettin
$LN1208@loadSettin:
	add	eax, 4
$LN1209@loadSettin:
	push	eax
	push	OFFSET ??_C@_04PFCGFGI@tFAW?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667975[esp+108], esi
	jb	SHORT $LN1226@loadSettin
	mov	ecx, DWORD PTR $T667975[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1226@loadSettin:

; 190  : 	xmlNewChild(node, NULL, BAD_CAST "tRAS", (const xmlChar *)lexical_cast<string>(tRAS).c_str());

	lea	ecx, DWORD PTR [ebp+344]
	lea	edx, DWORD PTR $T667976[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1240@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1241@loadSettin
$LN1240@loadSettin:
	add	eax, 4
$LN1241@loadSettin:
	push	eax
	push	OFFSET ??_C@_04LEEFGAKE@tRAS?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667976[esp+108], esi
	jb	SHORT $LN1258@loadSettin
	mov	edx, DWORD PTR $T667976[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1258@loadSettin:

; 191  : 	xmlNewChild(node, NULL, BAD_CAST "tRC", (const xmlChar *)lexical_cast<string>(tRC).c_str());

	lea	ecx, DWORD PTR [ebp+348]
	lea	edx, DWORD PTR $T667977[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1272@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1273@loadSettin
$LN1272@loadSettin:
	add	eax, 4
$LN1273@loadSettin:
	push	eax
	push	OFFSET ??_C@_03IOIKPBDA@tRC?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667977[esp+108], esi
	jb	SHORT $LN1290@loadSettin
	mov	eax, DWORD PTR $T667977[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1290@loadSettin:

; 192  : 	xmlNewChild(node, NULL, BAD_CAST "tRCD", (const xmlChar *)lexical_cast<string>(tRCD).c_str());

	lea	ecx, DWORD PTR [ebp+352]
	lea	edx, DWORD PTR $T667978[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1304@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1305@loadSettin
$LN1304@loadSettin:
	add	eax, 4
$LN1305@loadSettin:
	push	eax
	push	OFFSET ??_C@_04LCECDAFM@tRCD?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667978[esp+108], esi
	jb	SHORT $LN1322@loadSettin
	mov	ecx, DWORD PTR $T667978[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1322@loadSettin:

; 193  : 	xmlNewChild(node, NULL, BAD_CAST "tRFC", (const xmlChar *)lexical_cast<string>(tRFC).c_str());

	lea	ecx, DWORD PTR [ebp+360]
	lea	edx, DWORD PTR $T667979[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1336@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1337@loadSettin
$LN1336@loadSettin:
	add	eax, 4
$LN1337@loadSettin:
	push	eax
	push	OFFSET ??_C@_04PLMIGEHA@tRFC?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667979[esp+108], esi
	jb	SHORT $LN1354@loadSettin
	mov	edx, DWORD PTR $T667979[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1354@loadSettin:

; 194  : 	xmlNewChild(node, NULL, BAD_CAST "tRRD", (const xmlChar *)lexical_cast<string>(tRRD).c_str());

	lea	ecx, DWORD PTR [ebp+368]
	lea	edx, DWORD PTR $T667980[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1368@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1369@loadSettin
$LN1368@loadSettin:
	add	eax, 4
$LN1369@loadSettin:
	push	eax
	push	OFFSET ??_C@_04KPKGPJBL@tRRD?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667980[esp+108], esi
	jb	SHORT $LN1386@loadSettin
	mov	eax, DWORD PTR $T667980[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1386@loadSettin:

; 195  : 	xmlNewChild(node, NULL, BAD_CAST "tRP", (const xmlChar *)lexical_cast<string>(tRP).c_str());

	lea	ecx, DWORD PTR [ebp+364]
	lea	edx, DWORD PTR $T667981[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1400@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1401@loadSettin
$LN1400@loadSettin:
	add	eax, 4
$LN1401@loadSettin:
	push	eax
	push	OFFSET ??_C@_03OPGFLAKC@tRP?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667981[esp+108], esi
	jb	SHORT $LN1418@loadSettin
	mov	ecx, DWORD PTR $T667981[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1418@loadSettin:

; 196  : 	xmlNewChild(node, NULL, BAD_CAST "tRTP", (const xmlChar *)lexical_cast<string>(tRTP).c_str());

	lea	ecx, DWORD PTR [ebp+372]
	lea	edx, DWORD PTR $T667982[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1432@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1433@loadSettin
$LN1432@loadSettin:
	add	eax, 4
$LN1433@loadSettin:
	push	eax
	push	OFFSET ??_C@_04IFIFFCPM@tRTP?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667982[esp+108], esi
	jb	SHORT $LN1450@loadSettin
	mov	edx, DWORD PTR $T667982[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1450@loadSettin:

; 197  : 	xmlNewChild(node, NULL, BAD_CAST "tRTRS", (const xmlChar *)lexical_cast<string>(tRTRS).c_str());

	lea	ecx, DWORD PTR [ebp+320]
	lea	edx, DWORD PTR $T667983[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1464@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1465@loadSettin
$LN1464@loadSettin:
	add	eax, 4
$LN1465@loadSettin:
	push	eax
	push	OFFSET ??_C@_05CGJMOBJM@tRTRS?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667983[esp+108], esi
	jb	SHORT $LN1482@loadSettin
	mov	eax, DWORD PTR $T667983[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1482@loadSettin:

; 198  : 	xmlNewChild(node, NULL, BAD_CAST "tWR", (const xmlChar *)lexical_cast<string>(tWR).c_str());

	lea	ecx, DWORD PTR [ebp+376]
	lea	edx, DWORD PTR $T667984[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1496@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1497@loadSettin
$LN1496@loadSettin:
	add	eax, 4
$LN1497@loadSettin:
	push	eax
	push	OFFSET ??_C@_03NLJIBAML@tWR?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667984[esp+108], esi
	jb	SHORT $LN1514@loadSettin
	mov	ecx, DWORD PTR $T667984[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1514@loadSettin:

; 199  : 	xmlNewChild(node, NULL, BAD_CAST "tWTR", (const xmlChar *)lexical_cast<string>(tWTR).c_str());

	lea	ecx, DWORD PTR [ebp+380]
	lea	edx, DWORD PTR $T667985[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1528@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1529@loadSettin
$LN1528@loadSettin:
	add	eax, 4
$LN1529@loadSettin:
	push	eax
	push	OFFSET ??_C@_04IAGNMAEM@tWTR?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667985[esp+108], esi
	jb	SHORT $LN1546@loadSettin
	mov	edx, DWORD PTR $T667985[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1546@loadSettin:

; 200  : 	xmlNewChild(node, NULL, BAD_CAST "tAL", (const xmlChar *)lexical_cast<string>(tAL).c_str());

	lea	ecx, DWORD PTR [ebp+324]
	lea	edx, DWORD PTR $T667986[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1560@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1561@loadSettin
$LN1560@loadSettin:
	add	eax, 4
$LN1561@loadSettin:
	push	eax
	push	OFFSET ??_C@_03BHHCPANG@tAL?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667986[esp+108], esi
	jb	SHORT $LN1578@loadSettin
	mov	eax, DWORD PTR $T667986[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1578@loadSettin:

; 201  : 	xmlNewChild(node, NULL, BAD_CAST "refreshTime", (const xmlChar *)lexical_cast<string>(refreshTime).c_str());

	lea	ecx, DWORD PTR [ebp+268]
	lea	edx, DWORD PTR $T667987[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1592@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1593@loadSettin
$LN1592@loadSettin:
	add	eax, 4
$LN1593@loadSettin:
	push	eax
	push	OFFSET ??_C@_0M@BNGAHMKI@refreshTime?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667987[esp+108], esi
	jb	SHORT $LN1610@loadSettin
	mov	ecx, DWORD PTR $T667987[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1610@loadSettin:

; 202  : 	xmlNewChild(node, NULL, BAD_CAST "tREFI", (const xmlChar *)lexical_cast<string>(tREFI).c_str());

	lea	ecx, DWORD PTR [ebp+356]
	lea	edx, DWORD PTR $T667988[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1624@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1625@loadSettin
$LN1624@loadSettin:
	add	eax, 4
$LN1625@loadSettin:
	push	eax
	push	OFFSET ??_C@_05GFDLCABB@tREFI?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667988[esp+108], esi
	jb	SHORT $LN1642@loadSettin
	mov	edx, DWORD PTR $T667988[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1642@loadSettin:

; 203  : 	xmlNewChild(node, NULL, BAD_CAST "seniorityAgeLimit", (const xmlChar *)lexical_cast<string>(seniorityAgeLimit).c_str());

	lea	ecx, DWORD PTR [ebp+272]
	lea	edx, DWORD PTR $T667989[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1656@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1657@loadSettin
$LN1656@loadSettin:
	add	eax, 4
$LN1657@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BC@DJLKBBM@seniorityAgeLimit?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667989[esp+108], esi
	jb	SHORT $LN1674@loadSettin
	mov	eax, DWORD PTR $T667989[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1674@loadSettin:

; 204  : 
; 205  : 
; 206  : 	// create the power parameter section
; 207  : 	node = xmlNewChild(rootNode, NULL, BAD_CAST "power", NULL);

	push	0
	push	OFFSET ??_C@_05PLIADJJL@power?$AA@
	push	0
	push	ebx
	call	_xmlNewChild

; 208  : 	xmlNewChild(node, NULL, BAD_CAST "PdqRD", (const xmlChar *)lexical_cast<string>(PdqRD).c_str());

	lea	ecx, DWORD PTR [ebp+400]
	push	ecx
	lea	ecx, DWORD PTR $T667990[esp+104]
	mov	edi, eax
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 20					; 00000014H
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1688@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1689@loadSettin
$LN1688@loadSettin:
	add	eax, 4
$LN1689@loadSettin:
	push	eax
	push	OFFSET ??_C@_05GKPDAAA@PdqRD?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667990[esp+108], esi
	jb	SHORT $LN1706@loadSettin
	mov	edx, DWORD PTR $T667990[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1706@loadSettin:

; 209  : 	xmlNewChild(node, NULL, BAD_CAST "PdqWR", (const xmlChar *)lexical_cast<string>(PdqWR).c_str());

	lea	eax, DWORD PTR [ebp+404]
	push	eax
	lea	ecx, DWORD PTR $T667991[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1720@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1721@loadSettin
$LN1720@loadSettin:
	add	eax, 4
$LN1721@loadSettin:
	push	eax
	push	OFFSET ??_C@_05BMPMEHDM@PdqWR?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667991[esp+108], esi
	jb	SHORT $LN1738@loadSettin
	mov	ecx, DWORD PTR $T667991[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1738@loadSettin:

; 210  : 	xmlNewChild(node, NULL, BAD_CAST "PdqRDoth", (const xmlChar *)lexical_cast<string>(PdqRDoth).c_str());

	lea	edx, DWORD PTR [ebp+408]
	push	edx
	lea	ecx, DWORD PTR $T667992[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1752@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1753@loadSettin
$LN1752@loadSettin:
	add	eax, 4
$LN1753@loadSettin:
	push	eax
	push	OFFSET ??_C@_08ELGEOPK@PdqRDoth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667992[esp+108], esi
	jb	SHORT $LN1770@loadSettin
	mov	eax, DWORD PTR $T667992[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1770@loadSettin:

; 211  : 	xmlNewChild(node, NULL, BAD_CAST "PdqWRoth", (const xmlChar *)lexical_cast<string>(PdqWRoth).c_str());

	lea	ecx, DWORD PTR [ebp+412]
	push	ecx
	lea	ecx, DWORD PTR $T667993[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1784@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1785@loadSettin
$LN1784@loadSettin:
	add	eax, 4
$LN1785@loadSettin:
	push	eax
	push	OFFSET ??_C@_08LLNLLNGL@PdqWRoth?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667993[esp+108], esi
	jb	SHORT $LN1802@loadSettin
	mov	edx, DWORD PTR $T667993[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1802@loadSettin:

; 212  : 	xmlNewChild(node, NULL, BAD_CAST "DQperDRAM", (const xmlChar *)lexical_cast<string>(DQperDRAM).c_str());

	lea	ecx, DWORD PTR [ebp+416]
	lea	edx, DWORD PTR $T667994[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1816@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1817@loadSettin
$LN1816@loadSettin:
	add	eax, 4
$LN1817@loadSettin:
	push	eax
	push	OFFSET ??_C@_09CFMBNEGB@DQperDRAM?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667994[esp+108], esi
	jb	SHORT $LN1834@loadSettin
	mov	eax, DWORD PTR $T667994[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1834@loadSettin:

; 213  : 	xmlNewChild(node, NULL, BAD_CAST "DQSperDRAM", (const xmlChar *)lexical_cast<string>(DQSperDRAM).c_str());

	lea	ecx, DWORD PTR [ebp+420]
	lea	edx, DWORD PTR $T667995[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1848@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1849@loadSettin
$LN1848@loadSettin:
	add	eax, 4
$LN1849@loadSettin:
	push	eax
	push	OFFSET ??_C@_0L@CECMAFLM@DQSperDRAM?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667995[esp+108], esi
	jb	SHORT $LN1866@loadSettin
	mov	ecx, DWORD PTR $T667995[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1866@loadSettin:

; 214  : 	xmlNewChild(node, NULL, BAD_CAST "DMperDRAM", (const xmlChar *)lexical_cast<string>(DMperDRAM).c_str());

	lea	ecx, DWORD PTR [ebp+424]
	lea	edx, DWORD PTR $T667996[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1880@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1881@loadSettin
$LN1880@loadSettin:
	add	eax, 4
$LN1881@loadSettin:
	push	eax
	push	OFFSET ??_C@_09GPDFGFAE@DMperDRAM?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667996[esp+108], esi
	jb	SHORT $LN1898@loadSettin
	mov	edx, DWORD PTR $T667996[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1898@loadSettin:

; 215  : 	xmlNewChild(node, NULL, BAD_CAST "frequencySpec", (const xmlChar *)lexical_cast<string>(frequencySpec).c_str());

	lea	ecx, DWORD PTR [ebp+428]
	lea	edx, DWORD PTR $T667997[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1912@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1913@loadSettin
$LN1912@loadSettin:
	add	eax, 4
$LN1913@loadSettin:
	push	eax
	push	OFFSET ??_C@_0O@EOGIALKE@frequencySpec?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667997[esp+108], esi
	jb	SHORT $LN1930@loadSettin
	mov	eax, DWORD PTR $T667997[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1930@loadSettin:

; 216  : 	xmlNewChild(node, NULL, BAD_CAST "maxVCC", (const xmlChar *)lexical_cast<string>(maxVCC).c_str());

	lea	ecx, DWORD PTR [ebp+432]
	push	ecx
	lea	ecx, DWORD PTR $T667998[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1944@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1945@loadSettin
$LN1944@loadSettin:
	add	eax, 4
$LN1945@loadSettin:
	push	eax
	push	OFFSET ??_C@_06MFBGAFHE@maxVCC?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667998[esp+108], esi
	jb	SHORT $LN1962@loadSettin
	mov	edx, DWORD PTR $T667998[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1962@loadSettin:

; 217  : 	xmlNewChild(node, NULL, BAD_CAST "systemVDD", (const xmlChar *)lexical_cast<string>(VDD).c_str());

	lea	eax, DWORD PTR [ebp+436]
	push	eax
	lea	ecx, DWORD PTR $T667999[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN1976@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN1977@loadSettin
$LN1976@loadSettin:
	add	eax, 4
$LN1977@loadSettin:
	push	eax
	push	OFFSET ??_C@_09FDIIGMKB@systemVDD?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T667999[esp+108], esi
	jb	SHORT $LN1994@loadSettin
	mov	ecx, DWORD PTR $T667999[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1994@loadSettin:

; 218  : 	xmlNewChild(node, NULL, BAD_CAST "IDD0", (const xmlChar *)lexical_cast<string>(IDD0).c_str());

	lea	ecx, DWORD PTR [ebp+440]
	lea	edx, DWORD PTR $T668000[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2008@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2009@loadSettin
$LN2008@loadSettin:
	add	eax, 4
$LN2009@loadSettin:
	push	eax
	push	OFFSET ??_C@_04NAJNOOFP@IDD0?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668000[esp+108], esi
	jb	SHORT $LN2026@loadSettin
	mov	edx, DWORD PTR $T668000[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2026@loadSettin:

; 219  : 	xmlNewChild(node, NULL, BAD_CAST "IDD1", (const xmlChar *)lexical_cast<string>(IDD1).c_str());

	lea	ecx, DWORD PTR [ebp+444]
	lea	edx, DWORD PTR $T668001[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2040@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2041@loadSettin
$LN2040@loadSettin:
	add	eax, 4
$LN2041@loadSettin:
	push	eax
	push	OFFSET ??_C@_04MJIGNPBO@IDD1?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668001[esp+108], esi
	jb	SHORT $LN2058@loadSettin
	mov	eax, DWORD PTR $T668001[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2058@loadSettin:

; 220  : 	xmlNewChild(node, NULL, BAD_CAST "IDD2P", (const xmlChar *)lexical_cast<string>(IDD2P).c_str());

	lea	ecx, DWORD PTR [ebp+448]
	lea	edx, DWORD PTR $T668002[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2072@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2073@loadSettin
$LN2072@loadSettin:
	add	eax, 4
$LN2073@loadSettin:
	push	eax
	push	OFFSET ??_C@_05ECDLFILB@IDD2P?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668002[esp+108], esi
	jb	SHORT $LN2090@loadSettin
	mov	ecx, DWORD PTR $T668002[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2090@loadSettin:

; 221  : 	xmlNewChild(node, NULL, BAD_CAST "IDD2N", (const xmlChar *)lexical_cast<string>(IDD2N).c_str());

	lea	ecx, DWORD PTR [ebp+452]
	lea	edx, DWORD PTR $T668003[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2104@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2105@loadSettin
$LN2104@loadSettin:
	add	eax, 4
$LN2105@loadSettin:
	push	eax
	push	OFFSET ??_C@_05JGHKGHGO@IDD2N?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668003[esp+108], esi
	jb	SHORT $LN2122@loadSettin
	mov	edx, DWORD PTR $T668003[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2122@loadSettin:

; 222  : 	xmlNewChild(node, NULL, BAD_CAST "IDD3P", (const xmlChar *)lexical_cast<string>(IDD3P).c_str());

	lea	ecx, DWORD PTR [ebp+456]
	lea	edx, DWORD PTR $T668004[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2136@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2137@loadSettin
$LN2136@loadSettin:
	add	eax, 4
$LN2137@loadSettin:
	push	eax
	push	OFFSET ??_C@_05EDPJDCIG@IDD3P?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668004[esp+108], esi
	jb	SHORT $LN2154@loadSettin
	mov	eax, DWORD PTR $T668004[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2154@loadSettin:

; 223  : 	xmlNewChild(node, NULL, BAD_CAST "IDD3N", (const xmlChar *)lexical_cast<string>(IDD3N).c_str());

	lea	ecx, DWORD PTR [ebp+460]
	lea	edx, DWORD PTR $T668005[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2168@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2169@loadSettin
$LN2168@loadSettin:
	add	eax, 4
$LN2169@loadSettin:
	push	eax
	push	OFFSET ??_C@_05JHLIANFJ@IDD3N?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668005[esp+108], esi
	jb	SHORT $LN2186@loadSettin
	mov	ecx, DWORD PTR $T668005[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2186@loadSettin:

; 224  : 	xmlNewChild(node, NULL, BAD_CAST "IDD4R", (const xmlChar *)lexical_cast<string>(IDD4R).c_str());

	lea	ecx, DWORD PTR [ebp+468]
	lea	edx, DWORD PTR $T668006[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2200@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2201@loadSettin
$LN2200@loadSettin:
	add	eax, 4
$LN2201@loadSettin:
	push	eax
	push	OFFSET ??_C@_05HEIAEGIB@IDD4R?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668006[esp+108], esi
	jb	SHORT $LN2218@loadSettin
	mov	edx, DWORD PTR $T668006[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2218@loadSettin:

; 225  : 	xmlNewChild(node, NULL, BAD_CAST "IDD4W", (const xmlChar *)lexical_cast<string>(IDD4W).c_str());

	lea	ecx, DWORD PTR [ebp+464]
	lea	edx, DWORD PTR $T668007[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2232@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2233@loadSettin
$LN2232@loadSettin:
	add	eax, 4
$LN2233@loadSettin:
	push	eax
	push	OFFSET ??_C@_05JPHLCME@IDD4W?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668007[esp+108], esi
	jb	SHORT $LN2250@loadSettin
	mov	eax, DWORD PTR $T668007[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2250@loadSettin:

; 226  : 	xmlNewChild(node, NULL, BAD_CAST "IDD5A", (const xmlChar *)lexical_cast<string>(IDD5).c_str());

	lea	ecx, DWORD PTR [ebp+472]
	lea	edx, DWORD PTR $T668008[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2264@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2265@loadSettin
$LN2264@loadSettin:
	add	eax, 4
$LN2265@loadSettin:
	push	eax
	push	OFFSET ??_C@_05BEKNGNCE@IDD5A?$AA@
	push	0
	push	edi
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668008[esp+108], esi
	jb	SHORT $LN2282@loadSettin
	mov	ecx, DWORD PTR $T668008[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2282@loadSettin:

; 227  : 
; 228  : 
; 229  : 	// create the simulation parameter section
; 230  : 	node = xmlNewChild(rootNode, NULL, BAD_CAST "simulationParameters", NULL);

	push	0
	push	OFFSET ??_C@_0BF@BJCAOBGA@simulationParameters?$AA@
	push	0
	push	ebx
	call	_xmlNewChild

; 231  : 	xmlNewChild(node, NULL, BAD_CAST "shortBurstRatio", (const xmlChar *)lexical_cast<string>(shortBurstRatio).c_str());

	lea	edx, DWORD PTR [ebp+312]
	push	edx
	lea	ecx, DWORD PTR $T668009[esp+104]
	mov	ebx, eax
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 20					; 00000014H
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2296@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2297@loadSettin
$LN2296@loadSettin:
	add	eax, 4
$LN2297@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BA@JBDDFCFJ@shortBurstRatio?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668009[esp+108], esi
	jb	SHORT $LN2314@loadSettin
	mov	eax, DWORD PTR $T668009[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2314@loadSettin:

; 232  : 	xmlNewChild(node, NULL, BAD_CAST "readPercentage", (const xmlChar *)lexical_cast<string>(readPercentage).c_str());

	lea	ecx, DWORD PTR [ebp+316]
	push	ecx
	lea	ecx, DWORD PTR $T668010[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2328@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2329@loadSettin
$LN2328@loadSettin:
	add	eax, 4
$LN2329@loadSettin:
	push	eax
	push	OFFSET ??_C@_0P@IIFCOFJA@readPercentage?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668010[esp+108], esi
	jb	SHORT $LN2346@loadSettin
	mov	edx, DWORD PTR $T668010[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2346@loadSettin:

; 233  : 	xmlNewChild(node, NULL, BAD_CAST "averageInterarrivalCycleCount", (const xmlChar *)lexical_cast<string>(averageInterarrivalCycleCount).c_str());

	lea	ecx, DWORD PTR [ebp+192]
	lea	edx, DWORD PTR $T668011[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2360@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2361@loadSettin
$LN2360@loadSettin:
	add	eax, 4
$LN2361@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BO@LBLJGLDN@averageInterarrivalCycleCount?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668011[esp+108], esi
	jb	SHORT $LN2378@loadSettin
	mov	eax, DWORD PTR $T668011[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2378@loadSettin:

; 234  : 	xmlNodePtr node2 = xmlNewChild(node, NULL, BAD_CAST "outFile", (const xmlChar *)lexical_cast<string>(outFile).c_str());

	lea	eax, DWORD PTR [ebp+96]
	lea	ecx, DWORD PTR $T668012[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2392@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2393@loadSettin
$LN2392@loadSettin:
	add	eax, 4
$LN2393@loadSettin:
	push	eax
	push	OFFSET ??_C@_07HFCPJKBM@outFile?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	mov	edi, eax
	cmp	DWORD PTR $T668012[esp+108], esi
	jb	SHORT $LN2410@loadSettin
	mov	ecx, DWORD PTR $T668012[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2410@loadSettin:

; 235  : 	xmlNewProp(node2, BAD_CAST "type", (const xmlChar *)lexical_cast<string>(outFileType).c_str());

	mov	eax, DWORD PTR _this$[esp+80]
	mov	ebp, 15					; 0000000fH
	add	eax, 180				; 000000b4H
	lea	ecx, DWORD PTR $T668013[esp+84]
	mov	DWORD PTR $T668012[esp+108], ebp
	mov	DWORD PTR $T668012[esp+104], 0
	mov	BYTE PTR $T668012[esp+88], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4OutputFileType@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4OutputFileType@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::OutputFileType>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2424@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2425@loadSettin
$LN2424@loadSettin:
	add	eax, 4
$LN2425@loadSettin:
	push	eax
	push	OFFSET ??_C@_04GPMDFGEJ@type?$AA@
	push	edi
	call	_xmlNewProp
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR $T668013[esp+108], esi
	jb	SHORT $LN2442@loadSettin
	mov	edx, DWORD PTR $T668013[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2442@loadSettin:

; 236  : 	xmlNewProp(node2, BAD_CAST "dbreporting", BAD_CAST "false");

	push	OFFSET ??_C@_05LAPONLG@false?$AA@
	push	OFFSET ??_C@_0M@PGEDDEMK@dbreporting?$AA@
	push	edi
	call	_xmlNewProp

; 237  : 	xmlNewChild(node, NULL, BAD_CAST "outFileDirectory", (const xmlChar *)lexical_cast<string>(outFileDir).c_str());

	mov	eax, DWORD PTR _this$[esp+92]
	add	esp, 12					; 0000000cH
	add	eax, 124				; 0000007cH
	lea	ecx, DWORD PTR $T668014[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2456@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2457@loadSettin
$LN2456@loadSettin:
	add	eax, 4
$LN2457@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BB@IODLALPO@outFileDirectory?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668014[esp+108], esi
	jb	SHORT $LN2474@loadSettin
	mov	eax, DWORD PTR $T668014[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2474@loadSettin:

; 238  : 	xmlNewChild(node, NULL, BAD_CAST "requestCount", (const xmlChar *)lexical_cast<string>(requestCount).c_str());

	mov	edi, DWORD PTR _this$[esp+80]
	lea	ecx, DWORD PTR [edi+184]
	push	ecx
	lea	ecx, DWORD PTR $T668015[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_J@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,__int64>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2488@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2489@loadSettin
$LN2488@loadSettin:
	add	eax, 4
$LN2489@loadSettin:
	push	eax
	push	OFFSET ??_C@_0N@FOEHJMMN@requestCount?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668015[esp+108], esi
	jb	SHORT $LN2506@loadSettin
	mov	edx, DWORD PTR $T668015[esp+88]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2506@loadSettin:

; 239  : 	node2 = xmlNewChild(node, NULL, BAD_CAST "inputFile", (const xmlChar *)lexical_cast<string>(inFile).c_str());

	lea	eax, DWORD PTR [edi+32]
	lea	ecx, DWORD PTR $T668016[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2520@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2521@loadSettin
$LN2520@loadSettin:
	add	eax, 4
$LN2521@loadSettin:
	push	eax
	push	OFFSET ??_C@_09OPEPHLAI@inputFile?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	mov	edi, eax
	cmp	DWORD PTR $T668016[esp+108], esi
	jb	SHORT $LN2538@loadSettin
	mov	eax, DWORD PTR $T668016[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2538@loadSettin:

; 240  : 	xmlNewProp(node2, BAD_CAST "type", (const xmlChar *)lexical_cast<string>(inFileType).c_str());

	mov	eax, DWORD PTR _this$[esp+80]
	add	eax, 92					; 0000005cH
	lea	ecx, DWORD PTR $T668017[esp+84]
	mov	DWORD PTR $T668016[esp+108], ebp
	mov	DWORD PTR $T668016[esp+104], 0
	mov	BYTE PTR $T668016[esp+88], 0
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InputType@InputStream@DRAMsimII@@@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABW4InputType@InputStream@DRAMsimII@@@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum DRAMsimII::InputStream::InputType>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2552@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2553@loadSettin
$LN2552@loadSettin:
	add	eax, 4
$LN2553@loadSettin:
	push	eax
	push	OFFSET ??_C@_04GPMDFGEJ@type?$AA@
	push	edi
	call	_xmlNewProp
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR $T668017[esp+108], esi
	jb	SHORT $LN2570@loadSettin
	mov	ecx, DWORD PTR $T668017[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2570@loadSettin:

; 241  : 	xmlNewChild(node, NULL, BAD_CAST "cpuToMemoryClockRatio", (const xmlChar *)lexical_cast<string>(cpuToMemoryClockRatio).c_str());

	mov	ebp, DWORD PTR _this$[esp+80]
	lea	edx, DWORD PTR [ebp+396]
	push	edx
	lea	ecx, DWORD PTR $T668018[esp+88]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,float>
	add	esp, 4
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2584@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2585@loadSettin
$LN2584@loadSettin:
	add	eax, 4
$LN2585@loadSettin:
	push	eax
	push	OFFSET ??_C@_0BG@DJOKNAID@cpuToMemoryClockRatio?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668018[esp+108], esi
	jb	SHORT $LN2602@loadSettin
	mov	eax, DWORD PTR $T668018[esp+88]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2602@loadSettin:

; 242  : 	xmlNewChild(node, NULL, BAD_CAST "epoch", (const xmlChar *)lexical_cast<string>(epoch).c_str());

	lea	ecx, DWORD PTR [ebp+28]
	lea	edx, DWORD PTR $T668019[esp+84]
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
	cmp	DWORD PTR [eax+24], esi
	jb	SHORT $LN2616@loadSettin
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2617@loadSettin
$LN2616@loadSettin:
	add	eax, 4
$LN2617@loadSettin:
	push	eax
	push	OFFSET ??_C@_05GLCGFDPJ@epoch?$AA@
	push	0
	push	ebx
	call	_xmlNewChild
	add	esp, 16					; 00000010H
	cmp	DWORD PTR $T668019[esp+108], esi
	jb	SHORT $LN2634@loadSettin
	mov	ecx, DWORD PTR $T668019[esp+88]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2634@loadSettin:

; 243  : 
; 244  : 
; 245  : 	int len;
; 246  : 	xmlChar *buffer;
; 247  : 	xmlDocDumpFormatMemoryEnc(doc, &buffer, &len, "UTF-8", 1);

	mov	edi, DWORD PTR _doc$[esp+84]
	push	1
	push	OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
	lea	edx, DWORD PTR _len$[esp+92]
	push	edx
	lea	eax, DWORD PTR _buffer$[esp+96]
	push	eax
	push	edi
	call	_xmlDocDumpFormatMemoryEnc

; 248  : 	settingsOutputFile = (const char *)buffer;

	mov	edx, DWORD PTR _buffer$[esp+104]
	mov	eax, edx
	add	esp, 20					; 00000014H
	lea	esi, DWORD PTR [eax+1]
	npad	5
$LL2652@loadSettin:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL2652@loadSettin
	sub	eax, esi
	push	eax
	push	edx
	mov	ecx, ebp
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 249  : 	xmlFree(buffer);

	mov	ecx, DWORD PTR _buffer$[esp+84]
	mov	edx, DWORD PTR __imp__xmlFree
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	eax

; 250  : 
; 251  : 	xmlFreeDoc(doc);

	push	edi
	call	_xmlFreeDoc
	add	esp, 8

; 252  : 
; 253  : 	xmlCleanupParser();

	call	_xmlCleanupParser
	pop	edi
	pop	esi
	pop	ebp

; 254  : 
; 255  : 	return true;

	mov	al, 1
	pop	ebx

; 256  : }

	add	esp, 68					; 00000044H
	ret	4
$LN2654@loadSettin:
?loadSettings@Settings@DRAMsimII@@QAE_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; DRAMsimII::Settings::loadSettings
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\settings.h
xdata$x	ENDS
;	COMDAT ?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_name$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; DRAMsimII::Settings::setKeyValue, COMDAT
; _this$ = esi
; _nodeName$ = ecx
; _nodeValue$ = edi

; 147  : 		bool setKeyValue(const char* nodeName, const std::string &nodeValue) { std::string name(nodeName); return setKeyValue(name, nodeValue); }

	push	-1
	push	__ehhandler$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+48], eax
	push	ebx
	push	ebp
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, eax
	xor	ebx, ebx
	mov	eax, ecx
	mov	DWORD PTR _name$[esp+84], 15		; 0000000fH
	mov	DWORD PTR _name$[esp+80], ebx
	mov	BYTE PTR _name$[esp+64], bl
	lea	ebp, DWORD PTR [eax+1]
$LL66@setKeyValu@4:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL66@setKeyValu@4
	sub	eax, ebp
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _name$[esp+68]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	edi
	lea	eax, DWORD PTR _name$[esp+64]
	push	eax
	push	esi
	mov	DWORD PTR __$EHRec$[esp+80], ebx
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; DRAMsimII::Settings::setKeyValue
	cmp	DWORD PTR _name$[esp+84], 16		; 00000010H
	mov	bl, al
	jb	SHORT $LN67@setKeyValu@4
	mov	ecx, DWORD PTR _name$[esp+64]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN67@setKeyValu@4:
	mov	al, bl
	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-44]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 8
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; DRAMsimII::Settings::setKeyValue
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z ; DRAMsimII::Settings::loadSettingsFromFile
__ehfuncinfo$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z DD 019930522H
	DD	014H
	DD	FLAT:__unwindtable$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$9
	DD	06H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$13
	DD	0cH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$14
	DD	0cH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$15
	DD	0cH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$16
	DD	0aH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$18
	DD	0aH
	DD	FLAT:__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$20
; Function compile flags: /Ogtpy
; File c:\users\crius\documents\visual studio 2008\projects\dramsimiihg\src\settingsxml.cpp
_TEXT	SEGMENT
$T683151 = -5572					; size = 4
$T683150 = -5572					; size = 4
$T683149 = -5572					; size = 4
$T683148 = -5572					; size = 4
_doc$ = -5572						; size = 4
$T683142 = -5572					; size = 4
$T683140 = -5572					; size = 4
_this$GSCopy$ = -5568					; size = 4
_buffer$ = -5564					; size = 4
_len$ = -5560						; size = 4
_uni$ = -5556						; size = 16
_vm$ = -5540						; size = 72
_xmlFile$ = -5468					; size = 140
_generator$ = -5324					; size = 4996
_nodeValue$134950 = -320				; size = 28
$T683147 = -320						; size = 28
$T683145 = -320						; size = 28
$T683141 = -320						; size = 28
$T683139 = -320						; size = 28
_uni_dist$ = -292					; size = 12
_params$135022 = -292					; size = 24
_nodeName$134949 = -292					; size = 28
_settingsFile$ = -264					; size = 28
_type$134981 = -236					; size = 28
_attrS$134974 = -236					; size = 28
$T683143 = -236						; size = 28
_extraSettings$ = -208					; size = 28
$T683152 = -180						; size = 28
_type$135000 = -180					; size = 28
_type$134994 = -152					; size = 28
_desc$ = -124						; size = 104
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_argc$ = 12						; size = 4
_argv$ = 16						; size = 4
?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z PROC ; DRAMsimII::Settings::loadSettingsFromFile

; 266  : {

	push	-1
	push	__ehhandler$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 5560				; 000015b8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+5572], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+5592]
	mov	DWORD PTR fs:0, eax

; 504  : 
; 505  : 	return true;

	mov	eax, DWORD PTR _this$[esp+5588]
	mov	ebp, DWORD PTR _argv$[esp+5588]
	push	13					; 0000000dH
	xor	ebx, ebx
	mov	esi, 15					; 0000000fH
	push	OFFSET ??_C@_0O@FJLGGDEL@Basic?5options?$AA@
	lea	ecx, DWORD PTR $T683139[esp+5600]
	mov	DWORD PTR _this$GSCopy$[esp+5600], eax
	mov	DWORD PTR $T683139[esp+5624], esi
	mov	DWORD PTR $T683139[esp+5620], ebx
	mov	BYTE PTR $T683139[esp+5604], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	DWORD PTR __$EHRec$[esp+5600], ebx
	mov	ecx, DWORD PTR ?m_default_line_length@options_description@program_options@boost@@2IB ; boost::program_options::options_description::m_default_line_length
	push	ecx
	lea	edx, DWORD PTR $T683139[esp+5596]
	push	edx
	lea	ecx, DWORD PTR _desc$[esp+5600]
	call	??0options_description@program_options@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; boost::program_options::options_description::options_description
	cmp	DWORD PTR $T683139[esp+5616], 16	; 00000010H
	jb	SHORT $LN114@loadSettin@2
	mov	eax, DWORD PTR $T683139[esp+5596]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN114@loadSettin@2:
	mov	DWORD PTR _settingsFile$[esp+5616], esi
	mov	DWORD PTR _settingsFile$[esp+5612], ebx
	mov	BYTE PTR _settingsFile$[esp+5596], 0
	mov	DWORD PTR _extraSettings$[esp+5616], esi
	mov	DWORD PTR _extraSettings$[esp+5612], ebx
	mov	BYTE PTR _extraSettings$[esp+5596], 0
	mov	BYTE PTR __$EHRec$[esp+5600], 4
	push	ebx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR $T683141[esp+5600]
	mov	DWORD PTR $T683141[esp+5624], esi
	mov	DWORD PTR $T683141[esp+5620], ebx
	mov	BYTE PTR $T683141[esp+5604], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	OFFSET ??_C@_0BP@IINMPII@Modifiers?5to?5the?5settings?5file?$AA@
	push	ecx
	lea	ecx, DWORD PTR _extraSettings$[esp+5600]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+5612], 5
	call	??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YAPAV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@01@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::program_options::value<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	lea	edi, DWORD PTR $T683141[esp+5600]
	mov	esi, eax
	call	?default_value@?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@program_options@boost@@QAEPAV123@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::program_options::typed_value<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char>::default_value
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_09OECJJJAK@modifiers?$AA@
	lea	edx, DWORD PTR _settingsFile$[esp+5604]
	push	OFFSET ??_C@_0BH@PHJLBNCG@The?5configuration?5file?$AA@
	push	edx
	call	??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@program_options@boost@@YAPAV?$typed_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@01@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; boost::program_options::value<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0M@MLABGBKK@config?9file?$AA@
	push	OFFSET ??_C@_0N@ENNAEJOL@help?5message?$AA@
	push	OFFSET ??_C@_04PCJFHION@help?$AA@
	lea	eax, DWORD PTR $T683140[esp+5624]
	push	eax
	lea	ecx, DWORD PTR _desc$[esp+5628]
	call	?add_options@options_description@program_options@boost@@QAE?AVoptions_description_easy_init@23@XZ ; boost::program_options::options_description::add_options
	mov	ecx, eax
	call	??Roptions_description_easy_init@program_options@boost@@QAEAAV012@PBD0@Z ; boost::program_options::options_description_easy_init::operator()
	mov	ecx, eax
	call	??Roptions_description_easy_init@program_options@boost@@QAEAAV012@PBDPBVvalue_semantic@12@0@Z ; boost::program_options::options_description_easy_init::operator()
	mov	ecx, eax
	call	??Roptions_description_easy_init@program_options@boost@@QAEAAV012@PBDPBVvalue_semantic@12@0@Z ; boost::program_options::options_description_easy_init::operator()
	mov	edi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[esp+5600], 4
	cmp	DWORD PTR $T683141[esp+5616], edi
	jb	SHORT $LN240@loadSettin@2
	mov	ecx, DWORD PTR $T683141[esp+5596]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN240@loadSettin@2:
	lea	ecx, DWORD PTR _vm$[esp+5592]
	call	??0variables_map@program_options@boost@@QAE@XZ ; boost::program_options::variables_map::variables_map
	push	ebx
	lea	edx, DWORD PTR _vm$[esp+5596]
	push	edx
	sub	esp, 32					; 00000020H
	mov	eax, esp
	mov	BYTE PTR __$EHRec$[esp+5640], 6
	mov	DWORD PTR $T683142[esp+5632], esp
	mov	DWORD PTR [eax], ebx
	mov	eax, DWORD PTR _argc$[esp+5628]
	push	ebp
	push	eax
	lea	ecx, DWORD PTR $T683143[esp+5640]
	push	ecx
	lea	ecx, DWORD PTR _desc$[esp+5644]
	call	??$parse_command_line@D@program_options@boost@@YA?AV?$basic_parsed_options@D@01@HQAPADABVoptions_description@01@HV?$function1@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z ; boost::program_options::parse_command_line<char>
	add	esp, 44					; 0000002cH
	push	eax
	mov	BYTE PTR __$EHRec$[esp+5612], 7
	call	?store@program_options@boost@@YAXABV?$basic_parsed_options@D@12@AAVvariables_map@12@_N@Z ; boost::program_options::store
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T683143[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 6
	call	?_Tidy@?$vector@V?$basic_option@D@program_options@boost@@V?$allocator@V?$basic_option@D@program_options@boost@@@std@@@std@@IAEXXZ ; std::vector<boost::program_options::basic_option<char>,std::allocator<boost::program_options::basic_option<char> > >::_Tidy
	mov	edx, DWORD PTR $T683143[esp+5592]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	lea	eax, DWORD PTR _vm$[esp+5596]
	add	esp, 4
	push	eax
	call	?notify@program_options@boost@@YAXAAVvariables_map@12@@Z ; boost::program_options::notify
	add	esp, 4
	push	4
	push	OFFSET ??_C@_04PCJFHION@help?$AA@
	lea	ecx, DWORD PTR $T683145[esp+5600]
	mov	DWORD PTR $T683145[esp+5624], 15	; 0000000fH
	mov	DWORD PTR $T683145[esp+5620], ebx
	mov	BYTE PTR $T683145[esp+5604], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T683145[esp+5592]
	push	ecx
	lea	ecx, DWORD PTR _vm$[esp+5604]
	mov	BYTE PTR __$EHRec$[esp+5604], 8
	call	?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::count
	mov	BYTE PTR __$EHRec$[esp+5600], 6
	mov	esi, eax
	cmp	DWORD PTR $T683145[esp+5616], edi
	jb	SHORT $LN326@loadSettin@2
	mov	edx, DWORD PTR $T683145[esp+5596]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN326@loadSettin@2:

; 267  : 
; 268  : 	opt::options_description desc("Basic options");
; 269  : 	string settingsFile;
; 270  : 	string extraSettings;
; 271  : 	desc.add_options()
; 272  : 		("help", "help message")
; 273  : 		("config-file",opt::value<string>(&settingsFile),"The configuration file")
; 274  : 		("modifiers", opt::value<string>(&extraSettings)->default_value(""), "Modifiers to the settings file");
; 275  : 
; 276  : 	opt::variables_map vm;
; 277  : 
; 278  : 	opt::store(opt::parse_command_line(argc, argv, desc), vm);
; 279  : 	opt::notify(vm);
; 280  : 
; 281  : 	if (vm.count("help"))

	cmp	esi, ebx
	je	SHORT $LN342@loadSettin@2

; 282  : 	{
; 283  : 		cout << "Usage: " << argv[0] << "(--help | --config-file <configuration file> {--modifiers \"<modifiers string>}\")" << endl;

	mov	eax, DWORD PTR [ebp]
	push	OFFSET ??_C@_0FB@KEBNCEPP@?$CI?9?9help?5?$HM?5?9?9config?9file?5?$DMconfigu@
	push	ecx
	push	eax
	push	ecx
	push	OFFSET ??_C@_07CKBCDPF@Usage?3?5?$AA@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 284  : 		cout << "Where modifiers strings look like (parameter value)+" << endl;

	push	OFFSET ??_C@_0DF@BJCJMHJ@Where?5modifiers?5strings?5look?5lik@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN342@loadSettin@2:

; 285  : 	}
; 286  : 
; 287  : 	if (!vm.count("config-file"))

	push	11					; 0000000bH
	push	OFFSET ??_C@_0M@MLABGBKK@config?9file?$AA@
	lea	ecx, DWORD PTR $T683147[esp+5600]
	mov	DWORD PTR $T683147[esp+5624], 15	; 0000000fH
	mov	DWORD PTR $T683147[esp+5620], ebx
	mov	BYTE PTR $T683147[esp+5604], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T683147[esp+5592]
	push	ecx
	lea	ecx, DWORD PTR _vm$[esp+5604]
	mov	BYTE PTR __$EHRec$[esp+5604], 9
	call	?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Vvariable_value@program_options@boost@@@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::program_options::variable_value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,boost::program_options::variable_value> >,0> >::count
	test	eax, eax
	mov	esi, 16					; 00000010H
	sete	bl
	mov	BYTE PTR __$EHRec$[esp+5600], 6
	cmp	DWORD PTR $T683147[esp+5616], esi
	jb	SHORT $LN404@loadSettin@2
	mov	edx, DWORD PTR $T683147[esp+5596]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN404@loadSettin@2:
	test	bl, bl
	je	SHORT $LN37@loadSettin@2

; 288  : 	{
; 289  : 		cout << "A configuration file MUST be specified (--config-file <filename>)" << endl;

	push	OFFSET ??_C@_0EC@BJNOIJIK@A?5configuration?5file?5MUST?5be?5spe@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 290  : 		exit(-1);

	push	-1
	call	_exit
$LN591@loadSettin@2:
$LN37@loadSettin@2:

; 291  : 	}
; 292  : 
; 293  : 	//#define USEREADERFORMEMORY
; 294  : 
; 295  : 	ifstream xmlFile(settingsFile.c_str(),ios::in|ios::ate);

	mov	eax, DWORD PTR _settingsFile$[esp+5596]
	cmp	DWORD PTR _settingsFile$[esp+5616], esi
	jae	SHORT $LN423@loadSettin@2
	lea	eax, DWORD PTR _settingsFile$[esp+5596]
$LN423@loadSettin@2:
	push	eax
	lea	eax, DWORD PTR _xmlFile$[esp+5596]
	push	eax
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >

; 296  : 
; 297  : 	xmlTextReader *reader = NULL;
; 298  : 
; 299  : 	xmlDocPtr doc = NULL;
; 300  : 
; 301  : 	if (xmlFile.is_open())

	xor	edi, edi
	mov	BYTE PTR __$EHRec$[esp+5600], 10	; 0000000aH
	cmp	DWORD PTR _xmlFile$[esp+5676], edi
	je	$LN577@loadSettin@2

; 302  : 	{		
; 303  : 		doc = xmlParseFile(settingsFile.c_str());

	mov	eax, DWORD PTR _settingsFile$[esp+5596]
	cmp	DWORD PTR _settingsFile$[esp+5616], esi
	jae	SHORT $LN433@loadSettin@2
	lea	eax, DWORD PTR _settingsFile$[esp+5596]
$LN433@loadSettin@2:
	push	eax
	call	_xmlParseFile
	mov	ebx, eax
	add	esp, 4
	mov	DWORD PTR _doc$[esp+5592], ebx

; 304  : 		if (doc == NULL)

	cmp	ebx, edi
	jne	SHORT $LN35@loadSettin@2

; 305  : 		{
; 306  : 			cout << "Unable to open settings file \"" << settingsFile << "\"" << endl;

	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	push	ecx
	lea	ecx, DWORD PTR _settingsFile$[esp+5600]
	push	ecx
	push	ecx
	push	OFFSET ??_C@_0BP@PKIIIEGC@Unable?5to?5open?5settings?5file?5?$CC?$AA@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
$LN589@loadSettin@2:
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 307  : 			exit(-2);

	push	-2					; fffffffeH
$LN590@loadSettin@2:
	call	_exit
$LN592@loadSettin@2:
$LN35@loadSettin@2:

; 308  : 		}
; 309  : #ifdef USEREADERFORMEMORY
; 310  : 		ifstream::pos_type entireXmlFileLength = 0;
; 311  : 
; 312  : 		entireXmlFileLength = xmlFile.tellg();
; 313  : 		char *entireXmlFile = new char[entireXmlFileLength];
; 314  : 
; 315  : 		xmlFile.seekg(0,ios::beg);
; 316  : 		xmlFile.read(entireXmlFile,entireXmlFileLength);
; 317  : 
; 318  : 		xmlFile.close();
; 319  : 
; 320  : 		entireXmlFile[entireXmlFileLength] = 0;
; 321  : 
; 322  : 		reader = xmlReaderForMemory(
; 323  : 			entireXmlFile,entireXmlFileLength,
; 324  : 			NULL,NULL,
; 325  : 			XML_PARSE_RECOVER | XML_PARSE_DTDATTR | XML_PARSE_NOENT | XML_PARSE_DTDVALID);	
; 326  : 		delete entireXmlFile;
; 327  : #else
; 328  : 		reader = xmlReaderForFile(
; 329  : 			settingsFile.c_str(),
; 330  : 			NULL,
; 331  : 			XML_PARSE_RECOVER | XML_PARSE_DTDATTR | XML_PARSE_NOENT | XML_PARSE_DTDVALID);

	mov	eax, DWORD PTR _settingsFile$[esp+5596]
	cmp	DWORD PTR _settingsFile$[esp+5616], esi
	jae	SHORT $LN443@loadSettin@2
	lea	eax, DWORD PTR _settingsFile$[esp+5596]
$LN443@loadSettin@2:
	push	27					; 0000001bH
	push	edi
	push	eax
	call	_xmlReaderForFile
	mov	ebp, eax
	add	esp, 12					; 0000000cH

; 332  : #endif	
; 333  : 
; 334  : 	}
; 335  : 
; 336  : 	if (reader == NULL)

	cmp	ebp, edi
	jne	SHORT $LN34@loadSettin@2
$LN577@loadSettin@2:

; 337  : 	{
; 338  : 		cout << "Unable to open settings file \"" << settingsFile << "\"" << endl;

	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	push	ecx
	lea	edx, DWORD PTR _settingsFile$[esp+5600]
	push	edx
	push	ecx
	push	OFFSET ??_C@_0BP@PKIIIEGC@Unable?5to?5open?5settings?5file?5?$CC?$AA@
	push	OFFSET ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	push	10					; 0000000aH
	mov	ecx, esi
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
	mov	ecx, esi
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 339  : 		exit(-2);

	push	-2					; fffffffeH
	call	_exit
$LN593@loadSettin@2:
$LN34@loadSettin@2:

; 340  : 	}
; 341  : 	else
; 342  : 	{
; 343  : 		if (xmlTextReaderIsValid(reader) != 1)

	push	ebp
	call	_xmlTextReaderIsValid
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN32@loadSettin@2

; 344  : 		{
; 345  : 			cerr << "\"" << settingsFile << "\" does not validate." << endl;

	push	OFFSET ??_C@_0BF@MNDKCPDC@?$CC?5does?5not?5validate?4?$AA@
	push	ecx
	lea	eax, DWORD PTR _settingsFile$[esp+5600]
	push	eax
	push	ecx
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr

; 346  : 			exit(-2);

	jmp	$LN589@loadSettin@2
$LN32@loadSettin@2:

; 347  : 		}		
; 348  : 
; 349  : 		int ret;		
; 350  : 		string nodeName;

	mov	eax, 15					; 0000000fH
	mov	DWORD PTR _nodeName$134949[esp+5616], eax
	mov	DWORD PTR _nodeName$134949[esp+5612], edi
	mov	BYTE PTR _nodeName$134949[esp+5596], 0

; 351  : 		string nodeValue;

	mov	DWORD PTR _nodeValue$134950[esp+5616], eax
	mov	DWORD PTR _nodeValue$134950[esp+5612], edi
	mov	BYTE PTR _nodeValue$134950[esp+5596], 0

; 352  : 
; 353  : 		while ((ret = xmlTextReaderRead(reader)) == 1)

	push	ebp
	mov	BYTE PTR __$EHRec$[esp+5604], 12	; 0000000cH
	call	_xmlTextReaderRead
	add	esp, 4
	cmp	eax, 1
	jne	$LN30@loadSettin@2
$LN31@loadSettin@2:

; 354  : 		{	
; 355  : 			switch (xmlTextReaderNodeType(reader))

	push	ebp
	call	_xmlTextReaderNodeType
	add	esp, 4
	sub	eax, 1
	je	SHORT $LN27@loadSettin@2
	sub	eax, 2
	jne	$LN18@loadSettin@2

; 426  : 					}					
; 427  : 				}
; 428  : 				break;
; 429  : 			case XML_TEXT_NODE:				
; 430  : 				if (xmlTextReaderConstName(reader))

	push	ebp
	call	_xmlTextReaderConstName
	add	esp, 4
	test	eax, eax
	je	$LN18@loadSettin@2

; 431  : 				{
; 432  : 					nodeValue = (const char *)xmlTextReaderConstValue(reader);

	push	ebp
	call	_xmlTextReaderConstValue
	mov	ecx, eax
	add	esp, 4
	lea	esi, DWORD PTR [ecx+1]
$LL578@loadSettin@2:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL578@loadSettin@2
	sub	ecx, esi
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _nodeValue$134950[esp+5600]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 433  : #ifndef NDEBUG
; 434  : 					bool result =
; 435  : #endif
; 436  : 						setKeyValue(nodeName, nodeValue);

	mov	eax, DWORD PTR _this$GSCopy$[esp+5592]
	lea	ecx, DWORD PTR _nodeValue$134950[esp+5592]
	push	ecx
	lea	edx, DWORD PTR _nodeName$134949[esp+5596]
	push	edx
	push	eax
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; DRAMsimII::Settings::setKeyValue

; 437  : 					assert(result);
; 438  : 
; 439  : 				}
; 440  : 			case XML_CDATA_SECTION_NODE:
; 441  : 				break;

	jmp	$LN18@loadSettin@2
$LN27@loadSettin@2:

; 356  : 			{
; 357  : 			case XML_ELEMENT_NODE:
; 358  : 				{
; 359  : 					if (!xmlTextReaderConstName(reader))

	push	ebp
	call	_xmlTextReaderConstName
	add	esp, 4
	test	eax, eax
	je	$LN18@loadSettin@2

; 360  : 						break;
; 361  : 					nodeName = (const char *)xmlTextReaderConstName(reader);

	push	ebp
	call	_xmlTextReaderConstName
	mov	ecx, eax
	add	esp, 4
	lea	esi, DWORD PTR [ecx+1]
	npad	3
$LL579@loadSettin@2:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL579@loadSettin@2
	sub	ecx, esi
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _nodeName$134949[esp+5600]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 362  : 					if (nodeName == "dramspec")

	mov	ecx, DWORD PTR _nodeName$134949[esp+5612]
	push	8
	push	OFFSET ??_C@_08LKCGPNON@dramspec?$AA@
	push	ecx
	push	0
	lea	ecx, DWORD PTR _nodeName$134949[esp+5608]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	test	eax, eax
	jne	SHORT $LN25@loadSettin@2

; 363  : 					{
; 364  : 						xmlChar *attr = xmlTextReaderGetAttribute(reader, (xmlChar *)"type");

	push	OFFSET ??_C@_04GPMDFGEJ@type?$AA@
	push	ebp
	call	_xmlTextReaderGetAttribute
	add	esp, 8
	mov	esi, eax

; 365  : 						string attrS = (const char *)attr;

	push	esi
	lea	ecx, DWORD PTR _attrS$134974[esp+5596]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 366  : #ifndef NDEBUG
; 367  : 						bool result =
; 368  : #endif
; 369  : 							setKeyValue(nodeName,attrS);

	mov	ecx, DWORD PTR _this$GSCopy$[esp+5592]
	lea	edx, DWORD PTR _attrS$134974[esp+5592]
	push	edx
	lea	eax, DWORD PTR _nodeName$134949[esp+5596]
	push	eax
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+5612], 13	; 0000000dH
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; DRAMsimII::Settings::setKeyValue

; 370  : 						assert(result);
; 371  : 						xmlFree(attr);

	mov	edx, DWORD PTR __imp__xmlFree
	mov	eax, DWORD PTR [edx]
	push	esi
	call	eax
	add	esp, 4

; 372  : 					}

	lea	ecx, DWORD PTR _attrS$134974[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 12	; 0000000cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN18@loadSettin@2
$LN25@loadSettin@2:

; 373  : 					else if (nodeName == "inputFile")

	lea	ecx, DWORD PTR _nodeName$134949[esp+5592]
	push	OFFSET ??_C@_09OPEPHLAI@inputFile?$AA@
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	je	$LN23@loadSettin@2

; 374  : 					{
; 375  : 						xmlChar *attr = xmlTextReaderGetAttribute(reader, (xmlChar *)"type");

	push	OFFSET ??_C@_04GPMDFGEJ@type?$AA@
	push	ebp
	call	_xmlTextReaderGetAttribute
	add	esp, 8
	mov	ebx, eax

; 376  : 						string type = (const char *)attr;

	push	ebx
	lea	ecx, DWORD PTR _type$134981[esp+5596]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 377  : 
; 378  : 						setKeyValue("inputType",type);

	mov	esi, DWORD PTR _this$GSCopy$[esp+5592]
	lea	edi, DWORD PTR _type$134981[esp+5592]
	mov	ecx, OFFSET ??_C@_09LAEKLCGB@inputType?$AA@
	mov	BYTE PTR __$EHRec$[esp+5600], 14	; 0000000eH
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::setKeyValue

; 379  : 
; 380  : 						if (type == "random")

	mov	edx, edi
	push	OFFSET ??_C@_06NLFCANPD@random?$AA@
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	je	SHORT $LN20@loadSettin@2

; 381  : 						{							
; 382  : 							if (xmlTextReaderRead(reader) == 1)

	push	ebp
	call	_xmlTextReaderRead
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN20@loadSettin@2

; 383  : 							{
; 384  : 								if (xmlTextReaderNodeType(reader) == XML_TEXT_NODE)

	push	ebp
	call	_xmlTextReaderNodeType
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN20@loadSettin@2

; 385  : 								{	
; 386  : 									nodeValue = (const char *)xmlTextReaderConstValue(reader);

	push	ebp
	call	_xmlTextReaderConstValue
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _nodeValue$134950[esp+5596]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 387  : #ifndef NDEBUG
; 388  : 									bool result =
; 389  : #endif
; 390  : 										setKeyValue(type,nodeValue);		

	lea	eax, DWORD PTR _nodeValue$134950[esp+5592]
	push	eax
	mov	ecx, edi
	push	ecx
	mov	edx, esi
	push	edx
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; DRAMsimII::Settings::setKeyValue
$LN20@loadSettin@2:

; 391  : 									assert(result);
; 392  : 								}								
; 393  : 							}							
; 394  : 						}
; 395  : 						xmlFree(attr);

	mov	eax, DWORD PTR __imp__xmlFree
	mov	ecx, DWORD PTR [eax]
	push	ebx
	call	ecx
	add	esp, 4

; 396  : 					}

	lea	ecx, DWORD PTR _type$134981[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 12	; 0000000cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN587@loadSettin@2
$LN23@loadSettin@2:

; 397  : 					else if (nodeName == "outFile")

	lea	edx, DWORD PTR _nodeName$134949[esp+5592]
	push	OFFSET ??_C@_07HFCPJKBM@outFile?$AA@
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	test	al, al
	je	$LN18@loadSettin@2

; 398  : 					{
; 399  : 						xmlChar *attr = xmlTextReaderGetAttribute(reader, (xmlChar *)"type");

	push	OFFSET ??_C@_04GPMDFGEJ@type?$AA@
	push	ebp
	call	_xmlTextReaderGetAttribute
	mov	ebx, eax
	add	esp, 8

; 400  : 
; 401  : 						if (attr)

	test	ebx, ebx
	je	SHORT $LN17@loadSettin@2

; 402  : 						{
; 403  : 							const string type = (const char *)attr;

	push	ebx
	lea	ecx, DWORD PTR _type$134994[esp+5596]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 404  : #ifndef NDEBUG
; 405  : 							bool result =
; 406  : #endif
; 407  : 								setKeyValue("outFileType",type);

	mov	esi, DWORD PTR _this$GSCopy$[esp+5592]
	lea	edi, DWORD PTR _type$134994[esp+5592]
	mov	ecx, OFFSET ??_C@_0M@EPOHBJHA@outFileType?$AA@
	mov	BYTE PTR __$EHRec$[esp+5600], 15	; 0000000fH
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::setKeyValue

; 408  : 							assert(result);
; 409  : 						}

	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[esp+5600], 12	; 0000000cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@loadSettin@2:

; 410  : 
; 411  : 						xmlFree(attr);

	mov	eax, DWORD PTR __imp__xmlFree
	mov	ecx, DWORD PTR [eax]
	push	ebx
	call	ecx
	add	esp, 4

; 412  : 
; 413  : 						attr = xmlTextReaderGetAttribute(reader, (xmlChar *)"dbreporting");

	push	OFFSET ??_C@_0M@PGEDDEMK@dbreporting?$AA@
	push	ebp
	call	_xmlTextReaderGetAttribute
	mov	ebx, eax
	add	esp, 8

; 414  : 
; 415  : 						if (attr)

	test	ebx, ebx
	je	SHORT $LN16@loadSettin@2

; 416  : 						{
; 417  : 							const string type = (const char *)attr;

	push	ebx
	lea	ecx, DWORD PTR _type$135000[esp+5596]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 418  : #ifndef NDEBUG
; 419  : 							bool result =
; 420  : #endif
; 421  : 								setKeyValue("dbreporting",type);

	mov	esi, DWORD PTR _this$GSCopy$[esp+5592]
	lea	edi, DWORD PTR _type$135000[esp+5592]
	mov	ecx, OFFSET ??_C@_0M@PGEDDEMK@dbreporting?$AA@
	mov	BYTE PTR __$EHRec$[esp+5600], 16	; 00000010H
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DRAMsimII::Settings::setKeyValue

; 422  : 							assert(result);
; 423  : 						}

	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[esp+5600], 12	; 0000000cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN16@loadSettin@2:

; 424  : 
; 425  : 						xmlFree(attr);

	mov	edx, DWORD PTR __imp__xmlFree
	mov	eax, DWORD PTR [edx]
	push	ebx
	call	eax
	add	esp, 4
$LN587@loadSettin@2:
	mov	ebx, DWORD PTR _doc$[esp+5592]
$LN18@loadSettin@2:

; 352  : 
; 353  : 		while ((ret = xmlTextReaderRead(reader)) == 1)

	push	ebp
	call	_xmlTextReaderRead
	add	esp, 4
	cmp	eax, 1
	je	$LN31@loadSettin@2
$LN30@loadSettin@2:

; 442  : 
; 443  : 			default:
; 444  : 				//cerr << "Unknown XML node type" << endl;
; 445  : 				break;
; 446  : 			}
; 447  : 		}
; 448  : 
; 449  : 		if ((ret == -1) || (xmlTextReaderIsValid(reader) != 1))

	cmp	eax, -1
	je	$LN10@loadSettin@2
	push	ebp
	call	_xmlTextReaderIsValid
	add	esp, 4
	cmp	eax, 1
	jne	$LN10@loadSettin@2

; 453  : 		}
; 454  : 
; 455  : 		// close the reader
; 456  : 		xmlFreeTextReader(reader);

	push	ebp
	call	_xmlFreeTextReader
	add	esp, 4

; 457  : 		xmlMemoryDump();

	call	_xmlMemoryDump

; 458  : 	}

	lea	ecx, DWORD PTR _nodeValue$134950[esp+5592]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR _nodeName$134949[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 10	; 0000000aH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 459  : 
; 460  : 	// then update with the extra settings
; 461  : 	if ((extraSettings).length() > 0)

	cmp	DWORD PTR _extraSettings$[esp+5612], 0
	jbe	$LN9@loadSettin@2

; 462  : 	{
; 463  : 		std::vector<string> params;

	lea	ecx, DWORD PTR _params$135022[esp+5592]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 464  : 		boost::algorithm::trim(extraSettings);

	lea	ecx, DWORD PTR $T683148[esp+5592]
	call	??0locale@std@@QAE@XZ			; std::locale::locale
	lea	ecx, DWORD PTR _extraSettings$[esp+5592]
	push	ecx
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+5604], 18	; 00000012H
	call	??$trim@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@algorithm@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVlocale@3@@Z ; boost::algorithm::trim<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	lea	ecx, DWORD PTR $T683148[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 17	; 00000011H
	call	??1locale@std@@QAE@XZ			; std::locale::~locale

; 465  : 		split(params, extraSettings, is_any_of(" "), token_compress_on);

	push	0
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T683149[esp+5608], esp
	call	??$is_any_of@$$BY01$$CBD@algorithm@boost@@YA?AU?$is_any_ofF@D@detail@01@AAY01$$CBD@Z ; boost::algorithm::is_any_of<char const [2]>
	lea	edx, DWORD PTR _extraSettings$[esp+5608]
	push	edx
	lea	eax, DWORD PTR _params$135022[esp+5612]
	push	eax
	call	??$split@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$is_any_ofF@D@detail@algorithm@boost@@@algorithm@boost@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV23@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@U?$is_any_ofF@D@detail@01@W4token_compress_mode_type@01@@Z ; boost::algorithm::split<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,boost::algorithm::detail::is_any_ofF<char> >

; 466  : 
; 467  : 		if (params.size() > 0)

	mov	ecx, DWORD PTR _params$135022[esp+5632]
	sub	ecx, DWORD PTR _params$135022[esp+5628]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	esp, 24					; 00000018H
	add	eax, edx
	je	$LN4@loadSettin@2

; 468  : 		{
; 469  : 			if (params.size() % 2 != 0)

	test	al, 1
	je	SHORT $LN7@loadSettin@2

; 470  : 			{
; 471  : 				cerr << "Invalid memory override format, should be {<parameter name> <value>}+" << endl;

	push	OFFSET ??_C@_0EG@LMCFMIEN@Invalid?5memory?5override?5format?0?5@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	esi, eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<

; 472  : 				cerr << params.size() << endl;

	mov	ecx, DWORD PTR _params$135022[esp+5608]
	sub	ecx, DWORD PTR _params$135022[esp+5604]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	esi, eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<

; 473  : 				exit(-14);

	push	-14					; fffffff2H
	jmp	$LN590@loadSettin@2
$LN7@loadSettin@2:

; 474  : 			}
; 475  : 
; 476  : 			for (vector<string>::size_type i = 0; i < params.size(); i += 2)

	xor	edi, edi
	test	eax, eax
	jbe	$LN4@loadSettin@2
$LL6@loadSettin@2:

; 477  : 			{
; 478  : 				if (!setKeyValue(params[i], params[i+1]) || !updateKeyValue(params[i],params[i+1], doc))

	lea	esi, DWORD PTR [edi+1]
	push	esi
	lea	ecx, DWORD PTR _params$135022[esp+5596]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	push	edi
	lea	ecx, DWORD PTR _params$135022[esp+5600]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, DWORD PTR _this$GSCopy$[esp+5596]
	push	eax
	push	ecx
	call	?setKeyValue@Settings@DRAMsimII@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; DRAMsimII::Settings::setKeyValue
	test	al, al
	je	SHORT $LN2@loadSettin@2
	push	esi
	lea	ecx, DWORD PTR _params$135022[esp+5596]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	push	edi
	lea	ecx, DWORD PTR _params$135022[esp+5600]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, ebx
	mov	edx, eax
	call	?updateKeyValue@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0PAU_xmlDoc@@@Z ; updateKeyValue
	add	esp, 4
	test	al, al
	je	SHORT $LN2@loadSettin@2

; 480  : 				else
; 481  : 					cerr << "note: setting " << params[i] << "=" << params[i+1] << endl;

	push	esi
	lea	ecx, DWORD PTR _params$135022[esp+5596]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	push	ecx
	push	OFFSET ??_C@_01NEMOKFLO@?$DN?$AA@
	push	ecx
	push	edi
	lea	ecx, DWORD PTR _params$135022[esp+5612]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	push	ecx
	push	OFFSET ??_C@_0P@FMHKABDI@note?3?5setting?5?$AA@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	jmp	SHORT $LN588@loadSettin@2
$LN2@loadSettin@2:

; 479  : 					cerr << "warn: Unrecognized key/value pair (" << params[i] << "," << params[i+1] << ")" << endl;

	push	OFFSET ??_C@_01PKGAHCOL@?$CJ?$AA@
	push	ecx
	push	esi
	lea	ecx, DWORD PTR _params$135022[esp+5604]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	push	ecx
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	push	ecx
	push	edi
	lea	ecx, DWORD PTR _params$135022[esp+5620]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	push	ecx
	push	OFFSET ??_C@_0CE@HNIHGFH@warn?3?5Unrecognized?5key?1value?5pai@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
$LN588@loadSettin@2:
	add	esp, 8
	mov	esi, eax
	call	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
	mov	ecx, DWORD PTR _params$135022[esp+5608]
	sub	ecx, DWORD PTR _params$135022[esp+5604]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	edi, 2
	add	eax, edx
	cmp	edi, eax
	jb	$LL6@loadSettin@2
$LN4@loadSettin@2:

; 482  : 			}
; 483  : 		}
; 484  : 	}

	lea	ecx, DWORD PTR _params$135022[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 10	; 0000000aH
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN9@loadSettin@2:

; 485  : 
; 486  : 	// dump the resulting document
; 487  : 	int len;
; 488  : 	xmlChar *buffer;
; 489  : 	xmlDocDumpMemory(doc, &buffer,&len);

	lea	ecx, DWORD PTR _len$[esp+5592]
	push	ecx
	lea	edx, DWORD PTR _buffer$[esp+5596]
	push	edx
	push	ebx
	call	_xmlDocDumpMemory

; 490  : 	settingsOutputFile.append((const char *)buffer);

	mov	eax, DWORD PTR _buffer$[esp+5604]
	mov	esi, DWORD PTR _this$GSCopy$[esp+5604]
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 491  : 	xmlFree(buffer);

	mov	ecx, DWORD PTR _buffer$[esp+5592]
	mov	edx, DWORD PTR __imp__xmlFree
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	eax
	add	esp, 4

; 492  : 
; 493  : 	// free the document
; 494  : 	xmlFreeDoc(doc);

	push	ebx
	call	_xmlFreeDoc
	add	esp, 4

; 495  : 
; 496  : 	xmlCleanupParser();

	call	_xmlCleanupParser

; 497  : 
; 498  : 	boost::mt19937 generator(std::time(0));

	push	0
	call	__time64
	mov	DWORD PTR $T683150[esp+5596], eax
	add	esp, 4
	lea	ecx, DWORD PTR $T683150[esp+5592]
	lea	eax, DWORD PTR _generator$[esp+5592]
	call	?seed@?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@QAEXABK@Z ; boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566>::seed

; 499  : 	// Define a uniform random number distribution which produces "double"
; 500  : 	// values between 0 and 1 (0 inclusive, 1 exclusive).
; 501  : 	boost::uniform_int<> uni_dist(0,INT_MAX);

	mov	eax, 2147483647				; 7fffffffH

; 502  : 	boost::variate_generator<boost::mt19937&, boost::uniform_int<> > uni(generator, uni_dist);	
; 503  : 	sessionID = lexical_cast<string>(uni());

	push	eax
	lea	edx, DWORD PTR _uni$[esp+5596]
	mov	DWORD PTR _uni_dist$[esp+5600], eax
	lea	ecx, DWORD PTR _generator$[esp+5596]
	push	0
	mov	DWORD PTR _uni_dist$[esp+5600], 0
	movq	xmm0, QWORD PTR _uni_dist$[esp+5600]
	push	edx
	mov	DWORD PTR _uni$[esp+5604], ecx
	movq	QWORD PTR _uni$[esp+5608], xmm0
	mov	DWORD PTR _uni$[esp+5616], eax
	call	??$generate@V?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@boost@@@?$uniform_int@H@boost@@CAHAAV?$pass_through_engine@V?$pass_through_engine@AAV?$mersenne_twister@K$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0MHHGGGNO@@random@boost@@@detail@random@boost@@@detail@random@1@HHI@Z ; boost::uniform_int<int>::generate<boost::random::detail::pass_through_engine<boost::random::detail::pass_through_engine<boost::random::mersenne_twister<unsigned long,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18,3346425566> &> > >
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR $T683151[esp+5592]
	lea	edx, DWORD PTR $T683152[esp+5592]
	mov	DWORD PTR $T683151[esp+5592], eax
	call	??$lexical_cast@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z ; boost::lexical_cast<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,int>
	push	-1
	push	0
	push	eax
	lea	ecx, DWORD PTR [esi+60]
	mov	BYTE PTR __$EHRec$[esp+5612], 19	; 00000013H
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T683152[esp+5592]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 504  : 
; 505  : 	return true;

	lea	eax, DWORD PTR _xmlFile$[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 6
	call	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
	lea	ecx, DWORD PTR _vm$[esp+5592]
	mov	BYTE PTR __$EHRec$[esp+5600], 4
	call	??1variables_map@program_options@boost@@UAE@XZ
	lea	ecx, DWORD PTR _extraSettings$[esp+5592]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR _settingsFile$[esp+5592]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR _desc$[esp+5592]
	mov	DWORD PTR __$EHRec$[esp+5600], -1
	call	??1options_description@program_options@boost@@QAE@XZ
	mov	al, 1

; 506  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+5592]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+5572]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 5572				; 000015c4H
	ret	12					; 0000000cH
$LN10@loadSettin@2:

; 450  : 		{
; 451  : 			cerr << "There was an error reading/parsing " << settingsFile << "." << endl;

	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	ecx
	lea	eax, DWORD PTR _settingsFile$[esp+5600]
	push	eax
	push	ecx
	push	OFFSET ??_C@_0CE@HHLPPEMJ@There?5was?5an?5error?5reading?1parsi@
	push	OFFSET ?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cerr

; 452  : 			exit(-2);

	jmp	$LN589@loadSettin@2
$LN586@loadSettin@2:
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$0:
	lea	ecx, DWORD PTR $T683139[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$1:
	lea	ecx, DWORD PTR _desc$[ebp]
	jmp	??1options_description@program_options@boost@@QAE@XZ
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$2:
	lea	ecx, DWORD PTR _settingsFile$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$3:
	lea	ecx, DWORD PTR _extraSettings$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$4:
	lea	ecx, DWORD PTR $T683141[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$5:
	lea	ecx, DWORD PTR _vm$[ebp]
	jmp	??1variables_map@program_options@boost@@UAE@XZ
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$7:
	lea	esi, DWORD PTR $T683143[ebp]
	jmp	??1?$basic_parsed_options@D@program_options@boost@@QAE@XZ
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$8:
	lea	ecx, DWORD PTR $T683145[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$9:
	lea	ecx, DWORD PTR $T683147[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$10:
	lea	eax, DWORD PTR _xmlFile$[ebp]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$11:
	lea	ecx, DWORD PTR _nodeName$134949[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$12:
	lea	ecx, DWORD PTR _nodeValue$134950[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$13:
	lea	ecx, DWORD PTR _attrS$134974[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$14:
	lea	ecx, DWORD PTR _type$134981[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$15:
	lea	ecx, DWORD PTR _type$134994[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$16:
	lea	ecx, DWORD PTR _type$135000[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$17:
	lea	ecx, DWORD PTR _params$135022[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$18:
	lea	ecx, DWORD PTR $T683148[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__unwindfunclet$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z$20:
	lea	ecx, DWORD PTR $T683152[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-5576]
	mov	ecx, DWORD PTR [edx-5580]
	xor	ecx, eax
	call	@__security_check_cookie@4
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z
	jmp	___CxxFrameHandler3
?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z ENDP ; DRAMsimII::Settings::loadSettingsFromFile
PUBLIC	??0Settings@DRAMsimII@@QAE@HPAPAD@Z		; DRAMsimII::Settings::Settings
__unwindtable$??0Settings@DRAMsimII@@QAE@HPAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$5
__ehfuncinfo$??0Settings@DRAMsimII@@QAE@HPAPAD@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0Settings@DRAMsimII@@QAE@HPAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_argc$ = 12						; size = 4
_argv$ = 16						; size = 4
??0Settings@DRAMsimII@@QAE@HPAPAD@Z PROC		; DRAMsimII::Settings::Settings

; 105  : {

	push	-1
	push	__ehhandler$??0Settings@DRAMsimII@@QAE@HPAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, eax
	mov	esi, DWORD PTR _this$[esp+20]
	xor	eax, eax
	mov	ecx, 15					; 0000000fH
	mov	DWORD PTR [esi+24], ecx
	mov	DWORD PTR [esi+20], eax
	mov	BYTE PTR [esi+4], al
	mov	DWORD PTR __$EHRec$[esp+32], eax
	mov	DWORD PTR [esi+56], ecx
	mov	DWORD PTR [esi+52], eax
	mov	BYTE PTR [esi+36], al
	mov	DWORD PTR [esi+84], ecx
	mov	DWORD PTR [esi+80], eax
	mov	BYTE PTR [esi+64], al
	mov	DWORD PTR [esi+120], ecx
	mov	DWORD PTR [esi+116], eax
	mov	BYTE PTR [esi+100], al
	mov	DWORD PTR [esi+148], ecx
	mov	DWORD PTR [esi+144], eax
	mov	BYTE PTR [esi+128], al
	mov	DWORD PTR [esi+176], ecx
	mov	DWORD PTR [esi+172], eax
	mov	BYTE PTR [esi+156], al

; 106  : 	loadSettingsFromFile(argc, argv);

	mov	ecx, DWORD PTR _argc$[esp+20]
	mov	BYTE PTR __$EHRec$[esp+32], 5
	mov	DWORD PTR [esi+216], eax
	mov	DWORD PTR [esi+296], eax
	mov	DWORD PTR [esi+388], eax
	mov	eax, DWORD PTR _argv$[esp+20]
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [esi+284], 1
	call	?loadSettingsFromFile@Settings@DRAMsimII@@QAE_NHPAPAD@Z ; DRAMsimII::Settings::loadSettingsFromFile

; 107  : }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp-4]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$2:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 60					; 0000003cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$3:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 96					; 00000060H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$4:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 124				; 0000007cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Settings@DRAMsimII@@QAE@HPAPAD@Z$5:
	mov	ecx, DWORD PTR _this$[ebp-4]
	add	ecx, 152				; 00000098H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0Settings@DRAMsimII@@QAE@HPAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx-8]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Settings@DRAMsimII@@QAE@HPAPAD@Z
	jmp	___CxxFrameHandler3
??0Settings@DRAMsimII@@QAE@HPAPAD@Z ENDP		; DRAMsimII::Settings::Settings
END
