<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="error1" xml:space="preserve">
    <value>Favor verificar que o leitor Sirit está totalmente inserido</value>
  </data>
  <data name="error2" xml:space="preserve">
    <value>Incapaz de comunicar com leitor Sirit</value>
  </data>
  <data name="error3" xml:space="preserve">
    <value>Erro, Não foi possivel ler a tag</value>
  </data>
  <data name="error4" xml:space="preserve">
    <value>Não foi posível recuperar stado do log do cartão VarioSens</value>
  </data>
  <data name="error5" xml:space="preserve">
    <value>Erro, não permitida violação de dados</value>
  </data>
  <data name="error6" xml:space="preserve">
    <value>Violações não registradas</value>
  </data>
  <data name="error7" xml:space="preserve">
    <value>Erro, não é tag VArioSens</value>
  </data>
  <data name="logString" xml:space="preserve">
    <value>Violação do log de Temperatura</value>
  </data>
  <data name="loLimitString" xml:space="preserve">
    <value>Limite Inferior</value>
  </data>
  <data name="manualIDButtonInit" xml:space="preserve">
    <value>Procura</value>
  </data>
  <data name="readIDButtonInit" xml:space="preserve">
    <value>Ler Tag</value>
  </data>
  <data name="readLogButtonInit" xml:space="preserve">
    <value>Ler VarioSens</value>
  </data>
  <data name="readValueButtonInit" xml:space="preserve">
    <value>Ler valores</value>
  </data>
  <data name="setValueButtonInit" xml:space="preserve">
    <value>Ajuste de valores</value>
  </data>
  <data name="tab1String" xml:space="preserve">
    <value>VarioSens</value>
  </data>
  <data name="tab2String" xml:space="preserve">
    <value>Procurando a Identidade</value>
  </data>
  <data name="tab3String" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="tab4String" xml:space="preserve">
    <value>VarioSens/W</value>
  </data>
  <data name="titleString" xml:space="preserve">
    <value>Demo da Gentag</value>
  </data>
  <data name="DrugInteractionWarningMessage" xml:space="preserve">
    <value>Alerta! 
Esta medicação não deve ser admnistrada a este paciente.</value>
  </data>
  <data name="patientInfoNotFound" xml:space="preserve">
    <value>Informação sobre o paciente não encontrada</value>
  </data>
  <data name="NoDescriptionFound" xml:space="preserve">
    <value>Descrição não encontrada</value>
  </data>
  <data name="ProblemConnectingToWebService" xml:space="preserve">
    <value>Problem na conexão com serviço web:</value>
  </data>
  <data name="FailedToSubmit" xml:space="preserve">
    <value>Erro ao submeter</value>
  </data>
  <data name="ResultsRecorded" xml:space="preserve">
    <value>Resultados gravados.</value>
  </data>
  <data name="PossibleNetworkErrorPleaseTryAgain" xml:space="preserve">
    <value>Possível erro de rede, favor tentar novamente.</value>
  </data>
  <data name="NoDescriptionYet" xml:space="preserve">
    <value>Ainda sem descrição</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status: </value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Não encontrado</value>
  </data>
  <data name="DisabledVarioSens" xml:space="preserve">
    <value>Desconectado, VarioSens não é compatível com leitor Sirit.</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Por favor aguarde...</value>
  </data>
  <data name="AssayNotFound" xml:space="preserve">
    <value>Exame não encontrado</value>
  </data>
  <data name="ProblemWithReader" xml:space="preserve">
    <value>Problema com o leitor</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Versão</value>
  </data>
  <data name="Alpha" xml:space="preserve">
    <value> Alpha</value>
  </data>
  <data name="UpdateAvailable" xml:space="preserve">
    <value>Atualização disponível</value>
  </data>
  <data name="IsAvailableYouAreRunning" xml:space="preserve">
    <value> não disponível, Voce já está rodando </value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>erro</value>
  </data>
  <data name="at" xml:space="preserve">
    <value>@</value>
  </data>
  <data name="Unexpected" xml:space="preserve">
    <value>inesperada:</value>
  </data>
  <data name="ConnectionProblem" xml:space="preserve">
    <value>Problema de conexão</value>
  </data>
  <data name="Alert" xml:space="preserve">
    <value>Alerta</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>Aviso</value>
  </data>
  <data name="UnexpectedSOAPException" xml:space="preserve">
    <value>exceção SOAP inesperada</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>olhadela...</value>
  </data>
</root>