//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.312.
// 
#pragma warning disable 1591

namespace GenTag_Server.org.dyndns.crius {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GetDatesWSSoapHttp", Namespace="http://datespackage/")]
    public partial class GetDatesWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback callHomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUniqueUIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAuthenticatedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GetDatesWS() {
            this.Url = global::GenTag_Server.Properties.Settings.Default.GenTag_Server_org_dyndns_crius_GetDatesWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event callHomeCompletedEventHandler callHomeCompleted;
        
        /// <remarks/>
        public event checkInteractionCompletedEventHandler checkInteractionCompleted;
        
        /// <remarks/>
        public event getDescriptionCompletedEventHandler getDescriptionCompleted;
        
        /// <remarks/>
        public event getInfoCompletedEventHandler getInfoCompleted;
        
        /// <remarks/>
        public event getPictureCompletedEventHandler getPictureCompleted;
        
        /// <remarks/>
        public event getRouteCompletedEventHandler getRouteCompleted;
        
        /// <remarks/>
        public event getSinceCompletedEventHandler getSinceCompleted;
        
        /// <remarks/>
        public event getUniqueUIDsCompletedEventHandler getUniqueUIDsCompleted;
        
        /// <remarks/>
        public event isAuthenticatedCompletedEventHandler isAuthenticatedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool callHome([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UID, [System.Xml.Serialization.XmlElementAttribute("lat", IsNullable=true)] string[] lat, [System.Xml.Serialization.XmlElementAttribute("longit", IsNullable=true)] string[] longit, [System.Xml.Serialization.XmlElementAttribute("timeSinceLastReading")] long[] timeSinceLastReading, [System.Xml.Serialization.XmlElementAttribute("reportedTime")] long[] reportedTime) {
            object[] results = this.Invoke("callHome", new object[] {
                        UID,
                        lat,
                        longit,
                        timeSinceLastReading,
                        reportedTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void callHomeAsync(string UID, string[] lat, string[] longit, long[] timeSinceLastReading, long[] reportedTime) {
            this.callHomeAsync(UID, lat, longit, timeSinceLastReading, reportedTime, null);
        }
        
        /// <remarks/>
        public void callHomeAsync(string UID, string[] lat, string[] longit, long[] timeSinceLastReading, long[] reportedTime, object userState) {
            if ((this.callHomeOperationCompleted == null)) {
                this.callHomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallHomeOperationCompleted);
            }
            this.InvokeAsync("callHome", new object[] {
                        UID,
                        lat,
                        longit,
                        timeSinceLastReading,
                        reportedTime}, this.callHomeOperationCompleted, userState);
        }
        
        private void OncallHomeOperationCompleted(object arg) {
            if ((this.callHomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callHomeCompleted(this, new callHomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool checkInteraction([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string drugID) {
            object[] results = this.Invoke("checkInteraction", new object[] {
                        ID,
                        drugID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkInteractionAsync(string ID, string drugID) {
            this.checkInteractionAsync(ID, drugID, null);
        }
        
        /// <remarks/>
        public void checkInteractionAsync(string ID, string drugID, object userState) {
            if ((this.checkInteractionOperationCompleted == null)) {
                this.checkInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckInteractionOperationCompleted);
            }
            this.InvokeAsync("checkInteraction", new object[] {
                        ID,
                        drugID}, this.checkInteractionOperationCompleted, userState);
        }
        
        private void OncheckInteractionOperationCompleted(object arg) {
            if ((this.checkInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkInteractionCompleted(this, new checkInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getDescription([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RFIDNum) {
            object[] results = this.Invoke("getDescription", new object[] {
                        RFIDNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDescriptionAsync(string RFIDNum) {
            this.getDescriptionAsync(RFIDNum, null);
        }
        
        /// <remarks/>
        public void getDescriptionAsync(string RFIDNum, object userState) {
            if ((this.getDescriptionOperationCompleted == null)) {
                this.getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDescriptionOperationCompleted);
            }
            this.InvokeAsync("getDescription", new object[] {
                        RFIDNum}, this.getDescriptionOperationCompleted, userState);
        }
        
        private void OngetDescriptionOperationCompleted(object arg) {
            if ((this.getDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDescriptionCompleted(this, new getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public GetDates getInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, bool isDrug) {
            object[] results = this.Invoke("getInfo", new object[] {
                        ID,
                        isDrug});
            return ((GetDates)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoAsync(string ID, bool isDrug) {
            this.getInfoAsync(ID, isDrug, null);
        }
        
        /// <remarks/>
        public void getInfoAsync(string ID, bool isDrug, object userState) {
            if ((this.getInfoOperationCompleted == null)) {
                this.getInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoOperationCompleted);
            }
            this.InvokeAsync("getInfo", new object[] {
                        ID,
                        isDrug}, this.getInfoOperationCompleted, userState);
        }
        
        private void OngetInfoOperationCompleted(object arg) {
            if ((this.getInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoCompleted(this, new getInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPicture([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, bool isDrug) {
            object[] results = this.Invoke("getPicture", new object[] {
                        ID,
                        isDrug});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPictureAsync(string ID, bool isDrug) {
            this.getPictureAsync(ID, isDrug, null);
        }
        
        /// <remarks/>
        public void getPictureAsync(string ID, bool isDrug, object userState) {
            if ((this.getPictureOperationCompleted == null)) {
                this.getPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPictureOperationCompleted);
            }
            this.InvokeAsync("getPicture", new object[] {
                        ID,
                        isDrug}, this.getPictureOperationCompleted, userState);
        }
        
        private void OngetPictureOperationCompleted(object arg) {
            if ((this.getPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPictureCompleted(this, new getPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string[] getRoute([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RFIDNum, long sinceWhen) {
            object[] results = this.Invoke("getRoute", new object[] {
                        RFIDNum,
                        sinceWhen});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getRouteAsync(string RFIDNum, long sinceWhen) {
            this.getRouteAsync(RFIDNum, sinceWhen, null);
        }
        
        /// <remarks/>
        public void getRouteAsync(string RFIDNum, long sinceWhen, object userState) {
            if ((this.getRouteOperationCompleted == null)) {
                this.getRouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRouteOperationCompleted);
            }
            this.InvokeAsync("getRoute", new object[] {
                        RFIDNum,
                        sinceWhen}, this.getRouteOperationCompleted, userState);
        }
        
        private void OngetRouteOperationCompleted(object arg) {
            if ((this.getRouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRouteCompleted(this, new getRouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string[] getSince(long timestamp) {
            object[] results = this.Invoke("getSince", new object[] {
                        timestamp});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSinceAsync(long timestamp) {
            this.getSinceAsync(timestamp, null);
        }
        
        /// <remarks/>
        public void getSinceAsync(long timestamp, object userState) {
            if ((this.getSinceOperationCompleted == null)) {
                this.getSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSinceOperationCompleted);
            }
            this.InvokeAsync("getSince", new object[] {
                        timestamp}, this.getSinceOperationCompleted, userState);
        }
        
        private void OngetSinceOperationCompleted(object arg) {
            if ((this.getSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSinceCompleted(this, new getSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string[] getUniqueUIDs() {
            object[] results = this.Invoke("getUniqueUIDs", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getUniqueUIDsAsync() {
            this.getUniqueUIDsAsync(null);
        }
        
        /// <remarks/>
        public void getUniqueUIDsAsync(object userState) {
            if ((this.getUniqueUIDsOperationCompleted == null)) {
                this.getUniqueUIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUniqueUIDsOperationCompleted);
            }
            this.InvokeAsync("getUniqueUIDs", new object[0], this.getUniqueUIDsOperationCompleted, userState);
        }
        
        private void OngetUniqueUIDsOperationCompleted(object arg) {
            if ((this.getUniqueUIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUniqueUIDsCompleted(this, new getUniqueUIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://datespackage/", ResponseNamespace="http://datespackage/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isAuthenticated([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RFIDNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string longit) {
            object[] results = this.Invoke("isAuthenticated", new object[] {
                        RFIDNum,
                        UID,
                        lat,
                        longit});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAuthenticatedAsync(string RFIDNum, string UID, string lat, string longit) {
            this.isAuthenticatedAsync(RFIDNum, UID, lat, longit, null);
        }
        
        /// <remarks/>
        public void isAuthenticatedAsync(string RFIDNum, string UID, string lat, string longit, object userState) {
            if ((this.isAuthenticatedOperationCompleted == null)) {
                this.isAuthenticatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAuthenticatedOperationCompleted);
            }
            this.InvokeAsync("isAuthenticated", new object[] {
                        RFIDNum,
                        UID,
                        lat,
                        longit}, this.isAuthenticatedOperationCompleted, userState);
        }
        
        private void OnisAuthenticatedOperationCompleted(object arg) {
            if ((this.isAuthenticatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAuthenticatedCompleted(this, new isAuthenticatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://datespackage/")]
    public partial class GetDates {
        
        private string nameField;
        
        private string descField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void callHomeCompletedEventHandler(object sender, callHomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callHomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callHomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void checkInteractionCompletedEventHandler(object sender, checkInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void getDescriptionCompletedEventHandler(object sender, getDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void getInfoCompletedEventHandler(object sender, getInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDates Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDates)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void getPictureCompletedEventHandler(object sender, getPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void getRouteCompletedEventHandler(object sender, getRouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void getSinceCompletedEventHandler(object sender, getSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void getUniqueUIDsCompletedEventHandler(object sender, getUniqueUIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUniqueUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUniqueUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void isAuthenticatedCompletedEventHandler(object sender, isAuthenticatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAuthenticatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAuthenticatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591