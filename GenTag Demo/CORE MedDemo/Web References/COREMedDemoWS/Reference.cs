//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1318
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1318.
// 
#pragma warning disable 1591

namespace CORE_MedDemo.COREMedDemoWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="COREMedDemoWSSoapHttp", Namespace="http://COREMedDemo/")]
    public partial class COREMedDemoWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback checkInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback enterDrugInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enterPatientPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enterPatientRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDrugInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback logPatientVitalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerDoseGivenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public COREMedDemoWS() {
            this.Url = global::CORE_MedDemo.Properties.Settings.Default.CORE_MedDemo_COREMedDemoWS_COREMedDemoWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkInteractionCompletedEventHandler checkInteractionCompleted;
        
        /// <remarks/>
        public event enterDrugInfoCompletedEventHandler enterDrugInfoCompleted;
        
        /// <remarks/>
        public event enterPatientPhotoCompletedEventHandler enterPatientPhotoCompleted;
        
        /// <remarks/>
        public event enterPatientRecordCompletedEventHandler enterPatientRecordCompleted;
        
        /// <remarks/>
        public event getDrugInfoCompletedEventHandler getDrugInfoCompleted;
        
        /// <remarks/>
        public event getPatientRecordCompletedEventHandler getPatientRecordCompleted;
        
        /// <remarks/>
        public event logPatientVitalsCompletedEventHandler logPatientVitalsCompleted;
        
        /// <remarks/>
        public event registerDoseGivenCompletedEventHandler registerDoseGivenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool checkInteraction([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string drugID) {
            object[] results = this.Invoke("checkInteraction", new object[] {
                        ID,
                        drugID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkInteractionAsync(string ID, string drugID) {
            this.checkInteractionAsync(ID, drugID, null);
        }
        
        /// <remarks/>
        public void checkInteractionAsync(string ID, string drugID, object userState) {
            if ((this.checkInteractionOperationCompleted == null)) {
                this.checkInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckInteractionOperationCompleted);
            }
            this.InvokeAsync("checkInteraction", new object[] {
                        ID,
                        drugID}, this.checkInteractionOperationCompleted, userState);
        }
        
        private void OncheckInteractionOperationCompleted(object arg) {
            if ((this.checkInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkInteractionCompleted(this, new checkInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public errorReport enterDrugInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] drugInfo newDrug) {
            object[] results = this.Invoke("enterDrugInfo", new object[] {
                        newDrug});
            return ((errorReport)(results[0]));
        }
        
        /// <remarks/>
        public void enterDrugInfoAsync(drugInfo newDrug) {
            this.enterDrugInfoAsync(newDrug, null);
        }
        
        /// <remarks/>
        public void enterDrugInfoAsync(drugInfo newDrug, object userState) {
            if ((this.enterDrugInfoOperationCompleted == null)) {
                this.enterDrugInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenterDrugInfoOperationCompleted);
            }
            this.InvokeAsync("enterDrugInfo", new object[] {
                        newDrug}, this.enterDrugInfoOperationCompleted, userState);
        }
        
        private void OnenterDrugInfoOperationCompleted(object arg) {
            if ((this.enterDrugInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enterDrugInfoCompleted(this, new enterDrugInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public errorReport enterPatientPhoto([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] patientRecord newPatient) {
            object[] results = this.Invoke("enterPatientPhoto", new object[] {
                        newPatient});
            return ((errorReport)(results[0]));
        }
        
        /// <remarks/>
        public void enterPatientPhotoAsync(patientRecord newPatient) {
            this.enterPatientPhotoAsync(newPatient, null);
        }
        
        /// <remarks/>
        public void enterPatientPhotoAsync(patientRecord newPatient, object userState) {
            if ((this.enterPatientPhotoOperationCompleted == null)) {
                this.enterPatientPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenterPatientPhotoOperationCompleted);
            }
            this.InvokeAsync("enterPatientPhoto", new object[] {
                        newPatient}, this.enterPatientPhotoOperationCompleted, userState);
        }
        
        private void OnenterPatientPhotoOperationCompleted(object arg) {
            if ((this.enterPatientPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enterPatientPhotoCompleted(this, new enterPatientPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public errorReport enterPatientRecord([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] patientRecord newPatient) {
            object[] results = this.Invoke("enterPatientRecord", new object[] {
                        newPatient});
            return ((errorReport)(results[0]));
        }
        
        /// <remarks/>
        public void enterPatientRecordAsync(patientRecord newPatient) {
            this.enterPatientRecordAsync(newPatient, null);
        }
        
        /// <remarks/>
        public void enterPatientRecordAsync(patientRecord newPatient, object userState) {
            if ((this.enterPatientRecordOperationCompleted == null)) {
                this.enterPatientRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenterPatientRecordOperationCompleted);
            }
            this.InvokeAsync("enterPatientRecord", new object[] {
                        newPatient}, this.enterPatientRecordOperationCompleted, userState);
        }
        
        private void OnenterPatientRecordOperationCompleted(object arg) {
            if ((this.enterPatientRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enterPatientRecordCompleted(this, new enterPatientRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public drugInfo getDrugInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RFIDNum) {
            object[] results = this.Invoke("getDrugInfo", new object[] {
                        RFIDNum});
            return ((drugInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getDrugInfoAsync(string RFIDNum) {
            this.getDrugInfoAsync(RFIDNum, null);
        }
        
        /// <remarks/>
        public void getDrugInfoAsync(string RFIDNum, object userState) {
            if ((this.getDrugInfoOperationCompleted == null)) {
                this.getDrugInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDrugInfoOperationCompleted);
            }
            this.InvokeAsync("getDrugInfo", new object[] {
                        RFIDNum}, this.getDrugInfoOperationCompleted, userState);
        }
        
        private void OngetDrugInfoOperationCompleted(object arg) {
            if ((this.getDrugInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDrugInfoCompleted(this, new getDrugInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public patientRecord getPatientRecord([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RFIDNum) {
            object[] results = this.Invoke("getPatientRecord", new object[] {
                        RFIDNum});
            return ((patientRecord)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientRecordAsync(string RFIDNum) {
            this.getPatientRecordAsync(RFIDNum, null);
        }
        
        /// <remarks/>
        public void getPatientRecordAsync(string RFIDNum, object userState) {
            if ((this.getPatientRecordOperationCompleted == null)) {
                this.getPatientRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientRecordOperationCompleted);
            }
            this.InvokeAsync("getPatientRecord", new object[] {
                        RFIDNum}, this.getPatientRecordOperationCompleted, userState);
        }
        
        private void OngetPatientRecordOperationCompleted(object arg) {
            if ((this.getPatientRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientRecordCompleted(this, new getPatientRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public errorReport logPatientVitals([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RFIDNum, [System.Xml.Serialization.XmlElementAttribute("temperatures")] float[] temperatures, int periodicity) {
            object[] results = this.Invoke("logPatientVitals", new object[] {
                        RFIDNum,
                        temperatures,
                        periodicity});
            return ((errorReport)(results[0]));
        }
        
        /// <remarks/>
        public void logPatientVitalsAsync(string RFIDNum, float[] temperatures, int periodicity) {
            this.logPatientVitalsAsync(RFIDNum, temperatures, periodicity, null);
        }
        
        /// <remarks/>
        public void logPatientVitalsAsync(string RFIDNum, float[] temperatures, int periodicity, object userState) {
            if ((this.logPatientVitalsOperationCompleted == null)) {
                this.logPatientVitalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogPatientVitalsOperationCompleted);
            }
            this.InvokeAsync("logPatientVitals", new object[] {
                        RFIDNum,
                        temperatures,
                        periodicity}, this.logPatientVitalsOperationCompleted, userState);
        }
        
        private void OnlogPatientVitalsOperationCompleted(object arg) {
            if ((this.logPatientVitalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logPatientVitalsCompleted(this, new logPatientVitalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://COREMedDemo/", ResponseNamespace="http://COREMedDemo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool registerDoseGiven([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientRFIDNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string drugRFIDNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nurseID, int dose) {
            object[] results = this.Invoke("registerDoseGiven", new object[] {
                        patientRFIDNum,
                        drugRFIDNum,
                        nurseID,
                        dose});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void registerDoseGivenAsync(string patientRFIDNum, string drugRFIDNum, string nurseID, int dose) {
            this.registerDoseGivenAsync(patientRFIDNum, drugRFIDNum, nurseID, dose, null);
        }
        
        /// <remarks/>
        public void registerDoseGivenAsync(string patientRFIDNum, string drugRFIDNum, string nurseID, int dose, object userState) {
            if ((this.registerDoseGivenOperationCompleted == null)) {
                this.registerDoseGivenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterDoseGivenOperationCompleted);
            }
            this.InvokeAsync("registerDoseGiven", new object[] {
                        patientRFIDNum,
                        drugRFIDNum,
                        nurseID,
                        dose}, this.registerDoseGivenOperationCompleted, userState);
        }
        
        private void OnregisterDoseGivenOperationCompleted(object arg) {
            if ((this.registerDoseGivenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerDoseGivenCompleted(this, new registerDoseGivenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1318")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://COREMedDemo/")]
    public partial class drugInfo {
        
        private string rFIDNumField;
        
        private byte[] pictureField;
        
        private string descriptionField;
        
        private bool existsField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RFIDNum {
            get {
                return this.rFIDNumField;
            }
            set {
                this.rFIDNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool exists {
            get {
                return this.existsField;
            }
            set {
                this.existsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1318")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://COREMedDemo/")]
    public partial class patientRecord {
        
        private byte[] imageField;
        
        private bool existsField;
        
        private string middleNameField;
        
        private string[] allergiesField;
        
        private string[] medicationsField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string rFIDnumField;
        
        private long dOBField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public bool exists {
            get {
                return this.existsField;
            }
            set {
                this.existsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("allergies", IsNullable=true)]
        public string[] allergies {
            get {
                return this.allergiesField;
            }
            set {
                this.allergiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("medications", IsNullable=true)]
        public string[] medications {
            get {
                return this.medicationsField;
            }
            set {
                this.medicationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RFIDnum {
            get {
                return this.rFIDnumField;
            }
            set {
                this.rFIDnumField = value;
            }
        }
        
        /// <remarks/>
        public long DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1318")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://COREMedDemo/")]
    public partial class errorReport {
        
        private string errorMessageField;
        
        private int errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void checkInteractionCompletedEventHandler(object sender, checkInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void enterDrugInfoCompletedEventHandler(object sender, enterDrugInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enterDrugInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enterDrugInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorReport)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void enterPatientPhotoCompletedEventHandler(object sender, enterPatientPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enterPatientPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enterPatientPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorReport)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void enterPatientRecordCompletedEventHandler(object sender, enterPatientRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enterPatientRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enterPatientRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorReport)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void getDrugInfoCompletedEventHandler(object sender, getDrugInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDrugInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDrugInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public drugInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((drugInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void getPatientRecordCompletedEventHandler(object sender, getPatientRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public patientRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((patientRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void logPatientVitalsCompletedEventHandler(object sender, logPatientVitalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logPatientVitalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logPatientVitalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorReport)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    public delegate void registerDoseGivenCompletedEventHandler(object sender, registerDoseGivenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1318")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerDoseGivenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerDoseGivenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591