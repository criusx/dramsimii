Import('*')
import shutil
import re

conf = Configure(env)

#try:
#	env.Replace(CCFLAGS = env._dict['CCFLAGS'].remove('-Werror'))
#except ValueError:
#	pass

#env.Append(CCFLAGS = ['-Wunused-macros'])

try:
	if 'fast' in re.split('[/.]',COMMAND_LINE_TARGETS[0]):
		env.Append(CCFLAGS = ['-fprefetch-loop-arrays','-ffast-math', '-funroll-all-loops', '-fomit-frame-pointer', '-Wuninitialized', '-Wno-conversion',
			 '-finline-functions', '-Wno-unused-variable'],CPPDEFINES = ['M5', '__STDC_LIMIT_MACROS'])
		
	elif 'opt' in re.split('[/.]',COMMAND_LINE_TARGETS[0]):
		env.Append(
		CCFLAGS = ['-march=k8-sse3', '-mtune=k8-sse3'],
		CPPDEFINES = ['M5DEBUG', 'DEBUG', 'M5', '__STDC_LIMIT_MACROS'])
	
	else:
		raise IndexError
except IndexError:
	# then this must be a debug build
	env.Append(
		CPPDEFINES = ['M5DEBUG', 'DEBUG', 'M5', '__STDC_LIMIT_MACROS'])


SimObject('M5dramSystem.py')

Source('Address.cc')
Source('Bank.cc')
Source('command.cc')
Source('Channel.cc')
Source('event.cc')
Source('m5-dramSystem.cc')
Source('powerConfig.cc')
Source('Rank.cc')
Source('Settings.cc')
Source('Statistics.cc')
Source('System.cc')
Source('SystemConfiguration.cc')
Source('TimingSpecification.cc')
Source('transaction.cc')

env = conf.Finish()

